# compiler: R8
# compiler_version: 3.2.74
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: f900079
# pg_map_hash: SHA-256 f900079262be54d947acac0efa0614761221ad54dd4fd9bc3dd8b26daafb7fff
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2246:2256:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    563:563:void <clinit>() -> <clinit>
    538:540:void <init>(android.os.Parcel) -> <init>
    556:560:java.lang.String toString() -> toString
    550:551:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    564:564:void <init>() -> <init>
    564:564:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    567:567:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    564:564:java.lang.Object[] newArray(int) -> newArray
    572:572:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2276:2291:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    418:418:void <clinit>() -> <clinit>
    190:198:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    375:410:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    331:357:java.lang.Object getMediaDescription() -> getMediaDescription
    316:316:java.lang.String toString() -> toString
    310:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    419:419:void <init>() -> <init>
    419:419:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    425:425:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    419:419:java.lang.Object[] newArray(int) -> newArray
    431:431:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    451:451:void <init>() -> <init>
    552:552:android.support.v4.media.MediaDescriptionCompat build() -> build
    495:495:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    530:530:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    507:507:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    519:519:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    461:461:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    541:541:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    483:483:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    472:472:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    62:62:java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    42:42:java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    54:54:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    46:46:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    50:50:android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    30:30:java.lang.String getMediaId(java.lang.Object) -> getMediaId
    38:38:java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    34:34:java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    58:58:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    100:100:java.lang.Object build(java.lang.Object) -> build
    67:67:java.lang.Object newInstance() -> newInstance
    84:84:void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    96:96:void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    88:88:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    92:92:void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    72:72:void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    80:80:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    76:76:void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    26:26:android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    31:31:void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    308:641:void <clinit>() -> <clinit>
    373:374:void <init>(android.os.Parcel) -> <init>
    608:613:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    562:562:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    642:642:void <init>() -> <init>
    642:642:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    645:645:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    642:642:java.lang.Object[] newArray(int) -> newArray
    650:650:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    51:51:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    128:128:void <clinit>() -> <clinit>
    106:108:void <init>(int,float) -> <init>
    119:119:int describeContents() -> describeContents
    113:114:java.lang.String toString() -> toString
    124:125:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    129:129:void <init>() -> <init>
    129:129:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    137:137:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    129:129:java.lang.Object[] newArray(int) -> newArray
    142:142:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    19:20:void <init>() -> <init>
    47:183:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    30:34:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    622:623:void <init>(android.os.IBinder) -> <init>
    627:627:android.os.IBinder asBinder() -> asBinder
    690:700:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    693:695:void <init>() -> <init>
    823:823:void binderDied() -> binderDied
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    854:855:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    927:929:void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    918:920:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    894:896:void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    881:887:void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    902:904:void onQueueChanged(java.util.List) -> onQueueChanged
    910:912:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    860:862:void onSessionDestroyed() -> onSessionDestroyed
    868:874:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    938:939:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    992:995:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    944:946:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    960:962:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    1001:1003:void onRepeatModeChanged(int) -> onRepeatModeChanged
    1044:1046:void onSessionReady() -> onSessionReady
    1014:1017:void onShuffleModeChanged(int) -> onShuffleModeChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2203:2218:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2231:2243:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2249:2249:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2279:2279:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2261:2261:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2267:2267:void onQueueChanged(java.util.List) -> onQueueChanged
    2273:2273:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2255:2255:void onSessionDestroyed() -> onSessionDestroyed
    2285:2285:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1363:1368:void <init>(int,int,int,int,int) -> <init>
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    46:46:java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    283:284:void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    326:328:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    320:321:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    305:305:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    300:300:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    310:310:void onQueueChanged(java.util.List) -> onQueueChanged
    315:315:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    289:289:void onSessionDestroyed() -> onSessionDestroyed
    294:295:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    200:200:android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    204:205:int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    228:237:int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    929:929:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    1875:1875:void <clinit>() -> <clinit>
    1772:1781:void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1784:1786:void <init>(android.os.Parcel) -> <init>
    1847:1851:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    1868:1870:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    1891:1891:java.lang.String toString() -> toString
    1805:1806:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    1876:1876:void <init>() -> <init>
    1876:1876:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1880:1880:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    1876:1876:java.lang.Object[] newArray(int) -> newArray
    1885:1885:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    1917:1917:void <clinit>() -> <clinit>
    1912:1913:void <init>(android.os.Parcel) -> <init>
    1936:1936:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    1917:1917:void <init>() -> <init>
    1917:1917:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1920:1920:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    1917:1917:java.lang.Object[] newArray(int) -> newArray
    1925:1925:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    1726:1726:void <clinit>() -> <clinit>
    1556:1556:void <init>(java.lang.Object) -> <init>
    1563:1566:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle) -> <init>
    1632:1643:boolean equals(java.lang.Object) -> equals
    1664:1664:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1621:1624:int hashCode() -> hashCode
    1672:1672:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    1688:1688:void setSessionToken2Bundle(android.os.Bundle) -> setSessionToken2Bundle
    1613:1613:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    1727:1727:void <init>() -> <init>
    1727:1727:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1732:1736:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    1727:1727:java.lang.Object[] newArray(int) -> newArray
    1741:1741:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    270:270:java.lang.Object getDescription(java.lang.Object) -> getDescription
    274:274:long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    65:65:void <clinit>() -> <clinit>
    42:47:void <init>(android.os.Parcel) -> <init>
    57:61:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    66:66:void <init>() -> <init>
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
    74:74:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    864:864:void <clinit>() -> <clinit>
    556:567:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    570:582:void <init>(android.os.Parcel) -> <init>
    799:825:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    587:599:java.lang.String toString() -> toString
    609:620:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    865:865:void <init>() -> <init>
    865:865:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    868:868:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    865:865:java.lang.Object[] newArray(int) -> newArray
    873:873:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    965:965:void <clinit>() -> <clinit>
    893:897:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    900:904:void <init>(android.os.Parcel) -> <init>
    936:941:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1022:1022:java.lang.String toString() -> toString
    909:912:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    966:966:void <init>() -> <init>
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    970:970:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    975:975:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    45:45:long getActions(java.lang.Object) -> getActions
    61:61:long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    37:37:long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    57:57:java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    49:49:java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    53:53:long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    41:41:float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    33:33:long getPosition(java.lang.Object) -> getPosition
    29:29:int getState(java.lang.Object) -> getState
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    82:82:java.lang.String getAction(java.lang.Object) -> getAction
    93:93:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    90:90:int getIcon(java.lang.Object) -> getIcon
    86:86:java.lang.CharSequence getName(java.lang.Object) -> getName
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    29:29:android.os.Bundle getExtras(java.lang.Object) -> getExtras
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    24:25:void <init>() -> <init>
    36:40:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    50:73:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:83:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.IResultReceiver$_Parcel -> android.support.v4.os.IResultReceiver$_Parcel:
    112:112:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator) -> access$000
    116:117:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator) -> readTypedObject
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    145:145:void <clinit>() -> <clinit>
    139:142:void <init>(android.os.Parcel) -> <init>
    131:136:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    146:146:void <init>() -> <init>
    146:146:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    149:149:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:java.lang.Object[] newArray(int) -> newArray
    153:153:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    68:68:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    71:74:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    57:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    64:64:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    void $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA(androidx.activity.ComponentActivity,android.content.Context) -> $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI(androidx.activity.ComponentActivity) -> $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI
      # {"id":"com.android.tools.r8.synthesized"}
    141:325:void <init>() -> <init>
    118:118:void access$001(androidx.activity.ComponentActivity) -> access$001
    469:470:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    546:546:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    875:875:void addOnConfigurationChangedListener(androidx.core.util.Consumer) -> addOnConfigurationChangedListener
    500:500:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    990:990:void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> addOnMultiWindowModeChangedListener
    930:930:void addOnNewIntentListener(androidx.core.util.Consumer) -> addOnNewIntentListener
    1054:1054:void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> addOnPictureInPictureModeChangedListener
    901:901:void addOnTrimMemoryListener(androidx.core.util.Consumer) -> addOnTrimMemoryListener
    613:621:void ensureViewModelStore() -> ensureViewModelStore
    853:853:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    649:656:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    587:587:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    684:684:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    690:690:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    603:608:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    476:479:void initViewTreeOwners() -> initViewTreeOwners
    568:568:void invalidateMenu() -> invalidateMenu
    321:322:android.os.Bundle lambda$new$0() -> lambda$new$0
    326:329:void lambda$new$1(android.content.Context) -> lambda$new$1
    793:794:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    673:673:void onBackPressed() -> onBackPressed
    865:867:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    361:371:void onCreate(android.os.Bundle) -> onCreate
    521:522:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    529:533:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    953:957:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    972:982:void onMultiWindowModeChanged(boolean,android.content.res.Configuration) -> onMultiWindowModeChanged
    920:922:void onNewIntent(android.content.Intent) -> onNewIntent
    540:541:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    1013:1019:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1034:1045:void onPictureInPictureModeChanged(boolean,android.content.res.Configuration) -> onPictureInPictureModeChanged
    512:513:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    818:822:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    396:415:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    378:383:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    893:895:void onTrimMemory(int) -> onTrimMemory
    563:563:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    882:882:void removeOnConfigurationChangedListener(androidx.core.util.Consumer) -> removeOnConfigurationChangedListener
    997:997:void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> removeOnMultiWindowModeChangedListener
    1061:1061:void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> removeOnPictureInPictureModeChangedListener
    906:906:void removeOnTrimMemoryListener(androidx.core.util.Consumer) -> removeOnTrimMemoryListener
    1067:1086:void reportFullyDrawn() -> reportFullyDrawn
    447:448:void setContentView(int) -> setContentView
    453:454:void setContentView(android.view.View) -> setContentView
    461:462:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    709:709:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    728:728:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    750:750:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    772:772:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$$ExternalSyntheticLambda0 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.f$0 -> f$0
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.onContextAvailable(android.content.Context) -> onContextAvailable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda1 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.f$0 -> f$0
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda2 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.f$0 -> f$0
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$0$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    153:153:void <init>(androidx.activity.ComponentActivity) -> <init>
    161:165:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    176:176:void <init>(androidx.activity.ComponentActivity) -> <init>
    185:243:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> onLaunch
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$2$1:
    191:191:void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult) -> <init>
    194:194:void run() -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$2$2:
    232:232:void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException) -> <init>
    235:237:void run() -> run
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    277:277:void <init>(androidx.activity.ComponentActivity) -> <init>
    281:285:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    291:291:void <init>(androidx.activity.ComponentActivity) -> <init>
    295:300:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    305:305:void <init>(androidx.activity.ComponentActivity) -> <init>
    309:310:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$Api19Impl -> androidx.activity.ComponentActivity$Api19Impl:
    1094:1094:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.activity.ComponentActivity$Api33Impl -> androidx.activity.ComponentActivity$Api33Impl:
    1104:1104:android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity) -> getOnBackInvokedDispatcher
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    134:134:void <init>() -> <init>
androidx.activity.ComponentDialog -> androidx.activity.ComponentDialog:
# {"id":"sourceFile","fileName":"ComponentDialog.kt"}
    void $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o(androidx.activity.ComponentDialog) -> $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o
      # {"id":"com.android.tools.r8.synthesized"}
    38:75:void <init>(android.content.Context,int) -> <init>
    102:103:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    48:48:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    44:45:androidx.lifecycle.LifecycleRegistry getLifecycleRegistry() -> getLifecycleRegistry
    79:79:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    107:108:void initViewTreeOwners() -> initViewTreeOwners
    83:83:void onBackPressed() -> onBackPressed
    76:76:void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog) -> onBackPressedDispatcher$lambda-1
    53:57:void onCreate(android.os.Bundle) -> onCreate
    62:63:void onStart() -> onStart
    69:71:void onStop() -> onStop
    87:88:void setContentView(int) -> setContentView
    92:93:void setContentView(android.view.View) -> setContentView
    97:98:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
androidx.activity.ComponentDialog$$ExternalSyntheticLambda0 -> androidx.activity.ComponentDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentDialog androidx.activity.ComponentDialog$$InternalSyntheticLambda$0$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.f$0 -> f$0
    void androidx.activity.ComponentDialog$$InternalSyntheticLambda$0$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.<init>(androidx.activity.ComponentDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.ComponentDialog$$InternalSyntheticLambda$0$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    46:47:void <init>(android.app.Activity) -> <init>
    103:110:void initializeReflectiveFields() -> initializeReflectiveFields
    52:95:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    50:60:void <init>(boolean) -> <init>
    112:112:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    91:91:boolean isEnabled() -> isEnabled
    100:101:void remove() -> remove
    116:116:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    77:79:void setEnabled(boolean) -> setEnabled
    120:120:void setIsEnabledConsumer(androidx.core.util.Consumer) -> setIsEnabledConsumer
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    void $r8$lambda$_OyTAhjGr9tgm4CqoN01pHmhslA(androidx.activity.OnBackPressedDispatcher,java.lang.Boolean) -> $r8$lambda$_OyTAhjGr9tgm4CqoN01pHmhslA
      # {"id":"com.android.tools.r8.synthesized"}
    67:130:void <init>(java.lang.Runnable) -> <init>
    207:216:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    168:173:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    228:231:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    126:127:void lambda$new$0(java.lang.Boolean) -> lambda$new$0
    250:260:void onBackPressed() -> onBackPressed
    83:84:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    89:101:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda0 -> androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.OnBackPressedDispatcher androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$1$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.f$0 -> f$0
    void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$1$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.<init>(androidx.activity.OnBackPressedDispatcher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$1$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda1 -> androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.OnBackPressedDispatcher androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$1$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.f$0 -> f$0
    void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$1$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.<init>(androidx.activity.OnBackPressedDispatcher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$1$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$Api33Impl -> androidx.activity.OnBackPressedDispatcher$Api33Impl:
    344:344:android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable) -> createOnBackInvokedCallback
    331:333:void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object) -> registerOnBackInvokedCallback
    338:340:void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> unregisterOnBackInvokedCallback
androidx.activity.OnBackPressedDispatcher$Api33Impl$$ExternalSyntheticLambda0 -> androidx.activity.OnBackPressedDispatcher$Api33Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$1$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.f$0 -> f$0
    void androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$1$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.<init>(java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$1$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.onBackInvoked() -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    291:294:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    314:318:void cancel() -> cancel
    300:308:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    266:267:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    273:277:void cancel() -> cancel
androidx.activity.ViewTreeOnBackPressedDispatcherOwner -> androidx.activity.ViewTreeOnBackPressedDispatcherOwner:
# {"id":"sourceFile","fileName":"ViewTreeOnBackPressedDispatcherOwner.kt"}
    38:38:void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner) -> set
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:49:void <init>() -> <init>
    73:76:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:108:void clearAvailableContext() -> clearAvailableContext
    97:99:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:47:void <init>(int,android.content.Intent) -> <init>
    50:52:void <init>(android.os.Parcel) -> <init>
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
    47:47:void launch(java.lang.Object) -> launch
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:79:void <init>() -> <init>
    455:456:void bindRcKey(int,java.lang.String) -> bindRcKey
    371:375:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    390:406:boolean dispatchResult(int,java.lang.Object) -> dispatchResult
    414:424:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    445:448:int generateRandomNumber() -> generateRandomNumber
    328:354:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    306:314:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    118:163:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    217:234:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    429:434:void registerKey(java.lang.String) -> registerKey
    275:296:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    132:132:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
    138:156:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$2 -> androidx.activity.result.ActivityResultRegistry$2:
    163:163:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    166:178:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    184:184:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    234:234:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    237:249:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    255:255:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    465:467:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    475:477:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    481:482:void addObserver(androidx.lifecycle.LifecycleEventObserver) -> addObserver
    486:489:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    77:81:void <init>(android.content.IntentSender,android.content.Intent,int,int) -> <init>
    124:128:void <init>(android.os.Parcel) -> <init>
    102:102:android.content.Intent getFillInIntent() -> getFillInIntent
    111:111:int getFlagsMask() -> getFlagsMask
    120:120:int getFlagsValues() -> getFlagsValues
    91:91:android.content.IntentSender getIntentSender() -> getIntentSender
    151:154:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest$Builder -> androidx.activity.result.IntentSenderRequest$Builder:
    187:188:void <init>(android.content.IntentSender) -> <init>
    239:239:androidx.activity.result.IntentSenderRequest build() -> build
    211:211:androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent) -> setFillInIntent
    227:228:androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int) -> setFlags
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    29:29:void <init>() -> <init>
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> androidx.activity.result.contract.ActivityResultContract$SynchronousResult:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    55:55:void <init>(java.lang.Object) -> <init>
    55:55:java.lang.Object getValue() -> getValue
androidx.activity.result.contract.ActivityResultContracts$CreateDocument -> androidx.activity.result.contract.ActivityResultContracts$CreateDocument:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    577:578:void <init>(java.lang.String) -> <init>
    587:587:void <init>() -> <init>
    575:575:java.lang.Object parseResult(int,android.content.Intent) -> createIntent
    575:575:android.content.Intent createIntent(android.content.Context,java.lang.Object):575 -> createIntent
    591:593:android.content.Intent createIntent(android.content.Context,java.lang.String) -> createIntent
    575:575:java.lang.Object parseResult(int,android.content.Intent) -> getSynchronousResult
    575:575:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):575 -> getSynchronousResult
    575:575:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    602:602:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$GetContent -> androidx.activity.result.contract.ActivityResultContracts$GetContent:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    388:388:java.lang.Object parseResult(int,android.content.Intent) -> <init>
    388:388:void <init>():388 -> <init>
    388:388:java.lang.Object parseResult(int,android.content.Intent) -> createIntent
    388:388:android.content.Intent createIntent(android.content.Context,java.lang.Object):388 -> createIntent
    391:393:android.content.Intent createIntent(android.content.Context,java.lang.String) -> createIntent
    388:388:java.lang.Object parseResult(int,android.content.Intent) -> getSynchronousResult
    388:388:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):388 -> getSynchronousResult
    388:388:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    402:402:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    131:131:void <init>() -> <init>
    130:130:java.lang.Object parseResult(int,android.content.Intent) -> createIntent
    130:130:android.content.Intent createIntent(android.content.Context,java.lang.Object):130 -> createIntent
    172:172:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    130:130:java.lang.Object parseResult(int,android.content.Intent) -> getSynchronousResult
    130:130:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):130 -> getSynchronousResult
    179:180:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    12537:12537:boolean kotlin.collections.ArraysKt___ArraysKt.all(java.lang.Object[],kotlin.jvm.functions.Function1) -> getSynchronousResult
    12537:12537:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):182 -> getSynchronousResult
    183:183:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    8676:8677:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associate(java.lang.Object[],kotlin.jvm.functions.Function1) -> getSynchronousResult
    8676:8677:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):189 -> getSynchronousResult
    9358:9358:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> getSynchronousResult
    9358:9358:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):189 -> getSynchronousResult
    189:189:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    130:130:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    197:200:java.util.Map parseResult(int,android.content.Intent) -> parseResult
    11365:11365:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(int[],kotlin.jvm.functions.Function1) -> parseResult
    11365:11365:java.util.Map parseResult(int,android.content.Intent):202 -> parseResult
    11700:11700:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> parseResult
    11700:11700:java.util.Map parseResult(int,android.content.Intent):202 -> parseResult
    201:205:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    133:133:void <init>() -> <init>
    167:167:android.content.Intent createIntent$activity_release(java.lang.String[]) -> createIntent$activity_release
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    52:52:void <init>() -> <init>
    52:52:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    52:52:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    72:72:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    54:54:void <init>() -> <init>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1386:void <init>(int,int) -> <init>
    1374:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1405:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    749:754:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:348:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1025:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1082:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:171:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:99:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    418:418:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    730:733:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    522:523:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    486:487:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    831:834:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    902:904:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    94:95:void <init>() -> <init>
    212:213:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    139:139:void attachBaseContext(android.content.Context) -> attachBaseContext
    652:655:void closeOptionsMenu() -> closeOptionsMenu
    595:601:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    261:261:android.view.View findViewById(int) -> findViewById
    585:588:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    189:189:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    606:609:android.content.res.Resources getResources() -> getResources
    163:163:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    502:502:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    116:126:void initDelegate() -> initDelegate
    219:221:void initViewTreeOwners() -> initViewTreeOwners
    316:316:void invalidateOptionsMenu() -> invalidateOptionsMenu
    226:236:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    542:542:void onContentChanged() -> onContentChanged
    419:419:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    280:281:void onDestroy() -> onDestroy
    635:638:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    266:273:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    566:566:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    577:577:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    150:151:void onPostCreate(android.os.Bundle) -> onPostCreate
    242:243:void onPostResume() -> onPostResume
    248:249:void onStart() -> onStart
    254:255:void onStop() -> onStop
    464:483:boolean onSupportNavigateUp() -> onSupportNavigateUp
    286:287:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    643:646:void openOptionsMenu() -> openOptionsMenu
    618:625:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    194:195:void setContentView(int) -> setContentView
    200:201:void setContentView(android.view.View) -> setContentView
    206:207:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    144:145:void setTheme(int) -> setTheme
    535:535:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    519:519:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
    117:117:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    121:122:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
    126:126:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    129:132:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    173:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    655:661:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    686:696:void applyDayNightToActiveDelegates() -> applyDayNightToActiveDelegates
    395:395:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    604:604:int getDefaultNightMode() -> getDefaultNightMode
    665:668:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    672:682:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    583:592:void setDefaultNightMode(int) -> setDefaultNightMode
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    136:151:void <clinit>() -> <clinit>
    292:292:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    296:296:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    213:342:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    725:728:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2377:2377:boolean applyDayNight() -> applyDayNight
    2382:2404:boolean applyDayNight(boolean) -> applyDayNight
    1032:1065:void applyFixedSizeWindow() -> applyFixedSizeWindow
    349:476:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    791:814:void attachToWindow(android.view.Window) -> attachToWindow
    2465:2465:int calculateNightMode() -> calculateNightMode
    2085:2105:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1967:1977:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    766:770:void cleanupAutoManagers() -> cleanupAutoManagers
    1981:1981:void closePanel(int) -> closePanel
    1985:2012:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2490:2502:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration,boolean) -> createOverrideConfigurationForDayNight
    852:1016:android.view.ViewGroup createSubDecor() -> createSubDecor
    1528:1572:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2351:2371:void dismissPopups() -> dismissPopups
    1460:1478:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2173:2194:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1399:1400:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    818:846:void ensureSubDecor() -> ensureSubDecor
    782:786:void ensureWindow() -> ensureWindow
    2110:2114:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    640:641:android.view.View findViewById(int) -> findViewById
    3495:3593:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    614:620:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2651:2654:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2643:2647:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    2429:2429:int getLocalNightMode() -> getLocalNightMode
    628:633:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2123:2133:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    543:544:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1151:1155:java.lang.CharSequence getTitle() -> getTitle
    552:552:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    556:568:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1842:1857:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1748:1750:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1799:1836:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1603:1608:void installViewFactory() -> installViewFactory
    1230:1232:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2164:2168:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2658:2692:boolean isActivityManifestHandlingUiMode(android.content.Context) -> isActivityManifestHandlingUiMode
    1395:1395:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2442:2458:int mapNightMode(android.content.Context,int) -> mapNightMode
    1406:1413:boolean onBackPressed() -> onBackPressed
    648:670:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    498:530:void onCreate(android.os.Bundle) -> onCreate
    1620:1620:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1629:1629:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    737:761:void onDestroy() -> onDestroy
    1511:1519:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2017:2020:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1423:1449:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1484:1500:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2028:2074:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1185:1189:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1197:1197:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1176:1178:void onMenuOpened(int) -> onMenuOpened
    1160:1169:void onPanelClosed(int) -> onPanelClosed
    536:536:void onPostCreate(android.os.Bundle) -> onPostCreate
    690:692:void onPostResume() -> onPostResume
    677:677:void onStart() -> onStart
    682:684:void onStop() -> onStop
    1650:1744:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    548:548:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2140:2156:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1863:1961:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1755:1795:void reopenMenu(boolean) -> reopenMenu
    1070:1107:boolean requestWindowFeature(int) -> requestWindowFeature
    2334:2338:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    698:702:void setContentView(android.view.View) -> setContentView
    707:711:void setContentView(int) -> setContentView
    716:720:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    776:776:void setTheme(int) -> setTheme
    1138:1145:void setTitle(java.lang.CharSequence) -> setTitle
    1385:1385:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1581:1597:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1203:1225:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1236:1379:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2326:2327:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1634:1640:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2520:2574:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2585:2626:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2210:2311:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2318:2322:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    269:269:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    272:279:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    951:951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    955:967:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1016:1016:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1022:1022:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1291:1291:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1294:1317:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1302:1302:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1310:1312:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1305:1305:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1344:1344:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1355:1357:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1347:1349:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2790:2790:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2804:2804:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2795:2797:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2701:2702:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2718:2718:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2707:2707:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2723:2751:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2712:2713:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2731:2731:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2734:2743:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
    3614:3614:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3607:3608:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
    3623:3623:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
    3633:3637:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
    3648:3656:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3091:3092:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3291:3295:boolean bypassDispatchKeyEvent(android.view.Window$Callback,android.view.KeyEvent) -> bypassDispatchKeyEvent
    3273:3277:void bypassOnContentChanged(android.view.Window$Callback) -> bypassOnContentChanged
    3309:3313:void bypassOnPanelClosed(android.view.Window$Callback,int,android.view.Menu) -> bypassOnPanelClosed
    3101:3106:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3111:3112:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3138:3139:void onContentChanged() -> onContentChanged
    3117:3122:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3127:3133:android.view.View onCreatePanelView(int) -> onCreatePanelView
    3182:3183:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3189:3195:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3149:3174:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3253:3260:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3201:3210:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3238:3246:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3220:3229:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3401:3403:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3423:3424:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3410:3410:int getApplyableNightMode() -> getApplyableNightMode
    3417:3417:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3322:3322:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3354:3361:void cleanup() -> cleanup
    3331:3347:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    3340:3340:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3343:3343:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3373:3374:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3390:3393:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3380:3380:int getApplyableNightMode() -> getApplyableNightMode
    3385:3385:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    490:490:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3040:3041:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3046:3047:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3070:3070:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3052:3061:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3066:3066:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2873:2876:void <init>(int) -> <init>
    2941:2950:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2880:2883:boolean hasPanelItems() -> hasPanelItems
    2929:2936:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2897:2925:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2756:2756:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2761:2771:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2779:2782:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    47:65:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:142:void dismiss() -> dismiss
    214:215:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    177:180:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    186:188:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:169:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    209:209:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppCompatDialog androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$0$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.f$0 -> f$0
    void androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$0$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.<init>(androidx.appcompat.app.AppCompatDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$0$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:93:void <clinit>() -> <clinit>
    73:96:void <init>() -> <init>
    395:415:void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet) -> backportAccessibilityAttributes
    320:335:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    247:247:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    211:211:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    231:231:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    241:241:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    216:216:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    226:226:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    206:206:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    253:253:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    236:236:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    258:258:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    263:263:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    221:221:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    201:201:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    268:268:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    106:193:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    340:354:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    284:311:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    367:388:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    273:273:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    429:431:void <init>(android.view.View,java.lang.String) -> <init>
    436:446:void onClick(android.view.View) -> onClick
    454:479:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.LayoutIncludeDetector:
    36:38:void <init>() -> <init>
    45:56:boolean detect(android.util.AttributeSet) -> detect
    108:109:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser) -> isParserOutdated
    95:98:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque) -> popOutdatedAttrHolders
    75:78:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser) -> shouldInheritContext
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    47:55:void flush(android.content.res.Resources) -> flush
    61:78:void flushLollipops(android.content.res.Resources) -> flushLollipops
    85:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    114:161:void flushNougats(android.content.res.Resources) -> flushNougats
    167:206:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ResourcesFlusher$Api16Impl -> androidx.appcompat.app.ResourcesFlusher$Api16Impl:
    221:221:void clear(android.util.LongSparseArray) -> clear
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    98:174:void <init>(android.app.Activity,boolean) -> <init>
    98:179:void <init>(android.app.Dialog) -> <init>
    872:903:void animateToMode(boolean) -> animateToMode
    971:972:boolean collapseActionView() -> collapseActionView
    309:312:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    348:355:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    833:859:void doHide(boolean) -> doHide
    784:828:void doShow(boolean) -> doShow
    670:670:void enableContentAnimations(boolean) -> enableContentAnimations
    234:240:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    515:515:int getDisplayOptions() -> getDisplayOptions
    510:510:int getNavigationMode() -> getNavigationMode
    917:929:android.content.Context getThemedContext() -> getThemedContext
    708:713:void hideForActionMode() -> hideForActionMode
    719:721:void hideForSystem() -> hideForSystem
    192:230:void init(android.view.View) -> init
    256:256:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    959:961:void onContentScrollStarted() -> onContentScrollStarted
    1396:1404:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    318:318:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1389:1390:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    377:377:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    471:475:void setDisplayOptions(int,int) -> setDisplayOptions
    246:246:void setElevation(float) -> setElevation
    260:281:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    727:732:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    392:392:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    330:332:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    443:443:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    912:912:boolean shouldAnimateContextView() -> shouldAnimateContextView
    682:687:void showForActionMode() -> showForActionMode
    693:695:void showForSystem() -> showForSystem
    520:533:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    767:778:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    134:134:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    137:146:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    151:151:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    154:155:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    160:160:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    163:164:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    989:994:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1054:1059:boolean dispatchOnCreate() -> dispatchOnCreate
    1009:1033:void finish() -> finish
    1111:1111:android.view.View getCustomView() -> getCustomView
    1004:1004:android.view.Menu getMenu() -> getMenu
    999:999:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1095:1095:java.lang.CharSequence getSubtitle() -> getSubtitle
    1090:1090:java.lang.CharSequence getTitle() -> getTitle
    1038:1050:void invalidate() -> invalidate
    1106:1106:boolean isTitleOptional() -> isTitleOptional
    1116:1117:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1144:1148:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1064:1065:void setCustomView(android.view.View) -> setCustomView
    1070:1070:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1085:1085:void setSubtitle(int) -> setSubtitle
    1075:1075:void setTitle(java.lang.CharSequence) -> setTitle
    1080:1080:void setTitle(int) -> setTitle
    1100:1101:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    48:48:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    66:66:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    93:93:void <clinit>() -> <clinit>
    112:112:void <init>() -> <init>
    106:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    91:91:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    91:91:boolean canApplyTheme() -> canApplyTheme
    91:91:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    91:91:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    616:616:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    174:180:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    91:91:void draw(android.graphics.Canvas) -> draw
    91:91:int getAlpha() -> getAlpha
    91:91:int getChangingConfigurations() -> getChangingConfigurations
    91:91:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    91:91:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    91:91:int getIntrinsicHeight() -> getIntrinsicHeight
    91:91:int getIntrinsicWidth() -> getIntrinsicWidth
    91:91:int getMinimumHeight() -> getMinimumHeight
    91:91:int getMinimumWidth() -> getMinimumWidth
    91:91:int getOpacity() -> getOpacity
    91:91:void getOutline(android.graphics.Outline) -> getOutline
    91:91:boolean getPadding(android.graphics.Rect) -> getPadding
    204:212:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    482:496:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    471:471:void init() -> init
    91:91:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    91:91:boolean isAutoMirrored() -> isAutoMirrored
    263:269:void jumpToCurrentState() -> jumpToCurrentState
    607:609:android.graphics.drawable.Drawable mutate() -> mutate
    91:91:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    277:285:boolean onStateChange(int[]) -> onStateChange
    564:601:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    509:554:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    91:91:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    292:348:boolean selectTransition(int) -> selectTransition
    91:91:void setAlpha(int) -> setAlpha
    91:91:void setAutoMirrored(boolean) -> setAutoMirrored
    91:91:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    720:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    91:91:void setDither(boolean) -> setDither
    91:91:void setHotspot(float,float) -> setHotspot
    91:91:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    91:91:void setTint(int) -> setTint
    91:91:void setTintList(android.content.res.ColorStateList) -> setTintList
    91:91:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    217:223:boolean setVisible(boolean,boolean) -> setVisible
    91:91:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    448:466:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    369:370:void <init>(android.graphics.drawable.Animatable) -> <init>
    375:375:void start() -> start
    380:380:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    636:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    669:670:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    654:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    683:683:int getKeyframeIdAt(int) -> getKeyframeIdAt
    675:679:int indexOfKeyframe(int[]) -> indexOfKeyframe
    687:688:int indexOfTransition(int,int) -> indexOfTransition
    692:693:boolean isTransitionReversed(int,int) -> isTransitionReversed
    649:650:void mutate() -> mutate
    704:704:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    710:710:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    697:698:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    432:433:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    438:438:void start() -> start
    443:443:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    391:405:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    410:410:boolean canReverse() -> canReverse
    420:420:void reverse() -> reverse
    415:415:void start() -> start
    425:425:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    734:735:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    761:774:float getInterpolation(float) -> getInterpolation
    756:756:int getTotalDuration() -> getTotalDuration
    739:751:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    352:352:void <init>() -> <init>
    352:352:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    55:76:void <init>() -> <init>
    541:576:void animate(boolean) -> animate
    600:600:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    606:606:boolean canApplyTheme() -> canApplyTheme
    88:92:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    98:99:int getChangingConfigurations() -> getChangingConfigurations
    611:613:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    583:583:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    421:421:int getCurrentIndex() -> getCurrentIndex
    301:304:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    347:350:int getIntrinsicHeight() -> getIntrinsicHeight
    339:342:int getIntrinsicWidth() -> getIntrinsicWidth
    363:366:int getMinimumHeight() -> getMinimumHeight
    355:358:int getMinimumWidth() -> getMinimumWidth
    411:412:int getOpacity() -> getOpacity
    132:133:void getOutline(android.graphics.Outline) -> getOutline
    109:124:boolean getPadding(android.graphics.Rect) -> getPadding
    497:537:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    374:378:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    250:250:boolean isAutoMirrored() -> isAutoMirrored
    256:276:void jumpToCurrentState() -> jumpToCurrentState
    620:624:android.graphics.drawable.Drawable mutate() -> mutate
    103:104:boolean needsMirroring() -> needsMirroring
    224:228:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    334:334:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    321:325:boolean onLevelChange(int) -> onLevelChange
    310:314:boolean onStateChange(int[]) -> onStateChange
    1213:1213:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    384:385:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    434:486:boolean selectDrawable(int) -> selectDrawable
    139:146:void setAlpha(int) -> setAlpha
    239:242:void setAutoMirrored(boolean) -> setAutoMirrored
    170:174:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1162:1172:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    160:163:void setDither(boolean) -> setDither
    282:283:void setHotspot(float,float) -> setHotspot
    289:295:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    181:181:void setTint(int) -> setTint
    186:189:void setTintList(android.content.res.ColorStateList) -> setTintList
    195:198:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    398:403:boolean setVisible(boolean,boolean) -> setVisible
    391:392:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    594:594:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    473:473:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    476:477:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl -> androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl:
    1224:1224:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState) -> canApplyTheme
    1232:1232:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
    1228:1228:android.content.res.Resources getResources(android.content.res.Resources$Theme) -> getResources
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1178:1178:void <init>() -> <init>
    1199:1200:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1206:1207:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1187:1188:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1182:1182:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    659:761:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    777:791:int addChild(android.graphics.drawable.Drawable) -> addChild
    903:913:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    920:930:boolean canApplyTheme() -> canApplyTheme
    1143:1156:boolean canConstantState() -> canConstantState
    1051:1066:void computeConstantSize() -> computeConstantSize
    808:815:void createAllFutures() -> createAllFutures
    804:804:int getCapacity() -> getCapacity
    767:767:int getChangingConfigurations() -> getChangingConfigurations
    836:849:android.graphics.drawable.Drawable getChild(int) -> getChild
    829:829:int getChildCount() -> getChildCount
    1024:1027:int getConstantHeight() -> getConstantHeight
    1044:1047:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1034:1037:int getConstantMinimumWidth() -> getConstantMinimumWidth
    975:996:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1014:1017:int getConstantWidth() -> getConstantWidth
    1091:1102:int getOpacity() -> getOpacity
    1132:1136:void growArray(int,int) -> growArray
    799:800:void invalidateCache() -> invalidateCache
    1007:1007:boolean isConstantSize() -> isConstantSize
    820:824:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    1000:1000:void setConstantSize(boolean) -> setConstantSize
    1071:1071:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1079:1079:void setExitFadeDuration(int) -> setExitFadeDuration
    861:875:boolean setLayoutDirection(int,int) -> setLayoutDirection
    968:968:void setVariablePadding(boolean) -> setVariablePadding
    887:895:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    162:162:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:108:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:170:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:83:void setAlpha(int) -> setAlpha
    188:188:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    88:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:73:void setDither(boolean) -> setDither
    78:78:void setFilterBitmap(boolean) -> setFilterBitmap
    213:213:void setHotspot(float,float) -> setHotspot
    218:218:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:198:void setTint(int) -> setTint
    203:203:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:208:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:178:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    404:408:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    415:417:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    392:393:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    80:80:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    320:320:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    236:253:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    311:313:android.graphics.drawable.Drawable mutate() -> mutate
    114:123:boolean onStateChange(int[]) -> onStateChange
    398:400:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    333:338:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    352:353:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    382:385:void growArray(int,int) -> growArray
    358:361:int indexOfStateSet(int[]) -> indexOfStateSet
    344:348:void mutate() -> mutate
    371:371:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    377:377:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.resources.Compatibility$Api15Impl -> androidx.appcompat.resources.Compatibility$Api15Impl:
    96:96:void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean) -> getValueForDensity
androidx.appcompat.resources.Compatibility$Api18Impl -> androidx.appcompat.resources.Compatibility$Api18Impl:
    83:83:void setAutoCancel(android.animation.ObjectAnimator,boolean) -> setAutoCancel
androidx.appcompat.resources.Compatibility$Api21Impl -> androidx.appcompat.resources.Compatibility$Api21Impl:
    71:71:android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    63:63:int getChangingConfigurations(android.content.res.TypedArray) -> getChangingConfigurations
    58:58:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:103:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    55:55:void <init>() -> <init>
    70:71:void <init>(android.content.Context,int) -> <init>
    84:85:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    104:111:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    90:90:void attachBaseContext(android.content.Context) -> attachBaseContext
    213:213:android.content.res.AssetManager getAssets() -> getAssets
    116:116:android.content.res.Resources getResources() -> getResources
    120:139:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    174:180:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    160:169:android.content.res.Resources$Theme getTheme() -> getTheme
    155:155:int getThemeResId() -> getThemeResId
    199:207:void initializeTheme() -> initializeTheme
    226:234:boolean isEmptyConfiguration(android.content.res.Configuration) -> isEmptyConfiguration
    195:195:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    144:146:void setTheme(int) -> setTheme
androidx.appcompat.view.ContextThemeWrapper$Api17Impl -> androidx.appcompat.view.ContextThemeWrapper$Api17Impl:
    246:246:android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration) -> createConfigurationContext
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:58:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:110:void finish() -> finish
    130:130:android.view.View getCustomView() -> getCustomView
    115:115:android.view.Menu getMenu() -> getMenu
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    125:125:java.lang.CharSequence getSubtitle() -> getSubtitle
    120:120:java.lang.CharSequence getTitle() -> getTitle
    100:100:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    140:140:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    160:161:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:95:void setCustomView(android.view.View) -> setCustomView
    68:68:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:78:void setSubtitle(int) -> setSubtitle
    63:63:void setTitle(java.lang.CharSequence) -> setTitle
    73:73:void setTitle(int) -> setTitle
    83:84:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:219:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:531:void addItem() -> addItem
    535:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:554:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:525:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    51:55:void <init>(android.view.Window$Callback) -> <init>
    80:80:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    60:60:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    65:65:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:85:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    70:70:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    75:75:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    189:189:android.view.Window$Callback getWrapped() -> getWrapped
    172:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    167:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    130:130:void onAttachedToWindow() -> onAttachedToWindow
    95:95:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    90:90:android.view.View onCreatePanelView(int) -> onCreatePanelView
    135:135:void onDetachedFromWindow() -> onDetachedFromWindow
    110:110:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    105:105:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    140:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    185:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    100:100:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    179:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    146:146:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    151:151:boolean onSearchRequested() -> onSearchRequested
    115:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    125:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    156:156:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    162:162:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api23Impl:
    200:200:boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent) -> onSearchRequested
    206:206:android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api24Impl:
    219:219:void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api26Impl:
    232:232:void onPointerCaptureChanged(android.view.Window$Callback,boolean) -> onPointerCaptureChanged
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    54:85:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    449:458:void applyIconTint() -> applyIconTint
    345:345:android.view.ActionProvider getActionProvider() -> getActionProvider
    95:95:int getAlphabeticModifiers() -> getAlphabeticModifiers
    90:90:char getAlphabeticShortcut() -> getAlphabeticShortcut
    401:401:java.lang.CharSequence getContentDescription() -> getContentDescription
    100:100:int getGroupId() -> getGroupId
    105:105:android.graphics.drawable.Drawable getIcon() -> getIcon
    429:429:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    445:445:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    110:110:android.content.Intent getIntent() -> getIntent
    115:115:int getItemId() -> getItemId
    130:130:int getNumericModifiers() -> getNumericModifiers
    125:125:char getNumericShortcut() -> getNumericShortcut
    135:135:int getOrder() -> getOrder
    145:145:java.lang.CharSequence getTitle() -> getTitle
    150:150:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    413:413:java.lang.CharSequence getTooltipText() -> getTooltipText
    160:160:boolean isCheckable() -> isCheckable
    165:165:boolean isChecked() -> isChecked
    170:170:boolean isEnabled() -> isEnabled
    175:175:boolean isVisible() -> isVisible
    340:340:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    43:43:android.view.MenuItem setActionView(int) -> setActionView
    43:43:android.view.MenuItem setActionView(android.view.View) -> setActionView
    330:330:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    351:351:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    180:180:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    187:188:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    194:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    205:205:android.view.MenuItem setChecked(boolean) -> setChecked
    43:43:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    395:395:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    211:211:android.view.MenuItem setEnabled(boolean) -> setEnabled
    217:219:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    225:227:android.view.MenuItem setIcon(int) -> setIcon
    419:422:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    435:438:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    233:233:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    239:239:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    246:247:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    389:389:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    253:253:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    259:260:android.view.MenuItem setShortcut(char,char) -> setShortcut
    268:271:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    43:43:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    368:368:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    277:277:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    283:283:android.view.MenuItem setTitle(int) -> setTitle
    289:289:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    43:43:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    407:407:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    295:295:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    100:100:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    124:124:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    242:242:boolean hasText() -> hasText
    129:139:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    269:269:boolean needsDividerAfter() -> needsDividerAfter
    264:264:boolean needsDividerBefore() -> needsDividerBefore
    155:156:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    274:299:void onMeasure(int,int) -> onMeasure
    338:338:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    146:150:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:187:void setExpandedFormat(boolean) -> setExpandedFormat
    220:238:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    161:161:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    118:119:void setPadding(int,int,int,int) -> setPadding
    165:165:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    252:254:void setTitle(java.lang.CharSequence) -> setTitle
    108:112:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    193:214:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    304:305:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    310:311:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    319:321:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    341:341:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:222:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:248:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:35:void <init>(android.content.Context) -> <init>
    39:53:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:74:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:87:void internalClear() -> internalClear
    92:97:void internalRemoveGroup(int) -> internalRemoveGroup
    104:109:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:360:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    246:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:295:void dismiss() -> dismiss
    656:658:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:519:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    316:316:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:340:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:721:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    600:611:void onDismiss() -> onDismiss
    303:304:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    630:642:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:755:void setAnchorView(android.view.View) -> setAnchorView
    624:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:242:void setForceShowIcon(boolean) -> setForceShowIcon
    741:744:void setGravity(int) -> setGravity
    773:774:void setHorizontalOffset(int) -> setHorizontalOffset
    761:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:785:void setShowTitle(boolean) -> setShowTitle
    779:780:void setVerticalOffset(int) -> setVerticalOffset
    260:278:void show() -> show
    370:502:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:618:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:112:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    801:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:97:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:138:void addContentView(android.view.View) -> addContentView
    142:145:void addContentView(android.view.View,int) -> addContentView
    347:353:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:313:void insertCheckBox() -> insertCheckBox
    294:297:void insertIconView() -> insertIconView
    301:305:void insertRadioButton() -> insertRadioButton
    102:119:void onFinishInflate() -> onFinishInflate
    282:290:void onMeasure(int,int) -> onMeasure
    171:210:void setCheckable(boolean) -> setCheckable
    219:231:void setChecked(boolean) -> setChecked
    150:150:void setForceShowIcon(boolean) -> setForceShowIcon
    339:341:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:250:void setShortcut(boolean,char) -> setShortcut
    235:236:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    156:160:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    233:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    278:290:void findExpandedIndex() -> findExpandedIndex
    241:243:int getCount() -> getCount
    232:232:java.lang.Object getItem(int) -> getItem
    251:256:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    269:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    295:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:235:void <init>(android.content.Context) -> <init>
    468:468:android.view.MenuItem add(java.lang.CharSequence) -> add
    473:473:android.view.MenuItem add(int) -> add
    478:478:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    483:483:android.view.MenuItem add(int,int,int,int) -> add
    522:542:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    443:454:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:250:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:265:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    488:488:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    493:493:android.view.SubMenu addSubMenu(int) -> addSubMenu
    498:500:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    507:507:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    843:844:void changeMenuMode() -> changeMenuMode
    606:611:void clear() -> clear
    1215:1219:void clearHeader() -> clearHeader
    1032:1043:void close(boolean) -> close
    1048:1048:void close() -> close
    1375:1391:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    462:462:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    836:836:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:295:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    300:314:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1353:1369:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    726:726:int findGroupIndex(int) -> findGroupIndex
    730:739:int findGroupIndex(int,int) -> findGroupIndex
    849:851:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    695:701:android.view.MenuItem findItem(int) -> findItem
    713:717:int findItemIndex(int) -> findItemIndex
    932:958:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    884:913:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1165:1201:void flagActionItems() -> flagActionItems
    1205:1206:java.util.ArrayList getActionItems() -> getActionItems
    832:832:android.content.Context getContext() -> getContext
    1397:1397:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1318:1318:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1314:1314:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1322:1322:android.view.View getHeaderView() -> getHeaderView
    754:754:android.view.MenuItem getItem(int) -> getItem
    1210:1211:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1349:1349:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    783:787:int getOrdering(int) -> getOrdering
    828:828:android.content.res.Resources getResources() -> getResources
    1120:1135:java.util.ArrayList getVisibleItems() -> getVisibleItems
    677:685:boolean hasVisibleItems() -> hasVisibleItems
    516:516:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    794:794:boolean isQwertyMode() -> isQwertyMode
    759:759:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    824:824:boolean isShortcutsVisible() -> isShortcutsVisible
    1114:1115:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1103:1104:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1059:1069:void onItemsChanged(boolean) -> onItemsChanged
    973:973:boolean performIdentifierAction(int,int) -> performIdentifierAction
    977:977:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    981:1016:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    861:870:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    556:567:void removeGroup(int) -> removeGroup
    551:551:void removeItem(int) -> removeItem
    582:586:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:278:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    406:426:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    376:396:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    436:436:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:239:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    615:629:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    634:640:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    512:512:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    665:670:void setGroupEnabled(int,boolean) -> setGroupEnabled
    647:660:void setGroupVisible(int,boolean) -> setGroupVisible
    1285:1285:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1297:1297:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1224:1250:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1261:1261:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1273:1273:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1309:1309:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1406:1406:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    764:766:void setQwertyMode(boolean) -> setQwertyMode
    814:817:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    749:749:int size() -> size
    1088:1092:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1080:1083:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:141:void dismiss() -> dismiss
    170:170:void onClick(android.content.DialogInterface,int) -> onClick
    152:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    96:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:163:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:90:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    69:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    697:697:void actionFormatChanged() -> actionFormatChanged
    407:407:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    576:588:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    848:858:boolean collapseActionView() -> collapseActionView
    834:840:boolean expandActionView() -> expandActionView
    796:796:android.view.ActionProvider getActionProvider() -> getActionProvider
    778:781:android.view.View getActionView() -> getActionView
    277:277:int getAlphabeticModifiers() -> getAlphabeticModifiers
    244:244:char getAlphabeticShortcut() -> getAlphabeticShortcut
    902:902:java.lang.CharSequence getContentDescription() -> getContentDescription
    204:204:int getGroupId() -> getGroupId
    504:512:android.graphics.drawable.Drawable getIcon() -> getIcon
    555:555:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    572:572:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    224:224:android.content.Intent getIntent() -> getIntent
    210:210:int getItemId() -> getItemId
    693:693:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    287:287:int getNumericModifiers() -> getNumericModifiers
    282:282:char getNumericShortcut() -> getNumericShortcut
    215:215:int getOrder() -> getOrder
    219:219:int getOrdering() -> getOrdering
    346:346:char getShortcut() -> getShortcut
    356:402:java.lang.String getShortcutLabel() -> getShortcutLabel
    423:423:android.view.SubMenu getSubMenu() -> getSubMenu
    802:802:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    440:440:java.lang.CharSequence getTitle() -> getTitle
    475:475:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    450:452:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    917:917:java.lang.CharSequence getTooltipText() -> getTooltipText
    865:869:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    428:428:boolean hasSubMenu() -> hasSubMenu
    155:177:boolean invoke() -> invoke
    708:708:boolean isActionButton() -> isActionButton
    881:881:boolean isActionViewExpanded() -> isActionViewExpanded
    596:596:boolean isCheckable() -> isCheckable
    620:620:boolean isChecked() -> isChecked
    186:186:boolean isEnabled() -> isEnabled
    615:615:boolean isExclusiveCheckable() -> isExclusiveCheckable
    646:649:boolean isVisible() -> isVisible
    712:712:boolean requestsActionButton() -> requestsActionButton
    717:717:boolean requiresActionButton() -> requiresActionButton
    790:790:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    52:52:android.view.MenuItem setActionView(int) -> setActionView
    52:52:android.view.MenuItem setActionView(android.view.View) -> setActionView
    758:763:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    770:772:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    875:876:void setActionViewExpanded(boolean) -> setActionViewExpanded
    249:255:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    263:271:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    601:604:android.view.MenuItem setCheckable(boolean) -> setCheckable
    625:630:android.view.MenuItem setChecked(boolean) -> setChecked
    637:640:void setCheckedInt(boolean) -> setCheckedInt
    52:52:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    893:895:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    192:197:android.view.MenuItem setEnabled(boolean) -> setEnabled
    611:611:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    520:523:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    530:535:android.view.MenuItem setIcon(int) -> setIcon
    544:548:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    561:565:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    229:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    727:729:void setIsActionButton(boolean) -> setIsActionButton
    688:688:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    292:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    306:313:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    886:886:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    678:678:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    320:323:android.view.MenuItem setShortcut(char,char) -> setShortcut
    332:337:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    748:752:void setShowAsAction(int) -> setShowAsAction
    52:52:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    828:828:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    432:434:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    808:815:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    457:462:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    470:470:android.view.MenuItem setTitle(int) -> setTitle
    490:497:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    52:52:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    908:910:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    671:671:android.view.MenuItem setVisible(boolean) -> setVisible
    661:662:boolean setVisibleInt(boolean) -> setVisibleInt
    704:704:boolean shouldShowIcon() -> shouldShowIcon
    418:418:boolean shouldShowShortcut() -> shouldShowShortcut
    734:734:boolean showsTextAsAction() -> showsTextAsAction
    684:684:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    815:815:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    818:818:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:60:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    302:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:393:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:337:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:247:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    83:83:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    64:343:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    233:266:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    307:308:void dismiss() -> dismiss
    164:167:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    329:329:boolean isShowing() -> isShowing
    321:324:void onDismiss() -> onDismiss
    109:109:void setAnchorView(android.view.View) -> setAnchorView
    122:124:void setForceShowIcon(boolean) -> setForceShowIcon
    136:136:void setGravity(int) -> setGravity
    98:98:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    334:336:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    147:148:void show() -> show
    272:299:void showPopup(int,int,boolean,boolean) -> showPopup
    177:185:boolean tryShow() -> tryShow
    213:221:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    343:343:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    346:346:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl -> androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl:
    365:365:void getRealSize(android.view.Display,android.graphics.Point) -> getRealSize
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:45:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    215:216:void dismiss() -> dismiss
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:73:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:102:android.view.SubMenu setIcon(int) -> setIcon
    51:51:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:75:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:57:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:63:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:45:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:51:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:69:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:80:android.view.SubMenu setIcon(int) -> setIcon
    86:86:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    75:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:134:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:109:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:269:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    141:142:void setContentHeight(int) -> setContentHeight
    187:191:void setVisibility(int) -> setVisibility
    160:175:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:302:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:297:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:289:void onAnimationStart(android.view.View) -> onAnimationStart
    281:282:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    68:75:void getOutline(android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl -> androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl:
    87:87:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    60:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:177:void drawableStateChanged() -> drawableStateChanged
    268:269:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    244:244:android.view.View getTabContainer() -> getTabContainer
    264:264:boolean isCollapsed(android.view.View) -> isCollapsed
    183:191:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    85:87:void onFinishInflate() -> onFinishInflate
    223:223:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    210:210:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    304:346:void onLayout(boolean,int,int,int,int) -> onLayout
    274:297:void onMeasure(int,int) -> onMeasure
    215:215:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    91:107:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    133:148:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    112:128:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    230:239:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    203:204:void setTransitioning(boolean) -> setTransitioning
    154:158:void setVisibility(int) -> setVisibility
    258:258:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    163:164:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContainer$Api21Impl -> androidx.appcompat.widget.ActionBarContainer$Api21Impl:
    357:357:void invalidateOutline(androidx.appcompat.widget.ActionBarContainer) -> invalidateOutline
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:196:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    41:41:int getAnimatedVisibility() -> getAnimatedVisibility
    41:41:int getContentHeight() -> getContentHeight
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:191:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:158:void initTitle() -> initTitle
    371:371:boolean isTitleOptional() -> isTitleOptional
    202:207:void killMode() -> killMode
    89:92:void onDetachedFromWindow() -> onDetachedFromWindow
    41:41:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    329:354:void onLayout(boolean,int,int,int,int) -> onLayout
    249:323:void onMeasure(int,int) -> onMeasure
    41:41:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    98:98:void setContentHeight(int) -> setContentHeight
    102:113:void setCustomView(android.view.View) -> setCustomView
    123:124:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    364:367:void setTitleOptional(boolean) -> setTitleOptional
    41:41:void setVisibility(int) -> setVisibility
    41:41:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    213:214:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:175:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    71:162:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:742:void addActionBarHideOffset() -> addActionBarHideOffset
    288:303:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:877:void dismissPopups() -> dismissPopups
    543:550:void draw(android.graphics.Canvas) -> draw
    313:313:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    765:766:java.lang.CharSequence getTitle() -> getTitle
    718:721:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:175:void init(android.content.Context) -> init
    771:780:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:243:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:181:void onDetachedFromWindow() -> onDetachedFromWindow
    520:536:void onLayout(boolean,int,int,int,int) -> onLayout
    410:514:void onMeasure(int,int) -> onMeasure
    646:654:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    599:599:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    564:564:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    592:592:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:627:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    577:577:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:619:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    584:584:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:640:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    254:271:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:281:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:732:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:727:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:677:void pullChildren() -> pullChildren
    736:737:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:714:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:193:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:215:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:697:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    804:805:void setIcon(int) -> setIcon
    810:811:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    816:817:void setLogo(int) -> setLogo
    858:859:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:853:void setMenuPrepared() -> setMenuPrepared
    199:206:void setOverlayMode(boolean) -> setOverlayMode
    753:754:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:760:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:124:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:118:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:133:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:143:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    882:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:886:void <init>(int,int) -> <init>
    890:890:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:87:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:374:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:540:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:174:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:362:boolean hideOverflowMenu() -> hideOverflowMenu
    384:385:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:549:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:587:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:166:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:341:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:742:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:750:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:800:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:783:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:795:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    671:676:boolean performClick() -> performClick
    692:705:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:650:boolean onForwardingStarted() -> onForwardingStarted
    659:663:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:718:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:728:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:755:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:774:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    79:79:void <init>(android.content.Context) -> <init>
    83:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:724:void dismissPopupMenus() -> dismissPopupMenus
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    597:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    116:116:int getPopupTheme() -> getPopupTheme
    736:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    407:435:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    131:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:545:void onDetachedFromWindow() -> onDetachedFromWindow
    442:537:void onLayout(boolean,int,int,int,int) -> onLayout
    150:175:void onMeasure(int,int) -> onMeasure
    181:389:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    144:144:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:578:void setOverflowReserved(boolean) -> setOverflowReserved
    100:105:void setPopupTheme(int) -> setPopupTheme
    125:126:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:793:void <init>() -> <init>
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    873:873:void <clinit>() -> <clinit>
    878:881:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    65:65:void <clinit>() -> <clinit>
    79:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:231:void drawableStateChanged() -> drawableStateChanged
    264:265:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    322:322:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    365:365:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:143:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:164:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:156:void setBackgroundResource(int) -> setBackgroundResource
    292:294:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    302:304:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    257:258:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    149:149:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    281:281:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    276:276:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:178:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:206:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    345:346:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    385:386:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:239:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:45:void <init>(android.view.View) -> <init>
    178:196:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:137:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:92:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:85:void onSetBackgroundResource(int) -> onSetBackgroundResource
    144:152:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:101:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:115:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    75:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    169:174:void drawableStateChanged() -> drawableStateChanged
    337:341:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    321:325:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    305:309:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    353:357:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    287:293:int getAutoSizeTextType() -> getAutoSizeTextType
    392:393:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    453:456:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    135:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    163:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    415:415:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    437:437:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    188:189:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    194:195:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    200:202:void onLayout(boolean,int,int,int,int) -> onLayout
    219:221:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    461:462:void setAllCaps(boolean) -> setAllCaps
    251:256:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    269:273:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    232:236:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    105:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    97:99:void setBackgroundResource(int) -> setBackgroundResource
    385:386:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    468:468:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    443:443:void setFilters(android.text.InputFilter[]) -> setFilters
    373:374:void setSupportAllCaps(boolean) -> setSupportAllCaps
    120:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    148:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    403:404:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    425:426:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    180:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    208:212:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:256:void drawableStateChanged() -> drawableStateChanged
    122:124:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    101:104:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    201:202:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    229:230:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    148:149:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    173:174:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    314:314:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    357:357:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    267:268:void setAllCaps(boolean) -> setAllCaps
    235:237:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    243:245:void setBackgroundResource(int) -> setBackgroundResource
    109:111:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    117:117:void setButtonDrawable(int) -> setButtonDrawable
    284:286:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    294:296:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    273:273:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    262:262:void setFilters(android.text.InputFilter[]) -> setFilters
    186:187:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    214:215:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    135:136:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    160:161:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    337:338:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    377:378:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    82:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    253:261:void drawableStateChanged() -> drawableStateChanged
    286:287:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    296:299:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    195:196:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    223:224:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    140:141:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    167:168:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    352:352:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    395:395:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    268:268:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    304:305:void setAllCaps(boolean) -> setAllCaps
    229:231:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    237:239:void setBackgroundResource(int) -> setBackgroundResource
    107:109:void setCheckMarkDrawable(android.graphics.drawable.Drawable) -> setCheckMarkDrawable
    115:115:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    322:324:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    332:334:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    279:280:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    311:311:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    180:181:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    208:209:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    126:127:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    153:154:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
    375:376:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    415:416:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    245:247:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCheckedTextViewHelper -> androidx.appcompat.widget.AppCompatCheckedTextViewHelper:
    43:51:void <init>(android.widget.CheckedTextView) -> <init>
    133:149:void applyCheckMarkTint() -> applyCheckMarkTint
    108:108:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    119:119:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    55:97:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    123:129:void onSetCheckMarkDrawable() -> onSetCheckMarkDrawable
    101:104:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    112:115:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:47:void <init>(android.widget.CompoundButton) -> <init>
    127:143:void applyButtonTint() -> applyButtonTint
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:91:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:123:void onSetButtonDrawable() -> onSetButtonDrawable
    95:98:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:109:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    466:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    484:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    59:460:void preload() -> preload
    502:502:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    62:128:void <init>() -> <init>
    360:360:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    158:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:251:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    189:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:308:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:394:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    452:453:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:316:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:353:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:435:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    92:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    244:249:void drawableStateChanged() -> drawableStateChanged
    301:302:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    210:211:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    238:239:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    433:433:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    476:476:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    76:76:java.lang.CharSequence getText() -> getText
    162:167:android.text.Editable getText() -> getText
    329:332:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    137:152:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    270:284:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    337:340:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    376:376:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    351:354:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    180:182:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    172:174:void setBackgroundResource(int) -> setBackgroundResource
    403:405:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    413:415:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    294:295:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    392:392:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    387:387:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    195:196:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    223:224:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    456:457:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    496:497:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    255:257:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    311:315:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEmojiEditTextHelper -> androidx.appcompat.widget.AppCompatEmojiEditTextHelper:
    50:52:void <init>(android.widget.EditText) -> <init>
    123:124:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    86:86:boolean isEmojiCapableKeyListener(android.text.method.KeyListener) -> isEmojiCapableKeyListener
    63:74:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    148:148:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    96:96:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatEmojiTextHelper -> androidx.appcompat.widget.AppCompatEmojiTextHelper:
    41:43:void <init>(android.widget.TextView) -> <init>
    99:99:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    84:84:boolean isEnabled() -> isEnabled
    52:63:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    109:109:void setAllCaps(boolean) -> setAllCaps
    77:77:void setEnabled(boolean) -> setEnabled
    122:122:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    73:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:261:void drawableStateChanged() -> drawableStateChanged
    167:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    195:196:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    137:139:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    129:131:void setBackgroundResource(int) -> setBackgroundResource
    113:115:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    97:106:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    272:273:void setImageLevel(int) -> setImageLevel
    92:92:void setImageResource(int) -> setImageResource
    121:123:void setImageURI(android.net.Uri) -> setImageURI
    152:153:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:181:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:208:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:236:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    46:49:void <init>(android.widget.ImageView) -> <init>
    201:219:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    238:239:void applyImageLevel() -> applyImageLevel
    142:160:void applySupportImageTint() -> applySupportImageTint
    124:124:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    138:138:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    104:105:boolean hasOverlappingRendering() -> hasOverlappingRendering
    53:86:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    231:231:void obtainLevelFromDrawable(android.graphics.drawable.Drawable) -> obtainLevelFromDrawable
    91:100:void setImageResource(int) -> setImageResource
    115:120:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    128:134:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    179:183:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    69:69:void <init>(android.content.Context) -> <init>
    73:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    268:273:void drawableStateChanged() -> drawableStateChanged
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    234:235:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    262:263:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    279:279:boolean hasOverlappingRendering() -> hasOverlappingRendering
    148:150:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    140:142:void setBackgroundResource(int) -> setBackgroundResource
    124:126:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    108:117:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    284:285:void setImageLevel(int) -> setImageLevel
    100:102:void setImageResource(int) -> setImageResource
    132:134:void setImageURI(android.net.Uri) -> setImageURI
    163:164:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:192:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:220:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    247:248:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    64:64:void <clinit>() -> <clinit>
    79:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:231:void drawableStateChanged() -> drawableStateChanged
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    304:304:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    347:347:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:143:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:164:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:156:void setBackgroundResource(int) -> setBackgroundResource
    274:276:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    284:286:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    149:149:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    263:263:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    258:258:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:178:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:206:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    327:328:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    367:368:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:239:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    41:41:void <clinit>() -> <clinit>
    50:51:void <init>(android.widget.ProgressBar) -> <init>
    147:148:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    152:152:android.graphics.Bitmap getSampleTile() -> getSampleTile
    55:68:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:116:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    129:140:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl -> androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl:
    165:173:void transferLayerProperties(android.graphics.drawable.LayerDrawable,android.graphics.drawable.LayerDrawable,int) -> transferLayerProperties
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:91:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    250:255:void drawableStateChanged() -> drawableStateChanged
    120:122:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    99:102:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    200:201:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    228:229:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    146:147:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    171:172:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    313:313:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    356:356:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    266:267:void setAllCaps(boolean) -> setAllCaps
    234:236:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    242:244:void setBackgroundResource(int) -> setBackgroundResource
    107:109:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    115:115:void setButtonDrawable(int) -> setButtonDrawable
    283:285:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    293:295:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    272:272:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    261:261:void setFilters(android.text.InputFilter[]) -> setFilters
    185:186:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    213:214:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    133:134:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    158:159:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    336:337:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    376:377:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.AppCompatReceiveContentHelper:
    85:111:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent) -> maybeHandleDragEventViaPerformReceiveContent
    59:71:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int) -> maybeHandleMenuActionViaPerformReceiveContent
    158:163:android.app.Activity tryGetActivity(android.view.View) -> tryGetActivity
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl:
    123:133:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDropForTextView
    140:143:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity) -> onDropForView
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:67:void drawableStateChanged() -> drawableStateChanged
    72:73:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    60:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:43:void <init>(android.widget.SeekBar) -> <init>
    128:142:void applyTickMarkTint() -> applyTickMarkTint
    165:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:157:void drawableStateChanged() -> drawableStateChanged
    148:149:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:95:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    86:86:void <clinit>() -> <clinit>
    151:151:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    167:167:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    187:187:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    113:308:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    573:602:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    558:560:void drawableStateChanged() -> drawableStateChanged
    380:383:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    354:357:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    399:402:int getDropDownWidth() -> getDropDownWidth
    610:610:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    335:338:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    316:316:android.content.Context getPopupContext() -> getPopupContext
    479:479:java.lang.CharSequence getPrompt() -> getPrompt
    523:524:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    552:553:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    426:429:void onDetachedFromWindow() -> onDetachedFromWindow
    443:450:void onMeasure(int,int) -> onMeasure
    632:655:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    624:626:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    435:438:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    456:465:boolean performClick() -> performClick
    81:81:void setAdapter(android.widget.Adapter) -> setAdapter
    411:420:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    492:494:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    484:486:void setBackgroundResource(int) -> setBackgroundResource
    364:368:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    345:348:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    390:393:void setDropDownWidth(int) -> setDropDownWidth
    321:324:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    330:330:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    470:473:void setPrompt(java.lang.CharSequence) -> setPrompt
    508:509:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    537:538:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    615:615:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    271:271:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    274:274:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    280:281:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    639:639:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    642:648:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$Api16Impl -> androidx.appcompat.widget.AppCompatSpinner$Api16Impl:
    1176:1176:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
androidx.appcompat.widget.AppCompatSpinner$Api17Impl -> androidx.appcompat.widget.AppCompatSpinner$Api17Impl:
    1146:1146:int getTextAlignment(android.view.View) -> getTextAlignment
    1156:1156:int getTextDirection(android.view.View) -> getTextDirection
    1151:1151:void setTextAlignment(android.view.View,int) -> setTextAlignment
    1161:1161:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.appcompat.widget.AppCompatSpinner$Api23Impl -> androidx.appcompat.widget.AppCompatSpinner$Api23Impl:
    1132:1133:void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    863:863:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    871:873:void dismiss() -> dismiss
    894:894:java.lang.CharSequence getHintText() -> getHintText
    879:879:boolean isShowing() -> isShowing
    918:922:void onClick(android.content.DialogInterface,int) -> onClick
    884:884:void setAdapter(android.widget.ListAdapter) -> setAdapter
    927:927:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    937:937:void setHorizontalOffset(int) -> setHorizontalOffset
    957:957:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    889:889:void setPromptText(java.lang.CharSequence) -> setPromptText
    932:932:void setVerticalOffset(int) -> setVerticalOffset
    899:913:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    710:726:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    783:785:boolean areAllItemsEnabled() -> areAllItemsEnabled
    734:734:int getCount() -> getCount
    754:755:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    739:739:java.lang.Object getItem(int) -> getItem
    744:744:long getItemId(int) -> getItemId
    749:749:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    760:760:boolean hasStableIds() -> hasStableIds
    817:817:boolean isEmpty() -> isEmpty
    797:799:boolean isEnabled(int) -> isEnabled
    765:766:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    772:773:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    970:980:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    967:967:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1011:1045:void computeContentWidth() -> computeContentWidth
    1001:1001:java.lang.CharSequence getHintText() -> getHintText
    1117:1117:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1107:1107:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    995:996:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1112:1112:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1007:1007:void setPromptText(java.lang.CharSequence) -> setPromptText
    1050:1091:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    980:980:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    983:988:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1079:1086:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1091:1091:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1094:1096:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    678:678:void <clinit>() -> <clinit>
    664:664:void <init>(android.os.Parcelable) -> <init>
    668:669:void <init>(android.os.Parcel) -> <init>
    674:675:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    679:679:void <init>() -> <init>
    679:679:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    682:682:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    679:679:java.lang.Object[] newArray(int) -> newArray
    687:687:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    43:44:void <init>(android.widget.TextView) -> <init>
    63:64:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    52:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl:
    79:83:android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView) -> getTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    75:82:void <init>(android.widget.TextView) -> <init>
    545:545:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    526:538:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    582:582:void autoSizeText() -> autoSizeText
    551:555:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    627:627:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    623:623:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    619:619:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    631:631:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    615:615:int getAutoSizeTextType() -> getAutoSizeTextType
    636:636:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    650:650:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    588:588:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    87:340:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    440:453:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    564:565:void onLayout(boolean,int,int,int,int) -> onLayout
    522:522:void onSetCompoundDrawables() -> onSetCompoundDrawables
    460:513:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    721:722:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    518:518:void setAllCaps(boolean) -> setAllCaps
    604:604:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    610:610:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    596:596:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    640:645:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    654:659:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    676:700:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    663:668:void setCompoundTints() -> setCompoundTints
    572:574:void setTextSize(int,float) -> setTextSize
    592:592:void setTextSizeInternal(int,float) -> setTextSizeInternal
    345:432:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    365:365:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    368:374:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
    446:446:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    449:449:void run() -> run
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api17Impl:
    793:793:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:788:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    782:782:void setTextLocale(android.widget.TextView,java.util.Locale) -> setTextLocale
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api21Impl:
    805:805:java.util.Locale forLanguageTag(java.lang.String) -> forLanguageTag
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api24Impl:
    770:770:android.os.LocaleList forLanguageTags(java.lang.String) -> forLanguageTags
    765:765:void setTextLocales(android.widget.TextView,android.os.LocaleList) -> setTextLocales
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl:
    739:739:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    746:746:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    753:753:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    734:734:boolean setFontVariationSettings(android.widget.TextView,java.lang.String) -> setFontVariationSettings
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api28Impl:
    818:818:android.graphics.Typeface create(android.graphics.Typeface,int,boolean) -> create
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    99:99:void <init>(android.content.Context) -> <init>
    103:103:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:122:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    538:542:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    240:245:void drawableStateChanged() -> drawableStateChanged
    412:416:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    393:397:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    374:378:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    431:435:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    353:359:int getAutoSizeTextType() -> getAutoSizeTextType
    497:498:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    131:134:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    470:470:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    475:475:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    177:178:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    205:206:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    690:690:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    733:733:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    551:552:java.lang.CharSequence getText() -> getText
    579:582:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    510:510:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    443:445:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    251:253:void onLayout(boolean,int,int,int,int) -> onLayout
    606:607:void onMeasure(int,int) -> onMeasure
    270:272:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    224:225:void setAllCaps(boolean) -> setAllCaps
    310:315:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    332:336:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    287:291:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    147:149:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    139:141:void setBackgroundResource(int) -> setBackgroundResource
    613:615:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    623:625:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    655:657:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    665:672:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    632:634:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    640:647:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    490:491:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    230:230:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    219:219:void setFilters(android.text.InputFilter[]) -> setFilters
    450:453:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    460:463:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    480:480:void setLineHeight(int) -> setLineHeight
    534:534:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    162:163:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    190:191:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    713:714:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    753:754:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    211:213:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    561:565:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    598:600:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    521:521:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    259:263:void setTextSize(int,float) -> setTextSize
    759:776:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    66:81:void <clinit>() -> <clinit>
    89:162:void <init>(android.widget.TextView) -> <init>
    605:638:void autoSizeText() -> autoSizeText
    512:534:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    642:647:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    741:745:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    699:719:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    469:469:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    453:453:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    437:437:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    482:482:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    423:423:int getAutoSizeTextType() -> getAutoSizeTextType
    846:858:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    724:730:void initTempTextPaint(int) -> initTempTextPaint
    813:822:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    890:890:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    171:243:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    330:343:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    373:400:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    263:289:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    661:689:void setRawTextSize(float) -> setRawTextSize
    653:657:void setTextSizeInternal(int,float) -> setTextSizeInternal
    575:595:boolean setupAutoSizeText() -> setupAutoSizeText
    486:494:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    499:505:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    753:777:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    899:899:boolean supportsAutoSizeText() -> supportsAutoSizeText
    551:571:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl:
    975:981:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint) -> createStaticLayoutForMeasuring
    963:963:int getMaxLines(android.widget.TextView) -> getMaxLines
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl:
    951:951:boolean isInLayout(android.view.View) -> isInLayout
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl:
    919:939:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl) -> createStaticLayoutForMeasuring
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    114:114:void <init>() -> <init>
    117:117:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    126:126:void <init>() -> <init>
    131:134:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    140:140:void <init>() -> <init>
    150:150:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    144:144:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    162:167:void drawableStateChanged() -> drawableStateChanged
    183:186:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    128:129:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    156:157:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    238:238:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    281:281:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    191:192:void setAllCaps(boolean) -> setAllCaps
    98:100:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    90:92:void setBackgroundResource(int) -> setBackgroundResource
    208:210:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    218:220:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    197:197:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    173:173:void setFilters(android.text.InputFilter[]) -> setFilters
    113:114:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    141:142:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    261:262:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    301:302:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    50:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:157:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    186:186:boolean isStacked() -> isStacked
    79:150:void onMeasure(int,int) -> onMeasure
    68:73:void setAllowStacking(boolean) -> setAllowStacking
    165:180:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    60:60:void <init>(android.content.Context) -> <init>
    64:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:210:void onAttachedToWindow() -> onAttachedToWindow
    216:218:void onDetachedFromWindow() -> onDetachedFromWindow
    101:172:void onMeasure(int,int) -> onMeasure
    82:82:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:78:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    50:53:void <clinit>() -> <clinit>
    88:98:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    149:158:void forceDrawableStateChange(android.graphics.drawable.Drawable) -> forceDrawableStateChange
    65:74:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    167:177:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DrawableUtils$Api18Impl -> androidx.appcompat.widget.DrawableUtils$Api18Impl:
    202:230:void <clinit>() -> <clinit>
    241:258:android.graphics.Rect getOpticalInsets(android.graphics.drawable.Drawable) -> getOpticalInsets
androidx.appcompat.widget.DrawableUtils$Api29Impl -> androidx.appcompat.widget.DrawableUtils$Api29Impl:
    270:270:android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable) -> getOpticalInsets
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    57:134:void <init>(android.content.Context,boolean) -> <init>
    643:655:void clearPressedItem() -> clearPressedItem
    555:556:void clickPressedItem(android.view.View,int) -> clickPressedItem
    208:211:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    578:582:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    194:201:void drawableStateChanged() -> drawableStateChanged
    172:172:boolean hasFocus() -> hasFocus
    152:152:boolean hasWindowFocus() -> hasWindowFocus
    162:162:boolean isFocused() -> isFocused
    142:142:boolean isInTouchMode() -> isInTouchMode
    298:355:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    484:485:void onDetachedFromWindow() -> onDetachedFromWindow
    498:544:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    436:476:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    216:225:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    618:638:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    599:612:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    588:592:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    567:567:void setListSelectionHidden(boolean) -> setListSelectionHidden
    660:703:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    177:188:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    379:380:void setSelectorEnabled(boolean) -> setSelectorEnabled
    707:707:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    571:573:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$Api21Impl -> androidx.appcompat.widget.DropDownListView$Api21Impl:
    803:803:void drawableHotspotChanged(android.view.View,float,float) -> drawableHotspotChanged
androidx.appcompat.widget.DropDownListView$Api30Impl -> androidx.appcompat.widget.DropDownListView$Api30Impl:
    744:756:void <clinit>() -> <clinit>
    769:769:boolean canPositionSelectorForHoveredItem() -> canPositionSelectorForHoveredItem
    784:790:void positionSelectorForHoveredItem(androidx.appcompat.widget.DropDownListView,int,android.view.View) -> positionSelectorForHoveredItem
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    388:389:void <init>(android.graphics.drawable.Drawable) -> <init>
    406:407:void draw(android.graphics.Canvas) -> draw
    393:393:void setEnabled(boolean) -> setEnabled
    413:414:void setHotspot(float,float) -> setHotspot
    420:421:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    398:399:boolean setState(int[]) -> setState
    427:428:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    714:714:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    725:726:void cancel() -> cancel
    730:730:void post() -> post
    720:721:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:208:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    153:153:void <init>(android.content.Context) -> <init>
    157:157:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:196:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1781:1781:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    342:378:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    315:337:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    383:385:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    389:391:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1341:1356:void forceUniformHeight(int,int) -> forceUniformHeight
    919:934:void forceUniformWidth(int,int) -> forceUniformWidth
    61:61:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1764:1767:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1751:1751:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1774:1774:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    445:493:int getBaseline() -> getBaseline
    503:503:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    240:240:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerPadding() -> getDividerPadding
    298:298:int getDividerWidth() -> getDividerWidth
    1730:1730:int getGravity() -> getGravity
    1695:1695:int getOrientation() -> getOrientation
    230:230:int getShowDividers() -> getShowDividers
    528:528:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    541:541:int getVirtualChildCount() -> getVirtualChildCount
    553:553:float getWeightSum() -> getWeightSum
    591:597:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1545:1663:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1450:1527:void layoutVertical(int,int,int,int) -> layoutVertical
    1401:1401:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    952:1333:void measureHorizontal(int,int) -> measureHorizontal
    619:913:void measureVertical(int,int) -> measureVertical
    303:310:void onDraw(android.graphics.Canvas) -> onDraw
    1786:1787:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1792:1793:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1430:1433:void onLayout(boolean,int,int,int,int) -> onLayout
    574:577:void onMeasure(int,int) -> onMeasure
    413:413:void setBaselineAligned(boolean) -> setBaselineAligned
    511:515:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1669:1669:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    251:263:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    276:276:void setDividerPadding(int) -> setDividerPadding
    1707:1717:void setGravity(int) -> setGravity
    1735:1737:void setHorizontalGravity(int) -> setHorizontalGravity
    440:440:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1678:1680:void setOrientation(int) -> setOrientation
    207:210:void setShowDividers(int) -> setShowDividers
    1743:1745:void setVerticalGravity(int) -> setVerticalGravity
    569:569:void setWeightSum(float) -> setWeightSum
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1805:1805:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1812:1812:void <init>(int,int) -> <init>
    1833:1833:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    87:108:void <clinit>() -> <clinit>
    227:227:void <init>(android.content.Context) -> <init>
    251:251:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    118:280:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1161:1328:int buildDropDown() -> buildDropDown
    849:854:void clearListSelection() -> clearListSelection
    953:953:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    775:779:void dismiss() -> dismiss
    463:463:android.view.View getAnchorView() -> getAnchorView
    426:426:android.graphics.drawable.Drawable getBackground() -> getBackground
    480:480:int getHorizontalOffset() -> getHorizontalOffset
    949:949:android.widget.ListView getListView() -> getListView
    1448:1460:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    898:901:java.lang.Object getSelectedItem() -> getSelectedItem
    924:927:long getSelectedItemId() -> getSelectedItemId
    911:914:int getSelectedItemPosition() -> getSelectedItemPosition
    937:940:android.view.View getSelectedView() -> getSelectedView
    496:499:int getVerticalOffset() -> getVerticalOffset
    548:548:int getWidth() -> getWidth
    871:871:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    348:348:boolean isModal() -> isModal
    863:863:boolean isShowing() -> isShowing
    792:796:void removePromptView() -> removePromptView
    290:301:void setAdapter(android.widget.ListAdapter) -> setAdapter
    473:473:void setAnchorView(android.view.View) -> setAnchorView
    444:444:void setAnimationStyle(int) -> setAnimationStyle
    435:435:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    568:573:void setContentWidth(int) -> setContentWidth
    541:541:void setDropDownGravity(int) -> setDropDownGravity
    520:520:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    489:489:void setHorizontalOffset(int) -> setHorizontalOffset
    814:814:void setInputMethodMode(int) -> setInputMethodMode
    338:339:void setModal(boolean) -> setModal
    788:788:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    622:622:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1341:1342:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1434:1443:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    315:315:void setPromptPosition(int) -> setPromptPosition
    833:839:void setSelection(int) -> setSelection
    508:509:void setVerticalOffset(int) -> setVerticalOffset
    558:558:void setWidth(int) -> setWidth
    666:765:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1170:1170:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1174:1176:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1189:1189:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1195:1198:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.ListPopupWindow$Api24Impl -> androidx.appcompat.widget.ListPopupWindow$Api24Impl:
    1491:1491:int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean) -> getMaxAvailableHeight
androidx.appcompat.widget.ListPopupWindow$Api29Impl -> androidx.appcompat.widget.ListPopupWindow$Api29Impl:
    1473:1473:void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect) -> setEpicenterBounds
    1478:1478:void setIsClippedToScreen(android.widget.PopupWindow,boolean) -> setIsClippedToScreen
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1364:1364:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1369:1369:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1346:1346:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1351:1353:void onChanged() -> onChanged
    1359:1359:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1410:1410:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1421:1424:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1389:1389:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1394:1403:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1374:1374:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1379:1383:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    63:68:void <clinit>() -> <clinit>
    76:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    82:83:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    124:125:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    132:133:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    88:89:void setEnterTransition(java.lang.Object) -> setEnterTransition
    94:95:void setExitTransition(java.lang.Object) -> setExitTransition
    100:100:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    108:117:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$Api23Impl -> androidx.appcompat.widget.MenuPopupWindow$Api23Impl:
    269:269:void setEnterTransition(android.widget.PopupWindow,android.transition.Transition) -> setEnterTransition
    274:274:void setExitTransition(android.widget.PopupWindow,android.transition.Transition) -> setExitTransition
androidx.appcompat.widget.MenuPopupWindow$Api29Impl -> androidx.appcompat.widget.MenuPopupWindow$Api29Impl:
    286:286:void setTouchModal(android.widget.PopupWindow,boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    149:159:void <init>(android.content.Context,boolean) -> <init>
    140:140:boolean hasFocus() -> hasFocus
    140:140:boolean hasWindowFocus() -> hasWindowFocus
    140:140:boolean isFocused() -> isFocused
    140:140:boolean isInTouchMode() -> isInTouchMode
    140:140:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    140:140:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    203:244:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    173:197:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    140:140:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    164:164:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    140:140:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl:
    255:255:int getLayoutDirection(android.content.res.Configuration) -> getLayoutDirection
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    87:117:void <clinit>() -> <clinit>
    63:123:void <init>() -> <init>
    372:375:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    341:351:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    407:415:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    499:509:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    172:172:long createCacheKey(android.util.TypedValue) -> createCacheKey
    177:197:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    480:481:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    98:102:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    320:336:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    142:160:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    487:495:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    384:394:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    398:400:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    379:379:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    109:113:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    515:516:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    234:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    164:169:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    356:363:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    133:134:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    205:223:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    441:471:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    368:368:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    553:553:void <init>() -> <init>
    559:561:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    537:537:void <init>() -> <init>
    545:547:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    421:421:void <init>(int) -> <init>
    435:435:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    425:425:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    429:429:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate:
    567:567:void <init>() -> <init>
    571:586:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    520:520:void <init>() -> <init>
    528:530:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    50:51:void <init>(android.content.res.Resources) -> <init>
    209:209:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    194:194:boolean getBoolean(int) -> getBoolean
    183:183:int getColor(int) -> getColor
    189:189:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    272:272:android.content.res.Configuration getConfiguration() -> getConfiguration
    112:112:float getDimension(int) -> getDimension
    117:117:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    122:122:int getDimensionPixelSize(int) -> getDimensionPixelSize
    267:267:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    155:155:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    149:149:android.graphics.drawable.Drawable getDrawableCanonical(int) -> getDrawableCanonical
    165:165:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    171:171:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    127:127:float getFraction(int,int,int) -> getFraction
    277:277:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    102:102:int[] getIntArray(int) -> getIntArray
    199:199:int getInteger(int) -> getInteger
    204:204:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    177:177:android.graphics.Movie getMovie(int) -> getMovie
    77:77:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    82:82:java.lang.String getQuantityString(int,int) -> getQuantityString
    61:61:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    297:297:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    282:282:java.lang.String getResourceName(int) -> getResourceName
    287:287:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    292:292:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    66:66:java.lang.String getString(int) -> getString
    71:71:java.lang.String getString(int,java.lang.Object[]) -> getString
    97:97:java.lang.String[] getStringArray(int) -> getStringArray
    56:56:java.lang.CharSequence getText(int) -> getText
    87:87:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    92:92:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    235:235:void getValue(int,android.util.TypedValue,boolean) -> getValue
    248:248:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    242:242:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    214:214:android.content.res.XmlResourceParser getXml(int) -> getXml
    253:253:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    107:107:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    219:219:java.io.InputStream openRawResource(int) -> openRawResource
    224:224:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    229:229:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    309:309:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    303:303:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    259:261:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    78:78:void <clinit>() -> <clinit>
    261:273:void animateToTab(int) -> animateToTab
    215:220:android.widget.Spinner createSpinner() -> createSpinner
    294:305:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    147:147:boolean isCollapsed() -> isCollapsed
    278:281:void onAttachedToWindow() -> onAttachedToWindow
    226:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    287:289:void onDetachedFromWindow() -> onDetachedFromWindow
    372:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    98:137:void onMeasure(int,int) -> onMeasure
    155:170:void performCollapse() -> performCollapse
    174:179:boolean performExpand() -> performExpand
    151:151:void setAllowCollapse(boolean) -> setAllowCollapse
    200:201:void setContentHeight(int) -> setContentHeight
    184:195:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    265:265:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    268:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    527:527:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    532:532:int getCount() -> getCount
    537:537:java.lang.Object getItem(int) -> getItem
    548:550:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    557:557:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    562:567:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    382:410:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    414:415:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    522:522:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    429:431:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    436:439:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    444:448:void onMeasure(int,int) -> onMeasure
    420:423:void setSelected(boolean) -> setSelected
    454:517:void update() -> update
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    181:181:void <clinit>() -> <clinit>
    272:272:void <init>(android.content.Context) -> <init>
    276:276:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:1729:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1380:1399:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    505:509:void clearFocus() -> clearFocus
    1553:1575:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1672:1706:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1598:1651:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1583:1586:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1218:1218:void dismissSuggestions() -> dismissSuggestions
    1713:1717:void forceSuggestionQuery() -> forceSuggestionQuery
    862:866:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1104:1113:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    460:460:int getImeOptions() -> getImeOptions
    482:482:int getInputType() -> getInputType
    788:788:int getMaxWidth() -> getMaxWidth
    875:876:int getPreferredHeight() -> getPreferredHeight
    870:871:int getPreferredWidth() -> getPreferredWidth
    567:567:java.lang.CharSequence getQuery() -> getQuery
    628:633:java.lang.CharSequence getQueryHint() -> getQueryHint
    401:401:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    397:397:int getSuggestionRowLayout() -> getSuggestionRowLayout
    765:765:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    904:912:boolean hasVoiceSearch() -> hasVoiceSearch
    693:693:boolean isIconified() -> isIconified
    1722:1722:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    921:921:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1516:1518:void launchIntent(android.content.Intent) -> launchIntent
    1533:1534:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1493:1499:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1295:1299:void onActionViewCollapsed() -> onActionViewCollapsed
    1307:1313:void onActionViewExpanded() -> onActionViewExpanded
    1222:1236:void onCloseClicked() -> onCloseClicked
    975:977:void onDetachedFromWindow() -> onDetachedFromWindow
    1404:1408:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1415:1417:boolean onItemSelected(int) -> onItemSelected
    843:856:void onLayout(boolean,int,int,int,int) -> onLayout
    794:838:void onMeasure(int,int) -> onMeasure
    989:989:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1369:1376:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1361:1363:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1242:1246:void onSearchClicked() -> onSearchClicked
    1204:1212:void onSubmitQuery() -> onSubmitQuery
    1059:1092:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1190:1200:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1274:1279:void onTextFocusChanged() -> onTextFocusChanged
    1252:1269:void onVoiceClicked() -> onVoiceClicked
    1285:1287:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    956:956:void postUpdateFocusedState() -> postUpdateFocusedState
    488:499:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1460:1478:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    436:436:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    680:682:void setIconified(boolean) -> setIconified
    651:654:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    448:448:void setImeOptions(int) -> setImeOptions
    472:472:void setInputType(int) -> setInputType
    774:776:void setMaxWidth(int) -> setMaxWidth
    528:528:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    537:537:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    519:519:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    558:558:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    546:546:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    579:587:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1526:1528:void setQuery(java.lang.CharSequence) -> setQuery
    602:603:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    733:735:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    413:426:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    705:706:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    755:757:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    944:951:void updateCloseButton() -> updateCloseButton
    960:970:void updateFocusedState() -> updateFocusedState
    1118:1119:void updateQueryHint() -> updateQueryHint
    1126:1157:void updateSearchAutoComplete() -> updateSearchAutoComplete
    935:940:void updateSubmitArea() -> updateSubmitArea
    926:930:void updateSubmitButton(boolean) -> updateSubmitButton
    880:900:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1170:1174:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    183:183:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    186:186:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1729:1729:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1736:1736:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    190:190:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    193:194:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    338:338:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    341:342:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    383:383:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    387:387:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    992:992:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    995:1004:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    1014:1014:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1018:1043:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1177:1177:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1184:1184:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1423:1423:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1431:1431:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1435:1435:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1443:1443:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.SearchView$Api29Impl -> androidx.appcompat.widget.SearchView$Api29Impl:
    2136:2136:void refreshAutoCompleteResults(android.widget.AutoCompleteTextView) -> refreshAutoCompleteResults
    2131:2131:void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int) -> setInputMethodMode
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2053:2079:void <init>() -> <init>
    2096:2099:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2086:2089:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2106:2109:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2116:2117:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1341:1341:void <clinit>() -> <clinit>
    1320:1320:void <init>(android.os.Parcelable) -> <init>
    1324:1325:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1336:1337:java.lang.String toString() -> toString
    1330:1331:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1341:1341:void <init>() -> <init>
    1341:1341:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1341:1341:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1344:1344:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1349:1349:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1341:1341:java.lang.Object[] newArray(int) -> newArray
    1354:1354:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1862:1862:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1867:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1947:1947:boolean enoughToFilter() -> enoughToFilter
    2041:2047:void ensureImeVisible() -> ensureImeVisible
    1980:1984:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1892:1892:boolean isEmpty() -> isEmpty
    1999:2002:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1872:1875:void onFinishInflate() -> onFinishInflate
    1937:1938:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1955:1973:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1919:1930:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    2018:2037:void setImeVisibility(boolean) -> setImeVisibility
    1879:1879:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1884:1885:void setThreshold(int) -> setThreshold
    2008:2012:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1850:1850:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1853:1853:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1776:1782:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1794:1833:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1786:1789:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    73:103:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    273:321:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    215:233:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    418:431:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    334:344:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:659:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:633:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:574:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:537:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:480:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    739:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    683:685:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:457:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    242:247:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    179:181:void notifyDataSetChanged() -> notifyDataSetChanged
    187:189:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    327:329:void onClick(android.view.View) -> onClick
    144:163:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    116:116:void setQueryRefinement(int) -> setQueryRefinement
    387:400:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:356:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    592:592:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    193:202:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    262:267:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    120:212:void <clinit>() -> <clinit>
    233:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    134:331:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1140:1145:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    753:767:void applyThumbTint() -> applyThumbTint
    624:638:void applyTrackTint() -> applyTrackTint
    1149:1150:void cancelPositionAnimator() -> cancelPositionAnimator
    1099:1102:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    876:878:java.lang.CharSequence doTransformForOnOffText(java.lang.CharSequence) -> doTransformForOnOffText
    1262:1322:void draw(android.graphics.Canvas) -> draw
    1483:1491:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1460:1476:void drawableStateChanged() -> drawableStateChanged
    1392:1397:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1404:1409:int getCompoundPaddingRight() -> getCompoundPaddingRight
    1557:1558:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    1614:1617:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    909:909:boolean getShowText() -> getShowText
    793:793:boolean getSplitTrack() -> getSplitTrack
    492:492:int getSwitchMinWidth() -> getSwitchMinWidth
    466:466:int getSwitchPadding() -> getSwitchPadding
    1155:1155:boolean getTargetCheckedState() -> getTargetCheckedState
    842:842:java.lang.CharSequence getTextOff() -> getTextOff
    803:803:java.lang.CharSequence getTextOn() -> getTextOn
    684:684:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1422:1427:int getThumbOffset() -> getThumbOffset
    1163:1163:float getThumbPosition() -> getThumbPosition
    1431:1442:int getThumbScrollRange() -> getThumbScrollRange
    516:516:int getThumbTextPadding() -> getThumbTextPadding
    717:717:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    749:749:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    557:557:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    589:589:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    620:620:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    1003:1015:boolean hitThumb(float,float) -> hitThumb
    1502:1514:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    993:995:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1451:1453:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1327:1387:void onDraw(android.graphics.Canvas) -> onDraw
    1665:1667:void onEmojiCompatInitializedForSwitchText() -> onEmojiCompatInitializedForSwitchText
    1520:1521:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1526:1537:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1206:1257:void onLayout(boolean,int,int,int,int) -> onLayout
    914:978:void onMeasure(int,int) -> onMeasure
    984:988:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1021:1095:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1599:1600:void setAllCaps(boolean) -> setAllCaps
    1183:1200:void setChecked(boolean) -> setChecked
    1550:1551:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    1622:1626:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    1568:1569:void setEnforceSwitchWidth(boolean) -> setEnforceSwitchWidth
    1605:1605:void setFilters(android.text.InputFilter[]) -> setFilters
    1589:1592:void setOffStateDescriptionOnRAndAbove() -> setOffStateDescriptionOnRAndAbove
    1580:1583:void setOnStateDescriptionOnRAndAbove() -> setOnStateDescriptionOnRAndAbove
    890:894:void setShowText(boolean) -> setShowText
    782:783:void setSplitTrack(boolean) -> setSplitTrack
    478:479:void setSwitchMinWidth(int) -> setSwitchMinWidth
    453:454:void setSwitchPadding(int) -> setSwitchPadding
    341:379:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    410:424:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    436:441:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    386:398:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    864:869:void setTextOff(java.lang.CharSequence) -> setTextOff
    850:854:void setTextOffInternal(java.lang.CharSequence) -> setTextOffInternal
    826:831:void setTextOn(java.lang.CharSequence) -> setTextOn
    811:815:void setTextOnInternal(java.lang.CharSequence) -> setTextOnInternal
    652:659:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1172:1173:void setThumbPosition(float) -> setThumbPosition
    671:671:void setThumbResource(int) -> setThumbResource
    503:504:void setThumbTextPadding(int) -> setThumbTextPadding
    702:705:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    733:736:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    527:534:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    545:545:void setTrackResource(int) -> setTrackResource
    574:577:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    604:607:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1642:1652:void setupEmojiCompatLoadCallback() -> setupEmojiCompatLoadCallback
    1111:1135:void stopDrag(android.view.MotionEvent) -> stopDrag
    1178:1178:void toggle() -> toggle
    1497:1497:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    121:121:void <init>(java.lang.Class,java.lang.String) -> <init>
    121:121:java.lang.Object get(java.lang.Object) -> get
    124:124:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    121:121:void set(java.lang.Object,java.lang.Object) -> set
    129:129:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.SwitchCompat$Api18Impl -> androidx.appcompat.widget.SwitchCompat$Api18Impl:
    1704:1704:void setAutoCancel(android.animation.ObjectAnimator,boolean) -> setAutoCancel
androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback -> androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback:
    1674:1675:void <init>(androidx.appcompat.widget.SwitchCompat) -> <init>
    1689:1691:void onFailed(java.lang.Throwable) -> onFailed
    1681:1683:void onInitialized() -> onInitialized
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    162:175:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:146:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    68:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    159:159:boolean getBoolean(int,boolean) -> getBoolean
    171:171:int getColor(int,int) -> getColor
    175:185:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    193:193:float getDimension(int,float) -> getDimension
    197:197:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    201:201:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    81:87:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    91:94:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    167:167:float getFloat(int,float) -> getFloat
    120:127:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    163:163:int getInt(int,int) -> getInt
    189:189:int getInteger(int,int) -> getInteger
    209:209:int getLayoutDimension(int,int) -> getLayoutDimension
    217:217:int getResourceId(int,int) -> getResourceId
    151:151:java.lang.String getString(int) -> getString
    147:147:java.lang.CharSequence getText(int) -> getText
    221:221:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    77:77:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    241:241:boolean hasValue(int) -> hasValue
    55:55:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    60:61:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    65:65:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    253:253:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    246:246:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    190:366:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2296:2301:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2188:2210:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    2393:2393:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    1559:1574:void addSystemView(android.view.View,boolean) -> addSystemView
    537:537:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2270:2270:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    747:750:void collapseActionView() -> collapseActionView
    615:616:void dismissPopupMenus() -> dismissPopupMenus
    1540:1549:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2333:2334:void ensureContentInsets() -> ensureContentInsets
    717:718:void ensureLogoView() -> ensureLogoView
    1184:1192:void ensureMenu() -> ensureMenu
    1197:1205:void ensureMenuView() -> ensureMenuView
    1519:1524:void ensureNavButtonView() -> ensureNavButtonView
    154:154:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2265:2265:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    154:154:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    154:154:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2247:2247:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2252:2259:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2217:2218:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2137:2161:int getChildTop(android.view.View,int) -> getChildTop
    2176:2176:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1065:1065:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1111:1111:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1300:1300:int getContentInsetEnd() -> getContentInsetEnd
    1426:1428:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1344:1344:int getContentInsetLeft() -> getContentInsetLeft
    1365:1365:int getContentInsetRight() -> getContentInsetRight
    1279:1279:int getContentInsetStart() -> getContentInsetStart
    1382:1384:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1479:1485:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1498:1500:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1513:1515:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1464:1466:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2368:2372:java.util.ArrayList getCurrentMenuItems() -> getCurrentMenuItems
    2235:2237:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    674:674:android.graphics.drawable.Drawable getLogo() -> getLogo
    713:713:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1158:1159:android.view.Menu getMenu() -> getMenu
    1210:1210:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1536:1536:android.view.View getNavButtonView() -> getNavButtonView
    942:942:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1036:1036:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2360:2360:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1179:1180:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2364:2364:android.content.Context getPopupContext() -> getPopupContext
    395:395:int getPopupTheme() -> getPopupTheme
    818:818:java.lang.CharSequence getSubtitle() -> getSubtitle
    2353:2353:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    761:761:java.lang.CharSequence getTitle() -> getTitle
    496:496:int getTitleMarginBottom() -> getTitleMarginBottom
    473:473:int getTitleMarginEnd() -> getTitleMarginEnd
    427:427:int getTitleMarginStart() -> getTitleMarginStart
    450:450:int getTitleMarginTop() -> getTitleMarginTop
    2344:2344:android.widget.TextView getTitleTextView() -> getTitleTextView
    2241:2242:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2092:2105:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2276:2279:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    733:733:boolean hasExpandedActionView() -> hasExpandedActionView
    571:571:boolean hideOverflowMenu() -> hideOverflowMenu
    1223:1223:void inflateMenu(int) -> inflateMenu
    2426:2429:void invalidateMenu() -> invalidateMenu
    2305:2305:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    553:553:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    547:547:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2112:2119:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2125:2132:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1701:1718:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1676:1692:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    2379:2387:void onCreateMenu() -> onCreateMenu
    1620:1621:void onDetachedFromWindow() -> onDetachedFromWindow
    1655:1668:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1874:2088:void onLayout(boolean,int,int,int,int) -> onLayout
    1744:1869:void onMeasure(int,int) -> onMeasure
    1592:1609:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    514:518:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1580:1586:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1631:1644:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1614:1615:void postShowOverflowMenu() -> postShowOverflowMenu
    2283:2290:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2413:2413:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    1079:1079:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1093:1097:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1125:1125:void setCollapseIcon(int) -> setCollapseIcon
    1140:1143:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2315:2316:void setCollapsible(boolean) -> setCollapsible
    1447:1450:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1404:1407:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1257:1258:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    531:531:void setLogo(int) -> setLogo
    652:661:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    686:686:void setLogoDescription(int) -> setLogoDescription
    698:702:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    577:608:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    956:956:void setNavigationContentDescription(int) -> setNavigationContentDescription
    970:975:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    994:994:void setNavigationIcon(int) -> setNavigationIcon
    1013:1022:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1049:1050:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1235:1235:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1168:1169:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    377:382:void setPopupTheme(int) -> setPopupTheme
    829:829:void setSubtitle(int) -> setSubtitle
    840:863:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    882:884:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    915:915:void setSubtitleTextColor(int) -> setSubtitleTextColor
    924:926:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    773:773:void setTitle(int) -> setTitle
    785:808:void setTitle(java.lang.CharSequence) -> setTitle
    507:508:void setTitleMarginBottom(int) -> setTitleMarginBottom
    484:486:void setTitleMarginEnd(int) -> setTitleMarginEnd
    438:440:void setTitleMarginStart(int) -> setTitleMarginStart
    461:463:void setTitleMarginTop(int) -> setTitleMarginTop
    871:873:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    894:894:void setTitleTextColor(int) -> setTitleTextColor
    903:905:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1725:1731:boolean shouldCollapse() -> shouldCollapse
    2231:2231:boolean shouldLayout(android.view.View) -> shouldLayout
    562:562:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$0$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.f$0 -> f$0
    void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$0$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$0$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    214:214:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    217:221:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    235:235:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    237:237:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1549:1549:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1552:1552:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2557:2557:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2655:2666:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2618:2645:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2563:2566:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2577:2593:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2461:2464:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2461:2469:void <init>(int,int) -> <init>
    2461:2484:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2461:2488:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2461:2495:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2461:2499:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2503:2506:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2535:2535:void <clinit>() -> <clinit>
    2519:2521:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2525:2525:void <init>(android.os.Parcelable) -> <init>
    2530:2532:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2535:2535:void <init>() -> <init>
    2535:2535:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2535:2535:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2538:2538:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2543:2543:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2535:2535:java.lang.Object[] newArray(int) -> newArray
    2548:2548:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    338:338:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    378:378:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    383:383:int getDisplayOptions() -> getDisplayOptions
    461:461:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    358:358:boolean hideOverflowMenu() -> hideOverflowMenu
    289:289:void initIndeterminateProgress() -> initIndeterminateProgress
    284:284:void initProgress() -> initProgress
    348:348:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    343:343:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    451:451:void setCollapsible(boolean) -> setCollapsible
    543:548:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    388:417:void setDisplayOptions(int) -> setDisplayOptions
    425:435:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    304:304:void setIcon(int) -> setIcon
    309:310:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    315:315:void setLogo(int) -> setLogo
    320:321:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    368:373:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    363:363:void setMenuPrepared() -> setMenuPrepared
    623:624:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    629:629:void setNavigationContentDescription(int) -> setNavigationContentDescription
    596:597:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    276:278:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    664:664:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    569:572:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    353:353:boolean showOverflowMenu() -> showOverflowMenu
    633:637:void updateHomeAccessibility() -> updateHomeAccessibility
    614:617:void updateNavigationIcon() -> updateNavigationIcon
    326:333:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    572:573:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    589:589:void onAnimationCancel(android.view.View) -> onAnimationCancel
    582:583:void onAnimationEnd(android.view.View) -> onAnimationEnd
    577:577:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    46:49:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompat$Api26Impl -> androidx.appcompat.widget.TooltipCompat$Api26Impl:
    64:64:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    void $r8$lambda$3aFESLcagOxECyCXdU9G39Uust4(androidx.appcompat.widget.TooltipCompatHandler) -> $r8$lambda$3aFESLcagOxECyCXdU9G39Uust4
      # {"id":"com.android.tools.r8.synthesized"}
    54:107:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    217:217:void cancelPendingShow() -> cancelPendingShow
    245:245:void forceNextChangeSignificant() -> forceNextChangeSignificant
    185:199:void hide() -> hide
    54:54:void lambda$new$0() -> lambda$new$0
    120:136:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    112:114:boolean onLongClick(android.view.View) -> onLongClick
    150:150:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    213:213:void scheduleShow() -> scheduleShow
    203:208:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    84:95:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    155:181:void show(boolean) -> show
    228:235:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$0$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.f$0 -> f$0
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$0$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.<init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$0$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda1 -> androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$0$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.f$0 -> f$0
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$0$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.<init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$0$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:72:void <init>(android.content.Context) -> <init>
    105:182:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:203:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:96:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    56:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    37:37:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    37:37:boolean getBoolean(int) -> getBoolean
    37:37:int getColor(int) -> getColor
    37:37:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    37:37:android.content.res.Configuration getConfiguration() -> getConfiguration
    37:37:float getDimension(int) -> getDimension
    37:37:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    37:37:int getDimensionPixelSize(int) -> getDimensionPixelSize
    37:37:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    37:37:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    67:74:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    37:37:float getFraction(int,int,int) -> getFraction
    37:37:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    37:37:int[] getIntArray(int) -> getIntArray
    37:37:int getInteger(int) -> getInteger
    37:37:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    37:37:android.graphics.Movie getMovie(int) -> getMovie
    37:37:java.lang.String getQuantityString(int,int) -> getQuantityString
    37:37:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    37:37:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    37:37:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    37:37:java.lang.String getResourceName(int) -> getResourceName
    37:37:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    37:37:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    37:37:java.lang.String getString(int) -> getString
    37:37:java.lang.String getString(int,java.lang.Object[]) -> getString
    37:37:java.lang.String[] getStringArray(int) -> getStringArray
    37:37:java.lang.CharSequence getText(int) -> getText
    37:37:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    37:37:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    37:37:void getValue(int,android.util.TypedValue,boolean) -> getValue
    37:37:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    37:37:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    37:37:android.content.res.XmlResourceParser getXml(int) -> getXml
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    37:37:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    37:37:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    37:37:java.io.InputStream openRawResource(int) -> openRawResource
    37:37:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    37:37:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    37:37:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    37:37:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    37:37:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:151:void onMeasure(int,int) -> onMeasure
    99:99:void setInflatedId(int) -> setInflatedId
    139:139:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:131:void setLayoutResource(int) -> setLayoutResource
    250:250:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:185:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    44:50:void <clinit>() -> <clinit>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    84:94:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:76:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:50:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:57:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:151:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    184:201:boolean equals(java.lang.Object) -> equals
    46:51:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    207:209:int hashCode() -> hashCode
    140:141:java.util.Iterator iterator() -> iterator
    160:161:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:85:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:283:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:300:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:364:void <init>(java.lang.Object,java.lang.Object) -> <init>
    395:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    316:318:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:326:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:236:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:272:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:257:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    81:92:void <clinit>() -> <clinit>
    117:117:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:447:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:260:void onMeasure(int,int) -> onMeasure
    283:283:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:293:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:376:void setCardElevation(float) -> setCardElevation
    226:227:void setContentPadding(int,int,int,int) -> setContentPadding
    402:402:void setMaxCardElevation(float) -> setMaxCardElevation
    272:273:void setMinimumHeight(int) -> setMinimumHeight
    266:267:void setMinimumWidth(int) -> setMinimumWidth
    441:443:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:354:void setRadius(float) -> setRadius
    203:205:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:453:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    468:469:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    31:37:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:103:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:108:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:113:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:78:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:53:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:42:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:98:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    47:61:void <init>(android.content.res.ColorStateList,float) -> <init>
    209:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:100:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    127:127:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:122:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:189:boolean onStateChange(int[]) -> onStateChange
    141:141:void setAlpha(int) -> setAlpha
    65:66:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:160:void setColor(android.content.res.ColorStateList) -> setColor
    146:146:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:78:void setPadding(float,boolean,boolean) -> setPadding
    131:136:void setRadius(float) -> setRadius
    169:171:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:178:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    106:115:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    190:190:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    181:181:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:57:void <init>() -> <init>
    64:64:void <init>(int) -> <init>
    71:71:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:240:void <init>() -> <init>
    247:254:void <init>(int) -> <init>
    361:401:boolean add(java.lang.Object) -> add
    719:722:boolean addAll(java.util.Collection) -> addAll
    161:195:void allocArrays(int) -> allocArrays
    282:286:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:706:boolean containsAll(java.util.Collection) -> containsAll
    295:303:void ensureCapacity(int) -> ensureCapacity
    562:571:boolean equals(java.lang.Object) -> equals
    200:231:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:593:int hashCode() -> hashCode
    83:110:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:148:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    735:736:boolean removeAll(java.util.Collection) -> removeAll
    447:491:java.lang.Object removeAt(int) -> removeAt
    750:752:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:529:java.lang.Object[] toArray() -> toArray
    536:543:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:678:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:663:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:673:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    456:482:void append(long,java.lang.Object) -> append
    440:448:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    217:237:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:290:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    171:173:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:56:void <init>(int) -> <init>
    84:125:java.lang.Object get(java.lang.Object) -> get
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:58:java.lang.Object next() -> next
    64:70:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:93:java.util.Map$Entry next() -> next
    99:105:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    684:724:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:748:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:489:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:508:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:525:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:540:java.lang.Object remove(java.lang.Object) -> remove
    553:557:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:625:java.lang.Object removeAt(int) -> removeAt
    637:639:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:657:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    410:411:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    460:486:void append(int,java.lang.Object) -> append
    444:452:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    230:250:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    419:424:int indexOfValue(java.lang.Object) -> indexOfValue
    361:365:int keyAt(int) -> keyAt
    261:303:void put(int,java.lang.Object) -> put
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.constraintlayout.core.ArrayLinkedVariables -> androidx.constraintlayout.core.ArrayLinkedVariables:
    43:103:void <init>(androidx.constraintlayout.core.ArrayRow,androidx.constraintlayout.core.Cache) -> <init>
    226:338:void add(androidx.constraintlayout.core.SolverVariable,float,boolean) -> add
    409:422:void clear() -> clear
    432:441:boolean contains(androidx.constraintlayout.core.SolverVariable) -> contains
    500:504:void divideByAmount(float) -> divideByAmount
    593:599:float get(androidx.constraintlayout.core.SolverVariable) -> get
    509:509:int getCurrentSize() -> getCurrentSize
    558:564:androidx.constraintlayout.core.SolverVariable getVariable(int) -> getVariable
    576:582:float getVariableValue(int) -> getVariableValue
    485:489:void invert() -> invert
    119:212:void put(androidx.constraintlayout.core.SolverVariable,float) -> put
    369:400:float remove(androidx.constraintlayout.core.SolverVariable,boolean) -> remove
    634:640:java.lang.String toString() -> toString
    349:356:float use(androidx.constraintlayout.core.ArrayRow,boolean) -> use
androidx.constraintlayout.core.ArrayRow -> androidx.constraintlayout.core.ArrayRow:
    26:55:void <init>() -> <init>
    26:58:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    349:350:androidx.constraintlayout.core.ArrayRow addError(androidx.constraintlayout.core.LinearSystem,int) -> addError
    691:702:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
    178:178:androidx.constraintlayout.core.ArrayRow addSingleError(androidx.constraintlayout.core.SolverVariable,int) -> addSingleError
    432:440:boolean chooseSubject(androidx.constraintlayout.core.LinearSystem) -> chooseSubject
    464:492:androidx.constraintlayout.core.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.core.LinearSystem) -> chooseSubjectInVariables
    665:667:void clear() -> clear
    307:342:androidx.constraintlayout.core.ArrayRow createRowCentering(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowCentering
    139:142:androidx.constraintlayout.core.ArrayRow createRowDefinition(androidx.constraintlayout.core.SolverVariable,int) -> createRowDefinition
    356:357:androidx.constraintlayout.core.ArrayRow createRowDimensionPercent(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionPercent
    375:378:androidx.constraintlayout.core.ArrayRow createRowDimensionRatio(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionRatio
    240:265:androidx.constraintlayout.core.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable) -> createRowEqualMatchDimensions
    148:152:androidx.constraintlayout.core.ArrayRow createRowEquals(androidx.constraintlayout.core.SolverVariable,int) -> createRowEquals
    165:172:androidx.constraintlayout.core.ArrayRow createRowEquals(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowEquals
    192:201:androidx.constraintlayout.core.ArrayRow createRowGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowGreaterThan
    221:230:androidx.constraintlayout.core.ArrayRow createRowLowerThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowLowerThan
    393:397:androidx.constraintlayout.core.ArrayRow createRowWithAngle(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowWithAngle
    415:418:void ensurePositiveConstant() -> ensurePositiveConstant
    707:707:androidx.constraintlayout.core.SolverVariable getKey() -> getKey
    660:660:androidx.constraintlayout.core.SolverVariable getPivotCandidate(androidx.constraintlayout.core.LinearSystem,boolean[]) -> getPivotCandidate
    63:63:boolean hasKeyVariable() -> hasKeyVariable
    135:135:boolean hasVariable(androidx.constraintlayout.core.SolverVariable) -> hasVariable
    676:683:void initFromRow(androidx.constraintlayout.core.LinearSystem$Row) -> initFromRow
    556:556:boolean isEmpty() -> isEmpty
    532:532:boolean isNew(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.LinearSystem) -> isNew
    655:655:androidx.constraintlayout.core.SolverVariable pickPivot(androidx.constraintlayout.core.SolverVariable) -> pickPivot
    616:625:androidx.constraintlayout.core.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.core.SolverVariable) -> pickPivotInVariables
    536:549:void pivot(androidx.constraintlayout.core.SolverVariable) -> pivot
    128:131:void reset() -> reset
    76:119:java.lang.String toReadableString() -> toReadableString
    71:71:java.lang.String toString() -> toString
    575:587:void updateFromFinalVariable(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,boolean) -> updateFromFinalVariable
    561:570:void updateFromRow(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow,boolean) -> updateFromRow
    592:605:void updateFromSynonymVariable(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,boolean) -> updateFromSynonymVariable
    712:745:void updateFromSystem(androidx.constraintlayout.core.LinearSystem) -> updateFromSystem
androidx.constraintlayout.core.Cache -> androidx.constraintlayout.core.Cache:
    21:25:void <init>() -> <init>
androidx.constraintlayout.core.LinearSystem -> androidx.constraintlayout.core.LinearSystem:
    48:102:void <init>() -> <init>
    370:382:androidx.constraintlayout.core.SolverVariable acquireSolverVariable(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1445:1462:void addCenterPoint(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1288:1293:void addCentering(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addCentering
    562:634:void addConstraint(androidx.constraintlayout.core.ArrayRow) -> addConstraint
    1336:1367:androidx.constraintlayout.core.ArrayRow addEquality(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addEquality
    1377:1411:void addEquality(androidx.constraintlayout.core.SolverVariable,int) -> addEquality
    1229:1233:void addGreaterBarrier(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,boolean) -> addGreaterBarrier
    1214:1222:void addGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addGreaterThan
    1262:1266:void addLowerBarrier(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,boolean) -> addLowerBarrier
    1247:1255:void addLowerThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addLowerThan
    1300:1305:void addRatio(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float,int) -> addRatio
    639:682:void addRow(androidx.constraintlayout.core.ArrayRow) -> addRow
    323:324:void addSingleError(androidx.constraintlayout.core.ArrayRow,int,int) -> addSingleError
    1036:1038:void computeValues() -> computeValues
    351:360:androidx.constraintlayout.core.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    294:301:androidx.constraintlayout.core.SolverVariable createExtraVariable() -> createExtraVariable
    223:243:androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    254:271:androidx.constraintlayout.core.ArrayRow createRow() -> createRow
    1430:1431:androidx.constraintlayout.core.ArrayRow createRowDimensionPercent(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionPercent
    279:286:androidx.constraintlayout.core.SolverVariable createSlackVariable() -> createSlackVariable
    879:997:int enforceBFS(androidx.constraintlayout.core.LinearSystem$Row) -> enforceBFS
    1171:1171:androidx.constraintlayout.core.Cache getCache() -> getCache
    409:417:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    140:145:void increaseTableSize() -> increaseTableSize
    451:482:void minimize() -> minimize
    509:519:void minimizeGoal(androidx.constraintlayout.core.LinearSystem$Row) -> minimizeGoal
    721:826:int optimize(androidx.constraintlayout.core.LinearSystem$Row,boolean) -> optimize
    157:171:void releaseRows() -> releaseRows
    185:211:void reset() -> reset
androidx.constraintlayout.core.LinearSystem$ValuesRow -> androidx.constraintlayout.core.LinearSystem$ValuesRow:
    89:90:void <init>(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.Cache) -> <init>
androidx.constraintlayout.core.Pools$SimplePool -> androidx.constraintlayout.core.Pools$SimplePool:
    96:100:void <init>(int) -> <init>
    106:110:java.lang.Object acquire() -> acquire
    123:125:boolean release(java.lang.Object) -> release
    133:145:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.core.PriorityGoalRow -> androidx.constraintlayout.core.PriorityGoalRow:
    29:155:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    25:25:void access$000(androidx.constraintlayout.core.PriorityGoalRow,androidx.constraintlayout.core.SolverVariable) -> access$000
    190:193:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
    197:220:void addToGoal(androidx.constraintlayout.core.SolverVariable) -> addToGoal
    147:148:void clear() -> clear
    168:185:androidx.constraintlayout.core.SolverVariable getPivotCandidate(androidx.constraintlayout.core.LinearSystem,boolean[]) -> getPivotCandidate
    160:160:boolean isEmpty() -> isEmpty
    224:230:void removeGoal(androidx.constraintlayout.core.SolverVariable) -> removeGoal
    260:264:java.lang.String toString() -> toString
    238:254:void updateFromRow(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.core.PriorityGoalRow$1 -> androidx.constraintlayout.core.PriorityGoalRow$1:
    208:208:void <init>(androidx.constraintlayout.core.PriorityGoalRow) -> <init>
    208:208:int compare(java.lang.Object,java.lang.Object) -> compare
    211:211:int compare(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable) -> compare
androidx.constraintlayout.core.PriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.core.PriorityGoalRow$GoalVariableAccessor:
    39:40:void <init>(androidx.constraintlayout.core.PriorityGoalRow,androidx.constraintlayout.core.PriorityGoalRow) -> <init>
    48:72:boolean addToGoal(androidx.constraintlayout.core.SolverVariable,float) -> addToGoal
    44:44:void init(androidx.constraintlayout.core.SolverVariable) -> init
    92:92:boolean isNegative() -> isNegative
    105:106:boolean isSmallerThan(androidx.constraintlayout.core.SolverVariable) -> isSmallerThan
    129:129:void reset() -> reset
    134:139:java.lang.String toString() -> toString
androidx.constraintlayout.core.SolverVariable -> androidx.constraintlayout.core.SolverVariable:
    53:172:void <init>(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> <init>
    178:187:void addToRow(androidx.constraintlayout.core.ArrayRow) -> addToRow
    27:27:int compareTo(java.lang.Object) -> compareTo
    300:300:int compareTo(androidx.constraintlayout.core.SolverVariable) -> compareTo
    99:99:void increaseErrorId() -> increaseErrorId
    195:201:void removeFromRow(androidx.constraintlayout.core.ArrayRow) -> removeFromRow
    257:278:void reset() -> reset
    227:237:void setFinalValue(androidx.constraintlayout.core.LinearSystem,float) -> setFinalValue
    292:292:void setType(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> setType
    318:321:java.lang.String toString() -> toString
    215:219:void updateReferencesWithNewDefinition(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.core.SolverVariable$Type -> androidx.constraintlayout.core.SolverVariable$Type:
    75:95:void <clinit>() -> <clinit>
    75:75:void <init>(java.lang.String,int) -> <init>
    75:75:androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    75:75:androidx.constraintlayout.core.SolverVariable$Type[] values() -> values
androidx.constraintlayout.core.SolverVariableValues -> androidx.constraintlayout.core.SolverVariableValues:
    29:49:void <init>(androidx.constraintlayout.core.ArrayRow,androidx.constraintlayout.core.Cache) -> <init>
    410:420:void add(androidx.constraintlayout.core.SolverVariable,float,boolean) -> add
    216:232:void addToHashMap(androidx.constraintlayout.core.SolverVariable,int) -> addToHashMap
    289:295:void addVariable(int,androidx.constraintlayout.core.SolverVariable,float) -> addVariable
    180:195:void clear() -> clear
    94:94:boolean contains(androidx.constraintlayout.core.SolverVariable) -> contains
    481:485:void divideByAmount(float) -> divideByAmount
    299:300:int findEmptySlot() -> findEmptySlot
    125:127:float get(androidx.constraintlayout.core.SolverVariable) -> get
    54:54:int getCurrentSize() -> getCurrentSize
    59:68:androidx.constraintlayout.core.SolverVariable getVariable(int) -> getVariable
    78:84:float getVariableValue(int) -> getVariableValue
    199:209:void increaseSize() -> increaseSize
    99:118:int indexOf(androidx.constraintlayout.core.SolverVariable) -> indexOf
    308:326:void insertVariable(int,androidx.constraintlayout.core.SolverVariable,float) -> insertVariable
    468:472:void invert() -> invert
    334:366:void put(androidx.constraintlayout.core.SolverVariable,float) -> put
    381:400:float remove(androidx.constraintlayout.core.SolverVariable,boolean) -> remove
    260:280:void removeFromHashMap(androidx.constraintlayout.core.SolverVariable) -> removeFromHashMap
    148:171:java.lang.String toString() -> toString
    427:458:float use(androidx.constraintlayout.core.ArrayRow,boolean) -> use
androidx.constraintlayout.core.motion.utils.Easing -> androidx.constraintlayout.core.motion.utils.Easing:
    27:43:void <clinit>() -> <clinit>
    26:28:void <init>() -> <init>
    84:84:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator:
    31:40:void <init>() -> <init>
    117:117:float get(float) -> get
    104:107:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.SplineSet -> androidx.constraintlayout.core.motion.utils.SplineSet:
    33:37:void <init>() -> <init>
    61:61:float get(float) -> get
    47:50:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet -> androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet:
    29:44:void <init>() -> <init>
    48:51:java.lang.String toString() -> toString
androidx.constraintlayout.core.state.WidgetFrame -> androidx.constraintlayout.core.state.WidgetFrame:
    34:78:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
androidx.constraintlayout.core.widgets.Barrier -> androidx.constraintlayout.core.widgets.Barrier:
    36:42:void <init>() -> <init>
    139:245:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    274:326:boolean allSolved() -> allSolved
    77:77:boolean getAllowsGoneWidget() -> getAllowsGoneWidget
    52:52:int getBarrierType() -> getBarrierType
    254:254:int getMargin() -> getMargin
    258:258:int getOrientation() -> getOrientation
    80:80:boolean isResolvedHorizontally() -> isResolvedHorizontally
    84:84:boolean isResolvedVertically() -> isResolvedVertically
    111:119:void markWidgets() -> markWidgets
    58:58:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    55:55:void setBarrierType(int) -> setBarrierType
    250:250:void setMargin(int) -> setMargin
    98:106:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.Chain -> androidx.constraintlayout.core.widgets.Chain:
    52:66:void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int) -> applyChainConstraints
    83:454:void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,int,int,androidx.constraintlayout.core.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.core.widgets.ChainHead -> androidx.constraintlayout.core.widgets.ChainHead:
    42:66:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean) -> <init>
    234:237:void define() -> define
    84:198:void defineChainProperties() -> defineChainProperties
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.core.widgets.ConstraintAnchor -> androidx.constraintlayout.core.widgets.ConstraintAnchor:
    36:133:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> <init>
    216:230:boolean connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,boolean) -> connect
    242:242:boolean connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> connect
    41:43:void findDependents(int,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> findDependents
    48:48:java.util.HashSet getDependents() -> getDependents
    75:78:int getFinalValue() -> getFinalValue
    170:177:int getMargin() -> getMargin
    490:510:androidx.constraintlayout.core.widgets.ConstraintAnchor getOpposite() -> getOpposite
    157:157:androidx.constraintlayout.core.widgets.ConstraintWidget getOwner() -> getOwner
    140:140:androidx.constraintlayout.core.SolverVariable getSolverVariable() -> getSolverVariable
    184:184:androidx.constraintlayout.core.widgets.ConstraintAnchor getTarget() -> getTarget
    163:163:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type getType() -> getType
    57:62:boolean hasCenteredDependents() -> hasCenteredDependents
    50:53:boolean hasDependents() -> hasDependents
    86:86:boolean hasFinalValue() -> hasFinalValue
    250:250:boolean isConnected() -> isConnected
    262:303:boolean isValidConnection(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> isValidConnection
    190:201:void reset() -> reset
    82:83:void resetFinalResolution() -> resetFinalResolution
    146:149:void resetSolverVariable(androidx.constraintlayout.core.Cache) -> resetSolverVariable
    70:71:void setFinalValue(int) -> setFinalValue
    376:377:void setGoneMargin(int) -> setGoneMargin
    410:410:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.core.widgets.ConstraintAnchor$1:
    270:270:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.core.widgets.ConstraintAnchor$Type:
    91:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    91:91:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.core.widgets.ConstraintWidget -> androidx.constraintlayout.core.widgets.ConstraintWidget:
    62:733:void <init>() -> <init>
    804:811:void addAnchors() -> addAnchors
    3543:3579:void addChildrenToSolverByDependency(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.HashSet,int,boolean) -> addChildrenToSolverByDependency
    2777:2777:boolean addFirst() -> addFirst
    2413:2769:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    1846:1846:boolean allowedInBarrier() -> allowedInBarrier
    2873:3340:void applyConstraints(androidx.constraintlayout.core.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    1877:1878:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> connect
    1909:2073:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int) -> connect
    885:887:void connectCircularConstraint(androidx.constraintlayout.core.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    997:1002:void createObjectVariables(androidx.constraintlayout.core.LinearSystem) -> createObjectVariables
    773:777:void ensureWidgetRuns() -> ensureWidgetRuns
    2172:2200:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> getAnchor
    1282:1282:int getBaselineDistance() -> getBaselineDistance
    1259:1261:float getBiasPercent(int) -> getBiasPercent
    1199:1199:int getBottom() -> getBottom
    1292:1292:java.lang.Object getCompanionWidget() -> getCompanionWidget
    950:950:java.lang.String getDebugName() -> getDebugName
    2229:2231:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1535:1535:float getDimensionRatio() -> getDimensionRatio
    1544:1544:int getDimensionRatioSide() -> getDimensionRatioSide
    1106:1109:int getHeight() -> getHeight
    1237:1237:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1819:1819:int getHorizontalChainStyle() -> getHorizontalChainStyle
    2209:2209:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    1207:1211:int getHorizontalMargin() -> getHorizontalMargin
    400:400:int getLastHorizontalMeasureSpec() -> getLastHorizontalMeasureSpec
    401:401:int getLastVerticalMeasureSpec() -> getLastVerticalMeasureSpec
    1120:1122:int getLength(int) -> getLength
    321:321:int getMaxHeight() -> getMaxHeight
    325:325:int getMaxWidth() -> getMaxWidth
    1163:1163:int getMinHeight() -> getMinHeight
    1154:1154:int getMinWidth() -> getMinWidth
    2295:2300:androidx.constraintlayout.core.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    829:829:androidx.constraintlayout.core.widgets.ConstraintWidget getParent() -> getParent
    2276:2281:androidx.constraintlayout.core.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    1190:1190:int getRight() -> getRight
    85:87:androidx.constraintlayout.core.widgets.analyzer.WidgetRun getRun(int) -> getRun
    3588:3630:void getSceneString(java.lang.StringBuilder) -> getSceneString
    3639:3647:void getSceneString(java.lang.StringBuilder,java.lang.String,int,int,int,int,int,int,float,float) -> getSceneString
    3650:3667:void getSceneString(java.lang.StringBuilder,java.lang.String,androidx.constraintlayout.core.widgets.ConstraintAnchor) -> getSceneString
    1247:1247:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1839:1839:int getVerticalChainStyle() -> getVerticalChainStyle
    2218:2218:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    1221:1225:int getVerticalMargin() -> getVerticalMargin
    923:923:int getVisibility() -> getVisibility
    1058:1061:int getWidth() -> getWidth
    1034:1037:int getX() -> getX
    1046:1049:int getY() -> getY
    1273:1273:boolean hasBaseline() -> hasBaseline
    228:231:boolean hasDanglingDimension(int) -> hasDanglingDimension
    217:219:boolean hasDependencies() -> hasDependencies
    722:722:boolean hasDimensionOverride() -> hasDimensionOverride
    238:247:boolean hasResolvedTargets(int,int) -> hasResolvedTargets
    1864:1866:void immediateConnect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    2386:2386:boolean isChainHead(int) -> isChainHead
    132:132:boolean isHorizontalSolvingPassDone() -> isHorizontalSolvingPassDone
    373:373:boolean isInBarrier(int) -> isInBarrier
    2261:2261:boolean isInHorizontalChain() -> isInHorizontalChain
    361:361:boolean isInPlaceholder() -> isInPlaceholder
    2342:2342:boolean isInVerticalChain() -> isInVerticalChain
    313:313:boolean isInVirtualLayout() -> isInVirtualLayout
    381:381:boolean isMeasureRequested() -> isMeasureRequested
    194:194:boolean isResolvedHorizontally() -> isResolvedHorizontally
    198:198:boolean isResolvedVertically() -> isResolvedVertically
    136:136:boolean isVerticalSolvingPassDone() -> isVerticalSolvingPassDone
    140:140:void markHorizontalSolvingPassDone() -> markHorizontalSolvingPassDone
    144:144:void markVerticalSolvingPassDone() -> markVerticalSolvingPassDone
    716:716:boolean oppositeDimensionsTied() -> oppositeDimensionsTied
    517:579:void reset() -> reset
    2152:2161:void resetAnchors() -> resetAnchors
    202:208:void resetFinalResolution() -> resetFinalResolution
    790:797:void resetSolverVariables(androidx.constraintlayout.core.Cache) -> resetSolverVariables
    617:620:void serializeAttribute(java.lang.StringBuilder,java.lang.String,float,float) -> serializeAttribute
    627:630:void serializeAttribute(java.lang.StringBuilder,java.lang.String,int,int) -> serializeAttribute
    637:643:void serializeDimensionRatio(java.lang.StringBuilder,java.lang.String,float,int) -> serializeDimensionRatio
    1745:1746:void setBaselineDistance(int) -> setBaselineDistance
    1756:1756:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    957:957:void setDebugName(java.lang.String) -> setDebugName
    1460:1512:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    181:190:void setFinalBaseline(int) -> setFinalBaseline
    148:155:void setFinalHorizontal(int,int) -> setFinalHorizontal
    117:118:void setFinalLeft(int) -> setFinalLeft
    122:123:void setFinalTop(int) -> setFinalTop
    163:173:void setFinalVertical(int,int) -> setFinalVertical
    1622:1658:void setFrame(int,int,int,int) -> setFrame
    353:353:void setHasBaseline(boolean) -> setHasBaseline
    1398:1400:void setHeight(int) -> setHeight
    1554:1554:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1809:1809:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1688:1691:void setHorizontalDimension(int,int) -> setHorizontalDimension
    2243:2243:void setHorizontalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1427:1432:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1790:1790:void setHorizontalWeight(float) -> setHorizontalWeight
    369:369:void setInBarrier(int,boolean) -> setInBarrier
    365:365:void setInPlaceholder(boolean) -> setInPlaceholder
    317:317:void setInVirtualLayout(boolean) -> setInVirtualLayout
    403:405:void setLastMeasureSpec(int,int) -> setLastMeasureSpec
    333:333:void setMaxHeight(int) -> setMaxHeight
    329:329:void setMaxWidth(int) -> setMaxWidth
    377:377:void setMeasureRequested(boolean) -> setMeasureRequested
    1587:1589:void setMinHeight(int) -> setMinHeight
    1574:1576:void setMinWidth(int) -> setMinWidth
    1329:1330:void setOrigin(int,int) -> setOrigin
    838:838:void setParent(androidx.constraintlayout.core.widgets.ConstraintWidget) -> setParent
    1564:1564:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1829:1829:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1702:1705:void setVerticalDimension(int,int) -> setVerticalDimension
    2252:2252:void setVerticalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1445:1450:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1799:1799:void setVerticalWeight(float) -> setVerticalWeight
    914:914:void setVisibility(int) -> setVisibility
    1386:1388:void setWidth(int) -> setWidth
    386:386:void setWrapBehaviorInParent(int) -> setWrapBehaviorInParent
    1310:1310:void setX(int) -> setX
    1319:1319:void setY(int) -> setY
    2790:2836:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    1013:1013:java.lang.String toString() -> toString
    3483:3535:void updateFromRuns(boolean,boolean) -> updateFromRuns
    3352:3378:void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.core.widgets.ConstraintWidget$1 -> androidx.constraintlayout.core.widgets.ConstraintWidget$1:
    1351:2902:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    411:411:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.core.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.core.widgets.ConstraintWidgetContainer:
    48:518:void <init>() -> <init>
    1061:1063:void addChain(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> addChain
    335:445:boolean addChildrenToSolver(androidx.constraintlayout.core.LinearSystem) -> addChildrenToSolver
    1074:1079:void addHorizontalChain(androidx.constraintlayout.core.widgets.ConstraintWidget) -> addHorizontalChain
    302:304:void addHorizontalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addHorizontalWrapMaxVariable
    288:290:void addHorizontalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addHorizontalWrapMinVariable
    315:317:void addMaxWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable) -> addMaxWrap
    309:311:void addMinWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable) -> addMinWrap
    1089:1094:void addVerticalChain(androidx.constraintlayout.core.widgets.ConstraintWidget) -> addVerticalChain
    295:297:void addVerticalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addVerticalWrapMaxVariable
    281:283:void addVerticalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addVerticalWrapMinVariable
    73:73:boolean directMeasure(boolean) -> directMeasure
    92:92:boolean directMeasureSetup(boolean) -> directMeasureSetup
    96:96:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    136:136:androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    225:225:int getOptimizationLevel() -> getOptimizationLevel
    1107:1118:void getSceneString(java.lang.StringBuilder) -> getSceneString
    1037:1037:androidx.constraintlayout.core.LinearSystem getSystem() -> getSystem
    61:61:void invalidateGraph() -> invalidateGraph
    68:68:void invalidateMeasures() -> invalidateMeasures
    270:270:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    511:511:boolean isRtl() -> isRtl
    263:263:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    660:982:void layout() -> layout
    118:120:long measure(int,int,int,int,int,int,int,int,int) -> measure
    527:643:boolean measure(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure,int) -> measure
    235:235:boolean optimizeFor(int) -> optimizeFor
    250:256:void reset() -> reset
    1048:1049:void resetChains() -> resetChains
    131:132:void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    215:216:void setOptimizationLevel(int) -> setOptimizationLevel
    1102:1102:void setPass(int) -> setPass
    502:502:void setRtl(boolean) -> setRtl
    456:464:boolean updateChildrenFromSolver(androidx.constraintlayout.core.LinearSystem,boolean[]) -> updateChildrenFromSolver
    473:477:void updateFromRuns(boolean,boolean) -> updateFromRuns
    125:125:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.core.widgets.Flow -> androidx.constraintlayout.core.widgets.Flow:
    32:81:void <init>() -> <init>
    32:32:int access$000(androidx.constraintlayout.core.widgets.Flow) -> access$000
    32:32:int access$100(androidx.constraintlayout.core.widgets.Flow) -> access$100
    32:32:int access$1000(androidx.constraintlayout.core.widgets.Flow) -> access$1000
    32:32:float access$1100(androidx.constraintlayout.core.widgets.Flow) -> access$1100
    32:32:int access$1200(androidx.constraintlayout.core.widgets.Flow) -> access$1200
    32:32:float access$1300(androidx.constraintlayout.core.widgets.Flow) -> access$1300
    32:32:float access$1400(androidx.constraintlayout.core.widgets.Flow) -> access$1400
    32:32:int access$1500(androidx.constraintlayout.core.widgets.Flow) -> access$1500
    32:32:float access$1600(androidx.constraintlayout.core.widgets.Flow) -> access$1600
    32:32:int access$1700(androidx.constraintlayout.core.widgets.Flow) -> access$1700
    32:32:float access$1800(androidx.constraintlayout.core.widgets.Flow) -> access$1800
    32:32:int access$1900(androidx.constraintlayout.core.widgets.Flow) -> access$1900
    32:32:int access$200(androidx.constraintlayout.core.widgets.Flow,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> access$200
    32:32:int access$300(androidx.constraintlayout.core.widgets.Flow,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> access$300
    32:32:int access$400(androidx.constraintlayout.core.widgets.Flow) -> access$400
    32:32:androidx.constraintlayout.core.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.core.widgets.Flow) -> access$500
    32:32:int access$600(androidx.constraintlayout.core.widgets.Flow) -> access$600
    32:32:int access$700(androidx.constraintlayout.core.widgets.Flow) -> access$700
    32:32:int access$800(androidx.constraintlayout.core.widgets.Flow) -> access$800
    32:32:float access$900(androidx.constraintlayout.core.widgets.Flow) -> access$900
    1392:1422:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    1293:1374:void createAlignedConstraints(boolean) -> createAlignedConstraints
    207:223:int getWidgetHeight(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetHeight
    184:200:int getWidgetWidth(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetWidth
    231:335:void measure(int,int,int,int) -> measure
    1144:1289:void measureAligned(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureAligned
    797:930:void measureChainWrap(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap
    949:1087:void measureChainWrap_new(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap_new
    1107:1123:void measureNoWrap(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureNoWrap
    147:147:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    123:123:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    149:149:void setFirstVerticalBias(float) -> setFirstVerticalBias
    125:125:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    156:156:void setHorizontalAlign(int) -> setHorizontalAlign
    140:140:void setHorizontalBias(float) -> setHorizontalBias
    167:167:void setHorizontalGap(int) -> setHorizontalGap
    132:132:void setHorizontalStyle(int) -> setHorizontalStyle
    151:151:void setLastHorizontalBias(float) -> setLastHorizontalBias
    127:127:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    153:153:void setLastVerticalBias(float) -> setLastVerticalBias
    129:129:void setLastVerticalStyle(int) -> setLastVerticalStyle
    171:171:void setMaxElementsWrap(int) -> setMaxElementsWrap
    120:120:void setOrientation(int) -> setOrientation
    160:160:void setVerticalAlign(int) -> setVerticalAlign
    144:144:void setVerticalBias(float) -> setVerticalBias
    169:169:void setVerticalGap(int) -> setVerticalGap
    136:136:void setVerticalStyle(int) -> setVerticalStyle
    164:164:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.core.widgets.Flow$WidgetsList -> androidx.constraintlayout.core.widgets.Flow$WidgetsList:
    344:374:void <init>(androidx.constraintlayout.core.widgets.Flow,int,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> <init>
    342:342:androidx.constraintlayout.core.widgets.ConstraintWidget access$2000(androidx.constraintlayout.core.widgets.Flow$WidgetsList) -> access$2000
    420:455:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    394:400:void clear() -> clear
    459:698:void createConstraints(boolean,int,boolean) -> createConstraints
    413:416:int getHeight() -> getHeight
    406:409:int getWidth() -> getWidth
    710:734:void measureMatchConstraints(int) -> measureMatchConstraints
    738:772:void recomputeDimensions() -> recomputeDimensions
    403:403:void setStartIndex(int) -> setStartIndex
    381:390:void setup(int,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,int,int,int) -> setup
androidx.constraintlayout.core.widgets.Guideline -> androidx.constraintlayout.core.widgets.Guideline:
    37:52:void <init>() -> <init>
    217:268:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    104:104:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor() -> getAnchor
    127:138:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> getAnchor
    118:118:int getOrientation() -> getOrientation
    185:185:int getRelativeBegin() -> getRelativeBegin
    189:189:int getRelativeEnd() -> getRelativeEnd
    181:181:float getRelativePercent() -> getRelativePercent
    201:201:boolean isResolvedHorizontally() -> isResolvedHorizontally
    205:205:boolean isResolvedVertically() -> isResolvedVertically
    196:197:void setFinalValue(int) -> setFinalValue
    166:168:void setGuideBegin(int) -> setGuideBegin
    174:176:void setGuideEnd(int) -> setGuideEnd
    158:160:void setGuidePercent(float) -> setGuidePercent
    86:99:void setOrientation(int) -> setOrientation
    275:288:void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.core.widgets.Guideline$1 -> androidx.constraintlayout.core.widgets.Guideline$1:
    127:127:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.HelperWidget -> androidx.constraintlayout.core.widgets.HelperWidget:
    29:31:void <init>() -> <init>
    47:51:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    74:80:void addDependents(java.util.ArrayList,int,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> addDependents
    85:90:int findGroupInDependents(int) -> findGroupInDependents
    69:70:void removeAllIds() -> removeAllIds
androidx.constraintlayout.core.widgets.Optimizer -> androidx.constraintlayout.core.widgets.Optimizer:
    52:52:void <clinit>() -> <clinit>
    65:95:void checkMatchParent(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.widgets.ConstraintWidget) -> checkMatchParent
androidx.constraintlayout.core.widgets.VirtualLayout -> androidx.constraintlayout.core.widgets.VirtualLayout:
    28:204:void <init>() -> <init>
    74:80:void applyRtl(boolean) -> applyRtl
    132:135:void captureWidgets() -> captureWidgets
    225:227:boolean contains(java.util.HashSet) -> contains
    145:145:int getMeasuredHeight() -> getMeasuredHeight
    141:141:int getMeasuredWidth() -> getMeasuredWidth
    100:100:int getPaddingBottom() -> getPaddingBottom
    102:102:int getPaddingLeft() -> getPaddingLeft
    104:104:int getPaddingRight() -> getPaddingRight
    98:98:int getPaddingTop() -> getPaddingTop
    209:221:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    155:199:boolean measureChildren() -> measureChildren
    115:115:boolean needSolverPass() -> needSolverPass
    111:111:void needsCallbackFromSolver(boolean) -> needsCallbackFromSolver
    149:150:void setMeasure(int,int) -> setMeasure
    50:55:void setPadding(int) -> setPadding
    95:95:void setPaddingBottom(int) -> setPaddingBottom
    65:65:void setPaddingEnd(int) -> setPaddingEnd
    69:70:void setPaddingLeft(int) -> setPaddingLeft
    90:91:void setPaddingRight(int) -> setPaddingRight
    59:61:void setPaddingStart(int) -> setPaddingStart
    86:86:void setPaddingTop(int) -> setPaddingTop
    128:128:void updateConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.core.widgets.WidgetContainer -> androidx.constraintlayout.core.widgets.WidgetContainer:
    26:35:void <init>() -> <init>
    72:77:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    158:165:void layout() -> layout
    98:99:void remove(androidx.constraintlayout.core.widgets.ConstraintWidget) -> remove
    181:181:void removeAllChildren() -> removeAllChildren
    62:63:void reset() -> reset
    172:176:void resetSolverVariables(androidx.constraintlayout.core.Cache) -> resetSolverVariables
androidx.constraintlayout.core.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.core.widgets.analyzer.BaselineDimensionDependency:
    22:22:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.core.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.core.widgets.analyzer.BasicMeasure:
    52:71:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> <init>
    443:472:boolean measure(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> measure
    75:139:void measureChildren(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> measureChildren
    148:160:void solveLinearSystem(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,java.lang.String,int,int,int) -> solveLinearSystem
    186:426:long solverMeasure(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    56:65:void updateHierarchy(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure:
    480:480:void <init>() -> <init>
androidx.constraintlayout.core.widgets.analyzer.ChainRun -> androidx.constraintlayout.core.widgets.analyzer.ChainRun:
    32:38:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> <init>
    513:569:void apply() -> apply
    484:486:void applyToWidget() -> applyToWidget
    78:103:void build() -> build
    109:111:void clear() -> clear
    491:494:androidx.constraintlayout.core.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    501:504:androidx.constraintlayout.core.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    66:72:long getWrapDimension() -> getWrapDimension
    55:58:boolean supportsWrapComputation() -> supportsWrapComputation
    43:50:java.lang.String toString() -> toString
    123:476:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.core.widgets.analyzer.DependencyGraph:
    44:626:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> <init>
    710:753:void applyGroup(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.RunGroup) -> applyGroup
    388:557:boolean basicMeasureWidgets(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    630:639:void buildGraph() -> buildGraph
    643:692:void buildGraph(java.util.ArrayList) -> buildGraph
    65:70:int computeWrap(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> computeWrap
    112:227:boolean directMeasure(boolean) -> directMeasure
    233:263:boolean directMeasureSetup(boolean) -> directMeasureSetup
    270:359:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    759:781:void findGroup(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    616:616:void invalidateGraph() -> invalidateGraph
    623:623:void invalidateMeasures() -> invalidateMeasures
    376:384:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    565:607:void measureWidgets() -> measureWidgets
    61:61:void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.core.widgets.analyzer.DependencyNode -> androidx.constraintlayout.core.widgets.analyzer.DependencyNode:
    23:41:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
    100:102:void addDependency(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> addDependency
    119:124:void clear() -> clear
    50:57:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:95:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type:
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.core.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.core.widgets.analyzer.DimensionDependency:
    24:28:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
    33:39:void resolve(int) -> resolve
androidx.constraintlayout.core.widgets.analyzer.Direct -> androidx.constraintlayout.core.widgets.analyzer.Direct:
    46:50:void <clinit>() -> <clinit>
    763:790:boolean canMeasure(int,androidx.constraintlayout.core.widgets.ConstraintWidget) -> canMeasure
    310:427:void horizontalSolvingPass(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,boolean) -> horizontalSolvingPass
    278:282:void solveBarrier(int,androidx.constraintlayout.core.widgets.Barrier,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,int,boolean) -> solveBarrier
    598:626:void solveHorizontalCenterConstraints(int,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> solveHorizontalCenterConstraints
    682:709:void solveHorizontalMatchConstraint(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> solveHorizontalMatchConstraint
    640:668:void solveVerticalCenterConstraints(int,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget) -> solveVerticalCenterConstraints
    723:750:void solveVerticalMatchConstraint(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget) -> solveVerticalMatchConstraint
    59:258:void solvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> solvingPass
    439:583:void verticalSolvingPass(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> verticalSolvingPass
androidx.constraintlayout.core.widgets.analyzer.Grouping -> androidx.constraintlayout.core.widgets.analyzer.Grouping:
    369:442:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup findDependents(androidx.constraintlayout.core.widgets.ConstraintWidget,int,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> findDependents
    356:359:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup findGroup(java.util.ArrayList,int) -> findGroup
    63:348:boolean simpleSolvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> simpleSolvingPass
    48:50:boolean validInGroup(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> validInGroup
androidx.constraintlayout.core.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.core.widgets.analyzer.GuidelineReference:
    25:28:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    48:49:void addDependency(androidx.constraintlayout.core.widgets.analyzer.DependencyNode) -> addDependency
    69:106:void apply() -> apply
    112:116:void applyToWidget() -> applyToWidget
    33:33:void clear() -> clear
    54:64:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HelperReferences -> androidx.constraintlayout.core.widgets.analyzer.HelperReferences:
    24:24:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    44:45:void addDependency(androidx.constraintlayout.core.widgets.analyzer.DependencyNode) -> addDependency
    50:114:void apply() -> apply
    144:151:void applyToWidget() -> applyToWidget
    29:30:void clear() -> clear
    122:139:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun:
    37:37:void <clinit>() -> <clinit>
    40:43:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    83:270:void apply() -> apply
    561:562:void applyToWidget() -> applyToWidget
    53:57:void clear() -> clear
    286:303:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:67:void reset() -> reset
    72:73:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    312:557:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun$1:
    312:312:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.RunGroup -> androidx.constraintlayout.core.widgets.analyzer.RunGroup:
    33:48:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int) -> <init>
    52:53:void add(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> add
    121:179:long computeWrapSize(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:114:long traverseEnd(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:82:long traverseStart(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun:
    34:42:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    203:426:void apply() -> apply
    432:433:void applyToWidget() -> applyToWidget
    52:57:void clear() -> clear
    62:69:void reset() -> reset
    74:75:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:197:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun$1:
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.WidgetGroup -> androidx.constraintlayout.core.widgets.analyzer.WidgetGroup:
    35:45:void <init>(int) -> <init>
    52:55:boolean add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    210:220:void cleanup(java.util.ArrayList) -> cleanup
    49:49:int getId() -> getId
    48:48:int getOrientation() -> getOrientation
    63:63:java.lang.String getOrientationString() -> getOrientationString
    119:124:int measureWrap(androidx.constraintlayout.core.LinearSystem,int) -> measureWrap
    87:95:void moveTo(int,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> moveTo
    59:59:void setAuthoritative(boolean) -> setAuthoritative
    175:175:void setOrientation(int) -> setOrientation
    128:169:int solverMeasure(androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int) -> solverMeasure
    75:79:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult -> androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult:
    235:242:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetGroup,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.LinearSystem,int) -> <init>
androidx.constraintlayout.core.widgets.analyzer.WidgetRun -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun:
    34:44:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    283:285:void addTarget(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int) -> addTarget
    289:294:void addTarget(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) -> addTarget
    236:250:int getLimitedDimension(int,int) -> getLimitedDimension
    95:120:androidx.constraintlayout.core.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> getTarget
    260:275:androidx.constraintlayout.core.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> getTarget
    298:299:long getWrapDimension() -> getWrapDimension
    304:304:boolean isResolved() -> isResolved
    172:215:void resolveDimension(int,int) -> resolveDimension
    128:168:void updateRunCenter(androidx.constraintlayout.core.widgets.analyzer.Dependency,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> updateRunCenter
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType:
    306:306:void <clinit>() -> <clinit>
    306:306:void <init>(java.lang.String,int) -> <init>
    306:306:androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    306:306:androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.helper.widget.Flow -> androidx.constraintlayout.helper.widget.Flow:
    127:127:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:267:void init(android.util.AttributeSet) -> init
    148:148:void onMeasure(int,int) -> onMeasure
    160:168:void onMeasure(androidx.constraintlayout.core.widgets.VirtualLayout,int,int) -> onMeasure
    142:142:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    454:455:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    434:435:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    464:465:void setFirstVerticalBias(float) -> setFirstVerticalBias
    444:445:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    479:480:void setHorizontalAlign(int) -> setHorizontalAlign
    414:415:void setHorizontalBias(float) -> setHorizontalBias
    505:506:void setHorizontalGap(int) -> setHorizontalGap
    390:391:void setHorizontalStyle(int) -> setHorizontalStyle
    353:354:void setLastHorizontalBias(float) -> setLastHorizontalBias
    335:336:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    362:363:void setLastVerticalBias(float) -> setLastVerticalBias
    344:345:void setLastVerticalStyle(int) -> setLastVerticalStyle
    525:526:void setMaxElementsWrap(int) -> setMaxElementsWrap
    276:277:void setOrientation(int) -> setOrientation
    286:287:void setPadding(int) -> setPadding
    326:327:void setPaddingBottom(int) -> setPaddingBottom
    296:297:void setPaddingLeft(int) -> setPaddingLeft
    316:317:void setPaddingRight(int) -> setPaddingRight
    306:307:void setPaddingTop(int) -> setPaddingTop
    495:496:void setVerticalAlign(int) -> setVerticalAlign
    424:425:void setVerticalBias(float) -> setVerticalBias
    515:516:void setVerticalGap(int) -> setVerticalGap
    404:405:void setVerticalStyle(int) -> setVerticalStyle
    376:377:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.motion.utils.CustomSupport -> androidx.constraintlayout.motion.utils.CustomSupport:
    18:72:void setInterpolatedValue(androidx.constraintlayout.widget.ConstraintAttribute,android.view.View,float[]) -> setInterpolatedValue
androidx.constraintlayout.motion.utils.CustomSupport$1 -> androidx.constraintlayout.motion.utils.CustomSupport$1:
    23:23:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.utils.ViewOscillator -> androidx.constraintlayout.motion.utils.ViewOscillator:
    36:36:void <init>() -> <init>
androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet -> androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet:
    116:116:void <init>() -> <init>
    122:122:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
androidx.constraintlayout.motion.utils.ViewSpline -> androidx.constraintlayout.motion.utils.ViewSpline:
    32:32:void <init>() -> <init>
androidx.constraintlayout.motion.utils.ViewSpline$PathRotate -> androidx.constraintlayout.motion.utils.ViewSpline$PathRotate:
    133:133:void <init>() -> <init>
    139:139:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
androidx.constraintlayout.motion.utils.ViewTimeCycle -> androidx.constraintlayout.motion.utils.ViewTimeCycle:
    38:38:void <init>() -> <init>
    44:58:float get(float,long,android.view.View,androidx.constraintlayout.core.motion.utils.KeyCache) -> get
androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate -> androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate:
    160:160:void <init>() -> <init>
    167:168:boolean setPathRotate(android.view.View,androidx.constraintlayout.core.motion.utils.KeyCache,float,long,double,double) -> setPathRotate
    163:163:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
    87:88:java.lang.String getName(android.view.View) -> getName
    140:145:java.lang.String getName(android.content.Context,int) -> getName
androidx.constraintlayout.motion.widget.DesignTool -> androidx.constraintlayout.motion.widget.DesignTool:
    86:115:void <clinit>() -> <clinit>
    77:83:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
androidx.constraintlayout.motion.widget.MotionController -> androidx.constraintlayout.motion.widget.MotionController:
    1176:1214:float getAdjustedPosition(float,float[]) -> getAdjustedPosition
    258:261:void getCenter(double,float[],float[]) -> getCenter
    1240:1378:boolean interpolate(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> interpolate
    987:987:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.MotionHelper -> androidx.constraintlayout.motion.widget.MotionHelper:
    98:98:float getProgress() -> getProgress
    60:72:void init(android.util.AttributeSet) -> init
    93:93:boolean isUseOnHide() -> isUseOnHide
    83:83:boolean isUsedOnShow() -> isUsedOnShow
    103:120:void setProgress(float) -> setProgress
androidx.constraintlayout.motion.widget.MotionInterpolator -> androidx.constraintlayout.motion.widget.MotionInterpolator:
    21:21:void <init>() -> <init>
androidx.constraintlayout.motion.widget.MotionLayout -> androidx.constraintlayout.motion.widget.MotionLayout:
    995:995:androidx.constraintlayout.motion.widget.MotionLayout$StateCache access$000(androidx.constraintlayout.motion.widget.MotionLayout) -> access$000
    995:995:int access$100(androidx.constraintlayout.motion.widget.MotionLayout) -> access$100
    995:995:int access$200(androidx.constraintlayout.motion.widget.MotionLayout) -> access$200
    3467:3481:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3593:3783:void evaluate(boolean) -> evaluate
    4387:4410:void fireTransitionChange() -> fireTransitionChange
    4421:4441:void fireTransitionCompleted() -> fireTransitionCompleted
    4221:4221:int getCurrentState() -> getCurrentState
    4467:4470:androidx.constraintlayout.motion.widget.DesignTool getDesignTool() -> getDesignTool
    4703:4703:int getEndState() -> getEndState
    1138:1138:long getNanoTime() -> getNanoTime
    4230:4230:float getProgress() -> getProgress
    4694:4694:int getStartState() -> getStartState
    4713:4713:float getTargetPosition() -> getTargetPosition
    1693:1697:android.os.Bundle getTransitionState() -> getTransitionState
    4280:4280:long getTransitionTimeMs() -> getTransitionTimeMs
    2452:2452:float getVelocity() -> getVelocity
    1532:1532:boolean isAttachedToWindow() -> isAttachedToWindow
    4145:4175:void onAttachedToWindow() -> onAttachedToWindow
    3790:3815:void onLayout(boolean,int,int,int,int) -> onLayout
    2914:2914:void onMeasure(int,int) -> onMeasure
    3003:3007:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2982:2985:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    4140:4140:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4478:4502:void onViewAdded(android.view.View) -> onViewAdded
    4512:4517:void onViewRemoved(android.view.View) -> onViewRemoved
    3825:3825:void parseLayoutDescription(int) -> parseLayoutDescription
    4446:4460:void processTransitionCompleted() -> processTransitionCompleted
    2881:2898:void requestLayout() -> requestLayout
    3988:3989:void setDebugMode(int) -> setDebugMode
    4879:4879:void setDelayedApplicationOfInitialState(boolean) -> setDelayedApplicationOfInitialState
    4784:4784:void setInteractionEnabled(boolean) -> setInteractionEnabled
    1572:1572:void setInterpolatedProgress(float) -> setInterpolatedProgress
    4532:4536:void setOnHide(float) -> setOnHide
    4522:4526:void setOnShow(float) -> setOnShow
    1582:1596:void setProgress(float,float) -> setProgress
    1707:1743:void setProgress(float) -> setProgress
    3886:3886:void setScene(androidx.constraintlayout.motion.widget.MotionScene) -> setScene
    1312:1320:void setStartState(int) -> setStartState
    1199:1220:void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState) -> setState
    1547:1552:void setState(int,int,int) -> setState
    1330:1335:void setTransition(int,int) -> setTransition
    1418:1418:void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> setTransition
    4723:4723:void setTransitionDuration(int) -> setTransitionDuration
    4290:4290:void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener) -> setTransitionListener
    1680:1685:void setTransitionState(android.os.Bundle) -> setTransitionState
    2903:2905:java.lang.String toString() -> toString
    2144:2145:void transitionToEnd() -> transitionToEnd
    2167:2174:void transitionToState(int) -> transitionToState
    2205:2205:void transitionToState(int,int,int) -> transitionToState
    2307:2362:void transitionToState(int,int,int,int) -> transitionToState
androidx.constraintlayout.motion.widget.MotionLayout$4 -> androidx.constraintlayout.motion.widget.MotionLayout$4:
    4168:4168:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    4171:4171:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$5 -> androidx.constraintlayout.motion.widget.MotionLayout$5:
    1208:1208:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.widget.MotionLayout$StateCache -> androidx.constraintlayout.motion.widget.MotionLayout$StateCache:
    1601:1609:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    1612:1633:void apply() -> apply
    1637:1641:android.os.Bundle getTransitionState() -> getTransitionState
    1669:1672:void recordState() -> recordState
    1657:1657:void setEndState(int) -> setEndState
    1653:1653:void setProgress(float) -> setProgress
    1665:1665:void setStartState(int) -> setStartState
    1646:1649:void setTransitionState(android.os.Bundle) -> setTransitionState
    1661:1661:void setVelocity(float) -> setVelocity
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState -> androidx.constraintlayout.motion.widget.MotionLayout$TransitionState:
    1107:1107:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] $values() -> $values
    1107:1111:void <clinit>() -> <clinit>
    1107:1107:void <init>(java.lang.String,int) -> <init>
    1107:1107:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String) -> valueOf
    1107:1107:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values() -> values
androidx.constraintlayout.motion.widget.MotionPaths -> androidx.constraintlayout.motion.widget.MotionPaths:
    54:54:void <clinit>() -> <clinit>
    56:489:void <init>() -> <init>
    39:39:int compareTo(java.lang.Object) -> compareTo
    911:911:int compareTo(androidx.constraintlayout.motion.widget.MotionPaths) -> compareTo
    359:417:void getCenter(double,int[],double[],float[],double[],float[]) -> getCenter
    493:640:void setView(float,android.view.View,int[],double[],double[],double[],boolean) -> setView
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    118:119:void <init>(android.content.Context) -> <init>
    123:124:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    239:239:boolean getAllowsGoneWidget() -> getAllowsGoneWidget
    259:259:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:212:void init(android.util.AttributeSet) -> init
    184:184:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    216:216:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    248:250:void setDpMargin(int) -> setDpMargin
    268:268:void setMargin(int) -> setMargin
    147:147:void setType(int) -> setType
    151:178:void updateType(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
    259:263:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object,boolean) -> <init>
    44:269:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    300:321:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    65:65:java.lang.String getName() -> getName
    93:93:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType getType() -> getType
    452:508:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    328:381:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    274:293:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] $values() -> $values
    53:61:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    64:101:void <init>(android.content.Context) -> <init>
    64:107:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    271:289:void addID(java.lang.String) -> addID
    222:229:void addRscID(int) -> addRscID
    297:324:void addTag(java.lang.String) -> addTag
    158:168:void addView(android.view.View) -> addView
    459:470:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    480:482:void applyLayoutFeatures() -> applyLayoutFeatures
    339:372:int findId(java.lang.String) -> findId
    390:405:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    204:204:int[] getReferencedIds() -> getReferencedIds
    538:546:android.view.View[] getViews(androidx.constraintlayout.widget.ConstraintLayout) -> getViews
    121:133:void init(android.util.AttributeSet) -> init
    139:144:void onAttachedToWindow() -> onAttachedToWindow
    245:248:void onMeasure(int,int) -> onMeasure
    179:195:int removeView(android.view.View) -> removeView
    416:428:void setIds(java.lang.String) -> setIds
    437:449:void setReferenceTags(java.lang.String) -> setReferenceTags
    211:214:void setReferencedIds(int[]) -> setReferencedIds
    627:629:void setTag(int,java.lang.Object) -> setTag
    498:523:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    257:263:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    499:1550:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    499:1550:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    486:486:int access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    486:486:java.util.ArrayList access$100(androidx.constraintlayout.widget.ConstraintLayout) -> access$100
    1257:1476:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1958:1958:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1984:2028:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3610:3611:void forceLayout() -> forceLayout
    486:486:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1942:1942:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    486:486:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1934:1934:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1950:1950:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    572:575:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1128:1128:int getMaxHeight() -> getMaxHeight
    1118:1118:int getMaxWidth() -> getMaxWidth
    1081:1081:int getMinHeight() -> getMinHeight
    1071:1071:int getMinWidth() -> getMinWidth
    1926:1926:int getOptimizationLevel() -> getOptimizationLevel
    1734:1738:int getPaddingWidth() -> getPaddingWidth
    3642:3677:java.lang.String getSceneString() -> getSceneString
    544:547:androidx.constraintlayout.widget.SharedValues getSharedValues() -> getSharedValues
    1503:1515:androidx.constraintlayout.core.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1976:1976:android.view.View getViewById(int) -> getViewById
    1526:1534:androidx.constraintlayout.core.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    944:985:void init(android.util.AttributeSet,int,int) -> init
    1723:1724:boolean isRtl() -> isRtl
    3615:3622:void markHierarchyDirty() -> markHierarchyDirty
    1839:1887:void onLayout(boolean,int,int,int,int) -> onLayout
    1646:1710:void onMeasure(int,int) -> onMeasure
    1002:1022:void onViewAdded(android.view.View) -> onViewAdded
    1030:1035:void onViewRemoved(android.view.View) -> onViewRemoved
    994:994:void parseLayoutDescription(int) -> parseLayoutDescription
    3604:3605:void requestLayout() -> requestLayout
    1612:1633:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1562:1594:void resolveSystem(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1149:1247:void setChildrenConstraints() -> setChildrenConstraints
    1967:1967:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    554:564:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    607:609:void setId(int) -> setId
    1103:1107:void setMaxHeight(int) -> setMaxHeight
    1090:1094:void setMaxWidth(int) -> setMaxWidth
    1057:1061:void setMinHeight(int) -> setMinHeight
    1044:1048:void setMinWidth(int) -> setMinWidth
    2079:2080:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1915:1916:void setOptimizationLevel(int) -> setOptimizationLevel
    1748:1813:void setSelfDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    1483:1497:void setWidgetBaseline(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray,int,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> setWidgetBaseline
    1132:1143:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
    679:679:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    2216:3364:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2216:3426:void <init>(int,int) -> <init>
    2216:3430:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3471:3582:void resolveLayoutDirection(int) -> resolveLayoutDirection
    3368:3421:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    2806:2879:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
    637:638:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    629:634:void captureLayoutInfo(int,int,int,int,int,int) -> captureLayoutInfo
    923:935:void didMeasures() -> didMeasures
    909:912:boolean isSimilarSpec(int,int,int) -> isSimilarSpec
    648:885:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
    42:50:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:344:void load(android.content.Context,int) -> load
    349:373:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    73:124:void updateConstraints(int,float,float) -> updateConstraints
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
    141:167:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:171:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
    175:176:int findMatch(float,float) -> findMatch
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
    186:235:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    258:268:boolean match(float,float) -> match
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    241:557:void <clinit>() -> <clinit>
    78:244:void <init>() -> <init>
    78:78:int access$100(android.content.res.TypedArray,int,int) -> access$100
    78:78:int[] access$200() -> access$200
    2285:2287:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    2367:2494:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    3051:3106:void clear(int,int) -> clear
    2168:2168:void clone(android.content.Context,int) -> clone
    2193:2243:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    2254:2275:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    3511:3514:void constrainCircle(int,int,int,float) -> constrainCircle
    5255:5285:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    4239:4242:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet,boolean) -> fillFromAttributeList
    4053:4056:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> get
    4088:4122:void load(android.content.Context,int) -> load
    4136:4226:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    4231:4233:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    719:779:void parseDimensionConstraints(java.lang.Object,android.content.res.TypedArray,int,int) -> parseDimensionConstraints
    866:957:void parseDimensionConstraintsString(java.lang.Object,java.lang.String,int) -> parseDimensionConstraintsString
    794:839:void parseDimensionRatioString(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,java.lang.String) -> parseDimensionRatioString
    4863:5250:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray,boolean) -> populateConstraint
    4264:4580:void populateOverride(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateOverride
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
    1827:1834:void <init>() -> <init>
    1827:1827:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1827:1827:void access$700(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$700
    1827:1827:void access$800(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$800
    2088:2156:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1827:1827:java.lang.Object clone() -> clone
    1979:1985:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    2018:2083:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1990:1996:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    2001:2014:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta -> androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta:
    1837:1883:void <init>() -> <init>
    1847:1852:void add(int,int) -> add
    1860:1865:void add(int,float) -> add
    1873:1878:void add(int,java.lang.String) -> add
    1886:1891:void add(int,boolean) -> add
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
    1122:1260:void <clinit>() -> <clinit>
    971:1043:void <init>() -> <init>
    1046:1119:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    1264:1488:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
    1731:1754:void <clinit>() -> <clinit>
    1700:1714:void <init>() -> <init>
    1721:1728:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1758:1820:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
    1660:1665:void <init>() -> <init>
    1668:1672:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1676:1693:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
    1571:1598:void <clinit>() -> <clinit>
    1538:1552:void <init>() -> <init>
    1555:1568:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1603:1653:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    136:136:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    148:148:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    152:157:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    67:82:void <init>(int,int) -> <init>
    67:126:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    54:57:void <init>(android.content.Context) -> <init>
    54:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:98:void onMeasure(int,int) -> onMeasure
    152:152:void setFilterRedundantCalls(boolean) -> setFilterRedundantCalls
    107:112:void setGuidelineBegin(int) -> setGuidelineBegin
    121:126:void setGuidelineEnd(int) -> setGuidelineEnd
    134:139:void setGuidelinePercent(float) -> setGuidelinePercent
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    114:114:android.view.View getContent() -> getContent
    106:106:int getEmptyVisibility() -> getEmptyVisibility
    125:145:void onDraw(android.graphics.Canvas) -> onDraw
    176:191:void setContentId(int) -> setContentId
    97:97:void setEmptyVisibility(int) -> setEmptyVisibility
    201:214:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    154:166:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.SharedValues -> androidx.constraintlayout.widget.SharedValues:
    30:34:void <init>() -> <init>
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
    39:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:125:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    48:60:void init(android.util.AttributeSet) -> init
    73:92:void onAttachedToWindow() -> onAttachedToWindow
    115:116:void setElevation(float) -> setElevation
    106:107:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    118:152:void <clinit>() -> <clinit>
    211:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:252:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1626:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1066:1077:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:867:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1531:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:343:void drawableStateChanged() -> drawableStateChanged
    1585:1598:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:986:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:732:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1095:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1062:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:610:int getKeyline(int) -> getKeyline
    965:966:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:682:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:455:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1216:void layoutChild(android.view.View,int) -> layoutChild
    1106:1115:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1182:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1490:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1690:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:278:void onAttachedToWindow() -> onAttachedToWindow
    1307:1408:void onChildViewsChanged(int) -> onChildViewsChanged
    283:292:void onDetachedFromWindow() -> onDetachedFromWindow
    926:931:void onDraw(android.graphics.Canvas) -> onDraw
    532:542:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:919:void onLayout(boolean,int,int,int,int) -> onLayout
    889:899:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:849:void onMeasure(int,int) -> onMeasure
    760:760:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1964:1984:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1994:2009:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1913:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1923:1955:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1852:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1859:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1907:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1796:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1815:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3260:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1773:1788:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1823:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1846:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    555:584:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    466:525:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:721:void prepareChildren() -> prepareChildren
    953:954:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:165:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1640:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:595:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:436:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    938:939:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1498:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1507:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:259:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:316:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:380:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:369:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:358:void setVisibility(int) -> setVisibility
    384:391:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3309:3327:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2091:2091:void <init>() -> <init>
    2102:2102:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2634:2634:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2541:2541:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2585:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2470:2470:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2427:2427:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2510:2510:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3218:3218:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3224:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3233:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2809:2869:void <init>(int,int) -> <init>
    2809:2903:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2809:2908:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2809:2912:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2809:2916:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3003:3003:boolean checkAnchorChanged() -> checkAnchorChanged
    3100:3102:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3014:3017:boolean didBlockInteraction() -> didBlockInteraction
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2926:2926:int getAnchorId() -> getAnchorId
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3079:3079:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2995:2995:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3033:3038:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3071:3073:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3087:3087:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3054:3054:void resetNestedScroll(int) -> resetNestedScroll
    3050:3050:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3141:3175:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2965:2977:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3083:3083:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2987:2987:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3060:3063:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3210:3213:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3186:3202:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2023:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3373:3373:void <clinit>() -> <clinit>
    3335:3346:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3351:void <init>(android.os.Parcelable) -> <init>
    3356:3369:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3374:3374:void <init>() -> <init>
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    2031:2031:void <init>() -> <init>
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
    2034:2035:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:88:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:55:void addNode(java.lang.Object) -> addNode
    143:149:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:193:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:207:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    110:116:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:132:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:214:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:78:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:92:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:65:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    void $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg(android.app.Activity) -> $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg
      # {"id":"com.android.tools.r8.synthesized"}
    300:300:void finishAffinity(android.app.Activity) -> finishAffinity
    672:674:void lambda$recreate$0(android.app.Activity) -> lambda$recreate$0
    663:671:void recreate(android.app.Activity) -> recreate
    518:560:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    246:246:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    283:283:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0 -> androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity androidx.core.app.ActivityCompat$$InternalSyntheticLambda$0$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.f$0 -> f$0
    void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$0$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.<init>(android.app.Activity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$0$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    560:560:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    563:574:void run() -> run
androidx.core.app.ActivityCompat$Api16Impl -> androidx.core.app.ActivityCompat$Api16Impl:
    822:822:void finishAffinity(android.app.Activity) -> finishAffinity
    809:809:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    816:816:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$Api23Impl -> androidx.core.app.ActivityCompat$Api23Impl:
    903:904:void onSharedElementsReady(java.lang.Object) -> onSharedElementsReady
    893:893:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    898:898:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:99:void <clinit>() -> <clinit>
    378:378:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:359:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    320:322:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    306:308:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:349:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:369:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:296:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:169:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:290:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:195:void <init>(android.app.Activity) -> <init>
    241:246:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:226:void onActivityPaused(android.app.Activity) -> onActivityPaused
    207:208:void onActivityStarted(android.app.Activity) -> onActivityStarted
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    201:216:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String) -> checkOrNoteProxyOp
    178:180:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    78:79:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api23Impl -> androidx.core.app.AppOpsManagerCompat$Api23Impl:
    271:271:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    276:276:int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOp
    282:282:int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    266:266:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.AppOpsManagerCompat$Api29Impl:
    246:246:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String) -> checkOpNoThrow
    254:254:java.lang.String getOpPackageName(android.content.Context) -> getOpPackageName
    233:233:android.app.AppOpsManager getSystemService(android.content.Context) -> getSystemService
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    110:110:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.BundleCompat$Api18Impl -> androidx.core.app.BundleCompat$Api18Impl:
    140:140:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    145:145:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    51:66:void <init>() -> <init>
    140:144:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    131:135:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    116:116:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    88:89:void onCreate(android.os.Bundle) -> onCreate
    95:96:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    169:169:boolean shouldDumpInternalState(java.lang.String[]) -> shouldDumpInternalState
    174:185:boolean shouldSkipDump(java.lang.String[]) -> shouldSkipDump
    126:126:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:81:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.MultiWindowModeChangedInfo -> androidx.core.app.MultiWindowModeChangedInfo:
    39:41:void <init>(boolean) -> <init>
    54:56:void <init>(boolean,android.content.res.Configuration) -> <init>
    65:65:boolean isInMultiWindowMode() -> isInMultiWindowMode
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    134:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    197:206:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    222:225:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    242:278:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    111:111:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    63:63:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NavUtils$Api16Impl -> androidx.core.app.NavUtils$Api16Impl:
    305:305:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    300:300:boolean navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    295:295:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    7475:7475:android.os.Bundle getExtras(android.app.Notification) -> getExtras
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    4658:4726:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean,boolean) -> <init>
    4754:4754:android.app.PendingIntent getActionIntent() -> getActionIntent
    4769:4769:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    4761:4761:android.os.Bundle getExtras() -> getExtras
    4743:4746:androidx.core.graphics.drawable.IconCompat getIconCompat() -> getIconCompat
    4789:4789:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    4800:4800:int getSemanticAction() -> getSemanticAction
    4831:4831:boolean getShowsUserInterface() -> getShowsUserInterface
    4750:4750:java.lang.CharSequence getTitle() -> getTitle
    4780:4780:boolean isAuthenticationRequired() -> isAuthenticationRequired
    4809:4809:boolean isContextual() -> isContextual
androidx.core.app.NotificationCompat$Action$Builder -> androidx.core.app.NotificationCompat$Action$Builder:
    4912:4912:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4841:4950:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean,boolean,boolean) -> <init>
    5088:5105:androidx.core.app.NotificationCompat$Action build() -> build
    5072:5075:void checkContextualActionNullFields() -> checkContextualActionNullFields
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    3057:3057:void <init>() -> <init>
    3148:3189:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3127:3128:androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    3097:3097:androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl:
    3272:3272:void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap) -> setBigLargeIcon
    3280:3280:void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl:
    3299:3299:void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon) -> setBigLargeIcon
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl:
    3336:3336:void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon) -> setBigPicture
    3328:3328:void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence) -> setContentDescription
    3319:3319:void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean) -> showBigPictureWhenCollapsed
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    3369:3369:void <init>() -> <init>
    3447:3447:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    3420:3425:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3399:3399:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    912:1159:void <init>(android.content.Context,java.lang.String) -> <init>
    1976:1976:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    2448:2448:android.app.Notification build() -> build
    1932:1935:android.os.Bundle getExtras() -> getExtras
    2453:2454:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1503:1522:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    1683:1683:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    2065:2065:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1421:1421:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    1301:1301:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    1293:1293:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1433:1433:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1740:1742:void setFlag(int,boolean) -> setFlag
    1853:1853:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1494:1494:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1641:1641:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1674:1674:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1398:1400:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    1191:1191:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    1247:1247:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    1542:1548:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    2048:2051:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    2542:2550:void <init>() -> <init>
    2642:2650:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2556:2559:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> setBuilder
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    59:273:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    354:403:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    315:346:android.app.Notification build() -> build
    412:457:android.app.Notification buildInternal() -> buildInternal
    287:290:java.util.List combineLists(java.util.List,java.util.List) -> combineLists
    307:307:android.app.Notification$Builder getBuilder() -> getBuilder
    311:311:android.content.Context getContext() -> getContext
    298:300:java.util.List getPeople(java.util.List) -> getPeople
    536:539:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    59:63:void <clinit>() -> <clinit>
    258:274:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    297:310:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    330:332:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    105:114:void <clinit>() -> <clinit>
    164:166:void <init>(android.content.Context) -> <init>
    235:249:boolean areNotificationsEnabled() -> areNotificationsEnabled
    161:161:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
androidx.core.app.Person -> androidx.core.app.Person:
    100:106:void <init>(androidx.core.app.Person$Builder) -> <init>
    169:169:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    196:196:java.lang.String getKey() -> getKey
    163:163:java.lang.CharSequence getName() -> getName
    187:187:java.lang.String getUri() -> getUri
    204:204:boolean isBot() -> isBot
    212:212:boolean isImportant() -> isImportant
    222:226:java.lang.String resolveToLegacyUri() -> resolveToLegacyUri
    154:154:android.app.Person toAndroidPerson() -> toAndroidPerson
androidx.core.app.Person$Api28Impl -> androidx.core.app.Person$Api28Impl:
    369:379:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> fromAndroidPerson
    385:392:android.app.Person toAndroidPerson(androidx.core.app.Person) -> toAndroidPerson
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    241:241:void <init>() -> <init>
    328:328:androidx.core.app.Person build() -> build
    309:309:androidx.core.app.Person$Builder setBot(boolean) -> setBot
    270:270:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    321:321:androidx.core.app.Person$Builder setImportant(boolean) -> setImportant
    299:299:androidx.core.app.Person$Builder setKey(java.lang.String) -> setKey
    258:258:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> setName
    288:288:androidx.core.app.Person$Builder setUri(java.lang.String) -> setUri
androidx.core.app.PictureInPictureModeChangedInfo -> androidx.core.app.PictureInPictureModeChangedInfo:
    39:41:void <init>(boolean) -> <init>
    54:56:void <init>(boolean,android.content.res.Configuration) -> <init>
    65:65:boolean isInPictureInPictureMode() -> isInPictureInPictureMode
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    105:105:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    566:568:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    575:575:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
    162:162:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    140:140:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    134:134:java.lang.CharSequence[] getChoices() -> getChoices
    170:170:int getEditChoicesBeforeSending() -> getEditChoicesBeforeSending
    178:178:android.os.Bundle getExtras() -> getExtras
    125:125:java.lang.CharSequence getLabel() -> getLabel
    117:117:java.lang.String getResultKey() -> getResultKey
    149:152:boolean isDataOnly() -> isDataOnly
androidx.core.app.RemoteInput$Api20Impl -> androidx.core.app.RemoteInput$Api20Impl:
    642:642:void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle) -> addResultsToIntent
    669:686:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
    637:637:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
androidx.core.app.RemoteInput$Api26Impl -> androidx.core.app.RemoteInput$Api26Impl:
    619:619:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    613:613:java.util.Set getAllowedDataTypes(java.lang.Object) -> getAllowedDataTypes
    608:608:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    625:625:android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean) -> setAllowDataType
androidx.core.app.RemoteInput$Api29Impl -> androidx.core.app.RemoteInput$Api29Impl:
    715:715:int getEditChoicesBeforeSending(java.lang.Object) -> getEditChoicesBeforeSending
    721:721:android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int) -> setEditChoicesBeforeSending
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    81:85:void <init>(android.content.Context) -> <init>
    123:123:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    162:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    204:213:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    97:97:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    260:260:java.util.Iterator iterator() -> iterator
    272:272:void startActivities() -> startActivities
    287:298:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    172:175:void <clinit>() -> <clinit>
    594:601:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    704:705:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    577:580:int getColor(android.content.Context,int) -> getColor
    558:558:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    522:522:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    501:501:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    448:448:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    884:888:java.lang.String obtainAndCheckReceiverPermission(android.content.Context) -> obtainAndCheckReceiverPermission
    291:291:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    318:318:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    748:752:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    973:973:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    978:978:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    990:990:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    995:995:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    1000:1000:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    1022:1022:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    1012:1012:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    1017:1017:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    1034:1034:int getColor(android.content.Context,int) -> getColor
    1039:1039:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    1044:1044:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.ContextCompat$Api24Impl -> androidx.core.content.ContextCompat$Api24Impl:
    1061:1061:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    1056:1056:java.io.File getDataDir(android.content.Context) -> getDataDir
    1066:1066:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
androidx.core.content.ContextCompat$Api26Impl -> androidx.core.content.ContextCompat$Api26Impl:
    1080:1085:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int) -> registerReceiver
    1091:1091:android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    355:377:void <clinit>() -> <clinit>
    382:383:void <init>() -> <init>
    409:424:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    901:903:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    910:911:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    916:917:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    606:607:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    664:676:android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int) -> getFileProviderPathsMetaData
    641:655:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int) -> getPathStrategy
    558:563:java.lang.String getType(android.net.Uri) -> getType
    449:450:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    578:578:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    876:894:int modeToMode(java.lang.String) -> modeToMode
    630:632:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    691:734:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int) -> parsePathStrategy
    517:541:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    588:588:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$Api21Impl -> androidx.core.content.FileProvider$Api21Impl:
    930:930:java.io.File[] getExternalMediaDirs(android.content.Context) -> getExternalMediaDirs
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    779:782:void <init>(java.lang.String) -> <init>
    790:802:void addRoot(java.lang.String,java.io.File) -> addRoot
    845:864:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    809:840:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    98:124:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    143:144:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.CamColor -> androidx.core.content.res.CamColor:
    128:137:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    290:294:float distance(androidx.core.content.res.CamColor) -> distance
    490:509:androidx.core.content.res.CamColor findCamByJ(float,float,float) -> findCamByJ
    160:160:androidx.core.content.res.CamColor fromColor(int) -> fromColor
    171:242:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions) -> fromColorInViewingConditions
    253:253:androidx.core.content.res.CamColor fromJch(float,float,float) -> fromJch
    266:280:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions) -> fromJchInFrame
    116:116:float getAStar() -> getAStar
    123:123:float getBStar() -> getBStar
    63:63:float getChroma() -> getChroma
    57:57:float getHue() -> getHue
    69:69:float getJ() -> getJ
    109:109:float getJStar() -> getJStar
    149:149:int toColor(float,float,float) -> toColor
    414:471:int toColor(float,float,float,androidx.core.content.res.ViewingConditions) -> toColor
    308:353:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    301:301:int viewedInSrgb() -> viewedInSrgb
androidx.core.content.res.CamUtils -> androidx.core.content.res.CamUtils:
    52:73:void <clinit>() -> <clinit>
    101:101:int intFromLStar(float) -> intFromLStar
    111:111:float lStarFromInt(int) -> lStarFromInt
    121:121:float lStarFromY(float) -> lStarFromY
    163:163:float linearized(int) -> linearized
    137:144:float[] xyzFromInt(int) -> xyzFromInt
    127:131:float yFromInt(int) -> yFromInt
    151:151:float yFromLStar(float) -> yFromLStar
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    53:53:void <clinit>() -> <clinit>
    92:104:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    119:125:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    224:227:android.util.TypedValue getTypedValue() -> getTypedValue
    71:74:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    134:212:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    216:218:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    247:252:int modulateColorAlpha(int,float,float) -> modulateColorAlpha
    234:235:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:142:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    258:258:int getType(android.content.res.TypedArray,int) -> getType
    186:194:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    277:301:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    199:204:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    211:251:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    315:343:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    350:350:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    306:308:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$Api21Impl -> androidx.core.content.res.FontResourcesParserCompat$Api21Impl:
    372:372:int getType(android.content.res.TypedArray,int) -> getType
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    171:172:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    176:176:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    131:137:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    141:141:java.lang.String getFileName() -> getFileName
    161:161:int getResourceId() -> getResourceId
    157:157:int getTtcIndex() -> getTtcIndex
    153:153:java.lang.String getVariationSettings() -> getVariationSettings
    145:145:int getWeight() -> getWeight
    149:149:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    88:92:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    105:105:int getFetchStrategy() -> getFetchStrategy
    101:101:androidx.core.provider.FontRequest getRequest() -> getRequest
    115:115:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    109:109:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    204:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    42:48:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:61:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    75:80:void <clinit>() -> <clinit>
    296:304:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme) -> addColorStateListToCache
    272:288:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    436:439:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    230:246:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    137:137:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    170:170:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    408:411:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    523:529:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    543:546:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    316:319:android.util.TypedValue getTypedValue() -> getTypedValue
    256:264:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    308:310:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    568:574:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    600:660:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$Api21Impl -> androidx.core.content.res.ResourcesCompat$Api21Impl:
    705:705:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    711:711:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
androidx.core.content.res.ResourcesCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$Api23Impl:
    693:693:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    688:688:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    355:358:void <init>(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    328:330:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    336:339:boolean equals(java.lang.Object) -> equals
    344:344:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    void $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig
      # {"id":"com.android.tools.r8.synthesized"}
    446:446:void <init>() -> <init>
    490:490:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    478:478:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    497:497:android.os.Handler getHandler(android.os.Handler) -> getHandler
    490:490:void lambda$callbackFailAsync$1(int) -> lambda$callbackFailAsync$1
    478:478:void lambda$callbackSuccessAsync$0(android.graphics.Typeface) -> lambda$callbackSuccessAsync$0
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$0 -> f$0
    int androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$1 -> f$1
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$1 -> f$1
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$0 -> f$0
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$0$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    753:756:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl:
    778:778:void <clinit>() -> <clinit>
    785:803:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl:
    768:768:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    354:356:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:277:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:180:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:312:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:328:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:344:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    253:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.content.res.ViewingConditions -> androidx.core.content.res.ViewingConditions:
    53:56:void <clinit>() -> <clinit>
    112:122:void <init>(float,float,float,float,float,float,float[],float,float,float) -> <init>
    71:71:float getAw() -> getAw
    87:87:float getC() -> getC
    100:100:float getFl() -> getFl
    104:104:float getFlRoot() -> getFlRoot
    75:75:float getN() -> getN
    79:79:float getNbb() -> getNbb
    91:91:float getNc() -> getNc
    83:83:float getNcb() -> getNcb
    96:96:float[] getRgbD() -> getRgbD
    108:108:float getZ() -> getZ
    130:191:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean) -> make
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    46:46:void <clinit>() -> <clinit>
    457:470:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    561:568:int XYZToColor(double,double,double) -> XYZToColor
    158:161:double calculateLuminance(int) -> calculateLuminance
    434:434:void colorToXYZ(int,double[]) -> colorToXYZ
    144:144:int compositeAlpha(int,int) -> compositeAlpha
    54:65:int compositeColors(int,int) -> compositeColors
    149:149:int compositeComponent(int,int,int,int,int) -> compositeComponent
    605:605:int constrain(int,int,int) -> constrain
    697:700:double[] getTempDouble3Array() -> getTempDouble3Array
    379:379:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    37:37:void <clinit>() -> <clinit>
    44:48:void <init>(int,int,int,int) -> <init>
    145:152:boolean equals(java.lang.Object) -> equals
    159:162:int hashCode() -> hashCode
    116:117:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    65:67:androidx.core.graphics.Insets of(int,int,int,int) -> of
    78:78:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    192:192:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    202:202:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    169:169:java.lang.String toString() -> toString
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.Insets$Api29Impl:
    213:213:android.graphics.Insets of(int,int,int,int) -> of
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    42:42:void <clinit>() -> <clinit>
    53:112:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    149:155:androidx.core.util.Pair obtainEmptyRects() -> obtainEmptyRects
androidx.core.graphics.PaintCompat$Api23Impl -> androidx.core.graphics.PaintCompat$Api23Impl:
    183:183:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    190:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    55:64:float[] copyOfRange(float[],int,int) -> copyOfRange
    97:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:79:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    123:125:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    260:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:175:int nextStart(java.lang.String,int) -> nextStart
    163:166:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:354:void <init>(char,float[]) -> <init>
    357:359:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    399:642:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:780:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:719:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:390:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    371:373:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    50:69:void <clinit>() -> <clinit>
    286:297:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    255:255:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    152:189:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    223:227:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int) -> createFromResourcesFontFile
    110:120:java.lang.String createResourceUid(android.content.res.Resources,int,java.lang.String,int,int) -> createResourceUid
    83:83:android.graphics.Typeface findFromCache(android.content.res.Resources,int,java.lang.String,int,int) -> findFromCache
    131:134:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    371:372:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    384:385:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    377:378:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:104:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:114:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:124:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:95:boolean isUsable() -> isUsable
    103:103:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:142:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:156:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:172:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    38:38:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:66:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    132:156:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    90:119:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    172:177:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    53:63:android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int) -> findBaseFont
    75:75:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    48:49:int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle) -> getMatchScore
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    119:135:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    223:239:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    64:64:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    72:74:java.lang.Object findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    104:104:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    104:104:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    104:104:int getWeight(java.lang.Object) -> getWeight
    107:107:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    104:104:boolean isItalic(java.lang.Object) -> isItalic
    112:112:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    195:195:void closeQuietly(java.io.Closeable) -> closeQuietly
    136:147:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    155:170:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    180:184:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    71:80:java.io.File getTempFile(android.content.Context) -> getTempFile
    96:100:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    112:123:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    221:236:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.TypefaceCompatUtil$Api19Impl -> androidx.core.graphics.TypefaceCompatUtil$Api19Impl:
    249:249:android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openFileDescriptor
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    193:193:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    203:203:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    229:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    181:181:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    218:218:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    401:420:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    277:277:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    98:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    64:64:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    81:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    113:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    126:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    363:383:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    138:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    152:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    166:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    343:344:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    316:320:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.DrawableCompat$Api19Impl -> androidx.core.graphics.drawable.DrawableCompat$Api19Impl:
    450:450:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    456:456:android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int) -> getChild
    461:461:android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable) -> getDrawable
    445:445:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    440:440:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
androidx.core.graphics.drawable.DrawableCompat$Api21Impl -> androidx.core.graphics.drawable.DrawableCompat$Api21Impl:
    493:493:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    498:498:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    503:503:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    510:510:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    473:473:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    515:515:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    478:478:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    483:483:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    488:488:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.DrawableCompat$Api23Impl -> androidx.core.graphics.drawable.DrawableCompat$Api23Impl:
    532:532:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    527:527:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    213:213:void <clinit>() -> <clinit>
    157:376:void <init>() -> <init>
    176:380:void <init>(int) -> <init>
    997:997:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> createFromIcon
    1024:1058:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    352:354:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String) -> createWithAdaptiveBitmapContentUri
    367:368:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
    278:280:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    325:327:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    339:340:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    252:267:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    454:465:android.graphics.Bitmap getBitmap() -> getBitmap
    433:439:int getResId() -> getResId
    406:420:java.lang.String getResPackage() -> getResPackage
    391:392:int getType() -> getType
    478:484:android.net.Uri getUri() -> getUri
    666:679:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    888:924:void onPostParceling() -> onPostParceling
    851:881:void onPreParceling(boolean) -> onPreParceling
    529:529:android.graphics.drawable.Icon toIcon() -> toIcon
    540:543:android.graphics.drawable.Icon toIcon(android.content.Context) -> toIcon
    809:846:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$Api23Impl:
    1206:1216:androidx.core.graphics.drawable.IconCompat createFromIconInner(java.lang.Object) -> createFromIconInner
    1231:1243:int getResId(java.lang.Object) -> getResId
    1184:1196:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1156:1168:int getType(java.lang.Object) -> getType
    1260:1272:android.net.Uri getUri(java.lang.Object) -> getUri
    1342:1342:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context) -> loadDrawable
    1281:1335:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context) -> toIcon
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$Api26Impl:
    1098:1098:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> createAdaptiveIconDrawable
    1103:1103:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$Api28Impl:
    1080:1080:int getResId(java.lang.Object) -> getResId
    1070:1070:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1075:1075:int getType(java.lang.Object) -> getType
    1085:1085:android.net.Uri getUri(java.lang.Object) -> getUri
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$Api30Impl:
    1115:1115:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    222:224:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    216:216:int getLayoutDirection() -> getLayoutDirection
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    334:334:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    263:263:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    232:240:android.graphics.drawable.Drawable mutate() -> mutate
    255:255:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    210:210:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    284:284:boolean onLevelChange(int) -> onLevelChange
    271:271:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    289:289:void setTint(int) -> setTint
    294:295:void setTintList(android.content.res.ColorStateList) -> setTintList
    300:301:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    342:360:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    279:279:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    305:324:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:44:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:49:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:145:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:64:void getOutline(android.graphics.Outline) -> getOutline
    113:115:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:133:boolean isProjected() -> isProjected
    54:54:void setHotspot(float,float) -> setHotspot
    59:59:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:105:boolean setState(int[]) -> setState
    84:87:void setTint(int) -> setTint
    75:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:96:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    32:40:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    54:54:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    105:105:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.net.ConnectivityManagerCompat$Api16Impl -> androidx.core.net.ConnectivityManagerCompat$Api16Impl:
    182:182:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    54:62:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    160:160:boolean isAtLeastR() -> isAtLeastR
    176:177:boolean isAtLeastS() -> isAtLeastS
    209:211:boolean isAtLeastT() -> isAtLeastT
androidx.core.os.BundleApi18ImplKt -> androidx.core.os.BundleApi18ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    114:114:void <init>() -> <init>
    118:118:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.os.BundleApi21ImplKt -> androidx.core.os.BundleApi21ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    121:121:void <init>() -> <init>
    125:125:void putSize(android.os.Bundle,java.lang.String,android.util.Size) -> putSize
    129:129:void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF) -> putSizeF
androidx.core.os.BundleKt -> androidx.core.os.BundleKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    34:102:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    39:39:void <init>() -> <init>
    71:93:void cancel() -> cancel
    113:124:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    155:157:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.CancellationSignal$Api16Impl -> androidx.core.os.CancellationSignal$Api16Impl:
    182:182:void cancel(java.lang.Object) -> cancel
    187:187:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
androidx.core.os.HandlerCompat -> androidx.core.os.HandlerCompat:
    65:95:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.core.os.HandlerCompat$Api28Impl -> androidx.core.os.HandlerCompat$Api28Impl:
    267:267:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    53:66:void <clinit>() -> <clinit>
    109:109:void beginSection(java.lang.String) -> beginSection
    122:122:void endSection() -> endSection
androidx.core.os.TraceCompat$Api18Impl -> androidx.core.os.TraceCompat$Api18Impl:
    225:225:void beginSection(java.lang.String) -> beginSection
    230:230:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:42:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:68:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:83:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:55:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:58:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:71:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    36:39:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    int $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo(byte[],byte[]) -> $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo
      # {"id":"com.android.tools.r8.synthesized"}
    197:197:void <clinit>() -> <clinit>
    223:225:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    211:215:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    55:63:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    77:102:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    198:203:int lambda$static$0(byte[],byte[]) -> lambda$static$0
    120:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$$ExternalSyntheticLambda0 -> androidx.core.provider.FontProvider$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.provider.FontProvider$$InternalSyntheticLambda$0$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0 androidx.core.provider.FontProvider$$InternalSyntheticLambda$0$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.INSTANCE -> INSTANCE
    void androidx.core.provider.FontProvider$$InternalSyntheticLambda$0$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.provider.FontProvider$$InternalSyntheticLambda$0$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.provider.FontProvider$$InternalSyntheticLambda$0$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.provider.FontProvider$Api16Impl -> androidx.core.provider.FontProvider$Api16Impl:
    241:241:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> query
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    227:227:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    269:285:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    238:262:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:206:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:133:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    175:177:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    194:194:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    194:194:java.lang.Object call() -> call
    198:200:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    206:206:void <init>(java.lang.String) -> <init>
    206:206:void accept(java.lang.Object) -> accept
    210:218:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    301:303:void <init>(int) -> <init>
    307:309:void <init>(android.graphics.Typeface) -> <init>
    314:314:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    76:76:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    102:102:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:392:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:297:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    82:93:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:57:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:166:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
    178:179:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:185:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:138:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:151:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:154:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:265:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:306:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:334:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    392:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    412:427:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:140:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:169:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:586:void <clinit>() -> <clinit>
    628:631:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:859:byte dirTypeBackward() -> dirTypeBackward
    816:829:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:707:int getEntryDir() -> getEntryDir
    744:748:int getExitDir() -> getExitDir
    944:955:byte skipEntityBackward() -> skipEntityBackward
    929:929:byte skipEntityForward() -> skipEntityForward
    901:919:byte skipTagBackward() -> skipTagBackward
    872:887:byte skipTagForward() -> skipTagForward
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:73:void <clinit>() -> <clinit>
    747:747:char charAt(int) -> charAt
    522:522:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    511:512:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    722:722:int getSpanEnd(java.lang.Object) -> getSpanEnd
    727:727:int getSpanFlags(java.lang.Object) -> getSpanFlags
    717:717:int getSpanStart(java.lang.Object) -> getSpanStart
    707:710:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    742:742:int length() -> length
    732:732:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    689:696:void removeSpan(java.lang.Object) -> removeSpan
    673:680:void setSpan(java.lang.Object,int,int,int) -> setSpan
    752:752:java.lang.CharSequence subSequence(int,int) -> subSequence
    758:758:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    196:209:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    213:218:void <init>(android.text.PrecomputedText$Params) -> <init>
    334:342:boolean equals(java.lang.Object) -> equals
    274:317:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    252:252:int getBreakStrategy() -> getBreakStrategy
    264:264:int getHyphenationFrequency() -> getHyphenationFrequency
    240:240:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    227:227:android.text.TextPaint getTextPaint() -> getTextPaint
    351:360:int hashCode() -> hashCode
    378:399:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:125:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:232:void <init>(boolean) -> <init>
    208:226:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:190:void <init>() -> <init>
    185:185:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:115:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:157:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:244:void <init>() -> <init>
    249:249:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    35:35:void <clinit>() -> <clinit>
    93:93:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.text.TextUtilsCompat$Api17Impl -> androidx.core.text.TextUtilsCompat$Api17Impl:
    143:143:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    55:55:boolean equals(java.lang.Object,java.lang.Object) -> equals
    97:97:int hash(java.lang.Object[]) -> hash
    134:134:java.lang.Object requireNonNull(java.lang.Object) -> requireNonNull
    159:159:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
androidx.core.util.ObjectsCompat$Api19Impl -> androidx.core.util.ObjectsCompat$Api19Impl:
    171:171:boolean equals(java.lang.Object,java.lang.Object) -> equals
    176:176:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:39:void <init>(java.lang.Object,java.lang.Object) -> <init>
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:98:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:121:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:153:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    52:52:void checkArgument(boolean,java.lang.Object) -> checkArgument
    246:252:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    209:209:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    225:225:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    191:193:int checkFlagsArgument(int,int) -> checkFlagsArgument
    137:137:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    154:154:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    169:169:void checkState(boolean,java.lang.String) -> checkState
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    135:135:void <clinit>() -> <clinit>
    144:144:void <init>() -> <init>
    151:153:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    330:332:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    411:413:java.util.List getActionList(android.view.View) -> getActionList
    160:160:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    398:401:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    265:265:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    285:286:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    244:244:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    310:310:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    360:373:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    380:388:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    178:178:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    201:201:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    68:69:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    75:75:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    123:126:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    80:80:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    86:95:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    101:101:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    107:107:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    131:131:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    112:112:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    117:117:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$Api16Impl -> androidx.core.view.AccessibilityDelegateCompat$Api16Impl:
    425:425:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    431:431:boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    135:136:void <init>(android.content.Context) -> <init>
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    313:314:void reset() -> reset
    290:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    300:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    151:152:void <init>(androidx.core.view.ContentInfoCompat$Compat) -> <init>
    145:145:java.lang.String flagsToString(int) -> flagsToString
    196:196:android.content.ClipData getClip() -> getClip
    213:213:int getFlags() -> getFlags
    205:205:int getSource() -> getSource
    114:114:java.lang.String sourceToString(int) -> sourceToString
    182:182:android.view.ContentInfo toContentInfo() -> toContentInfo
    167:167:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo) -> toContentInfoCompat
    188:188:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    517:521:void <init>(android.content.ClipData,int) -> <init>
    592:592:androidx.core.view.ContentInfoCompat build() -> build
    583:583:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    558:558:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    571:571:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl:
    668:669:void <init>(android.content.ClipData,int) -> <init>
    704:704:androidx.core.view.ContentInfoCompat build() -> build
    698:698:void setExtras(android.os.Bundle) -> setExtras
    688:688:void setFlags(int) -> setFlags
    693:693:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.ContentInfoCompat$BuilderCompatImpl:
    618:620:void <init>(android.content.ClipData,int) -> <init>
    659:659:androidx.core.view.ContentInfoCompat build() -> build
    653:653:void setExtras(android.os.Bundle) -> setExtras
    643:643:void setFlags(int) -> setFlags
    648:648:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.ContentInfoCompat$Compat31Impl:
    446:447:void <init>(android.view.ContentInfo) -> <init>
    459:459:android.content.ClipData getClip() -> getClip
    471:471:int getFlags() -> getFlags
    465:465:int getSource() -> getSource
    453:453:android.view.ContentInfo getWrapped() -> getWrapped
    489:489:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.ContentInfoCompat$CompatImpl:
    383:389:void <init>(androidx.core.view.ContentInfoCompat$BuilderCompatImpl) -> <init>
    401:401:android.content.ClipData getClip() -> getClip
    413:413:int getFlags() -> getFlags
    407:407:int getSource() -> getSource
    431:436:java.lang.String toString() -> toString
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    112:113:void <init>(android.view.DisplayCutout) -> <init>
    194:198:boolean equals(java.lang.Object) -> equals
    127:128:int getSafeInsetBottom() -> getSafeInsetBottom
    136:137:int getSafeInsetLeft() -> getSafeInsetLeft
    145:146:int getSafeInsetRight() -> getSafeInsetRight
    118:119:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    209:209:java.lang.String toString() -> toString
    213:213:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout) -> wrap
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.DisplayCutoutCompat$Api28Impl:
    229:229:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List) -> createDisplayCutout
    254:254:java.util.List getBoundingRects(android.view.DisplayCutout) -> getBoundingRects
    239:239:int getSafeInsetBottom(android.view.DisplayCutout) -> getSafeInsetBottom
    244:244:int getSafeInsetLeft(android.view.DisplayCutout) -> getSafeInsetLeft
    249:249:int getSafeInsetRight(android.view.DisplayCutout) -> getSafeInsetRight
    234:234:int getSafeInsetTop(android.view.DisplayCutout) -> getSafeInsetTop
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    510:510:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    524:526:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    548:548:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    473:474:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    484:484:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    69:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    151:151:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.GravityCompat$Api17Impl -> androidx.core.view.GravityCompat$Api17Impl:
    170:170:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    176:176:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    181:181:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    98:112:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    121:144:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    168:181:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    64:64:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    85:94:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    149:160:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    141:141:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    67:67:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    48:48:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    105:105:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    86:86:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MarginLayoutParamsCompat$Api17Impl -> androidx.core.view.MarginLayoutParamsCompat$Api17Impl:
    208:208:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    188:188:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    183:183:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    203:203:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    220:220:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    214:214:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    198:198:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    193:193:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuHostHelper -> androidx.core.view.MenuHostHelper:
    56:67:void <init>(java.lang.Runnable) -> <init>
    132:133:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    92:93:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    121:122:void onMenuClosed(android.view.Menu) -> onMenuClosed
    106:107:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    79:80:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
    199:204:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
androidx.core.view.MenuHostHelper$LifecycleContainer -> androidx.core.view.MenuHostHelper$LifecycleContainer:
    218:219:void clearObservers() -> clearObservers
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    214:218:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    487:491:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    331:334:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    531:535:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    567:571:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    437:441:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    363:366:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$Api26Impl -> androidx.core.view.MenuItemCompat$Api26Impl:
    647:647:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    609:609:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    657:657:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    667:667:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    636:636:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    619:619:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    642:642:android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    604:604:android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    652:652:android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    662:662:android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    631:631:android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    625:625:android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    614:614:android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    555:555:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:332:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:271:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    406:408:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    416:419:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:103:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    androidx.core.view.ContentInfoCompat $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg(androidx.core.view.ContentInfoCompat) -> $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg
      # {"id":"com.android.tools.r8.synthesized"}
    477:4541:void <clinit>() -> <clinit>
    4386:4386:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1234:1238:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1329:1332:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    2082:2088:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    3695:3701:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3647:3653:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2664:2664:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2585:2590:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4184:4187:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4176:4179:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    939:943:void ensureAccessibilityDelegateCompat(android.view.View) -> ensureAccessibilityDelegateCompat
    4085:4085:int generateViewId() -> generateViewId
    928:935:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    948:951:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    959:979:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1800:1800:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4302:4302:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1364:1368:java.util.List getActionList(android.view.View) -> getActionList
    1280:1292:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    3012:3012:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    3059:3059:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3740:3740:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3862:3862:android.view.Display getDisplay(android.view.View) -> getDisplay
    2367:2367:float getElevation(android.view.View) -> getElevation
    498:506:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2851:2854:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2498:2498:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1108:1108:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    788:789:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1621:1621:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2049:2049:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2013:2013:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2808:2811:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    1867:1867:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1851:1851:int getPaddingStart(android.view.View) -> getPaddingStart
    2641:2644:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1407:1407:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2424:2424:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2441:2441:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3587:3587:float getZ(android.view.View) -> getZ
    914:914:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3762:3762:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2971:2971:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    994:994:boolean hasTransientState(android.view.View) -> hasTransientState
    4365:4366:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3750:3750:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3556:3556:boolean isLaidOut(android.view.View) -> isLaidOut
    3138:3138:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2984:2984:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4227:4228:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4482:4516:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3664:3687:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3616:3639:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2557:2562:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    700:700:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4306:4306:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1209:1209:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2834:2847:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1023:1023:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1063:1063:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1086:1086:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1346:1347:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1353:1356:void removeActionWithId(int,android.view.View) -> removeActionWithId
    1320:1322:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2452:2452:void requestApplyInsets(android.view.View) -> requestApplyInsets
    529:530:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4232:4232:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    731:734:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4382:4382:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1836:1836:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4276:4280:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2997:2997:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    3028:3041:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    3076:3089:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3725:3725:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2356:2356:void setElevation(android.view.View,float) -> setElevation
    2513:2513:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    1008:1008:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1136:1136:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    832:833:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2537:2537:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1888:1888:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    4208:4208:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3813:3814:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    1389:1389:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
    2402:2402:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4523:4537:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3179:3179:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3707:3709:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0 androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.INSTANCE -> INSTANCE
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ContentInfoCompat androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    4233:4233:void <init>(int,java.lang.Class,int) -> <init>
    4233:4233:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4238:4238:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4233:4233:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4244:4244:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4233:4233:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4249:4249:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4307:4307:void <init>(int,java.lang.Class,int,int) -> <init>
    4307:4307:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4312:4312:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4307:4307:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4318:4318:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4307:4307:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4323:4323:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4330:4330:void <init>(int,java.lang.Class,int,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4341:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4387:4387:void <init>(int,java.lang.Class,int) -> <init>
    4387:4387:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4392:4392:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4387:4387:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4398:4398:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4387:4387:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4403:4403:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4544:4546:void <init>() -> <init>
    4572:4575:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4588:4594:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4551:4553:void onGlobalLayout() -> onGlobalLayout
    4562:4562:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4600:4600:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4581:4583:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4605:4606:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4416:4416:void <init>(int,java.lang.Class,int) -> <init>
    4421:4425:void <init>(int,java.lang.Class,int,int) -> <init>
    4473:4474:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4456:4456:boolean frameworkAvailable() -> frameworkAvailable
    4444:4448:java.lang.Object get(android.view.View) -> get
    4430:4438:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.ViewCompat$Api15Impl:
    5257:5257:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.ViewCompat$Api16Impl:
    5411:5411:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    5441:5441:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    5401:5401:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    5426:5426:int getMinimumHeight(android.view.View) -> getMinimumHeight
    5421:5421:int getMinimumWidth(android.view.View) -> getMinimumWidth
    5416:5416:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    5431:5431:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    5451:5451:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    5371:5371:boolean hasTransientState(android.view.View) -> hasTransientState
    5446:5446:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    5381:5381:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    5386:5386:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    5391:5391:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    5396:5396:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    5462:5462:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    5436:5436:void requestFitSystemWindows(android.view.View) -> requestFitSystemWindows
    5456:5456:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    5376:5376:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    5406:5406:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.ViewCompat$Api17Impl:
    5314:5314:int generateViewId() -> generateViewId
    5309:5309:android.view.Display getDisplay(android.view.View) -> getDisplay
    5319:5319:int getLabelFor(android.view.View) -> getLabelFor
    5334:5334:int getLayoutDirection(android.view.View) -> getLayoutDirection
    5349:5349:int getPaddingEnd(android.view.View) -> getPaddingEnd
    5344:5344:int getPaddingStart(android.view.View) -> getPaddingStart
    5359:5359:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    5324:5324:void setLabelFor(android.view.View,int) -> setLabelFor
    5329:5329:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    5339:5339:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    5354:5354:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
androidx.core.view.ViewCompat$Api18Impl -> androidx.core.view.ViewCompat$Api18Impl:
    5202:5202:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    5192:5192:boolean isInLayout(android.view.View) -> isInLayout
    5197:5197:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.ViewCompat$Api19Impl:
    5229:5229:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    5219:5219:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    5214:5214:boolean isLaidOut(android.view.View) -> isLaidOut
    5224:5224:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    5245:5245:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    5234:5234:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    5239:5239:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.ViewCompat$Api20Impl:
    5564:5564:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets) -> dispatchApplyWindowInsets
    5559:5559:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    5554:5554:void requestApplyInsets(android.view.View) -> requestApplyInsets
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4886:4890:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4811:4816:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4897:4897:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    4903:4903:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    5006:5006:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    4999:4999:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    4958:4958:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    4963:4963:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    4943:4943:float getElevation(android.view.View) -> getElevation
    4805:4805:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4948:4948:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    4928:4928:float getTranslationZ(android.view.View) -> getTranslationZ
    4908:4908:float getZ(android.view.View) -> getZ
    4993:4993:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    4938:4938:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    4978:4978:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    4953:4953:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    4968:4968:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    4918:4918:void setElevation(android.view.View,float) -> setElevation
    4973:4973:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    4826:4840:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    4933:4933:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4923:4923:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4913:4913:void setZ(android.view.View,float) -> setZ
    4983:4983:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    4988:4988:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4840:4841:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4846:4872:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    5018:5025:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    5041:5041:int getScrollIndicators(android.view.View) -> getScrollIndicators
    5031:5031:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    5036:5036:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
androidx.core.view.ViewCompat$Api26Impl -> androidx.core.view.ViewCompat$Api26Impl:
    5155:5155:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    5170:5170:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    5118:5118:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    5165:5165:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    5138:5138:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    5180:5180:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    5128:5128:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    5149:5149:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    5160:5160:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    5108:5108:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    5143:5143:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    5175:5175:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    5133:5133:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    5123:5123:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    5113:5113:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.ViewCompat$Api28Impl:
    5514:5525:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    5480:5480:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    5496:5496:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    5501:5501:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    5533:5541:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    5475:5475:java.lang.Object requireViewById(android.view.View,int) -> requireViewById
    5491:5491:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    5486:5486:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    5506:5506:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$0$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.f$0 -> f$0
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$0$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$0$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    5061:5061:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    5071:5071:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    5055:5055:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    5066:5066:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
    5096:5096:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    5091:5091:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.ViewCompat$Api31Impl:
    2878:2878:java.lang.String[] getReceiveContentMimeTypes(android.view.View) -> getReceiveContentMimeTypes
    2885:2894:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    2868:2870:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter:
    2905:2906:void <init>(androidx.core.view.OnReceiveContentListener) -> <init>
    2912:2921:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4614:4614:void <clinit>() -> <clinit>
    4610:4629:void <init>() -> <init>
    4639:4643:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4649:4660:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4668:4682:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4632:4635:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4727:4732:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4694:4717:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4767:4791:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    42:47:void <clinit>() -> <clinit>
    110:121:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    84:87:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    132:135:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    101:104:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    146:152:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewConfigurationCompat$Api26Impl -> androidx.core.view.ViewConfigurationCompat$Api26Impl:
    166:166:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration) -> getScaledHorizontalScrollFactor
    171:171:float getScaledVerticalScrollFactor(android.view.ViewConfiguration) -> getScaledVerticalScrollFactor
androidx.core.view.ViewConfigurationCompat$Api28Impl -> androidx.core.view.ViewConfigurationCompat$Api28Impl:
    183:183:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    189:189:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    160:160:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewGroupCompat$Api21Impl -> androidx.core.view.ViewGroupCompat$Api21Impl:
    227:227:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    222:222:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    217:217:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewGroupKt -> androidx.core.view.ViewGroupKt:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    103:103:kotlin.sequences.Sequence getChildren(android.view.ViewGroup) -> getChildren
    117:117:kotlin.sequences.Sequence getDescendants(android.view.ViewGroup) -> getDescendants
    89:89:java.util.Iterator iterator(android.view.ViewGroup) -> iterator
androidx.core.view.ViewGroupKt$children$1 -> androidx.core.view.ViewGroupKt$children$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    103:103:void <init>(android.view.ViewGroup) -> <init>
    104:104:java.util.Iterator iterator() -> iterator
androidx.core.view.ViewGroupKt$descendants$1 -> androidx.core.view.ViewGroupKt$descendants$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    117:124:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    55:56:void androidx.core.view.ViewGroupKt.forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> invokeSuspend
    55:56:java.lang.Object invokeSuspend(java.lang.Object):118 -> invokeSuspend
    119:124:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.core.view.ViewGroupKt$iterator$1 -> androidx.core.view.ViewGroupKt$iterator$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    89:89:void <init>(android.view.ViewGroup) -> <init>
    91:91:boolean hasNext() -> hasNext
    89:89:java.lang.Object next() -> next
    92:92:android.view.View next() -> next
    93:93:void remove() -> remove
androidx.core.view.ViewKt -> androidx.core.view.ViewKt:
# {"id":"sourceFile","fileName":"View.kt"}
    413:413:kotlin.sequences.Sequence getAllViews(android.view.View) -> getAllViews
androidx.core.view.ViewKt$allViews$1 -> androidx.core.view.ViewKt$allViews$1:
# {"id":"sourceFile","fileName":"View.kt"}
    413:418:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    429:431:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    466:468:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    387:396:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    332:352:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    250:260:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    209:219:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    285:294:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewParentCompat$Api21Impl -> androidx.core.view.ViewParentCompat$Api21Impl:
    558:558:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    563:563:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    552:552:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    547:547:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    536:536:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    531:531:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    541:541:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    void $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc
      # {"id":"com.android.tools.r8.synthesized"}
    38:46:void <init>(android.view.View) -> <init>
    148:149:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    493:494:void cancel() -> cancel
    252:253:long getDuration() -> getDuration
    830:830:void lambda$setUpdateListener$0(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> lambda$setUpdateListener$0
    132:133:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    270:271:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    778:780:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    791:808:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    305:306:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    826:833:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    687:688:void start() -> start
    196:197:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$0$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$0 -> f$0
    android.view.View androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$0$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$1 -> f$1
    void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$0$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.<init>(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$0$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    791:791:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    794:794:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    799:799:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    804:804:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl:
    914:914:android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener) -> setUpdateListener
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    29:29:void <init>() -> <init>
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    135:135:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
    118:121:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api16Impl -> androidx.core.view.WindowCompat$Api16Impl:
    151:153:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api30Impl -> androidx.core.view.WindowCompat$Api30Impl:
    168:168:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:81:void <clinit>() -> <clinit>
    88:96:void <init>(android.view.WindowInsets) -> <init>
    109:129:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    318:318:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2114:2114:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    721:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    730:730:int hashCode() -> hashCode
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1337:1344:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    339:341:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1706:1706:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2110:2110:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2106:2106:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1804:1804:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:173:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2133:2142:void <clinit>() -> <clinit>
    2150:2174:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1399:1405:void <init>() -> <init>
    1416:1422:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1613:1613:androidx.core.view.WindowInsetsCompat build() -> build
    1587:1587:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1442:1442:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1623:1623:void <init>() -> <init>
    1626:1627:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1672:1694:void applyInsetTypes() -> applyInsetTypes
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1720:1721:void <init>() -> <init>
    1725:1726:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1745:1749:androidx.core.view.WindowInsetsCompat build() -> build
    1761:1794:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1739:1739:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1731:1732:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1812:1813:void <init>() -> <init>
    1817:1821:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1857:1860:androidx.core.view.WindowInsetsCompat build() -> build
    1836:1836:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1846:1846:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1831:1831:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1826:1826:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1841:1841:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1868:1868:void <init>() -> <init>
    1872:1872:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    747:751:void <clinit>() -> <clinit>
    755:756:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    784:784:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    774:774:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    769:769:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    841:847:boolean equals(java.lang.Object) -> equals
    822:822:androidx.core.graphics.Insets getInsets(int) -> getInsets
    806:806:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    794:794:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    800:800:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    789:789:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    812:812:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    853:854:int hashCode() -> hashCode
    817:817:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    892:899:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:903:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1111:1115:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1086:1087:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1187:1189:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:945:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    956:1042:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1102:1105:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1064:1071:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1126:1155:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1078:1081:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1171:1182:void loadReflectionField() -> loadReflectionField
    1164:1164:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1097:1097:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1092:1092:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1195:1198:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1195:1203:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1214:1214:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1220:1220:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1226:1233:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1208:1208:boolean isConsumed() -> isConsumed
    1238:1238:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1246:1246:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1250:1250:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1262:1262:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1268:1272:boolean equals(java.lang.Object) -> equals
    1256:1256:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1277:1277:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1284:1289:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1284:1293:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1308:1312:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1299:1302:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1318:1321:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1327:1327:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1350:1350:void <clinit>() -> <clinit>
    1353:1353:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1357:1357:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1363:1364:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2046:2046:int indexOf(int) -> indexOf
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2075:2096:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
    100:108:void <init>(android.view.Window,android.view.View) -> <init>
    217:217:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    193:193:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
    348:348:void <init>() -> <init>
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
    403:405:void <init>(android.view.Window,android.view.View) -> <init>
    488:490:void setSystemUiFlag(int) -> setSystemUiFlag
    502:502:void setWindowFlag(int) -> setWindowFlag
    495:497:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    506:506:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
    554:554:void <init>(android.view.Window,android.view.View) -> <init>
    566:570:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
    579:579:void <init>(android.view.Window,android.view.View) -> <init>
    591:595:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
    613:614:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    605:620:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    683:695:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    656:668:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    803:805:void setSystemUiFlag(int) -> setSystemUiFlag
    796:798:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    382:382:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    361:361:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl:
    463:463:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    458:458:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    171:171:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    187:187:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl:
    286:286:boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListenerWrapper
    294:294:boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListenerWrapper
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    199:200:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    213:218:boolean equals(java.lang.Object) -> equals
    205:205:int hashCode() -> hashCode
    223:223:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1317:1812:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    2111:2111:void addAction(int) -> addAction
    2145:2145:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    2039:2039:void addChild(android.view.View,int) -> addChild
    2935:2938:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2864:2875:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2927:2930:void clearExtrasSpans() -> clearExtrasSpans
    4343:4357:boolean equals(java.lang.Object) -> equals
    2118:2122:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3289:3300:java.util.List getActionList() -> getActionList
    2096:2096:int getActions() -> getActions
    4436:4438:boolean getBooleanProperty(int) -> getBooleanProperty
    2341:2341:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2373:2373:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1988:1988:int getChildCount() -> getChildCount
    2802:2802:java.lang.CharSequence getClassName() -> getClassName
    2901:2903:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2962:2962:java.lang.CharSequence getContentDescription() -> getContentDescription
    3619:3619:android.os.Bundle getExtras() -> getExtras
    2882:2885:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2778:2778:java.lang.CharSequence getPackageName() -> getPackageName
    2892:2892:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2826:2840:java.lang.CharSequence getText() -> getText
    3022:3025:java.lang.String getUniqueId() -> getUniqueId
    3092:3092:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2922:2922:boolean hasSpans() -> hasSpans
    4332:4332:int hashCode() -> hashCode
    2911:2918:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2397:2397:boolean isCheckable() -> isCheckable
    2421:2421:boolean isChecked() -> isChecked
    2579:2579:boolean isClickable() -> isClickable
    2627:2627:boolean isEnabled() -> isEnabled
    2445:2445:boolean isFocusable() -> isFocusable
    2469:2469:boolean isFocused() -> isFocused
    2603:2603:boolean isLongClickable() -> isLongClickable
    2651:2651:boolean isPassword() -> isPassword
    2675:2675:boolean isScrollable() -> isScrollable
    2555:2555:boolean isSelected() -> isSelected
    4127:4130:boolean isShowingHintText() -> isShowingHintText
    1850:1850:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1878:1878:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1889:1889:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2207:2207:boolean performAction(int,android.os.Bundle) -> performAction
    3058:3058:void recycle() -> recycle
    2942:2951:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2545:2545:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4426:4431:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2364:2364:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2388:2388:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2412:2412:void setCheckable(boolean) -> setCheckable
    2436:2436:void setChecked(boolean) -> setChecked
    2817:2817:void setClassName(java.lang.CharSequence) -> setClassName
    2594:2594:void setClickable(boolean) -> setClickable
    3196:3197:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3205:3206:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2992:2992:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    3947:3947:void setDismissable(boolean) -> setDismissable
    2642:2642:void setEnabled(boolean) -> setEnabled
    3415:3415:void setError(java.lang.CharSequence) -> setError
    2460:2460:void setFocusable(boolean) -> setFocusable
    2484:2484:void setFocused(boolean) -> setFocused
    4184:4187:void setHeading(boolean) -> setHeading
    3393:3396:void setHintText(java.lang.CharSequence) -> setHintText
    3440:3440:void setLabelFor(android.view.View) -> setLabelFor
    3716:3716:void setMaxTextLength(int) -> setMaxTextLength
    2793:2793:void setPackageName(java.lang.CharSequence) -> setPackageName
    4060:4063:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2294:2296:void setParent(android.view.View) -> setParent
    2321:2324:void setParent(android.view.View,int) -> setParent
    4112:4115:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2690:2690:void setScrollable(boolean) -> setScrollable
    4147:4150:void setShowingHintText(boolean) -> setShowingHintText
    1925:1928:void setSource(android.view.View,int) -> setSource
    3007:3010:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2856:2856:void setText(java.lang.CharSequence) -> setText
    3876:3877:void setTraversalAfter(android.view.View) -> setTraversalAfter
    2514:2514:void setVisibleToUser(boolean) -> setVisibleToUser
    4367:4422:java.lang.String toString() -> toString
    1829:1829:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1822:1822:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    111:653:void <clinit>() -> <clinit>
    673:673:void <init>(int,java.lang.CharSequence) -> <init>
    687:687:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    691:691:void <init>(java.lang.Object) -> <init>
    696:696:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    701:709:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    773:773:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    787:796:boolean equals(java.lang.Object) -> equals
    719:719:int getId() -> getId
    733:733:java.lang.CharSequence getLabel() -> getLabel
    779:779:int hashCode() -> hashCode
    748:762:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    873:874:void <init>(java.lang.Object) -> <init>
    844:844:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    997:998:void <init>(java.lang.Object) -> <init>
    965:965:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    120:124:void <init>() -> <init>
    138:139:void <init>(java.lang.Object) -> <init>
    147:147:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    39:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    81:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
    98:98:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:105:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    516:516:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    566:566:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    146:146:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl:
    805:805:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    815:815:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    810:810:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    820:820:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl:
    792:792:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:54:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    185:185:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    150:150:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    171:171:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    114:114:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    134:134:void <init>() -> <init>
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    54:54:android.view.animation.Interpolator create(android.graphics.Path) -> create
    89:89:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl -> androidx.core.view.animation.PathInterpolatorCompat$Api21Impl:
    102:102:android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path) -> createPathInterpolator
    107:107:android.view.animation.PathInterpolator createPathInterpolator(float,float) -> createPathInterpolator
    113:113:android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float) -> createPathInterpolator
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    93:93:void <clinit>() -> <clinit>
    183:194:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    463:465:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    160:167:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    237:269:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    214:217:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    485:493:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    297:339:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl -> androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl:
    536:536:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    boolean $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw
      # {"id":"com.android.tools.r8.synthesized"}
    360:361:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View) -> createOnCommitContentListenerUsingPerformReceiveContent
    272:297:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    348:349:android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> createWrapper
    96:133:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
    363:388:boolean lambda$createOnCommitContentListenerUsingPerformReceiveContent$0(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> lambda$createOnCommitContentListenerUsingPerformReceiveContent$0
androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda0 -> androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$0$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.f$0 -> f$0
    void androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$0$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$0$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    279:279:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    284:288:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    297:297:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    300:303:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    167:171:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    175:176:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    184:184:android.net.Uri getContentUri() -> getContentUri
    194:194:android.content.ClipDescription getDescription() -> getDescription
    202:202:android.net.Uri getLinkUri() -> getLinkUri
    249:249:void requestPermission() -> requestPermission
    236:236:java.lang.Object unwrap() -> unwrap
    220:223:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    107:108:void <init>(java.lang.Object) -> <init>
    112:113:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    119:119:android.net.Uri getContentUri() -> getContentUri
    125:125:android.content.ClipDescription getDescription() -> getDescription
    137:137:java.lang.Object getInputContentInfo() -> getInputContentInfo
    131:131:android.net.Uri getLinkUri() -> getLinkUri
    142:142:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:65:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    83:83:android.net.Uri getLinkUri() -> getLinkUri
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:842:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:727:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    46:46:void <clinit>() -> <clinit>
androidx.core.widget.CheckedTextViewCompat -> androidx.core.widget.CheckedTextViewCompat:
    122:122:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
    57:57:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    92:92:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CheckedTextViewCompat$Api16Impl -> androidx.core.widget.CheckedTextViewCompat$Api16Impl:
    163:163:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
androidx.core.widget.CheckedTextViewCompat$Api21Impl -> androidx.core.widget.CheckedTextViewCompat$Api21Impl:
    136:136:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    146:146:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    125:144:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    74:74:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    60:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    96:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api21Impl -> androidx.core.widget.CompoundButtonCompat$Api21Impl:
    163:163:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    173:173:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    158:158:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    168:168:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api23Impl -> androidx.core.widget.CompoundButtonCompat$Api23Impl:
    185:185:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    69:73:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    90:91:float getDistance(android.widget.EdgeEffect) -> getDistance
    198:198:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    245:248:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api21Impl -> androidx.core.widget.EdgeEffectCompat$Api21Impl:
    349:349:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
    311:313:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    334:334:float getDistance(android.widget.EdgeEffect) -> getDistance
    324:326:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    40:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    77:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    52:63:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:101:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ImageViewCompat$Api21Impl -> androidx.core.widget.ImageViewCompat$Api21Impl:
    120:120:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    130:130:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    125:125:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    135:135:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    71:71:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    41:41:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.ListViewCompat$Api19Impl -> androidx.core.widget.ListViewCompat$Api19Impl:
    108:108:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    103:103:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    90:210:void <clinit>() -> <clinit>
    226:226:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:256:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1899:1900:void abortAnimatedScroll() -> abortAnimatedScroll
    514:518:void addView(android.view.View) -> addView
    523:527:void addView(android.view.View,int) -> addView
    532:536:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    541:545:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1517:1561:boolean arrowScroll(int) -> arrowScroll
    1224:1226:boolean canOverScroll() -> canOverScroll
    565:569:boolean canScroll() -> canScroll
    1762:1762:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1755:1755:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1748:1748:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1798:1850:void computeScroll() -> computeScroll
    1951:2010:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1741:1741:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1734:1734:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1710:1720:int computeVerticalScrollRange() -> computeVerticalScrollRange
    1070:1085:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    663:663:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    340:340:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    345:345:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    295:295:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    335:335:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    264:264:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    328:328:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1593:1596:void doScrollY(int) -> doScrollY
    2209:2256:void draw(android.graphics.Canvas) -> draw
    1108:1118:boolean edgeEffectFling(int) -> edgeEffectFling
    2175:2181:void endDrag() -> endDrag
    675:708:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1338:1371:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2163:2170:void fling(int) -> fling
    1454:1469:boolean fullScroll(int) -> fullScroll
    477:485:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    498:498:int getMaxScrollAmount() -> getMaxScrollAmount
    450:450:int getNestedScrollAxes() -> getNestedScrollAxes
    1311:1316:int getScrollRange() -> getScrollRange
    1100:1103:float getSplineFlingDistance(int) -> getSplineFlingDistance
    462:467:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1230:1241:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    282:282:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    322:322:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    717:723:boolean inChild(int,int) -> inChild
    729:732:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    502:509:void initScrollView() -> initScrollView
    737:738:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    307:307:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1571:1571:boolean isOffScreen(android.view.View) -> isOffScreen
    2151:2152:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1579:1583:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1768:1778:void measureChild(android.view.View,int,int) -> measureChild
    1784:1792:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    2118:2120:void onAttachedToWindow() -> onAttachedToWindow
    1168:1211:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    770:866:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2080:2113:void onLayout(boolean,int,int,int,int) -> onLayout
    627:655:void onMeasure(int,int) -> onMeasure
    436:437:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    445:445:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    399:399:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    429:429:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    353:353:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    393:393:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    424:424:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    380:381:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    413:413:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    357:366:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1247:1247:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    2047:2059:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2292:2300:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2306:2308:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    618:621:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1151:1161:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    2125:2139:void onSizeChanged(int,int,int,int) -> onSizeChanged
    407:407:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    386:387:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    418:418:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    871:1035:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1256:1304:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1416:1437:boolean pageScroll(int) -> pageScroll
    743:745:void recycleVelocityTracker() -> recycleVelocityTracker
    1867:1883:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    2017:2023:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2066:2069:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    752:754:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    2074:2075:void requestLayout() -> requestLayout
    1890:1895:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1487:1504:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    2192:2202:void scrollTo(int,int) -> scrollTo
    1909:1917:void scrollToChild(android.view.View) -> scrollToChild
    1930:1936:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    595:597:void setFillViewport(boolean) -> setFillViewport
    302:302:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    558:558:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    613:613:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1053:1056:boolean shouldAbsorb(android.widget.EdgeEffect,int) -> shouldAbsorb
    1608:1608:void smoothScrollBy(int,int) -> smoothScrollBy
    1631:1652:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1686:1686:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1699:1699:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    272:272:boolean startNestedScroll(int,int) -> startNestedScroll
    312:312:boolean startNestedScroll(int) -> startNestedScroll
    1139:1144:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    277:277:void stopNestedScroll(int) -> stopNestedScroll
    317:317:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2352:2352:void <init>() -> <init>
    2424:2432:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2399:2415:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2355:2388:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$Api21Impl -> androidx.core.widget.NestedScrollView$Api21Impl:
    2444:2444:boolean getClipToPadding(android.view.ViewGroup) -> getClipToPadding
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2338:2338:void <clinit>() -> <clinit>
    2316:2316:void <init>(android.os.Parcelable) -> <init>
    2320:2321:void <init>(android.os.Parcel) -> <init>
    2333:2334:java.lang.String toString() -> toString
    2326:2327:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2339:2339:void <init>() -> <init>
    2339:2339:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2342:2342:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2339:2339:java.lang.Object[] newArray(int) -> newArray
    2347:2347:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    93:109:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    157:172:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    71:71:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api19Impl -> androidx.core.widget.PopupWindowCompat$Api19Impl:
    247:247:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api23Impl -> androidx.core.widget.PopupWindowCompat$Api23Impl:
    224:224:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    234:234:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    219:219:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    229:229:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    301:301:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    794:794:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    804:804:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    990:1004:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    933:981:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    841:853:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1020:1024:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1054:1058:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    155:155:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    719:742:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    764:783:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    822:828:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    910:919:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    288:291:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    868:893:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    546:547:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> unwrapCustomSelectionActionModeCallback
    524:534:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$Api16Impl -> androidx.core.widget.TextViewCompat$Api16Impl:
    1148:1148:boolean getIncludeFontPadding(android.widget.TextView) -> getIncludeFontPadding
    1138:1138:int getMaxLines(android.widget.TextView) -> getMaxLines
    1143:1143:int getMinLines(android.widget.TextView) -> getMinLines
androidx.core.widget.TextViewCompat$Api17Impl -> androidx.core.widget.TextViewCompat$Api17Impl:
    1111:1111:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    1094:1094:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1126:1126:int getTextDirection(android.view.View) -> getTextDirection
    1121:1121:java.util.Locale getTextLocale(android.widget.TextView) -> getTextLocale
    1089:1089:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    1100:1100:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1106:1106:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1116:1116:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.core.widget.TextViewCompat$Api23Impl -> androidx.core.widget.TextViewCompat$Api23Impl:
    1234:1234:int getBreakStrategy(android.widget.TextView) -> getBreakStrategy
    1259:1259:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1254:1254:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    1244:1244:int getHyphenationFrequency(android.widget.TextView) -> getHyphenationFrequency
    1239:1239:void setBreakStrategy(android.widget.TextView,int) -> setBreakStrategy
    1264:1264:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1269:1269:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    1249:1249:void setHyphenationFrequency(android.widget.TextView,int) -> setHyphenationFrequency
androidx.core.widget.TextViewCompat$Api24Impl -> androidx.core.widget.TextViewCompat$Api24Impl:
    1281:1281:android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale) -> getInstance
androidx.core.widget.TextViewCompat$Api28Impl -> androidx.core.widget.TextViewCompat$Api28Impl:
    1221:1221:java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols) -> getDigitStrings
    1216:1216:android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1211:1211:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    569:572:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    697:697:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    685:687:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    656:665:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    598:598:android.view.ActionMode$Callback getWrappedCallback() -> getWrappedCallback
    691:693:boolean isEditable(android.widget.TextView) -> isEditable
    672:679:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    588:588:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    577:577:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    593:593:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    582:583:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    602:649:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
    49:49:void <init>() -> <init>
    95:95:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:85:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:108:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
    118:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:151:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:336:void changeCursor(android.database.Cursor) -> changeCursor
    216:217:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:288:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:230:java.lang.Object getItem(int) -> getItem
    241:243:long getItemId(int) -> getItemId
    262:274:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    179:198:void init(android.content.Context,android.database.Cursor,int) -> init
    469:471:void onContentChanged() -> onContentChanged
    351:371:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:477:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    487:487:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:492:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:498:void onChanged() -> onChanged
    503:504:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:40:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:58:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:68:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:84:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.poolingcontainer.PoolingContainer -> androidx.customview.poolingcontainer.PoolingContainer:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
    121:122:void <clinit>() -> <clinit>
    104:155:void callPoolingContainerOnRelease(android.view.View) -> callPoolingContainerOnRelease
    116:157:void callPoolingContainerOnReleaseForChildren(android.view.ViewGroup) -> callPoolingContainerOnReleaseForChildren
    145:148:androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View) -> getPoolingContainerListenerHolder
    81:81:void setPoolingContainer(android.view.View,boolean) -> setPoolingContainer
androidx.customview.poolingcontainer.PoolingContainerListener -> androidx.customview.poolingcontainer.PoolingContainerListener:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
androidx.customview.poolingcontainer.PoolingContainerListenerHolder -> androidx.customview.poolingcontainer.PoolingContainerListenerHolder:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
    124:125:void <init>() -> <init>
    136:137:void onRelease() -> onRelease
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    48:52:void <init>(android.os.Parcelable) -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:150:void <init>(android.view.View) -> <init>
    1001:1004:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1053:1061:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    483:483:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    641:643:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    679:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    655:656:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    793:889:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    736:749:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:194:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    218:251:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:435:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:329:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    452:469:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    935:951:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    722:725:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:280:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:665:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    757:760:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    900:902:boolean performAction(int,int,android.os.Bundle) -> performAction
    913:921:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    907:907:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    971:986:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1019:1040:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    507:517:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    614:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1245:1245:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1252:1254:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1265:1269:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1259:1259:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    329:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:178:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:69:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:84:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    203:230:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    299:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    345:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    372:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    400:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    427:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:103:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    334:334:void <clinit>() -> <clinit>
    120:404:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    540:545:void cancel() -> cancel
    500:508:void captureChildView(android.view.View,int) -> captureChildView
    1305:1318:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1335:1343:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    699:699:int clampMag(int,int,int) -> clampMag
    716:716:float clampMag(float,float,float) -> clampMag
    819:829:void clearMotionHistory() -> clearMotionHistory
    833:843:void clearMotionHistory(int) -> clearMotionHistory
    671:685:int computeAxisDuration(int,int,int) -> computeAxisDuration
    646:661:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    764:798:boolean continueSettling(boolean) -> continueSettling
    357:357:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    371:372:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    808:814:void dispatchViewReleased(float,float) -> dispatchViewReleased
    725:725:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1455:1469:void dragTo(int,int,int,int) -> dragTo
    847:872:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1516:1520:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    626:641:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    1530:1533:int getEdgesTouched(int,int) -> getEdgesTouched
    532:532:int getTouchSlop() -> getTouchSlop
    1484:1484:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    913:913:boolean isPointerDown(int) -> isPointerDown
    1539:1540:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1500:1503:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1126:1277:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1442:1449:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1285:1300:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    877:881:void saveInitialMotion(float,float,int) -> saveInitialMotion
    885:895:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    917:922:void setDragState(int) -> setDragState
    606:613:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    992:1116:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    581:588:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    937:943:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    334:334:void <init>() -> <init>
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    342:342:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    345:345:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    154:154:void <init>() -> <init>
androidx.emoji2.text.ConcurrencyHelpers -> androidx.emoji2.text.ConcurrencyHelpers:
    java.lang.Thread $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A(java.lang.String,java.lang.Runnable) -> $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A
      # {"id":"com.android.tools.r8.synthesized"}
    56:69:java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String) -> createBackgroundPriorityExecutor
    57:58:java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable) -> lambda$createBackgroundPriorityExecutor$0
    77:80:android.os.Handler mainHandlerAsync() -> mainHandlerAsync
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0 -> androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$1$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.f$0 -> f$0
    void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$1$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$1$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl -> androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl:
    105:105:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.emoji2.text.DefaultEmojiCompatConfig -> androidx.emoji2.text.DefaultEmojiCompatConfig:
    97:98:androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context) -> create
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory:
    119:120:void <init>(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper) -> <init>
    145:145:androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest) -> configOrNull
    234:238:java.util.List convertToByteArray(android.content.pm.Signature[]) -> convertToByteArray
    130:130:androidx.emoji2.text.EmojiCompat$Config create(android.content.Context) -> create
    219:225:androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager) -> generateFontRequestFrom
    246:249:androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi() -> getHelperForApi
    201:201:boolean hasFlagSystem(android.content.pm.ProviderInfo) -> hasFlagSystem
    183:188:android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager) -> queryDefaultInstalledContentProvider
    159:169:androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context) -> queryForDefaultFontRequest
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper:
    262:262:void <init>() -> <init>
    270:272:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19:
    302:302:void <init>() -> <init>
    315:315:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> getProviderInfo
    309:309:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> queryIntentContentProviders
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28:
    325:325:void <init>() -> <init>
    338:340:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultGlyphChecker -> androidx.emoji2.text.DefaultGlyphChecker:
    46:46:void <clinit>() -> <clinit>
    53:55:void <init>() -> <init>
    84:87:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    68:80:boolean hasGlyph(java.lang.CharSequence,int,int,int) -> hasGlyph
androidx.emoji2.text.EmojiCompat -> androidx.emoji2.text.EmojiCompat:
    349:350:void <clinit>() -> <clinit>
    459:477:void <init>(androidx.emoji2.text.EmojiCompat$Config) -> <init>
    111:111:androidx.emoji2.text.EmojiCompat$GlyphChecker access$000(androidx.emoji2.text.EmojiCompat) -> access$000
    648:652:androidx.emoji2.text.EmojiCompat get() -> get
    813:813:int getEmojiSpanIndicatorColor() -> getEmojiSpanIndicatorColor
    783:788:int getLoadState() -> getLoadState
    868:868:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    839:839:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    549:557:androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config) -> init
    593:593:boolean isConfigured() -> isConfigured
    804:804:boolean isEmojiSpanIndicatorEnabled() -> isEmojiSpanIndicatorEnabled
    795:795:boolean isInitialized() -> isInitialized
    672:684:void load() -> load
    688:698:void loadMetadata() -> loadMetadata
    719:728:void onMetadataLoadFailed(java.lang.Throwable) -> onMetadataLoadFailed
    704:714:void onMetadataLoadSuccess() -> onMetadataLoadSuccess
    956:957:java.lang.CharSequence process(java.lang.CharSequence) -> process
    991:991:java.lang.CharSequence process(java.lang.CharSequence,int,int) -> process
    1029:1029:java.lang.CharSequence process(java.lang.CharSequence,int,int,int) -> process
    1071:1106:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int) -> process
    746:757:void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> registerInitCallback
    766:772:void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> unregisterInitCallback
    1143:1149:void updateEditorInfo(android.view.inputmethod.EditorInfo) -> updateEditorInfo
androidx.emoji2.text.EmojiCompat$CompatInternal -> androidx.emoji2.text.EmojiCompat$CompatInternal:
    1566:1567:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
androidx.emoji2.text.EmojiCompat$CompatInternal19 -> androidx.emoji2.text.EmojiCompat$CompatInternal19:
    1621:1621:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
    1627:1640:void loadMetadata() -> loadMetadata
    1648:1661:void onMetadataLoadSuccess(androidx.emoji2.text.MetadataRepo) -> onMetadataLoadSuccess
    1683:1683:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1688:1689:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.text.EmojiCompat$CompatInternal19$1 -> androidx.emoji2.text.EmojiCompat$CompatInternal19$1:
    1627:1627:void <init>(androidx.emoji2.text.EmojiCompat$CompatInternal19) -> <init>
    1635:1635:void onFailed(java.lang.Throwable) -> onFailed
    1630:1630:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompat$Config -> androidx.emoji2.text.EmojiCompat$Config:
    1300:1315:void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader) -> <init>
    1508:1508:androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader() -> getMetadataRepoLoader
    1486:1486:androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int) -> setMetadataLoadStrategy
androidx.emoji2.text.EmojiCompat$InitCallback -> androidx.emoji2.text.EmojiCompat$InitCallback:
    1175:1175:void <init>() -> <init>
androidx.emoji2.text.EmojiCompat$ListenerDispatcher -> androidx.emoji2.text.EmojiCompat$ListenerDispatcher:
    1523:1523:void <init>(androidx.emoji2.text.EmojiCompat$InitCallback,int) -> <init>
    1529:1529:void <init>(java.util.Collection,int) -> <init>
    1534:1538:void <init>(java.util.Collection,int,java.lang.Throwable) -> <init>
    1543:1553:void run() -> run
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback:
    1262:1262:void <init>() -> <init>
androidx.emoji2.text.EmojiCompat$SpanFactory -> androidx.emoji2.text.EmojiCompat$SpanFactory:
    1159:1159:void <init>() -> <init>
    1168:1168:androidx.emoji2.text.EmojiSpan createSpan(androidx.emoji2.text.EmojiMetadata) -> createSpan
androidx.emoji2.text.EmojiCompatInitializer -> androidx.emoji2.text.EmojiCompatInitializer:
    73:73:void <init>() -> <init>
    73:73:java.lang.Object create(android.content.Context) -> create
    88:90:java.lang.Boolean create(android.content.Context) -> create
    103:107:void delayUntilFirstResume(android.content.Context) -> delayUntilFirstResume
    128:128:java.util.List dependencies() -> dependencies
    118:119:void loadEmojiCompatAfterDelay() -> loadEmojiCompatAfterDelay
androidx.emoji2.text.EmojiCompatInitializer$1 -> androidx.emoji2.text.EmojiCompatInitializer$1:
    107:107:void <init>(androidx.emoji2.text.EmojiCompatInitializer,androidx.lifecycle.Lifecycle) -> <init>
    void onCreate(androidx.lifecycle.LifecycleOwner) -> onCreate
      # {"id":"com.android.tools.r8.synthesized"}
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
      # {"id":"com.android.tools.r8.synthesized"}
    void onPause(androidx.lifecycle.LifecycleOwner) -> onPause
      # {"id":"com.android.tools.r8.synthesized"}
    110:111:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
    void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
      # {"id":"com.android.tools.r8.synthesized"}
    void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig:
    150:151:void <init>(android.content.Context) -> <init>
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader:
    void $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw
      # {"id":"com.android.tools.r8.synthesized"}
    159:160:void <init>(android.content.Context) -> <init>
    174:203:void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> doLoad
    167:167:void lambda$load$0(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> lambda$load$0
    165:167:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$0 -> f$0
    java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$2 -> f$2
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$1 -> f$1
    void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.<init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1:
    180:180:void <init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
    195:198:void onFailed(java.lang.Throwable) -> onFailed
    185:188:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable -> androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable:
    131:131:void <init>() -> <init>
    137:143:void run() -> run
androidx.emoji2.text.EmojiMetadata -> androidx.emoji2.text.EmojiMetadata:
    73:73:void <clinit>() -> <clinit>
    89:94:void <init>(androidx.emoji2.text.MetadataRepo,int) -> <init>
    108:117:void draw(android.graphics.Canvas,float,float,android.graphics.Paint) -> draw
    230:230:int getCodepointAt(int) -> getCodepointAt
    237:237:int getCodepointsLength() -> getCodepointsLength
    190:190:int getHasGlyph() -> getHasGlyph
    166:166:short getHeight() -> getHeight
    152:152:int getId() -> getId
    132:144:androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem() -> getMetadataItem
    180:180:short getSdkAdded() -> getSdkAdded
    159:159:short getWidth() -> getWidth
    221:221:boolean isDefaultEmoji() -> isDefaultEmoji
    213:213:void setHasGlyph(boolean) -> setHasGlyph
    242:252:java.lang.String toString() -> toString
androidx.emoji2.text.EmojiProcessor -> androidx.emoji2.text.EmojiProcessor:
    112:117:void <init>(androidx.emoji2.text.MetadataRepo,androidx.emoji2.text.EmojiCompat$SpanFactory,androidx.emoji2.text.EmojiCompat$GlyphChecker,boolean,int[]) -> <init>
    490:491:void addEmoji(android.text.Spannable,androidx.emoji2.text.EmojiMetadata,int,int) -> addEmoji
    375:395:boolean delete(android.text.Editable,android.view.KeyEvent,boolean) -> delete
    432:473:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    355:366:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    509:515:boolean hasGlyph(java.lang.CharSequence,int,int,androidx.emoji2.text.EmojiMetadata) -> hasGlyph
    485:485:boolean hasModifiers(android.view.KeyEvent) -> hasModifiers
    210:329:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder -> androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder:
    725:759:int findIndexBackward(java.lang.CharSequence,int,int) -> findIndexBackward
    781:817:int findIndexForward(java.lang.CharSequence,int,int) -> findIndexForward
androidx.emoji2.text.EmojiProcessor$ProcessorSm -> androidx.emoji2.text.EmojiProcessor$ProcessorSm:
    526:569:void <init>(androidx.emoji2.text.MetadataRepo$Node,boolean,int[]) -> <init>
    575:619:int check(int) -> check
    642:642:androidx.emoji2.text.EmojiMetadata getCurrentMetadata() -> getCurrentMetadata
    635:635:androidx.emoji2.text.EmojiMetadata getFlushMetadata() -> getFlushMetadata
    653:654:boolean isInFlushableState() -> isInFlushableState
    625:627:int reset() -> reset
    658:673:boolean shouldUseEmojiPresentationStyleForSingleCodepoint() -> shouldUseEmojiPresentationStyleForSingleCodepoint
androidx.emoji2.text.EmojiSpan -> androidx.emoji2.text.EmojiSpan:
    42:77:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    110:110:androidx.emoji2.text.EmojiMetadata getMetadata() -> getMetadata
    87:98:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    120:120:int getWidth() -> getWidth
androidx.emoji2.text.FontRequestEmojiCompatConfig -> androidx.emoji2.text.FontRequestEmojiCompatConfig:
    442:442:void <clinit>() -> <clinit>
    122:122:void <init>(android.content.Context,androidx.core.provider.FontRequest) -> <init>
    148:148:androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor) -> setLoadingExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper:
    412:412:void <init>() -> <init>
    424:424:android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo) -> buildTypeface
    417:417:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest) -> fetchFonts
    438:438:void unregisterObserver(android.content.Context,android.database.ContentObserver) -> unregisterObserver
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader:
    208:240:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper) -> <init>
    326:342:void cleanUp() -> cleanUp
    350:402:void createMetadata() -> createMetadata
    258:262:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
    267:278:void loadInternal() -> loadInternal
    285:296:androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo() -> retrieveFontInfo
    244:246:void setExecutor(java.util.concurrent.Executor) -> setExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$1$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.f$0 -> f$0
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$1$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.<init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$1$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.MetadataListReader -> androidx.emoji2.text.MetadataListReader:
    120:161:androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader) -> findOffsetInfo
    89:94:androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer) -> read
androidx.emoji2.text.MetadataListReader$ByteBufferReader -> androidx.emoji2.text.MetadataListReader$ByteBufferReader:
    315:317:void <init>(java.nio.ByteBuffer) -> <init>
    342:342:long getPosition() -> getPosition
    332:332:int readTag() -> readTag
    327:327:long readUnsignedInt() -> readUnsignedInt
    322:322:int readUnsignedShort() -> readUnsignedShort
    337:337:void skip(int) -> skip
androidx.emoji2.text.MetadataListReader$OffsetInfo -> androidx.emoji2.text.MetadataListReader$OffsetInfo:
    171:173:void <init>(long,long) -> <init>
    177:177:long getStartOffset() -> getStartOffset
androidx.emoji2.text.MetadataRepo -> androidx.emoji2.text.MetadataRepo:
    75:80:void <init>(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList) -> <init>
    160:167:void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList) -> constructIndex
    129:133:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer) -> create
    203:203:char[] getEmojiCharArray() -> getEmojiCharArray
    212:212:androidx.emoji2.text.flatbuffer.MetadataList getMetadataList() -> getMetadataList
    185:185:int getMetadataVersion() -> getMetadataVersion
    194:194:androidx.emoji2.text.MetadataRepo$Node getRootNode() -> getRootNode
    177:177:android.graphics.Typeface getTypeface() -> getTypeface
    223:227:void put(androidx.emoji2.text.EmojiMetadata) -> put
androidx.emoji2.text.MetadataRepo$Node -> androidx.emoji2.text.MetadataRepo$Node:
    242:242:void <init>() -> <init>
    246:247:void <init>(int) -> <init>
    251:251:androidx.emoji2.text.MetadataRepo$Node get(int) -> get
    255:255:androidx.emoji2.text.EmojiMetadata getData() -> getData
    260:269:void put(androidx.emoji2.text.EmojiMetadata,int,int) -> put
androidx.emoji2.text.SpannableBuilder -> androidx.emoji2.text.SpannableBuilder:
    59:77:void <init>(java.lang.Class,java.lang.CharSequence) -> <init>
    59:88:void <init>(java.lang.Class,java.lang.CharSequence,int,int) -> <init>
    49:49:android.text.Editable append(char) -> append
    49:49:android.text.Editable append(java.lang.CharSequence) -> append
    49:49:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    49:49:java.lang.Appendable append(char) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    344:344:android.text.SpannableStringBuilder append(java.lang.CharSequence) -> append
    351:351:android.text.SpannableStringBuilder append(char) -> append
    360:360:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int) -> append
    367:367:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int) -> append
    261:261:void beginBatchEdit() -> beginBatchEdit
    277:278:void blockWatchers() -> blockWatchers
    97:97:androidx.emoji2.text.SpannableBuilder create(java.lang.Class,java.lang.CharSequence) -> create
    49:49:android.text.Editable delete(int,int) -> delete
    337:337:android.text.SpannableStringBuilder delete(int,int) -> delete
    269:270:void endBatchEdit() -> endBatchEdit
    296:297:void fireWatchers() -> fireWatchers
    205:211:int getSpanEnd(java.lang.Object) -> getSpanEnd
    219:225:int getSpanFlags(java.lang.Object) -> getSpanFlags
    191:197:int getSpanStart(java.lang.Object) -> getSpanStart
    151:160:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    247:249:androidx.emoji2.text.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object) -> getWatcherFor
    49:49:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    49:49:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    323:323:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence) -> insert
    330:330:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    108:108:boolean isWatcher(java.lang.Object) -> isWatcher
    119:119:boolean isWatcher(java.lang.Class) -> isWatcher
    233:236:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    170:182:void removeSpan(java.lang.Object) -> removeSpan
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    304:306:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence) -> replace
    314:316:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    135:140:void setSpan(java.lang.Object,int,int,int) -> setSpan
    125:125:java.lang.CharSequence subSequence(int,int) -> subSequence
    286:287:void unblockwatchers() -> unblockwatchers
androidx.emoji2.text.SpannableBuilder$WatcherWrapper -> androidx.emoji2.text.SpannableBuilder$WatcherWrapper:
    377:380:void <init>(java.lang.Object) -> <init>
    395:395:void afterTextChanged(android.text.Editable) -> afterTextChanged
    385:385:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    449:449:void blockCalls() -> blockCalls
    457:457:boolean isEmojiSpan(java.lang.Object) -> isEmojiSpan
    404:407:void onSpanAdded(android.text.Spannable,java.lang.Object,int,int) -> onSpanAdded
    429:445:void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int) -> onSpanChanged
    416:419:void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int) -> onSpanRemoved
    390:390:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    453:453:void unblockCalls() -> unblockCalls
androidx.emoji2.text.TypefaceEmojiSpan -> androidx.emoji2.text.TypefaceEmojiSpan:
    49:49:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    57:60:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    65:70:android.graphics.Paint getDebugPaint() -> getDebugPaint
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable:
    43:49:void <init>(android.text.Spannable) -> <init>
    43:57:void <init>(java.lang.CharSequence) -> <init>
    116:116:char charAt(int) -> charAt
    135:135:java.util.stream.IntStream chars() -> chars
    142:142:java.util.stream.IntStream codePoints() -> codePoints
    61:65:void ensureSafeWrites() -> ensureSafeWrites
    96:96:int getSpanEnd(java.lang.Object) -> getSpanEnd
    101:101:int getSpanFlags(java.lang.Object) -> getSpanFlags
    91:91:int getSpanStart(java.lang.Object) -> getSpanStart
    86:86:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    69:69:android.text.Spannable getUnwrappedSpannable() -> getUnwrappedSpannable
    111:111:int length() -> length
    106:106:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    161:162:androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector precomputedTextDetector() -> precomputedTextDetector
    80:81:void removeSpan(java.lang.Object) -> removeSpan
    74:75:void setSpan(java.lang.Object,int,int,int) -> setSpan
    122:122:java.lang.CharSequence subSequence(int,int) -> subSequence
    128:128:java.lang.String toString() -> toString
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24:
    156:156:java.util.stream.IntStream chars(java.lang.CharSequence) -> chars
    152:152:java.util.stream.IntStream codePoints(java.lang.CharSequence) -> codePoints
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector:
    165:165:void <init>() -> <init>
    168:168:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28:
    173:173:void <init>() -> <init>
    177:177:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.flatbuffer.MetadataItem -> androidx.emoji2.text.flatbuffer.MetadataItem:
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    41:41:int codepoints(int) -> codepoints
    42:42:int codepointsLength() -> codepointsLength
    36:36:boolean emojiStyle() -> emojiStyle
    40:40:short height() -> height
    35:35:int id() -> id
    37:37:short sdkAdded() -> sdkAdded
    39:39:short width() -> width
androidx.emoji2.text.flatbuffer.MetadataList -> androidx.emoji2.text.flatbuffer.MetadataList:
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    30:30:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer) -> getRootAsMetadataList
    31:31:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList) -> getRootAsMetadataList
    37:37:androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int) -> list
    38:38:int listLength() -> listLength
    35:35:int version() -> version
androidx.emoji2.text.flatbuffer.Table -> androidx.emoji2.text.flatbuffer.Table:
    28:37:void <init>() -> <init>
    68:68:int __indirect(int) -> __indirect
    53:53:int __offset(int) -> __offset
    298:306:void __reset(int,java.nio.ByteBuffer) -> __reset
    135:136:int __vector(int) -> __vector
    123:125:int __vector_len(int) -> __vector_len
androidx.emoji2.text.flatbuffer.Utf8 -> androidx.emoji2.text.flatbuffer.Utf8:
    25:25:void <init>() -> <init>
    62:65:androidx.emoji2.text.flatbuffer.Utf8 getDefault() -> getDefault
androidx.emoji2.text.flatbuffer.Utf8Safe -> androidx.emoji2.text.flatbuffer.Utf8Safe:
    63:63:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper -> androidx.emoji2.viewsintegration.EmojiEditTextHelper:
    73:110:void <init>(android.widget.EditText,boolean) -> <init>
    155:155:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    174:174:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    227:227:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal:
    231:231:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19:
    265:269:void <init>(android.widget.EditText,boolean) -> <init>
    284:299:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    305:310:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    315:315:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditableFactory -> androidx.emoji2.viewsintegration.EmojiEditableFactory:
    44:44:void <clinit>() -> <clinit>
    51:54:void <init>() -> <init>
    62:69:android.text.Editable$Factory getInstance() -> getInstance
    74:77:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
androidx.emoji2.viewsintegration.EmojiInputConnection -> androidx.emoji2.viewsintegration.EmojiInputConnection:
    49:49:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> <init>
    58:61:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper) -> <init>
    66:68:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    74:76:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    80:80:android.text.Editable getEditable() -> getEditable
androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper -> androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper:
    83:83:void <init>() -> <init>
    90:90:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    95:96:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.viewsintegration.EmojiInputFilter -> androidx.emoji2.viewsintegration.EmojiInputFilter:
    49:50:void <init>(android.widget.TextView) -> <init>
    56:83:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    93:96:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    164:168:void updateSelection(android.text.Spannable,int,int) -> updateSelection
androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl:
    105:107:void <init>(android.widget.TextView,androidx.emoji2.viewsintegration.EmojiInputFilter) -> <init>
    148:154:boolean isInputFilterCurrentlyRegisteredOnTextView(android.widget.TextView,android.text.InputFilter) -> isInputFilterCurrentlyRegisteredOnTextView
    112:137:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiKeyListener -> androidx.emoji2.viewsintegration.EmojiKeyListener:
    40:40:void <init>(android.text.method.KeyListener) -> <init>
    44:46:void <init>(android.text.method.KeyListener,androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper) -> <init>
    73:73:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    51:51:int getInputType() -> getInputType
    56:58:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    68:68:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    63:63:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper -> androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper:
    76:76:void <init>() -> <init>
    79:79:boolean handleKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleKeyDown
androidx.emoji2.viewsintegration.EmojiTextViewHelper -> androidx.emoji2.viewsintegration.EmojiTextViewHelper:
    96:103:void <init>(android.widget.TextView,boolean) -> <init>
    132:132:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    180:180:boolean isEnabled() -> isEnabled
    173:173:void setAllCaps(boolean) -> setAllCaps
    163:163:void setEnabled(boolean) -> setEnabled
    145:145:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal:
    184:184:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19:
    322:325:void <init>(android.widget.TextView) -> <init>
    365:373:android.text.InputFilter[] addEmojiInputFilterIfMissing(android.text.InputFilter[]) -> addEmojiInputFilterIfMissing
    409:412:android.util.SparseArray getEmojiInputFilterPositionArray(android.text.InputFilter[]) -> getEmojiInputFilterPositionArray
    349:353:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    479:479:boolean isEnabled() -> isEnabled
    385:397:android.text.InputFilter[] removeEmojiInputFilterIfPresent(android.text.InputFilter[]) -> removeEmojiInputFilterIfPresent
    466:466:void setAllCaps(boolean) -> setAllCaps
    472:474:void setEnabled(boolean) -> setEnabled
    491:491:void setEnabledUnsafe(boolean) -> setEnabledUnsafe
    435:438:android.text.method.TransformationMethod unwrapForDisabled(android.text.method.TransformationMethod) -> unwrapForDisabled
    342:343:void updateFilters() -> updateFilters
    333:335:void updateTransformationMethod() -> updateTransformationMethod
    452:457:android.text.method.TransformationMethod wrapForEnabled(android.text.method.TransformationMethod) -> wrapForEnabled
    422:425:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19:
    232:233:void <init>(android.widget.TextView) -> <init>
    261:264:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    312:312:boolean isEnabled() -> isEnabled
    289:292:void setAllCaps(boolean) -> setAllCaps
    303:306:void setEnabled(boolean) -> setEnabled
    237:237:boolean skipBecauseEmojiCompatNotInitialized() -> skipBecauseEmojiCompatNotInitialized
    276:279:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextWatcher -> androidx.emoji2.viewsintegration.EmojiTextWatcher:
    44:52:void <init>(android.widget.EditText,boolean) -> <init>
    112:115:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    74:88:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    152:160:void processTextOnEnablingEvent(android.widget.EditText,int) -> processTextOnEnablingEvent
    123:129:void setEnabled(boolean) -> setEnabled
    98:98:boolean shouldSkipForDisabledOrNotConfigured() -> shouldSkipForDisabledOrNotConfigured
androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl:
    138:139:void <init>(android.widget.EditText) -> <init>
    144:146:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiTransformationMethod -> androidx.emoji2.viewsintegration.EmojiTransformationMethod:
    39:40:void <init>(android.text.method.TransformationMethod) -> <init>
    81:81:android.text.method.TransformationMethod getOriginalTransformationMethod() -> getOriginalTransformationMethod
    45:56:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    70:71:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    276:288:void bumpBackStackNesting(int) -> bumpBackStackNesting
    306:306:int commit() -> commit
    311:311:int commitAllowingStateLoss() -> commitAllowingStateLoss
    327:342:int commitInternal(boolean) -> commitInternal
    316:317:void commitNow() -> commitNow
    322:323:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    195:196:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    59:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    64:131:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    373:421:void executeOps() -> executeOps
    430:478:void executePopOps() -> executePopOps
    507:569:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    357:364:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    654:654:java.lang.String getName() -> getName
    202:207:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    296:300:void runOnCommitRunnables() -> runOnCommitRunnables
    43:55:java.lang.String toString() -> toString
    588:606:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecordState -> androidx.fragment.app.BackStackRecordState:
    211:211:void <clinit>() -> <clinit>
    50:83:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    86:100:void <init>(android.os.Parcel) -> <init>
    155:185:void fillInBackStackRecord(androidx.fragment.app.BackStackRecord) -> fillInBackStackRecord
    111:120:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    195:208:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> androidx.fragment.app.BackStackRecordState$1:
    212:212:void <init>() -> <init>
    212:212:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    215:215:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel) -> createFromParcel
    212:212:java.lang.Object[] newArray(int) -> newArray
    220:220:androidx.fragment.app.BackStackRecordState[] newArray(int) -> newArray
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    88:88:void <clinit>() -> <clinit>
    41:43:void <init>(android.os.Parcel) -> <init>
    84:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    89:89:void <init>() -> <init>
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    97:97:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:52:void <init>(android.view.ViewGroup) -> <init>
    843:844:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    798:815:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    61:134:void executeOperations(java.util.List,boolean) -> executeOperations
    825:835:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    780:784:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    161:325:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    345:766:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
    144:153:void syncAnimations(java.util.List) -> syncAnimations
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    109:109:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    112:114:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    210:210:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    213:221:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    234:234:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    237:239:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    286:286:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    300:308:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    289:290:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    300:300:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    303:304:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    325:325:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    328:332:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    530:530:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    533:534:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    561:561:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    564:564:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    653:653:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    656:656:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    722:722:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    725:727:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    884:891:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    896:903:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    853:855:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    877:877:void completeSpecialEffect() -> completeSpecialEffect
    860:860:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    865:865:androidx.core.os.CancellationSignal getSignal() -> getSignal
    869:872:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    918:944:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    968:975:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    988:997:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    963:963:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    950:950:java.lang.Object getTransition() -> getTransition
    958:958:boolean hasSharedElementTransition() -> hasSharedElementTransition
    954:954:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    108:189:void <init>() -> <init>
    61:61:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    61:61:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    61:61:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    526:527:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    310:310:void dismiss() -> dismiss
    333:376:void dismissInternal(boolean,boolean,boolean) -> dismissInternal
    388:388:android.app.Dialog getDialog() -> getDialog
    409:409:int getTheme() -> getTheme
    718:718:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    466:471:void onAttach(android.content.Context) -> onAttach
    492:503:void onCreate(android.os.Bundle) -> onCreate
    633:636:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    778:795:void onDestroyView() -> onDestroyView
    478:485:void onDetach() -> onDetach
    645:653:void onDismiss(android.content.DialogInterface) -> onDismiss
    546:547:android.view.View onFindViewById(int) -> onFindViewById
    566:586:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    553:553:boolean onHasView() -> onHasView
    740:759:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    724:733:void onStart() -> onStart
    766:768:void onStop() -> onStop
    692:696:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    510:517:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    658:685:void prepareDialog(android.os.Bundle) -> prepareDialog
    400:402:android.app.Dialog requireDialog() -> requireDialog
    596:604:void setupDialog(android.app.Dialog,int) -> setupDialog
    257:262:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    108:108:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    112:112:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
    117:117:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    121:122:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
    128:128:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    132:133:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
    144:144:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    144:144:void onChanged(java.lang.Object) -> onChanged
    148:159:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
    527:527:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    531:534:android.view.View onFindViewById(int) -> onFindViewById
    539:539:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    131:131:void <clinit>() -> <clinit>
    143:584:void <init>() -> <init>
    2906:2926:void callStartTransitionListener(boolean) -> callStartTransitionListener
    3037:3037:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2943:3024:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3383:3386:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    715:715:boolean equals(java.lang.Object) -> equals
    3029:3032:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    3643:3643:java.lang.String generateActivityResultKey() -> generateActivityResultKey
    981:981:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2768:2769:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2793:2794:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3502:3505:android.view.View getAnimatingAway() -> getAnimatingAway
    785:785:android.os.Bundle getArguments() -> getArguments
    1141:1144:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    954:954:android.content.Context getContext() -> getContext
    474:495:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    3405:3408:int getEnterAnim() -> getEnterAnim
    2551:2554:java.lang.Object getEnterTransition() -> getEnterTransition
    3488:3491:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3413:3416:int getExitAnim() -> getExitAnim
    2630:2633:java.lang.Object getExitTransition() -> getExitTransition
    3495:3498:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3524:3527:android.view.View getFocusedView() -> getFocusedView
    1008:1008:java.lang.Object getHost() -> getHost
    1736:1737:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1770:1775:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    335:335:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    426:429:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3450:3453:int getNextTransition() -> getNextTransition
    1153:1153:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1105:1107:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3436:3439:boolean getPopDirection() -> getPopDirection
    3421:3424:int getPopEnterAnim() -> getPopEnterAnim
    3429:3432:int getPopExitAnim() -> getPopExitAnim
    3513:3516:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2668:2671:java.lang.Object getReenterTransition() -> getReenterTransition
    1031:1031:android.content.res.Resources getResources() -> getResources
    2590:2593:java.lang.Object getReturnTransition() -> getReturnTransition
    503:503:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2701:2704:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2739:2743:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3466:3467:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3474:3475:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    1053:1053:java.lang.String getString(int) -> getString
    1066:1066:java.lang.String getString(int,java.lang.Object[]) -> getString
    908:908:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    918:927:androidx.fragment.app.Fragment getTargetFragment(boolean) -> getTargetFragment
    2050:2050:android.view.View getView() -> getView
    397:397:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    413:421:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    722:722:int hashCode() -> hashCode
    615:621:void initLifecycle() -> initLifecycle
    2264:2280:void initState() -> initState
    661:681:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    1183:1183:boolean isAdded() -> isAdded
    1242:1243:boolean isHidden() -> isHidden
    708:708:boolean isInBackStack() -> isInBackStack
    1256:1257:boolean isMenuVisible() -> isMenuVisible
    3531:3534:boolean isPostponed() -> isPostponed
    812:815:boolean isStateSaved() -> isStateSaved
    3193:3193:void noteStateNotSaved() -> noteStateNotSaved
    2096:2096:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1577:1578:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1877:1881:void onAttach(android.content.Context) -> onAttach
    1896:1896:void onAttach(android.app.Activity) -> onAttach
    2185:2185:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1964:1967:void onCreate(android.os.Bundle) -> onCreate
    2450:2450:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2022:2023:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2254:2254:void onDestroy() -> onDestroy
    2244:2244:void onDestroyView() -> onDestroyView
    2290:2290:void onDetach() -> onDetach
    1720:1720:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1825:1829:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1845:1845:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2229:2229:void onLowMemory() -> onLowMemory
    2211:2211:void onPause() -> onPause
    2135:2135:void onResume() -> onResume
    2123:2123:void onStart() -> onStart
    2222:2222:void onStop() -> onStop
    2112:2112:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    3134:3143:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    3056:3069:void performAttach() -> performAttach
    3216:3216:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3269:3273:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    3073:3096:void performCreate(android.os.Bundle) -> performCreate
    3234:3239:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    3101:3121:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3351:3358:void performDestroy() -> performDestroy
    3330:3347:void performDestroyView() -> performDestroyView
    3364:3378:void performDetach() -> performDetach
    1752:1752:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3220:3220:void performLowMemory() -> performLowMemory
    3208:3208:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3257:3263:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3279:3283:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3298:3307:void performPause() -> performPause
    3212:3212:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3246:3251:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3197:3203:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3176:3189:void performResume() -> performResume
    3288:3292:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3158:3171:void performStart() -> performStart
    3314:3323:void performStop() -> performStop
    3128:3129:void performViewCreated() -> performViewCreated
    3583:3604:androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback) -> prepareCallInternal
    3551:3551:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    3633:3637:void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener) -> registerOnPreAttachListener
    993:995:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    796:798:android.os.Bundle requireArguments() -> requireArguments
    965:967:android.content.Context requireContext() -> requireContext
    2061:2063:android.view.View requireView() -> requireView
    1986:1990:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    688:703:void restoreViewState(android.os.Bundle) -> restoreViewState
    3147:3153:void restoreViewState() -> restoreViewState
    3394:3400:void setAnimations(int,int,int,int) -> setAnimations
    773:776:void setArguments(android.os.Bundle) -> setArguments
    3520:3520:void setFocusedView(android.view.View) -> setFocusedView
    3457:3461:void setNextTransition(int) -> setNextTransition
    3443:3446:void setPopDirection(boolean) -> setPopDirection
    3509:3509:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3482:3484:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    859:892:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1433:1433:void startActivity(android.content.Intent) -> startActivity
    1442:1445:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    2880:2894:void startPostponedEnterTransition() -> startPostponedEnterTransition
    728:745:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    267:267:void <init>(androidx.fragment.app.Fragment) -> <init>
    270:270:void run() -> run
androidx.fragment.app.Fragment$10 -> androidx.fragment.app.Fragment$10:
    3604:3604:void <init>(androidx.fragment.app.Fragment,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract) -> <init>
    3607:3612:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    3617:3619:void unregister() -> unregister
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    318:318:void <init>(androidx.fragment.app.Fragment) -> <init>
    321:322:void onPreAttached() -> onPreAttached
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2887:2887:void <init>(androidx.fragment.app.Fragment) -> <init>
    2890:2890:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2918:2918:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2921:2921:void run() -> run
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    3037:3037:void <init>(androidx.fragment.app.Fragment) -> <init>
    3041:3045:android.view.View onFindViewById(int) -> onFindViewById
    3050:3050:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$6 -> androidx.fragment.app.Fragment$6:
    3077:3077:void <init>(androidx.fragment.app.Fragment) -> <init>
    3081:3083:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$7 -> androidx.fragment.app.Fragment$7:
    3551:3551:void <init>(androidx.fragment.app.Fragment) -> <init>
    3551:3551:java.lang.Object apply(java.lang.Object) -> apply
    3554:3557:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$9 -> androidx.fragment.app.Fragment$9:
    3595:3595:void <init>(androidx.fragment.app.Fragment,androidx.arch.core.util.Function,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> <init>
    3598:3600:void onPreAttached() -> onPreAttached
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3650:3685:void <init>() -> <init>
androidx.fragment.app.Fragment$Api19Impl -> androidx.fragment.app.Fragment$Api19Impl:
    3697:3697:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    563:563:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    314:314:void <init>() -> <init>
    314:314:void <init>(androidx.fragment.app.Fragment$1) -> <init>
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    void $r8$lambda$SP1hanWdTqO_BoGCQWOxhjR39jQ(androidx.fragment.app.FragmentActivity,android.content.Intent) -> $r8$lambda$SP1hanWdTqO_BoGCQWOxhjR39jQ
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$UpIcD_fWrvv5DXXVvwm-RJ3bKrA(androidx.fragment.app.FragmentActivity,android.content.res.Configuration) -> $r8$lambda$UpIcD_fWrvv5DXXVvwm-RJ3bKrA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$euPNEtWNfVdMY89Jt5kWt_WEHqw(androidx.fragment.app.FragmentActivity,android.content.Context) -> $r8$lambda$euPNEtWNfVdMY89Jt5kWt_WEHqw
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle $r8$lambda$t3WwJ1XbNlapyNW0l552nMkkXdo(androidx.fragment.app.FragmentActivity) -> $r8$lambda$t3WwJ1XbNlapyNW0l552nMkkXdo
      # {"id":"com.android.tools.r8.synthesized"}
    89:109:void <init>() -> <init>
    248:248:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    411:429:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    462:462:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    129:140:void init() -> init
    130:132:android.os.Bundle lambda$init$0() -> lambda$init$0
    136:136:void lambda$init$1(android.content.res.Configuration) -> lambda$init$1
    139:139:void lambda$init$2(android.content.Intent) -> lambda$init$2
    140:140:void lambda$init$3(android.content.Context) -> lambda$init$3
    764:764:void markFragmentsCreated() -> markFragmentsCreated
    770:785:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    151:152:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    217:220:void onCreate(android.os.Bundle) -> onCreate
    227:229:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    238:240:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    258:260:void onDestroy() -> onDestroy
    265:270:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    283:286:void onPause() -> onPause
    322:323:void onPostResume() -> onPostResume
    489:490:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    309:312:void onResume() -> onResume
    333:334:void onResumeFragments() -> onResumeFragments
    344:359:void onStart() -> onStart
    297:297:void onStateNotSaved() -> onStateNotSaved
    369:375:void onStop() -> onStop
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$3.f$0 -> f$0
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$3.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$3.onContextAvailable(android.content.Context) -> onContextAvailable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$2.f$0 -> f$0
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$2.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$2.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda2 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$1.f$0 -> f$0
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$1.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$1.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda3 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$0.f$0 -> f$0
    void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$0.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$0$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    585:586:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    736:736:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    690:690:void addOnConfigurationChangedListener(androidx.core.util.Consumer) -> addOnConfigurationChangedListener
    713:713:void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> addOnMultiWindowModeChangedListener
    725:725:void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> addOnPictureInPictureModeChangedListener
    702:702:void addOnTrimMemoryListener(androidx.core.util.Consumer) -> addOnTrimMemoryListener
    677:677:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    596:596:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    608:608:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    683:683:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    602:602:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    757:757:void invalidateMenu() -> invalidateMenu
    659:659:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    614:614:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    665:665:android.view.View onFindViewById(int) -> onFindViewById
    573:573:java.lang.Object onGetHost() -> onGetHost
    630:630:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    625:625:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    670:671:boolean onHasView() -> onHasView
    635:635:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    752:752:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    697:697:void removeOnConfigurationChangedListener(androidx.core.util.Consumer) -> removeOnConfigurationChangedListener
    719:719:void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> removeOnMultiWindowModeChangedListener
    731:731:void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> removeOnPictureInPictureModeChangedListener
    707:707:void removeOnTrimMemoryListener(androidx.core.util.Consumer) -> removeOnTrimMemoryListener
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    123:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    45:111:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    169:172:int toActivityTransitResId(android.content.Context,int) -> toActivityTransitResId
    142:159:int transitToAnimResourceId(android.content.Context,int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    183:187:void <init>(android.view.animation.Animation) -> <init>
    191:195:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    211:221:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    226:233:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    241:248:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    255:261:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
# {"id":"sourceFile","fileName":"FragmentContainerView.kt"}
    105:105:void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    109:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    90:90:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    90:90:void <init>(android.content.Context,android.util.AttributeSet,int):90 -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet,int):91 -> <init>
    96:96:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    96:96:void <init>(android.content.Context,android.util.AttributeSet,int):96 -> <init>
    111:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int):113 -> <init>
    115:115:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int):113 -> <init>
    119:121:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    90:135:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):135 -> <init>
    137:139:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):135 -> <init>
    141:160:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    322:323:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    266:272:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    203:213:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    220:361:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    229:235:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    246:250:void endViewTransition(android.view.View) -> endViewTransition
    337:337:androidx.fragment.app.Fragment getFragment() -> getFragment
    308:312:void removeAllViewsInLayout() -> removeAllViewsInLayout
    287:288:void removeView(android.view.View) -> removeView
    276:278:void removeViewAt(int) -> removeViewAt
    282:283:void removeViewInLayout(android.view.View) -> removeViewInLayout
    293:296:void removeViews(int,int) -> removeViews
    301:304:void removeViewsInLayout(int,int) -> removeViewsInLayout
    256:256:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    183:183:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    190:190:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    239:242:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentContainerView$Api20Impl -> androidx.fragment.app.FragmentContainerView$Api20Impl:
# {"id":"sourceFile","fileName":"FragmentContainerView.kt"}
    339:339:void <init>() -> <init>
    345:345:android.view.WindowInsets onApplyWindowInsets(android.view.View$OnApplyWindowInsetsListener,android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    61:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    117:117:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    58:58:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    263:263:void dispatchActivityCreated() -> dispatchActivityCreated
    469:469:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    252:252:void dispatchCreate() -> dispatchCreate
    346:346:void dispatchDestroy() -> dispatchDestroy
    296:296:void dispatchPause() -> dispatchPause
    285:285:void dispatchResume() -> dispatchResume
    274:274:void dispatchStart() -> dispatchStart
    307:307:void dispatchStop() -> dispatchStop
    495:495:boolean execPendingActions() -> execPendingActions
    70:70:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    143:143:void noteStateNotSaved() -> noteStateNotSaved
    135:136:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:71:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:54:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    92:92:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    82:100:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    243:243:android.app.Activity getActivity() -> getActivity
    248:248:android.content.Context getContext() -> getContext
    255:255:android.os.Handler getHandler() -> getHandler
    129:129:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    164:167:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    37:38:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    45:45:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    52:175:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    160:160:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    163:168:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:163:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:280:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:294:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:222:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:208:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:251:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:194:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:236:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:179:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:266:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    void $r8$lambda$OSbytOFWiBhg-JuC-68xxqeOPrI(androidx.fragment.app.FragmentManager,java.lang.Integer) -> $r8$lambda$OSbytOFWiBhg-JuC-68xxqeOPrI
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$RBeuZ6iM1FSdhmZNBJJQnbWnePM(androidx.fragment.app.FragmentManager,androidx.core.app.PictureInPictureModeChangedInfo) -> $r8$lambda$RBeuZ6iM1FSdhmZNBJJQnbWnePM
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$VJusB-xtSf6gkO7njmGWkIPixRc(androidx.fragment.app.FragmentManager,androidx.core.app.MultiWindowModeChangedInfo) -> $r8$lambda$VJusB-xtSf6gkO7njmGWkIPixRc
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$fsqPmeLyp8R2NG2vLmIMKnwX3q4(androidx.fragment.app.FragmentManager,android.content.res.Configuration) -> $r8$lambda$fsqPmeLyp8R2NG2vLmIMKnwX3q4
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle $r8$lambda$sido8p6zuWx0PQxIkv4qM-BRiGM(androidx.fragment.app.FragmentManager) -> $r8$lambda$sido8p6zuWx0PQxIkv4qM-BRiGM
      # {"id":"com.android.tools.r8.synthesized"}
    106:544:void <init>() -> <init>
    106:106:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    106:106:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    106:106:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2095:2098:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1473:1487:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3302:3302:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    903:906:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    1684:1684:int allocBackStackIndex() -> allocBackStackIndex
    2607:2793:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1556:1563:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    598:598:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    3341:3343:boolean checkForMenus() -> checkForMenus
    1609:1610:void checkStateLoss() -> checkStateLoss
    1745:1747:void cleanupExec() -> cleanupExec
    1240:1251:void clearBackStackStateViewModels() -> clearBackStackStateViewModels
    938:940:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    2034:2040:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    1930:1938:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    1459:1468:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1540:1550:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    2892:2895:void dispatchActivityCreated() -> dispatchActivityCreated
    2874:2877:void dispatchAttach() -> dispatchAttach
    3026:3035:void dispatchConfigurationChanged(android.content.res.Configuration,boolean) -> dispatchConfigurationChanged
    3120:3125:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2881:2884:void dispatchCreate() -> dispatchCreate
    3059:3085:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    2927:2969:void dispatchDestroy() -> dispatchDestroy
    2923:2923:void dispatchDestroyView() -> dispatchDestroyView
    3042:3051:void dispatchLowMemory(boolean) -> dispatchLowMemory
    2989:2998:void dispatchMultiWindowModeChanged(boolean,boolean) -> dispatchMultiWindowModeChanged
    3312:3313:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3329:3332:void dispatchOnHiddenChanged() -> dispatchOnHiddenChanged
    3106:3111:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3134:3139:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3157:3158:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    2913:2913:void dispatchPause() -> dispatchPause
    3007:3017:void dispatchPictureInPictureModeChanged(boolean,boolean) -> dispatchPictureInPictureModeChanged
    3091:3097:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3163:3165:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    2906:2909:void dispatchResume() -> dispatchResume
    2899:2902:void dispatchStart() -> dispatchStart
    2975:2985:void dispatchStateChange(int) -> dispatchStateChange
    2917:2919:void dispatchStop() -> dispatchStop
    2888:2888:void dispatchViewCreated() -> dispatchViewCreated
    2080:2082:void doPendingDeferredStart() -> doPendingDeferredStart
    1301:1380:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2027:2029:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1642:1662:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1694:1716:void ensureExecReady(boolean) -> ensureExecReady
    1754:1769:boolean execPendingActions(boolean) -> execPendingActions
    1721:1737:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    1958:1965:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    1837:1924:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    1605:1605:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    2295:2332:int findBackStackIndex(java.lang.String,int,boolean) -> findBackStackIndex
    1579:1579:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1596:1596:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1600:1600:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    1118:1142:androidx.fragment.app.FragmentManager findFragmentManager(android.view.View) -> findFragmentManager
    1070:1075:androidx.fragment.app.Fragment findViewFragment(android.view.View) -> findViewFragment
    2016:2018:void forcePostponedTransactions() -> forcePostponedTransactions
    2059:2075:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    887:887:int getBackStackEntryCount() -> getBackStackEntryCount
    1174:1174:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2595:2595:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    1991:2006:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3219:3229:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    1164:1164:java.util.List getFragments() -> getFragments
    2585:2585:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3395:3395:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3267:3267:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2590:2590:androidx.fragment.app.Fragment getParent() -> getParent
    3182:3182:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3252:3262:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    3401:3401:androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy() -> getStrictModePolicy
    1087:1089:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1169:1169:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    696:707:void handleOnBackPressed() -> handleOnBackPressed
    1514:1520:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3357:3358:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1262:1262:boolean isDestroyed() -> isDestroyed
    134:134:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3353:3353:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    3364:3367:boolean isParentAdded() -> isParentAdded
    687:687:boolean isParentHidden(androidx.fragment.app.Fragment) -> isParentHidden
    675:675:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    656:663:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1398:1398:boolean isStateAtLeast(int) -> isStateAtLeast
    1630:1630:boolean isStateSaved() -> isStateSaved
    2658:2658:android.os.Bundle lambda$attachController$4() -> lambda$attachController$4
    450:451:void lambda$new$0(android.content.res.Configuration) -> lambda$new$0
    455:456:void lambda$new$1(java.lang.Integer) -> lambda$new$1
    461:462:void lambda$new$2(androidx.core.app.MultiWindowModeChangedInfo) -> lambda$new$2
    467:468:void lambda$new$3(androidx.core.app.PictureInPictureModeChangedInfo) -> lambda$new$3
    1424:1438:void moveToState(int,boolean) -> moveToState
    2801:2809:void noteStateNotSaved() -> noteStateNotSaved
    1096:1102:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1385:1393:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    828:830:void popBackStack(int,int,boolean) -> popBackStack
    778:778:boolean popBackStackImmediate() -> popBackStackImmediate
    841:843:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    854:879:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2267:2273:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    1494:1504:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    1790:1823:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2087:2089:void reportBackStackChanged() -> reportBackStackChanged
    2457:2578:void restoreSaveStateInternal(android.os.Parcelable) -> restoreSaveStateInternal
    2369:2428:android.os.Bundle saveAllStateInternal() -> saveAllStateInternal
    1673:1680:void scheduleCommit() -> scheduleCommit
    1406:1409:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3186:3191:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3145:3153:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    1977:1985:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1530:1535:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1444:1445:void startPendingDeferredFragments() -> startPendingDeferredFragments
    552:569:void throwException(java.lang.RuntimeException) -> throwException
    1268:1288:java.lang.String toString() -> toString
    632:642:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.f$0 -> f$0
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda1 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.f$0 -> f$0
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda2 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.f$0 -> f$0
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda3 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.f$0 -> f$0
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda4 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$d0f15b151fd8285999239b51f9d7d45664f03a7517f419daa8c3ed762e5e67ec$0.f$0 -> f$0
    void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$d0f15b151fd8285999239b51f9d7d45664f03a7517f419daa8c3ed762e5e67ec$0.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$0$d0f15b151fd8285999239b51f9d7d45664f03a7517f419daa8c3ed762e5e67ec$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    426:426:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    429:429:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    2732:2732:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2732:2732:void onActivityResult(java.lang.Object) -> onActivityResult
    2736:2760:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    472:472:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    480:480:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    490:490:void onMenuClosed(android.view.Menu) -> onMenuClosed
    485:485:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    475:475:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    502:502:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    507:507:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    512:512:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    516:516:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    544:544:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    547:547:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    958:971:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    2615:2615:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2620:2620:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2678:2678:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2678:2678:void onActivityResult(java.lang.Object) -> onActivityResult
    2681:2699:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2706:2706:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2706:2706:void onActivityResult(java.lang.Object) -> onActivityResult
    2709:2726:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3553:3553:void <init>() -> <init>
    3553:3553:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    3559:3576:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    3553:3553:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3584:3584:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3539:3539:void <clinit>() -> <clinit>
    3523:3525:void <init>(android.os.Parcel) -> <init>
    3535:3536:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3540:3540:void <init>() -> <init>
    3540:3540:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3543:3543:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3540:3540:java.lang.Object[] newArray(int) -> newArray
    3548:3548:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
    3445:3448:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3454:3464:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    67:67:void <clinit>() -> <clinit>
    31:36:void <init>() -> <init>
    31:47:void <init>(android.os.Parcel) -> <init>
    57:64:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:87:void <init>(boolean) -> <init>
    112:123:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:190:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    194:197:void clearNonConfigState(java.lang.String) -> clearNonConfigState
    202:211:void clearNonConfigStateInternal(java.lang.String) -> clearNonConfigStateInternal
    286:292:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:171:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:181:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    297:299:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:104:void onCleared() -> onCleared
    154:162:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:96:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    306:333:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    165:165:void <clinit>() -> <clinit>
    44:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    59:72:void <init>(android.os.Parcel) -> <init>
    81:103:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> instantiate
    111:140:java.lang.String toString() -> toString
    150:162:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    166:166:void <init>() -> <init>
    166:166:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    169:169:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:java.lang.Object[] newArray(int) -> newArray
    174:174:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    51:65:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:87:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:120:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    576:580:void activityCreated() -> activityCreated
    839:840:void addViewToContainer() -> addViewToContainer
    431:465:void attach() -> attach
    147:228:int computeExpectedState() -> computeExpectedState
    469:480:void create() -> create
    485:572:void createView() -> createView
    757:811:void destroy() -> destroy
    736:753:void destroyFragmentView() -> destroyFragmentView
    816:831:void detach() -> detach
    384:397:void ensureInflatedView() -> ensureInflatedView
    126:126:androidx.fragment.app.Fragment getFragment() -> getFragment
    614:622:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    235:380:void moveToExpectedState() -> moveToExpectedState
    628:632:void pause() -> pause
    404:426:void restoreState(java.lang.ClassLoader) -> restoreState
    593:610:void resume() -> resume
    679:708:android.os.Bundle saveBasicState() -> saveBasicState
    644:666:void saveState() -> saveState
    715:731:void saveViewState() -> saveViewState
    136:136:void setFragmentManagerState(int) -> setFragmentManagerState
    585:589:void start() -> start
    636:640:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    540:540:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    543:544:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    154:154:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:39:void <init>() -> <init>
    91:97:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    172:175:void burpActive() -> burpActive
    329:329:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    101:103:void dispatchStateChange(int) -> dispatchStateChange
    409:435:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    352:354:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    285:295:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    307:319:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    339:342:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    377:399:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    245:248:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    267:272:java.util.List getActiveFragments() -> getActiveFragments
    204:204:java.util.ArrayList getAllSavedState() -> getAllSavedState
    334:334:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    257:262:java.util.List getFragments() -> getFragments
    48:48:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    180:180:androidx.fragment.app.FragmentState getSavedState(java.lang.String) -> getSavedState
    72:86:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    147:162:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    110:133:void moveToExpectedState() -> moveToExpectedState
    140:143:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    52:52:void resetActiveFragments() -> resetActiveFragments
    56:66:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    196:198:void restoreSaveState(java.util.ArrayList) -> restoreSaveState
    209:218:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    227:240:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    44:44:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
    189:191:androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState) -> setSavedState
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    118:152:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    224:224:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    287:287:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    293:294:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    185:189:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    728:733:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    755:759:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    298:332:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    413:413:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    349:349:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    397:399:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    855:855:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    75:75:void <init>() -> <init>
    78:83:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    86:91:void <init>(int,androidx.fragment.app.Fragment,boolean) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    34:37:void <clinit>() -> <clinit>
    94:95:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    42:44:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    71:74:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    119:121:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$Api19Impl -> androidx.fragment.app.FragmentTransitionCompat21$Api19Impl:
    367:367:void addListener(android.transition.Transition,android.transition.Transition$TransitionListener) -> addListener
    372:372:void removeListener(android.transition.Transition,android.transition.Transition$TransitionListener) -> removeListener
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    44:44:void <init>() -> <init>
    272:288:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    301:301:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    81:106:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    312:312:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    159:164:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    232:232:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    178:198:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    198:198:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    201:203:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    50:55:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    142:157:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    87:88:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    165:166:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    61:62:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    96:96:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    69:73:void initialize() -> initialize
    81:81:boolean isInitialized() -> isInitialized
    170:170:void performRestore(android.os.Bundle) -> performRestore
    174:174:void performSave(android.os.Bundle) -> performSave
    92:92:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:31:void <init>(java.lang.String) -> <init>
    35:35:void close() -> close
    39:39:void flush() -> flush
    55:57:void flushBuilder() -> flushBuilder
    44:49:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:93:void <init>(android.view.ViewGroup) -> <init>
    193:224:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:160:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:178:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:187:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:169:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    265:313:void executePendingOperations() -> executePendingOperations
    135:136:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:146:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    317:352:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:260:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    119:128:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    55:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:78:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:249:void markPostponedState() -> markPostponedState
    356:362:void updateFinalState() -> updateFinalState
    228:228:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:211:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:221:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    462:625:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    726:728:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    770:771:void complete() -> complete
    733:764:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    523:545:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    663:663:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    610:619:void cancel() -> cancel
    704:713:void complete() -> complete
    689:690:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    560:560:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    579:579:androidx.fragment.app.Fragment getFragment() -> getFragment
    570:570:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    583:583:boolean isCanceled() -> isCanceled
    695:695:boolean isComplete() -> isComplete
    677:678:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    625:657:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    589:606:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    545:545:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    548:548:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    502:514:void <clinit>() -> <clinit>
    502:502:void <init>(java.lang.String,int) -> <init>
    502:502:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    502:502:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    403:419:void <clinit>() -> <clinit>
    403:403:void <init>(java.lang.String,int) -> <init>
    462:493:void applyState(android.view.View) -> applyState
    430:433:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    446:452:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    403:403:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    403:403:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.fragment.app.strictmode.FragmentReuseViolation -> androidx.fragment.app.strictmode.FragmentReuseViolation:
# {"id":"sourceFile","fileName":"FragmentReuseViolation.kt"}
    28:31:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
androidx.fragment.app.strictmode.FragmentStrictMode -> androidx.fragment.app.strictmode.FragmentStrictMode:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    void $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation) -> $r8$lambda$3GEKar9k4mm28McDHO-XTHzF5lU
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation) -> $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0
      # {"id":"com.android.tools.r8.synthesized"}
    43:43:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    47:55:androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment) -> getNearestPolicy
    253:262:void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation) -> handlePolicyViolation
    259:259:void handlePolicyViolation$lambda-0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation) -> handlePolicyViolation$lambda-0
    263:264:void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation) -> handlePolicyViolation$lambda-1
    225:228:void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation) -> logIfDebuggingEnabled
    64:70:void onFragmentReuse(androidx.fragment.app.Fragment,java.lang.String) -> onFragmentReuse
    83:89:void onFragmentTagUsage(androidx.fragment.app.Fragment,android.view.ViewGroup) -> onFragmentTagUsage
    169:175:void onGetTargetFragmentUsage(androidx.fragment.app.Fragment) -> onGetTargetFragmentUsage
    151:159:void onSetTargetFragmentUsage(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int) -> onSetTargetFragmentUsage
    204:210:void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup) -> onWrongFragmentContainer
    270:278:void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable) -> runOnHostThread
    239:246:boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class) -> shouldHandlePolicyViolation
androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0 -> androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.strictmode.Violation androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$0.f$1 -> f$1
    androidx.fragment.app.strictmode.FragmentStrictMode$Policy androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$0.f$0 -> f$0
    void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$0.<init>(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1 -> androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.strictmode.Violation androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.f$1 -> f$1
    java.lang.String androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.f$0 -> f$0
    void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.<init>(java.lang.String,androidx.fragment.app.strictmode.Violation) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$0$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.strictmode.FragmentStrictMode$Flag -> androidx.fragment.app.strictmode.FragmentStrictMode$Flag:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    283:290:void <clinit>() -> <clinit>
    282:282:void <init>(java.lang.String,int) -> <init>
androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener -> androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
androidx.fragment.app.strictmode.FragmentStrictMode$Policy -> androidx.fragment.app.strictmode.FragmentStrictMode$Policy:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    473:473:void <clinit>() -> <clinit>
    314:483:void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map) -> <init>
    315:315:java.util.Set getFlags$fragment_release() -> getFlags$fragment_release
    319:319:androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release() -> getListener$fragment_release
    320:320:java.util.Map getMAllowedViolations$fragment_release() -> getMAllowedViolations$fragment_release
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion -> androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    470:470:void <init>() -> <init>
androidx.fragment.app.strictmode.FragmentTagUsageViolation -> androidx.fragment.app.strictmode.FragmentTagUsageViolation:
# {"id":"sourceFile","fileName":"FragmentTagUsageViolation.kt"}
    30:33:void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup) -> <init>
androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation -> androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation:
# {"id":"sourceFile","fileName":"GetTargetFragmentUsageViolation.kt"}
    24:26:void <init>(androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation -> androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation:
# {"id":"sourceFile","fileName":"SetTargetFragmentUsageViolation.kt"}
    28:35:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int) -> <init>
androidx.fragment.app.strictmode.TargetFragmentUsageViolation -> androidx.fragment.app.strictmode.TargetFragmentUsageViolation:
# {"id":"sourceFile","fileName":"TargetFragmentUsageViolation.kt"}
    26:26:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
androidx.fragment.app.strictmode.Violation -> androidx.fragment.app.strictmode.Violation:
# {"id":"sourceFile","fileName":"Violation.kt"}
    26:28:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
    26:26:androidx.fragment.app.Fragment getFragment() -> getFragment
androidx.fragment.app.strictmode.WrongFragmentContainerViolation -> androidx.fragment.app.strictmode.WrongFragmentContainerViolation:
# {"id":"sourceFile","fileName":"WrongFragmentContainerViolation.kt"}
    30:33:void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:32:void <init>(float[]) -> <init>
    46:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.BlockRunner -> androidx.lifecycle.BlockRunner:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    156:161:void <init>(androidx.lifecycle.CoroutineLiveData,kotlin.jvm.functions.Function2,long,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0) -> <init>
    156:156:kotlin.jvm.functions.Function2 access$getBlock$p(androidx.lifecycle.BlockRunner) -> access$getBlock$p
    156:156:androidx.lifecycle.CoroutineLiveData access$getLiveData$p(androidx.lifecycle.BlockRunner) -> access$getLiveData$p
    156:156:kotlin.jvm.functions.Function0 access$getOnDone$p(androidx.lifecycle.BlockRunner) -> access$getOnDone$p
    156:156:kotlinx.coroutines.Job access$getRunningJob$p(androidx.lifecycle.BlockRunner) -> access$getRunningJob$p
    156:156:long access$getTimeoutInMs$p(androidx.lifecycle.BlockRunner) -> access$getTimeoutInMs$p
    156:156:void access$setRunningJob$p(androidx.lifecycle.BlockRunner,kotlinx.coroutines.Job) -> access$setRunningJob$p
    185:188:void cancel() -> cancel
    171:176:void maybeRun() -> maybeRun
androidx.lifecycle.BlockRunner$cancel$1 -> androidx.lifecycle.BlockRunner$cancel$1:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    188:196:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.BlockRunner$maybeRun$1 -> androidx.lifecycle.BlockRunner$maybeRun$1:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    176:180:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    39:39:void <clinit>() -> <clinit>
    37:46:void <init>() -> <init>
    109:164:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    74:76:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    85:89:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    49:68:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    95:104:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    174:184:void <init>(java.util.Map) -> <init>
    190:191:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    198:199:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    211:214:void <init>(int,java.lang.reflect.Method) -> <init>
    243:248:boolean equals(java.lang.Object) -> equals
    253:253:int hashCode() -> hashCode
    220:234:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CloseableCoroutineScope -> androidx.lifecycle.CloseableCoroutineScope:
# {"id":"sourceFile","fileName":"ViewModel.kt"}
    47:48:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    51:51:void close() -> close
    48:48:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.CoroutineLiveData -> androidx.lifecycle.CoroutineLiveData:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    204:218:void <init>(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2) -> <init>
    200:200:void access$setBlockRunner$p(androidx.lifecycle.CoroutineLiveData,androidx.lifecycle.BlockRunner) -> access$setBlockRunner$p
    235:238:java.lang.Object clearSource$lifecycle_livedata_ktx_release(kotlin.coroutines.Continuation) -> clearSource$lifecycle_livedata_ktx_release
    241:242:void onActive() -> onActive
    246:247:void onInactive() -> onInactive
androidx.lifecycle.CoroutineLiveData$1 -> androidx.lifecycle.CoroutineLiveData$1:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    218:218:java.lang.Object invoke() -> invoke
    224:224:void invoke() -> invoke
androidx.lifecycle.CoroutineLiveData$clearSource$1 -> androidx.lifecycle.CoroutineLiveData$clearSource$1:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
androidx.lifecycle.CoroutineLiveDataKt -> androidx.lifecycle.CoroutineLiveDataKt:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    360:360:androidx.lifecycle.LiveData liveData(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2) -> liveData
androidx.lifecycle.DefaultLifecycleObserver$-CC -> androidx.lifecycle.DefaultLifecycleObserver$-CC:
# {"id":"com.android.tools.r8.synthesized"}
    void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onCreate
      # {"id":"com.android.tools.r8.synthesized"}
    void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onDestroy
      # {"id":"com.android.tools.r8.synthesized"}
    void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onPause
      # {"id":"com.android.tools.r8.synthesized"}
    void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onStart
      # {"id":"com.android.tools.r8.synthesized"}
    void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onStop
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.EmptyActivityLifecycleCallbacks:
    23:23:void <init>() -> <init>
androidx.lifecycle.FlowLiveDataConversions -> androidx.lifecycle.FlowLiveDataConversions:
# {"id":"sourceFile","fileName":"FlowLiveData.kt"}
    74:74:androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long) -> asLiveData
    71:72:androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object) -> asLiveData$default
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 -> androidx.lifecycle.FlowLiveDataConversions$asLiveData$1:
# {"id":"sourceFile","fileName":"FlowLiveData.kt"}
    74:78:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1 -> androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1:
# {"id":"sourceFile","fileName":"FlowLiveData.kt"}
    76:76:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.LegacySavedStateHandleController -> androidx.lifecycle.LegacySavedStateHandleController:
    67:71:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    76:80:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.LegacySavedStateHandleController$1 -> androidx.lifecycle.LegacySavedStateHandleController$1:
    80:80:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    84:86:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation -> androidx.lifecycle.LegacySavedStateHandleController$OnRecreation:
    44:44:void <init>() -> <init>
    48:60:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    45:52:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    135:224:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    94:123:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    135:141:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    224:238:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    179:185:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    201:207:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
    94:94:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    94:94:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    246:286:void <clinit>() -> <clinit>
    247:247:void <init>(java.lang.String,int) -> <init>
    295:295:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    246:246:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    246:246:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleCoroutineScope -> androidx.lifecycle.LifecycleCoroutineScope:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    62:62:void <init>() -> <init>
androidx.lifecycle.LifecycleCoroutineScopeImpl -> androidx.lifecycle.LifecycleCoroutineScopeImpl:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    119:127:void <init>(androidx.lifecycle.Lifecycle,kotlin.coroutines.CoroutineContext) -> <init>
    120:120:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    119:119:androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release() -> getLifecycle$lifecycle_runtime_ktx_release
    142:144:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    132:132:void register() -> register
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 -> androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    132:138:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.LifecycleDestroyedException -> androidx.lifecycle.LifecycleDestroyedException:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    31:31:void <init>() -> <init>
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.LifecycleDispatcher:
    37:37:void <clinit>() -> <clinit>
    40:44:void init(android.content.Context) -> init
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback:
    49:49:void <init>() -> <init>
    53:53:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
androidx.lifecycle.LifecycleKt -> androidx.lifecycle.LifecycleKt:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    38:47:androidx.lifecycle.LifecycleCoroutineScope getCoroutineScope(androidx.lifecycle.Lifecycle) -> getCoroutineScope
androidx.lifecycle.LifecycleOwnerKt -> androidx.lifecycle.LifecycleOwnerKt:
# {"id":"sourceFile","fileName":"LifecycleOwner.kt"}
    30:30:androidx.lifecycle.LifecycleCoroutineScope getLifecycleScope(androidx.lifecycle.LifecycleOwner) -> getLifecycleScope
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:91:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:97:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    178:212:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    278:291:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    168:173:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    321:323:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    259:272:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    255:255:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    133:134:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    159:164:boolean isSynced() -> isSynced
    109:110:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    345:345:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:154:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    216:216:void popParentState() -> popParentState
    220:220:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    225:238:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:121:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    299:316:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    352:354:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    358:361:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.LifecycleService -> androidx.lifecycle.LifecycleService:
    30:32:void <init>() -> <init>
    77:77:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    45:45:android.os.IBinder onBind(android.content.Intent) -> onBind
    37:38:void onCreate() -> onCreate
    70:71:void onDestroy() -> onDestroy
    53:54:void onStart(android.content.Intent,int) -> onStart
    64:64:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    106:112:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    120:139:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    209:209:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    144:149:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    202:202:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    69:99:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    155:194:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:104:void <init>(java.lang.Object) -> <init>
    60:112:void <init>() -> <init>
    486:487:void assertMainThread(java.lang.String) -> assertMainThread
    378:397:void changeActiveCounter(int) -> changeActiveCounter
    117:133:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:158:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    322:323:java.lang.Object getValue() -> getValue
    330:330:int getVersion() -> getVersion
    373:373:boolean hasActiveObservers() -> hasActiveObservers
    191:205:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    224:234:void observeForever(androidx.lifecycle.Observer) -> observeForever
    286:293:void postValue(java.lang.Object) -> postValue
    244:250:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:309:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:93:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    475:476:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    404:406:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    437:437:void detachObserver() -> detachObserver
    432:432:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    417:426:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    444:447:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    460:468:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.LiveDataScope -> androidx.lifecycle.LiveDataScope:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
androidx.lifecycle.LiveDataScopeImpl -> androidx.lifecycle.LiveDataScopeImpl:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    81:91:void <init>(androidx.lifecycle.CoroutineLiveData,kotlin.coroutines.CoroutineContext) -> <init>
    99:99:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    82:82:androidx.lifecycle.CoroutineLiveData getTarget$lifecycle_livedata_ktx_release() -> getTarget$lifecycle_livedata_ktx_release
androidx.lifecycle.LiveDataScopeImpl$emit$2 -> androidx.lifecycle.LiveDataScopeImpl$emit$2:
# {"id":"sourceFile","fileName":"CoroutineLiveData.kt"}
    99:102:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    69:70:void <init>() -> <init>
    87:99:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    120:121:void onActive() -> onActive
    128:129:void onInactive() -> onInactive
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$Source:
    136:140:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    153:155:void onChanged(java.lang.Object) -> onChanged
    144:144:void plug() -> plug
    148:148:void unplug() -> unplug
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    33:33:void <init>(java.lang.Object) -> <init>
    40:40:void <init>() -> <init>
    45:45:void postValue(java.lang.Object) -> postValue
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
    31:31:void <init>() -> <init>
    31:31:java.lang.Object create(android.content.Context) -> create
    36:48:androidx.lifecycle.LifecycleOwner create(android.content.Context) -> create
    54:54:java.util.List dependencies() -> dependencies
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.ProcessLifecycleOwner:
    92:92:void <clinit>() -> <clinit>
    58:155:void <init>() -> <init>
    130:132:void activityPaused() -> activityPaused
    118:124:void activityResumed() -> activityResumed
    110:113:void activityStarted() -> activityStarted
    137:138:void activityStopped() -> activityStopped
    160:163:void attach(android.content.Context) -> attach
    142:144:void dispatchPauseIfNeeded() -> dispatchPauseIfNeeded
    149:151:void dispatchStopIfNeeded() -> dispatchStopIfNeeded
    102:102:androidx.lifecycle.LifecycleOwner get() -> get
    212:212:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    106:106:void init(android.content.Context) -> init
androidx.lifecycle.ProcessLifecycleOwner$1 -> androidx.lifecycle.ProcessLifecycleOwner$1:
    67:67:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    70:71:void run() -> run
androidx.lifecycle.ProcessLifecycleOwner$2 -> androidx.lifecycle.ProcessLifecycleOwner$2:
    76:76:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    88:88:void onResume() -> onResume
    83:83:void onStart() -> onStart
androidx.lifecycle.ProcessLifecycleOwner$3 -> androidx.lifecycle.ProcessLifecycleOwner$3:
    163:163:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    192:193:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    199:199:void onActivityPaused(android.app.Activity) -> onActivityPaused
    174:174:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    204:204:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$3$1 -> androidx.lifecycle.ProcessLifecycleOwner$3$1:
    174:174:void <init>(androidx.lifecycle.ProcessLifecycleOwner$3) -> <init>
    182:182:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    177:177:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    33:35:void <init>(java.lang.Object) -> <init>
    40:40:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    104:122:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    106:114:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object invokeSuspend(java.lang.Object):109 -> invokeSuspend
    110:113:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object invokeSuspend(java.lang.Object):109 -> invokeSuspend
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    110:112:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    74:74:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    42:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:136:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
    149:149:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    178:178:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:196:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:187:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:224:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:201:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:210:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    167:167:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    android.os.Bundle $r8$lambda$85q68529u9GpNelrug3JBSyWf4c(androidx.lifecycle.SavedStateHandle) -> $r8$lambda$85q68529u9GpNelrug3JBSyWf4c
      # {"id":"com.android.tools.r8.synthesized"}
    402:435:void <clinit>() -> <clinit>
    50:86:void <init>() -> <init>
    49:49:java.lang.Class[] access$getACCEPTABLE_CLASSES$cp() -> access$getACCEPTABLE_CLASSES$cp
    90:90:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
    58:71:android.os.Bundle savedStateProvider$lambda-0(androidx.lifecycle.SavedStateHandle) -> savedStateProvider$lambda-0
    240:253:void set(java.lang.String,java.lang.Object) -> set
androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0 -> androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$0$c70f9b22894bb1b1031013e177ef365df1be52e75941faf11fc45a5cc464eb9e$0.f$0 -> f$0
    void androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$0$c70f9b22894bb1b1031013e177ef365df1be52e75941faf11fc45a5cc464eb9e$0.<init>(androidx.lifecycle.SavedStateHandle) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$0$c70f9b22894bb1b1031013e177ef365df1be52e75941faf11fc45a5cc464eb9e$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SavedStateHandle$Companion -> androidx.lifecycle.SavedStateHandle$Companion:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    350:350:void <init>() -> <init>
    393:394:boolean validateValue(java.lang.Object) -> validateValue
androidx.lifecycle.SavedStateHandleAttacher -> androidx.lifecycle.SavedStateHandleAttacher:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    187:188:void <init>(androidx.lifecycle.SavedStateHandlesProvider) -> <init>
    192:199:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    37:42:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    33:33:boolean isAttached() -> isAttached
    47:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleSupport -> androidx.lifecycle.SavedStateHandleSupport:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    208:220:void <clinit>() -> <clinit>
    45:55:void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner) -> enableSavedStateHandles
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    110:110:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    63:63:void androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.initializer(androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder,kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    63:63:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):110 -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    109:109:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    220:220:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    208:208:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    214:214:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1 -> androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    110:110:androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras) -> invoke
    110:110:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.lifecycle.SavedStateHandlesProvider -> androidx.lifecycle.SavedStateHandlesProvider:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    126:127:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner) -> <init>
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> <init>
    133:133:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner):133 -> <init>
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> getViewModel
    162:168:void performRestore() -> performRestore
    138:146:android.os.Bundle saveState() -> saveState
    211:211:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> saveState
    211:211:android.os.Bundle saveState():146 -> saveState
    146:154:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2 -> androidx.lifecycle.SavedStateHandlesProvider$viewModel$2:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    133:133:java.lang.Object invoke() -> invoke
    134:134:androidx.lifecycle.SavedStateHandlesVM invoke() -> invoke
androidx.lifecycle.SavedStateHandlesVM -> androidx.lifecycle.SavedStateHandlesVM:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    118:119:void <init>() -> <init>
    119:119:java.util.Map getHandles() -> getHandles
androidx.lifecycle.ServiceLifecycleDispatcher -> androidx.lifecycle.ServiceLifecycleDispatcher:
    38:40:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    89:89:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    63:63:void onServicePreSuperOnBind() -> onServicePreSuperOnBind
    55:55:void onServicePreSuperOnCreate() -> onServicePreSuperOnCreate
    80:81:void onServicePreSuperOnDestroy() -> onServicePreSuperOnDestroy
    72:72:void onServicePreSuperOnStart() -> onServicePreSuperOnStart
    44:48:void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event) -> postDispatchRunnable
androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable -> androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable:
    95:99:void <init>(androidx.lifecycle.LifecycleRegistry,androidx.lifecycle.Lifecycle$Event) -> <init>
    104:106:void run() -> run
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:26:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    72:73:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> map
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$1:
    73:73:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    76:76:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    113:125:void <init>() -> <init>
    169:190:void clear() -> clear
    238:242:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    229:234:java.lang.Object getTag(java.lang.String) -> getTag
    208:219:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelKt -> androidx.lifecycle.ViewModelKt:
# {"id":"sourceFile","fileName":"ViewModel.kt"}
    37:43:kotlinx.coroutines.CoroutineScope getViewModelScope(androidx.lifecycle.ViewModel) -> getViewModelScope
androidx.lifecycle.ViewModelLazy -> androidx.lifecycle.ViewModelLazy:
# {"id":"sourceFile","fileName":"ViewModelLazy.kt"}
    35:39:void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> <init>
    35:35:java.lang.Object getValue() -> getValue
    45:54:androidx.lifecycle.ViewModel getValue() -> getValue
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    42:53:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):54 -> <init>
    51:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    129:132:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    151:153:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    172:190:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    354:354:void <clinit>() -> <clinit>
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    325:325:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    348:348:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.ViewModelProvider$Factory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
androidx.lifecycle.ViewModelProvider$Factory$-CC -> androidx.lifecycle.ViewModelProvider$Factory$-CC:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
# {"id":"com.android.tools.r8.synthesized"}
    69:69:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider$Factory.create(java.lang.Class) -> $default$create
    69:69:androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class):0 -> $default$create
      # {"id":"com.android.tools.r8.synthesized"}
    83:83:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider$Factory.create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> $default$create
    83:83:androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0 -> $default$create
      # {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ViewModelProvider$Factory$Companion -> androidx.lifecycle.ViewModelProvider$Factory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    85:85:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    240:240:void <clinit>() -> <clinit>
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    210:210:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    229:229:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    101:101:void <init>() -> <init>
androidx.lifecycle.ViewModelProviderGetKt -> androidx.lifecycle.ViewModelProviderGetKt:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    360:362:androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner) -> defaultCreationExtras
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    49:49:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    50:50:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1 -> androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    180:185:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.viewmodel.CreationExtras -> androidx.lifecycle.viewmodel.CreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    26:27:void <init>() -> <init>
    27:27:java.util.Map getMap$lifecycle_viewmodel_release() -> getMap$lifecycle_viewmodel_release
androidx.lifecycle.viewmodel.CreationExtras$Empty -> androidx.lifecycle.viewmodel.CreationExtras$Empty:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    42:42:void <init>() -> <init>
androidx.lifecycle.viewmodel.CreationExtras$Key -> androidx.lifecycle.viewmodel.CreationExtras$Key:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
androidx.lifecycle.viewmodel.InitializerViewModelFactory -> androidx.lifecycle.viewmodel.InitializerViewModelFactory:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    86:87:void <init>(androidx.lifecycle.viewmodel.ViewModelInitializer[]) -> <init>
    androidx.lifecycle.ViewModel create(java.lang.Class) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    105:105:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> create
    13536:13536:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):105 -> create
    106:111:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder -> androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    36:38:void <init>() -> <init>
    47:47:void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1) -> addInitializer
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    38:38:androidx.lifecycle.ViewModelProvider$Factory build():54 -> build
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
androidx.lifecycle.viewmodel.MutableCreationExtras -> androidx.lifecycle.viewmodel.MutableCreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    52:55:void <init>(androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    52:52:void <init>(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    61:61:void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object) -> set
androidx.lifecycle.viewmodel.ViewModelInitializer -> androidx.lifecycle.viewmodel.ViewModelInitializer:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    69:71:void <init>(java.lang.Class,kotlin.jvm.functions.Function1) -> <init>
    70:70:java.lang.Class getClazz$lifecycle_viewmodel_release() -> getClazz$lifecycle_viewmodel_release
    71:71:kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release() -> getInitializer$lifecycle_viewmodel_release
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:40:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    371:373:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    149:151:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:215:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    134:136:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:189:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:361:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:338:void markForRedelivery() -> markForRedelivery
    344:350:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    175:186:void <clinit>() -> <clinit>
    252:252:void <init>() -> <init>
    766:773:boolean equals(java.lang.Object) -> equals
    606:606:int hashCode() -> hashCode
    611:611:java.lang.String toString() -> toString
    756:756:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    649:649:java.lang.String usageToString(int) -> usageToString
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    9:9:void <init>() -> <init>
    11:12:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    43:49:void <init>() -> <init>
    150:154:boolean equals(java.lang.Object) -> equals
    145:145:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    9:9:void <init>() -> <init>
    11:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    18:20:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    38:50:void <init>() -> <init>
    128:134:boolean equals(java.lang.Object) -> equals
    86:86:int getContentType() -> getContentType
    96:97:int getFlags() -> getFlags
    73:76:int getLegacyStreamType() -> getLegacyStreamType
    91:91:int getUsage() -> getUsage
    123:123:int hashCode() -> hashCode
    140:151:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    9:9:void <init>() -> <init>
    11:15:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    20:24:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    48:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:68:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:85:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    94:95:void performClick(android.view.View) -> performClick
    113:120:void syncCheckboxView(android.view.View) -> syncCheckboxView
    100:109:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$Listener:
    125:125:void <init>(androidx.preference.CheckBoxPreference) -> <init>
    129:135:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    53:84:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    89:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    185:185:android.graphics.drawable.Drawable getDialogIcon() -> getDialogIcon
    259:259:int getDialogLayoutResource() -> getDialogLayoutResource
    157:157:java.lang.CharSequence getDialogMessage() -> getDialogMessage
    125:125:java.lang.CharSequence getDialogTitle() -> getDialogTitle
    239:239:java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
    212:212:java.lang.CharSequence getPositiveButtonText() -> getPositiveButtonText
    264:264:void onClick() -> onClick
    139:139:void setDialogMessage(java.lang.CharSequence) -> setDialogMessage
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    102:102:android.widget.ArrayAdapter createAdapter() -> createAdapter
    140:143:int findSpinnerIndexOfValue(java.lang.String) -> findSpinnerIndexOfValue
    122:126:void notifyChanged() -> notifyChanged
    132:136:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    82:82:void onClick() -> onClick
    107:110:void updateEntries() -> updateEntries
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$1:
    41:41:void <init>(androidx.preference.DropDownPreference) -> <init>
    45:47:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    44:54:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    165:165:androidx.preference.EditTextPreference$OnBindEditTextListener getOnBindEditTextListener() -> getOnBindEditTextListener
    98:98:java.lang.String getText() -> getText
    103:103:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    132:140:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    119:126:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    108:108:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    153:153:void setOnBindEditTextListener(androidx.preference.EditTextPreference$OnBindEditTextListener) -> setOnBindEditTextListener
    77:88:void setText(java.lang.String) -> setText
    113:113:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$SavedState:
    184:184:void <clinit>() -> <clinit>
    200:201:void <init>(android.os.Parcel) -> <init>
    205:205:void <init>(android.os.Parcelable) -> <init>
    210:211:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$SavedState$1:
    185:185:void <init>() -> <init>
    185:185:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    188:188:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    185:185:java.lang.Object[] newArray(int) -> newArray
    193:193:androidx.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
androidx.preference.EditTextPreference$SimpleSummaryProvider -> androidx.preference.EditTextPreference$SimpleSummaryProvider:
    224:224:void <init>() -> <init>
    235:238:androidx.preference.EditTextPreference$SimpleSummaryProvider getInstance() -> getInstance
    220:220:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    244:247:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference) -> provideSummary
androidx.preference.EditTextPreferenceDialogFragmentCompat -> androidx.preference.EditTextPreferenceDialogFragmentCompat:
    32:46:void <init>() -> <init>
    96:96:androidx.preference.EditTextPreference getEditTextPreference() -> getEditTextPreference
    108:109:boolean hasPendingShowSoftInputRequest() -> hasPendingShowSoftInputRequest
    52:55:androidx.preference.EditTextPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    77:91:void onBindDialogView(android.view.View) -> onBindDialogView
    61:65:void onCreate(android.os.Bundle) -> onCreate
    147:150:void onDialogClosed(boolean) -> onDialogClosed
    71:72:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    120:121:void scheduleShowSoftInput() -> scheduleShowSoftInput
    127:139:void scheduleShowSoftInputInner() -> scheduleShowSoftInputInner
    113:113:void setPendingShowSoftInputRequest(boolean) -> setPendingShowSoftInputRequest
androidx.preference.EditTextPreferenceDialogFragmentCompat$1 -> androidx.preference.EditTextPreferenceDialogFragmentCompat$1:
    40:40:void <init>(androidx.preference.EditTextPreferenceDialogFragmentCompat) -> <init>
    43:43:void run() -> run
androidx.preference.ExpandButton -> androidx.preference.ExpandButton:
    37:43:void <init>(android.content.Context,java.util.List,long) -> <init>
    94:94:long getId() -> getId
    47:51:void initLayout() -> initLayout
    88:89:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    61:83:void setSummary(java.util.List) -> setSummary
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    51:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    81:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:85:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    228:230:int findIndexOfValue(java.lang.String) -> findIndexOfValue
    120:120:java.lang.CharSequence[] getEntries() -> getEntries
    217:218:java.lang.CharSequence getEntry() -> getEntry
    148:148:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    165:177:java.lang.CharSequence getSummary() -> getSummary
    207:207:java.lang.String getValue() -> getValue
    250:250:int getValueIndex() -> getValueIndex
    255:255:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    279:287:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    266:273:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    260:260:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    153:157:void setSummary(java.lang.CharSequence) -> setSummary
    190:196:void setValue(java.lang.String) -> setValue
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$SavedState:
    291:291:void <clinit>() -> <clinit>
    307:308:void <init>(android.os.Parcel) -> <init>
    312:312:void <init>(android.os.Parcelable) -> <init>
    317:318:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$SavedState$1:
    292:292:void <init>() -> <init>
    292:292:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    295:295:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    292:292:java.lang.Object[] newArray(int) -> newArray
    300:300:androidx.preference.ListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.ListPreference$SimpleSummaryProvider -> androidx.preference.ListPreference$SimpleSummaryProvider:
    331:331:void <init>() -> <init>
    342:345:androidx.preference.ListPreference$SimpleSummaryProvider getInstance() -> getInstance
    327:327:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    351:354:java.lang.CharSequence provideSummary(androidx.preference.ListPreference) -> provideSummary
androidx.preference.ListPreferenceDialogFragmentCompat -> androidx.preference.ListPreferenceDialogFragmentCompat:
    26:26:void <init>() -> <init>
    78:78:androidx.preference.ListPreference getListPreference() -> getListPreference
    40:44:androidx.preference.ListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    50:65:void onCreate(android.os.Bundle) -> onCreate
    106:110:void onDialogClosed(boolean) -> onDialogClosed
    83:101:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    71:74:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ListPreferenceDialogFragmentCompat$1 -> androidx.preference.ListPreferenceDialogFragmentCompat$1:
    86:86:void <init>(androidx.preference.ListPreferenceDialogFragmentCompat) -> <init>
    89:95:void onClick(android.content.DialogInterface,int) -> onClick
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    47:66:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    75:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    111:111:java.lang.CharSequence[] getEntries() -> getEntries
    139:139:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    161:161:java.util.Set getValues() -> getValues
    196:200:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    228:236:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    215:222:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    209:209:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    148:152:void setValues(java.util.Set) -> setValues
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$SavedState:
    240:240:void <clinit>() -> <clinit>
    256:262:void <init>(android.os.Parcel) -> <init>
    266:266:void <init>(android.os.Parcelable) -> <init>
    271:273:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$SavedState$1:
    241:241:void <init>() -> <init>
    241:241:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    244:244:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    241:241:java.lang.Object[] newArray(int) -> newArray
    249:249:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat -> androidx.preference.MultiSelectListPreferenceDialogFragmentCompat:
    30:41:void <init>() -> <init>
    97:97:androidx.preference.MultiSelectListPreference getListPreference() -> getListPreference
    52:56:androidx.preference.MultiSelectListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    62:83:void onCreate(android.os.Bundle) -> onCreate
    126:132:void onDialogClosed(boolean) -> onDialogClosed
    102:109:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    89:93:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1 -> androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1:
    110:110:void <init>(androidx.preference.MultiSelectListPreferenceDialogFragmentCompat) -> <init>
    114:118:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.preference.Preference -> androidx.preference.Preference:
    128:279:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    299:299:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    314:314:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    325:325:void <init>(android.content.Context) -> <init>
    1360:1365:void assignParent(androidx.preference.PreferenceGroup) -> assignParent
    1131:1131:boolean callChangeListener(java.lang.Object) -> callChangeListener
    1401:1401:void clearWasDetached() -> clearWasDetached
    91:91:int compareTo(java.lang.Object) -> compareTo
    1262:1274:int compareTo(androidx.preference.Preference) -> compareTo
    2084:2090:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    2032:2040:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    1595:1607:void dispatchSetInitialValue() -> dispatchSetInitialValue
    1439:1443:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String) -> findPreferenceInHierarchy
    1229:1229:android.content.Context getContext() -> getContext
    428:431:android.os.Bundle getExtras() -> getExtras
    1995:2006:java.lang.StringBuilder getFilterableStringBuilder() -> getFilterableStringBuilder
    381:381:java.lang.String getFragment() -> getFragment
    933:933:long getId() -> getId
    362:362:android.content.Intent getIntent() -> getIntent
    965:965:java.lang.String getKey() -> getKey
    470:470:int getLayoutResource() -> getLayoutResource
    646:646:int getOrder() -> getOrder
    1572:1572:androidx.preference.PreferenceGroup getParent() -> getParent
    1966:1975:boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    1804:1813:int getPersistedInt(int) -> getPersistedInt
    1697:1706:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    1750:1759:java.util.Set getPersistedStringSet(java.util.Set) -> getPersistedStringSet
    413:416:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    1314:1314:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    1246:1250:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    745:748:java.lang.CharSequence getSummary() -> getSummary
    1120:1120:androidx.preference.Preference$SummaryProvider getSummaryProvider() -> getSummaryProvider
    691:691:java.lang.CharSequence getTitle() -> getTitle
    494:494:int getWidgetLayoutResource() -> getWidgetLayoutResource
    988:988:boolean hasKey() -> hasKey
    1094:1094:boolean isCopyingEnabled() -> isCopyingEnabled
    807:807:boolean isEnabled() -> isEnabled
    999:999:boolean isPersistent() -> isPersistent
    828:828:boolean isSelectable() -> isSelectable
    891:891:boolean isVisible() -> isVisible
    1293:1294:void notifyChanged() -> notifyChanged
    1483:1491:void notifyDependencyChange(boolean) -> notifyDependencyChange
    1303:1304:void notifyHierarchyChanged() -> notifyHierarchyChanged
    1376:1376:void onAttached() -> onAttached
    1324:1330:void onAttachedToHierarchy(androidx.preference.PreferenceManager) -> onAttachedToHierarchy
    1342:1348:void onAttachedToHierarchy(androidx.preference.PreferenceManager,long) -> onAttachedToHierarchy
    510:601:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    1502:1508:void onDependencyChanged(androidx.preference.Preference,boolean) -> onDependencyChanged
    1385:1386:void onDetached() -> onDetached
    1519:1525:void onParentChanged(androidx.preference.Preference,boolean) -> onParentChanged
    1581:1581:void onPrepareForRemoval() -> onPrepareForRemoval
    2108:2110:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2058:2059:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1634:1634:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    1182:1182:void performClick(android.view.View) -> performClick
    1194:1215:void performClick() -> performClick
    1936:1951:boolean persistBoolean(boolean) -> persistBoolean
    1774:1789:boolean persistInt(int) -> persistInt
    1667:1683:boolean persistString(java.lang.String) -> persistString
    1720:1736:boolean persistStringSet(java.util.Set) -> persistStringSet
    1406:1412:void registerDependency() -> registerDependency
    1455:1461:void registerDependent(androidx.preference.Preference) -> registerDependent
    2070:2070:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    2019:2019:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    609:614:void setEnabledStateOnViews(android.view.View,boolean) -> setEnabledStateOnViews
    702:705:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    716:717:void setIcon(int) -> setIcon
    352:352:void setIntent(android.content.Intent) -> setIntent
    461:461:void setLayoutResource(int) -> setLayoutResource
    1286:1286:void setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener) -> setOnPreferenceChangeInternalListener
    1142:1142:void setOnPreferenceChangeListener(androidx.preference.Preference$OnPreferenceChangeListener) -> setOnPreferenceChangeListener
    1163:1163:void setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener) -> setOnPreferenceClickListener
    631:635:void setOrder(int) -> setOrder
    396:396:void setPreferenceDataStore(androidx.preference.PreferenceDataStore) -> setPreferenceDataStore
    762:767:void setSummary(java.lang.CharSequence) -> setSummary
    1106:1107:void setSummaryProvider(androidx.preference.Preference$SummaryProvider) -> setSummaryProvider
    667:669:void setTitle(java.lang.CharSequence) -> setTitle
    680:680:void setTitle(int) -> setTitle
    872:875:void setVisible(boolean) -> setVisible
    1535:1535:boolean shouldDisableDependents() -> shouldDisableDependents
    1011:1011:boolean shouldPersist() -> shouldPersist
    1981:1981:java.lang.String toString() -> toString
    1651:1652:void tryCommit(android.content.SharedPreferences$Editor) -> tryCommit
    1418:1421:void unregisterDependency() -> unregisterDependency
    1471:1472:void unregisterDependent(androidx.preference.Preference) -> unregisterDependent
androidx.preference.Preference$1 -> androidx.preference.Preference$1:
    179:179:void <init>(androidx.preference.Preference) -> <init>
    182:182:void onClick(android.view.View) -> onClick
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$BaseSavedState:
    2219:2219:void <clinit>() -> <clinit>
    2233:2233:void <init>(android.os.Parcel) -> <init>
    2237:2237:void <init>(android.os.Parcelable) -> <init>
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$BaseSavedState$1:
    2220:2220:void <init>() -> <init>
    2220:2220:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2223:2223:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2220:2220:java.lang.Object[] newArray(int) -> newArray
    2228:2228:androidx.preference.Preference$BaseSavedState[] newArray(int) -> newArray
androidx.preference.Preference$OnPreferenceCopyListener -> androidx.preference.Preference$OnPreferenceCopyListener:
    2252:2253:void <init>(androidx.preference.Preference) -> <init>
    2259:2265:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2270:2279:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    46:46:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:60:void <init>(android.content.Context) -> <init>
    75:77:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    70:70:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.PreferenceDataStore -> androidx.preference.PreferenceDataStore:
    44:44:void <init>() -> <init>
    121:121:void putBoolean(java.lang.String,boolean) -> putBoolean
    82:82:void putInt(java.lang.String,int) -> putInt
    56:56:void putString(java.lang.String,java.lang.String) -> putString
    69:69:void putStringSet(java.lang.String,java.util.Set) -> putStringSet
androidx.preference.PreferenceDialogFragmentCompat -> androidx.preference.PreferenceDialogFragmentCompat:
    53:53:void <init>() -> <init>
    177:183:androidx.preference.DialogPreference getPreference() -> getPreference
    263:278:void onBindDialogView(android.view.View) -> onBindDialogView
    285:285:void onClick(android.content.DialogInterface,int) -> onClick
    81:120:void onCreate(android.os.Bundle) -> onCreate
    142:163:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    247:252:android.view.View onCreateDialogView(android.content.Context) -> onCreateDialogView
    290:291:void onDismiss(android.content.DialogInterface) -> onDismiss
    127:135:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    230:234:void requestInputMethod(android.app.Dialog) -> requestInputMethod
androidx.preference.PreferenceDialogFragmentCompat$Api30Impl -> androidx.preference.PreferenceDialogFragmentCompat$Api30Impl:
    309:309:void showIme(android.view.Window) -> showIme
androidx.preference.PreferenceFragmentCompat -> androidx.preference.PreferenceFragmentCompat:
    91:133:void <init>() -> <init>
    518:523:void bindPreferences() -> bindPreferences
    499:502:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    550:550:androidx.recyclerview.widget.RecyclerView getListView() -> getListView
    337:337:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    142:161:void onCreate(android.os.Bundle) -> onCreate
    608:608:androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen) -> onCreateAdapter
    597:597:androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> onCreateLayoutManager
    572:583:androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateRecyclerView
    182:231:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    301:307:void onDestroyView() -> onDestroyView
    623:673:void onDisplayPreferenceDialog(androidx.preference.Preference) -> onDisplayPreferenceDialog
    468:491:void onNavigateToScreen(androidx.preference.PreferenceScreen) -> onNavigateToScreen
    403:449:boolean onPreferenceTreeClick(androidx.preference.Preference) -> onPreferenceTreeClick
    312:318:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    287:289:void onStart() -> onStart
    294:296:void onStop() -> onStop
    262:282:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    512:513:void postBindPreferences() -> postBindPreferences
    506:507:void requirePreferenceManager() -> requirePreferenceManager
    246:246:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    257:257:void setDividerHeight(int) -> setDividerHeight
    346:350:void setPreferenceScreen(androidx.preference.PreferenceScreen) -> setPreferenceScreen
    378:394:void setPreferencesFromResource(int,java.lang.String) -> setPreferencesFromResource
    527:532:void unbindPreferences() -> unbindPreferences
androidx.preference.PreferenceFragmentCompat$1 -> androidx.preference.PreferenceFragmentCompat$1:
    122:122:void <init>(androidx.preference.PreferenceFragmentCompat,android.os.Looper) -> <init>
    125:127:void handleMessage(android.os.Message) -> handleMessage
androidx.preference.PreferenceFragmentCompat$2 -> androidx.preference.PreferenceFragmentCompat$2:
    133:133:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    136:136:void run() -> run
androidx.preference.PreferenceFragmentCompat$DividerDecoration -> androidx.preference.PreferenceFragmentCompat$DividerDecoration:
    849:851:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    874:875:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    856:866:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    913:913:void setAllowDividerAfterLastItem(boolean) -> setAllowDividerAfterLastItem
    899:904:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    908:909:void setDividerHeight(int) -> setDividerHeight
    880:892:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView) -> shouldDrawDividerBelow
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    59:100:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    105:105:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:109:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    173:173:void addItemFromInflater(androidx.preference.Preference) -> addItemFromInflater
    203:260:boolean addPreference(androidx.preference.Preference) -> addPreference
    506:511:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    495:500:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    372:387:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    166:166:int getInitialExpandedChildrenCount() -> getInitialExpandedChildrenCount
    443:443:androidx.preference.PreferenceGroup$OnExpandButtonClickListener getOnExpandButtonClickListener() -> getOnExpandButtonClickListener
    193:193:androidx.preference.Preference getPreference(int) -> getPreference
    182:182:int getPreferenceCount() -> getPreferenceCount
    477:483:void notifyDependencyChange(boolean) -> notifyDependencyChange
    448:457:void onAttached() -> onAttached
    463:471:void onDetached() -> onDetached
    354:354:boolean onPrepareAddPreference(androidx.preference.Preference) -> onPrepareAddPreference
    524:531:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    518:519:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    338:344:void removeAll() -> removeAll
    301:331:boolean removePreferenceInt(androidx.preference.Preference) -> removePreferenceInt
    152:156:void setInitialExpandedChildrenCount(int) -> setInitialExpandedChildrenCount
    124:124:void setOrderingAsAdded(boolean) -> setOrderingAsAdded
    488:490:void sortPreferences() -> sortPreferences
androidx.preference.PreferenceGroup$1 -> androidx.preference.PreferenceGroup$1:
    73:73:void <init>(androidx.preference.PreferenceGroup) -> <init>
    76:78:void run() -> run
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$SavedState:
    581:581:void <clinit>() -> <clinit>
    597:598:void <init>(android.os.Parcel) -> <init>
    602:603:void <init>(android.os.Parcelable,int) -> <init>
    608:609:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$SavedState$1:
    582:582:void <init>() -> <init>
    582:582:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    585:585:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    582:582:java.lang.Object[] newArray(int) -> newArray
    590:590:androidx.preference.PreferenceGroup$SavedState[] newArray(int) -> newArray
androidx.preference.PreferenceGroupAdapter -> androidx.preference.PreferenceGroupAdapter:
    83:108:void <init>(androidx.preference.PreferenceGroup) -> <init>
    290:295:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List) -> createExpandButton
    218:272:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup) -> createVisiblePreferencesList
    186:206:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup) -> flattenPreferenceGroup
    331:332:androidx.preference.Preference getItem(int) -> getItem
    337:337:int getItemCount() -> getItemCount
    342:345:long getItemId(int) -> getItemId
    371:380:int getItemViewType(int) -> getItemViewType
    319:319:boolean isGroupExpandable(androidx.preference.PreferenceGroup) -> isGroupExpandable
    49:49:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    420:422:void onBindViewHolder(androidx.preference.PreferenceViewHolder,int) -> onBindViewHolder
    49:49:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    388:415:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    350:354:void onPreferenceChange(androidx.preference.Preference) -> onPreferenceChange
    360:361:void onPreferenceHierarchyChange(androidx.preference.Preference) -> onPreferenceHierarchyChange
    366:366:void onPreferenceVisibilityChange(androidx.preference.Preference) -> onPreferenceVisibilityChange
    117:173:void updatePreferences() -> updatePreferences
androidx.preference.PreferenceGroupAdapter$1 -> androidx.preference.PreferenceGroupAdapter$1:
    83:83:void <init>(androidx.preference.PreferenceGroupAdapter) -> <init>
    86:86:void run() -> run
androidx.preference.PreferenceGroupAdapter$3 -> androidx.preference.PreferenceGroupAdapter$3:
    295:295:void <init>(androidx.preference.PreferenceGroupAdapter,androidx.preference.PreferenceGroup) -> <init>
    298:303:boolean onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor -> androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor:
    461:464:void <init>(androidx.preference.Preference) -> <init>
    469:475:boolean equals(java.lang.Object) -> equals
    481:483:int hashCode() -> hashCode
androidx.preference.PreferenceInflater -> androidx.preference.PreferenceInflater:
    40:43:void <clinit>() -> <clinit>
    48:54:void <init>(android.content.Context,androidx.preference.PreferenceManager) -> <init>
    209:255:androidx.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> createItem
    278:301:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet) -> createItemFromTag
    96:96:android.content.Context getContext() -> getContext
    110:115:androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup) -> inflate
    137:178:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup) -> inflate
    58:66:void init(androidx.preference.PreferenceManager) -> init
    270:270:androidx.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet) -> onCreateItem
    186:186:androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup) -> onMergeRoots
    312:351:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet) -> rInflate
    78:78:void setDefaultPackages(java.lang.String[]) -> setDefaultPackages
    359:364:void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> skipCurrentTag
androidx.preference.PreferenceManager -> androidx.preference.PreferenceManager:
    53:107:void <init>(android.content.Context) -> <init>
    454:458:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    124:124:java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> getDefaultSharedPreferencesName
    472:483:android.content.SharedPreferences$Editor getEditor() -> getEditor
    239:241:long getNextId() -> getNextId
    579:579:androidx.preference.PreferenceManager$OnNavigateToScreenListener getOnNavigateToScreenListener() -> getOnNavigateToScreenListener
    561:561:androidx.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> getOnPreferenceTreeClickListener
    382:382:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    422:422:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    394:413:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    214:221:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen) -> inflateFromResource
    501:504:void setNoCommit(boolean) -> setNoCommit
    534:534:void setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener) -> setOnDisplayPreferenceDialogListener
    571:571:void setOnNavigateToScreenListener(androidx.preference.PreferenceManager$OnNavigateToScreenListener) -> setOnNavigateToScreenListener
    556:556:void setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    432:436:boolean setPreferences(androidx.preference.PreferenceScreen) -> setPreferences
    266:267:void setSharedPreferencesName(java.lang.String) -> setSharedPreferencesName
    497:497:boolean shouldCommit() -> shouldCommit
    543:544:void showDialog(androidx.preference.Preference) -> showDialog
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate:
    48:60:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    58:58:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1:
    61:61:void <init>(androidx.preference.PreferenceRecyclerViewAccessibilityDelegate) -> <init>
    64:78:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    84:84:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    44:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:67:void onClick() -> onClick
    83:83:boolean shouldUseGeneratedIds() -> shouldUseGeneratedIds
androidx.preference.PreferenceViewHolder -> androidx.preference.PreferenceViewHolder:
    40:59:void <init>(android.view.View) -> <init>
    78:84:android.view.View findViewById(int) -> findViewById
    97:97:boolean isDividerAllowedAbove() -> isDividerAllowedAbove
    121:121:boolean isDividerAllowedBelow() -> isDividerAllowedBelow
    144:151:void resetState() -> resetState
    111:111:void setDividerAllowedAbove(boolean) -> setDividerAllowedAbove
    135:135:void setDividerAllowedBelow(boolean) -> setDividerAllowedBelow
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    77:152:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    157:157:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    170:199:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    212:212:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    436:448:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    420:430:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    205:207:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    279:284:void setMax(int) -> setMax
    258:260:void setSeekBarIncrement(int) -> setSeekBarIncrement
    385:385:void setValue(int) -> setValue
    353:365:void setValueInternal(int,boolean) -> setValueInternal
    394:400:void syncValueInternal(android.widget.SeekBar) -> syncValueInternal
    412:413:void updateLabelValue(int) -> updateLabelValue
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$1:
    77:77:void <init>(androidx.preference.SeekBarPreference) -> <init>
    80:84:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    90:90:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    95:97:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$2:
    107:107:void <init>(androidx.preference.SeekBarPreference) -> <init>
    110:130:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$SavedState:
    457:457:void <clinit>() -> <clinit>
    475:480:void <init>(android.os.Parcel) -> <init>
    484:484:void <init>(android.os.Parcelable) -> <init>
    489:494:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$SavedState$1:
    458:458:void <init>() -> <init>
    458:458:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    461:461:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    458:458:java.lang.Object[] newArray(int) -> newArray
    466:466:androidx.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    47:90:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    104:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    130:133:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    201:202:void performClick(android.view.View) -> performClick
    154:155:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    143:144:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    220:231:void syncSwitchView(android.view.View) -> syncSwitchView
    207:216:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$Listener:
    236:236:void <init>(androidx.preference.SwitchPreference) -> <init>
    240:247:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    47:90:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    104:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    128:131:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    199:200:void performClick(android.view.View) -> performClick
    152:153:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    141:142:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    218:229:void syncSwitchView(android.view.View) -> syncSwitchView
    205:214:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$Listener:
    234:234:void <init>(androidx.preference.SwitchPreferenceCompat) -> <init>
    238:245:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    50:50:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    55:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    82:82:boolean isChecked() -> isChecked
    68:72:void onClick() -> onClick
    199:199:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    271:279:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    258:265:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    205:207:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    92:99:void setChecked(boolean) -> setChecked
    194:194:void setDisableDependentsState(boolean) -> setDisableDependentsState
    152:154:void setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    119:121:void setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    106:107:boolean shouldDisableDependents() -> shouldDisableDependents
    217:218:void syncSummaryView(androidx.preference.PreferenceViewHolder) -> syncSummaryView
    226:251:void syncSummaryView(android.view.View) -> syncSummaryView
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$SavedState:
    283:283:void <clinit>() -> <clinit>
    299:300:void <init>(android.os.Parcel) -> <init>
    304:304:void <init>(android.os.Parcelable) -> <init>
    309:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$SavedState$1:
    284:284:void <init>() -> <init>
    284:284:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    287:287:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    284:284:java.lang.Object[] newArray(int) -> newArray
    292:292:androidx.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    89:89:int getMaxHeight() -> getMaxHeight
    78:78:int getMaxWidth() -> getMaxWidth
    94:114:void onMeasure(int,int) -> onMeasure
    83:84:void setMaxHeight(int) -> setMaxHeight
    72:73:void setMaxWidth(int) -> setMaxWidth
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:613:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:302:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:324:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    507:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    519:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    544:548:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    531:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:455:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    37:38:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    63:63:void onChanged(int,int,java.lang.Object) -> onChanged
    44:44:void onInserted(int,int) -> onInserted
    56:56:void onMoved(int,int) -> onMoved
    50:50:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.AsyncDifferConfig:
    47:50:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.AsyncDifferConfig$Builder:
    145:145:void <clinit>() -> <clinit>
    84:85:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    130:138:androidx.recyclerview.widget.AsyncDifferConfig build() -> build
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.AsyncListDiffer:
    131:131:void <clinit>() -> <clinit>
    148:197:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    392:392:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> addListListener
    216:216:java.util.List getCurrentList() -> getCurrentList
    364:369:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> latchList
    375:379:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> onCurrentListChanged
    231:231:void submitList(java.util.List) -> submitList
    254:289:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.AsyncListDiffer$1:
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:347:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.AsyncListDiffer$1$1:
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    316:328:boolean areContentsTheSame(int,int) -> areContentsTheSame
    305:308:boolean areItemsTheSame(int,int) -> areItemsTheSame
    334:343:java.lang.Object getChangePayload(int,int) -> getChangePayload
    300:300:int getNewListSize() -> getNewListSize
    295:295:int getOldListSize() -> getOldListSize
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.AsyncListDiffer$1$2:
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:351:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor:
    122:123:void <init>() -> <init>
    126:126:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    43:49:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    58:73:void dispatchLastEvent() -> dispatchLastEvent
    113:126:void onChanged(int,int,java.lang.Object) -> onChanged
    78:87:void onInserted(int,int) -> onInserted
    106:107:void onMoved(int,int) -> onMoved
    92:101:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:85:void addView(android.view.View,boolean) -> addView
    99:107:void addView(android.view.View,int,boolean) -> addView
    231:239:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:336:void hide(android.view.View) -> hide
    60:61:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:147:void removeView(android.view.View) -> removeView
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:358:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    449:464:void insert(int,boolean) -> insert
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    39:56:void <init>() -> <init>
    226:228:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    233:255:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    330:349:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    354:401:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    262:278:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    283:320:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    196:197:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    202:220:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    672:672:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    648:649:void cancelAll(java.util.List) -> cancelAll
    557:558:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    444:525:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    564:644:void endAnimations() -> endAnimations
    406:410:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    417:421:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    426:437:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    538:548:boolean isRunning() -> isRunning
    529:533:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    104:188:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    123:123:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    126:131:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    147:147:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    150:154:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    170:170:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    173:177:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    206:206:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    214:218:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    209:209:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    237:237:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    245:245:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    250:253:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    240:240:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    297:297:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    305:309:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    315:318:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    300:300:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    364:364:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    372:378:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    367:367:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    386:386:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    393:399:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    389:389:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    74:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    81:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    91:91:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    62:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    87:87:void <clinit>() -> <clinit>
    274:321:androidx.recyclerview.widget.DiffUtil$Snake backward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> backward
    106:106:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    124:178:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    217:259:androidx.recyclerview.widget.DiffUtil$Snake forward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> forward
    191:202:androidx.recyclerview.widget.DiffUtil$Snake midPoint(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray) -> midPoint
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    87:87:void <init>() -> <init>
    87:87:int compare(java.lang.Object,java.lang.Object) -> compare
    90:90:int compare(androidx.recyclerview.widget.DiffUtil$Diagonal,androidx.recyclerview.widget.DiffUtil$Diagonal) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    332:332:void <init>() -> <init>
androidx.recyclerview.widget.DiffUtil$CenteredArray -> androidx.recyclerview.widget.DiffUtil$CenteredArray:
    1037:1039:void <init>(int) -> <init>
    1047:1047:int[] backingData() -> backingData
    1043:1043:int get(int) -> get
    1051:1051:void set(int,int) -> set
androidx.recyclerview.widget.DiffUtil$Diagonal -> androidx.recyclerview.widget.DiffUtil$Diagonal:
    481:484:void <init>(int,int,int) -> <init>
    488:488:int endX() -> endX
    492:492:int endY() -> endY
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    664:675:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    683:689:void addEdgeDiagonals() -> addEdgeDiagonals
    855:967:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    739:759:void findMatchingAddition(int) -> findMatchingAddition
    698:712:void findMatchingItems() -> findMatchingItems
    719:728:void findMoveMatches() -> findMoveMatches
    976:991:androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection,int,boolean) -> getPostponedUpdate
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.DiffUtil$ItemCallback:
    409:409:void <init>() -> <init>
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    1021:1024:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    577:577:void <init>() -> <init>
    580:584:void <init>(int,int,int,int) -> <init>
    592:592:int newSize() -> newSize
    588:588:int oldSize() -> oldSize
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    501:501:void <init>() -> <init>
    536:536:int diagonalSize() -> diagonalSize
    528:528:boolean hasAdditionOrRemoval() -> hasAdditionOrRemoval
    532:532:boolean isAddition() -> isAddition
    545:559:androidx.recyclerview.widget.DiffUtil$Diagonal toDiagonal() -> toDiagonal
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:258:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    316:328:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:311:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:543:int[] getHorizontalRange() -> getHorizontalRange
    533:534:int[] getVerticalRange() -> getVerticalRange
    244:252:void hide(int) -> hide
    461:474:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    268:285:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:394:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    409:437:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    262:263:void resetHideDelay(int) -> resetHideDelay
    479:479:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    228:237:void show() -> show
    339:373:void updateScrollPosition(int,int) -> updateScrollPosition
    446:457:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:134:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:551:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:572:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:566:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:577:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:585:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:163:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:261:void buildTaskList() -> buildTaskList
    344:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:270:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:187:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:368:void prefetch(long) -> prefetch
    316:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:167:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:208:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    113:135:void addPosition(int,int) -> addPosition
    152:155:void clearPrefetchPositions() -> clearPrefetchPositions
    79:105:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:142:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:75:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    46:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    46:101:void <init>(android.content.Context,int,int,boolean) -> <init>
    808:811:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    201:206:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    326:326:void calculateItemBorders(int) -> calculateItemBorders
    337:354:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    268:268:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    196:197:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    539:546:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1235:1238:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1217:1220:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1326:1364:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1293:1317:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1244:1247:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1226:1229:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    405:426:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    380:381:void ensureViewSet() -> ensureViewSet
    435:465:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    243:247:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    254:254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    259:262:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    135:143:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    121:129:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    360:364:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    823:823:int getSpanCount() -> getSpanCount
    479:491:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    495:512:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    516:533:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    772:774:void guessMeasurement(float,int) -> guessMeasurement
    554:725:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    738:758:void measureChild(android.view.View,int,boolean) -> measureChild
    779:787:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    371:376:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1090:1203:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    170:174:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    149:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    212:213:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    218:219:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    237:238:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    224:225:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    231:232:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    179:186:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    191:192:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    388:390:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    396:398:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    302:319:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    836:846:void setSpanCount(int) -> setSpanCount
    111:115:void setStackFromEnd(boolean) -> setStackFromEnd
    1212:1212:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    292:297:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1370:1370:void <init>() -> <init>
    1379:1379:int getSpanIndex(int,int) -> getSpanIndex
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1397:1402:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1397:1406:void <init>(int,int) -> <init>
    1397:1410:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1397:1414:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1436:1436:int getSpanIndex() -> getSpanIndex
    1446:1446:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    856:862:void <init>() -> <init>
    1020:1035:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    952:960:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    939:947:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1054:1069:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    917:917:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    909:909:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    169:450:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    470:483:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1249:1267:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    991:1044:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1276:1293:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    497:511:void destroyCallbacks() -> destroyCallbacks
    924:932:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1166:1172:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1050:1065:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    810:855:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    961:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    942:942:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    531:539:void getSelectedDxDy(float[]) -> getSelectedDxDy
    733:735:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    455:457:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    863:893:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    947:950:void obtainVelocityTracker() -> obtainVelocityTracker
    904:914:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    563:570:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    550:555:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    709:709:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    954:956:void releaseVelocityTracker() -> releaseVelocityTracker
    1328:1332:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    747:805:boolean scrollIfNecessary() -> scrollIfNecessary
    583:703:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    488:493:void setupCallbacks() -> setupCallbacks
    515:516:void startGestureDetection() -> startGestureDetection
    521:526:void stopGestureDetection() -> stopGestureDetection
    1202:1239:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1181:1197:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    260:260:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    263:268:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    316:316:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    320:360:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    426:426:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    365:414:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    644:644:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    647:667:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    709:709:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    712:724:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1412:1419:void <clinit>() -> <clinit>
    1396:1432:void <init>() -> <init>
    1814:1857:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2050:2050:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1604:1605:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2145:2151:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1913:1917:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    1609:1609:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    2179:2193:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1523:1525:int makeMovementFlags(int,int) -> makeMovementFlags
    2083:2083:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2118:2118:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1990:2002:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    2009:2032:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1956:1982:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1908:1908:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
    1412:1412:void <init>() -> <init>
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
    1419:1419:void <init>() -> <init>
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2327:2329:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2337:2337:void doNotReactToLongPress() -> doNotReactToLongPress
    2347:2373:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2409:2434:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2447:2447:void cancel() -> cancel
    2486:2486:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2478:2481:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2438:2438:void setDuration(long) -> setDuration
    2451:2451:void setFraction(float) -> setFraction
    2442:2443:void start() -> start
    2459:2467:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
    2426:2426:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2429:2429:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback:
    2246:2248:void <init>(int,int) -> <init>
    2300:2300:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    2306:2307:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2285:2285:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    91:99:void clearView(android.view.View) -> clearView
    61:68:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    46:57:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:99:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    163:163:void <init>(android.content.Context) -> <init>
    67:180:void <init>(android.content.Context,int,boolean) -> <init>
    67:197:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1444:1445:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    507:515:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    313:313:boolean canScrollHorizontally() -> canScrollHorizontally
    321:321:boolean canScrollVertically() -> canScrollVertically
    1402:1412:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1323:1343:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1311:1313:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1176:1176:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1164:1164:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1188:1188:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1209:1215:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1198:1204:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1220:1226:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    531:539:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1182:1182:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1170:1170:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1194:1194:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1753:1778:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1079:1079:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1068:1069:void ensureLayoutState() -> ensureLayoutState
    1607:1657:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1955:1955:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1836:1840:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1818:1822:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1981:1982:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1959:1959:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    2021:2022:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2070:2092:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    2048:2065:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1943:1944:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1950:1951:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1868:1895:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    426:439:android.view.View findViewByPosition(int) -> findViewByPosition
    989:1002:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    1014:1027:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    211:211:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1806:1806:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1796:1796:android.view.View getChildClosestToStart() -> getChildClosestToStart
    466:467:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    348:348:int getOrientation() -> getOrientation
    1064:1064:boolean isLayoutRTL() -> isLayoutRTL
    1257:1257:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1662:1730:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    779:825:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    246:249:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2100:2134:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    256:259:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    559:739:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    748:752:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    294:299:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    266:286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2219:2243:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1581:1589:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1464:1468:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1537:1562:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1497:1514:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1305:1306:boolean resolveIsInfinite() -> resolveIsInfinite
    380:383:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1416:1437:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1142:1145:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1098:1103:void scrollToPosition(int) -> scrollToPosition
    1126:1131:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1155:1158:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    359:369:void setOrientation(int) -> setOrientation
    412:417:void setReverseLayout(boolean) -> setReverseLayout
    328:333:void setStackFromEnd(boolean) -> setStackFromEnd
    1735:1737:boolean shouldMeasureTwice() -> shouldMeasureTwice
    522:525:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2209:2209:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    858:890:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    903:978:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:847:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1263:1301:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1035:1035:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1039:1045:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1049:1049:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1053:1059:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2515:2516:void <init>() -> <init>
    2531:2533:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2600:2607:void assignFromView(android.view.View,int) -> assignFromView
    2553:2593:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2547:2549:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2520:2523:void reset() -> reset
    2538:2538:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2611:2611:void <init>() -> <init>
    2618:2621:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2252:2338:void <init>() -> <init>
    2392:2392:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2396:2401:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2349:2349:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2359:2363:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2375:2384:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2406:2419:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2491:2491:void <clinit>() -> <clinit>
    2454:2454:void <init>() -> <init>
    2458:2461:void <init>(android.os.Parcel) -> <init>
    2465:2468:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2472:2472:boolean hasValidAnchor() -> hasValidAnchor
    2476:2476:void invalidateAnchor() -> invalidateAnchor
    2486:2488:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2492:2492:void <init>() -> <init>
    2492:2492:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2495:2495:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2492:2492:java.lang.Object[] newArray(int) -> newArray
    2500:2500:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    80:97:void <init>(android.content.Context) -> <init>
    303:303:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    348:358:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    322:332:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    172:172:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    197:197:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    211:211:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    224:224:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    176:180:float getSpeedPerPixel() -> getSpeedPerPixel
    238:238:int getVerticalSnapPreference() -> getVerticalSnapPreference
    132:146:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    156:157:void onStop() -> onStop
    114:119:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    251:267:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.ListAdapter:
    97:110:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    173:173:java.util.List getCurrentList() -> getCurrentList
    150:150:java.lang.Object getItem(int) -> getItem
    155:155:int getItemCount() -> getItemCount
    128:128:void submitList(java.util.List) -> submitList
androidx.recyclerview.widget.ListAdapter$1 -> androidx.recyclerview.widget.ListAdapter$1:
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:102:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:49:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    243:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    39:39:void <init>() -> <init>
    53:62:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    174:177:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    204:206:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    222:235:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    73:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    85:140:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    268:271:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    248:251:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    259:262:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    150:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    158:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    177:177:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    193:193:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    198:198:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    181:187:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    226:638:void <clinit>() -> <clinit>
    709:709:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    389:787:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2987:3011:void absorbGlows(int,int) -> absorbGlows
    217:217:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    217:217:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    217:217:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    217:217:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1530:1539:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    3327:3328:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1667:1680:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1696:1696:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1366:1369:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3469:3469:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1804:1807:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4832:4834:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4850:4866:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4840:4843:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3438:3451:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    5143:5144:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3882:3883:void cancelScroll() -> cancelScroll
    4969:4969:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6421:6435:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    5023:5030:void clearOldPositions() -> clearOldPositions
    2272:2275:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2247:2250:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2295:2298:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2344:2347:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2320:2323:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2367:2370:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2964:2981:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    2817:2817:int consumeFlingInHorizontalStretch(int) -> consumeFlingInHorizontalStretch
    2848:2862:int consumeFlingInStretch(int,android.widget.EdgeEffect,android.widget.EdgeEffect,int) -> consumeFlingInStretch
    2829:2829:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    2033:2066:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    847:891:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    4050:4057:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4796:4797:boolean didChildRangeChange(int,int) -> didChildRangeChange
    8288:8296:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    8273:8281:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    4119:4125:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    4281:4326:void dispatchLayout() -> dispatchLayout
    4498:4582:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4590:4612:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4620:4703:void dispatchLayoutStep3() -> dispatchLayoutStep3
    12414:12414:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    12419:12419:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    12402:12402:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    12408:12408:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    12382:12382:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    12396:12396:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5679:5693:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5623:5645:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    12293:12306:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    4185:4185:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1517:1517:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1509:1509:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3509:3518:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4898:4953:void draw(android.graphics.Canvas) -> draw
    5499:5499:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    3056:3064:void ensureBottomGlow() -> ensureBottomGlow
    3016:3024:void ensureLeftGlow() -> ensureLeftGlow
    3029:3037:void ensureRightGlow() -> ensureRightGlow
    3042:3050:void ensureTopGlow() -> ensureTopGlow
    795:798:java.lang.String exceptionLabel() -> exceptionLabel
    4480:4486:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5482:5490:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    5258:5261:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    5275:5276:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3538:3543:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4770:4792:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    6399:6409:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    4367:4387:android.view.View findNextViewToFocus() -> findNextViewToFocus
    5393:5403:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    5455:5463:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    5415:5427:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2688:2778:boolean fling(int,int) -> fling
    3131:3205:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4974:4977:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4982:4985:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4990:4993:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1291:1291:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    12310:12315:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1346:1349:int getBaseline() -> getBaseline
    4827:4827:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    5303:5304:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    14329:14332:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5318:5319:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    5237:5242:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    5284:5284:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1162:1162:boolean getClipToPadding() -> getClipToPadding
    822:822:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5565:5570:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4468:4473:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    3096:3096:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    899:905:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    4200:4200:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5574:5594:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1722:1722:int getItemDecorationCount() -> getItemDecorationCount
    1574:1574:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2904:2904:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2894:2894:int getMinFlingVelocity() -> getMinFlingVelocity
    6446:6447:long getNanoTime() -> getNanoTime
    1468:1468:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    5210:5210:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1587:1587:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1634:1634:int getScrollState() -> getScrollState
    14358:14361:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    5670:5673:float getSplineFlingDistance(int) -> getSplineFlingDistance
    4724:4750:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    12371:12371:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    5712:5713:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2074:2080:boolean hasUpdatedView() -> hasUpdatedView
    1032:1032:void initAdapterManager() -> initAdapterManager
    809:810:void initAutofill() -> initAutofill
    909:909:void initChildrenHelper() -> initChildrenHelper
    12324:12334:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    3069:3069:void invalidateGlows() -> invalidateGlows
    5188:5196:void invalidateItemDecorations() -> invalidateItemDecorations
    4115:4115:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    3409:3409:boolean isAttachedToWindow() -> isAttachedToWindow
    4149:4149:boolean isComputingLayout() -> isComputingLayout
    2490:2490:boolean isLayoutSuppressed() -> isLayoutSuppressed
    12346:12346:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    3221:3271:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1854:1862:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4888:4893:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    5172:5180:void markKnownViewsInvalid() -> markKnownViewsInvalid
    1938:1981:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    5547:5549:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5509:5511:void offsetChildrenVertical(int) -> offsetChildrenVertical
    5068:5081:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    5034:5064:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    5087:5111:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3344:3375:void onAttachedToWindow() -> onAttachedToWindow
    3381:3400:void onDetachedFromWindow() -> onDetachedFromWindow
    4959:4963:void onDraw(android.graphics.Canvas) -> onDraw
    4092:4092:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    4096:4096:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    4100:4109:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3899:3940:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3552:3659:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4872:4875:void onLayout(boolean,int,int,int,int) -> onLayout
    3949:4039:void onMeasure(int,int) -> onMeasure
    3887:3893:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3334:3339:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1487:1501:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1473:1479:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4062:4064:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3710:3868:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4208:4210:void postAnimationRunner() -> postAnimationRunner
    4215:4215:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    4225:4252:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    5162:5164:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2913:2935:void pullGlows(float,float,float,float) -> pullGlows
    4760:4766:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    4394:4463:void recoverFocusFromState() -> recoverFocusFromState
    2941:2958:void releaseGlows() -> releaseGlows
    2160:2184:int releaseHorizontalGlow(int,float) -> releaseHorizontalGlow
    2200:2224:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1235:1247:void removeAndRecycleViews() -> removeAndRecycleViews
    1551:1562:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4803:4819:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1749:1758:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1379:1382:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3478:3480:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1816:1817:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5991:6002:void repositionShadowingViews() -> repositionShadowingViews
    3276:3279:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3294:3316:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3322:3322:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3700:3705:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4880:4883:void requestLayout() -> requestLayout
    4351:4353:void resetFocusInfo() -> resetFocusInfo
    3874:3878:void resetScroll() -> resetScroll
    4331:4346:void saveFocusInfo() -> saveFocusInfo
    5009:5017:void saveOldPositions() -> saveOldPositions
    1900:1911:void scrollBy(int,int) -> scrollBy
    2104:2142:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    1997:2020:void scrollStep(int,int,int[]) -> scrollStep
    1894:1894:void scrollTo(int,int) -> scrollTo
    1840:1850:void scrollToPosition(int) -> scrollToPosition
    4177:4180:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    832:833:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1224:1227:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1262:1280:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1775:1779:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    12283:12288:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1139:1145:void setClipToPadding(boolean) -> setClipToPadding
    3082:3084:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1126:1126:void setHasFixedSize(boolean) -> setHasFixedSize
    4081:4087:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1624:1624:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2518:2518:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1408:1446:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2557:2559:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    12341:12341:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1458:1458:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1791:1791:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    5227:5227:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1599:1599:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1308:1308:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1638:1649:void setScrollState(int) -> setScrollState
    1175:1186:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1609:1609:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    2800:2803:boolean shouldAbsorb(android.widget.EdgeEffect,int,int) -> shouldAbsorb
    4161:4169:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2572:2572:void smoothScrollBy(int,int) -> smoothScrollBy
    2584:2584:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2603:2603:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2641:2670:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1881:1889:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2385:2387:void startInterceptRequestLayout() -> startInterceptRequestLayout
    12351:12351:boolean startNestedScroll(int) -> startNestedScroll
    12356:12356:boolean startNestedScroll(int,int) -> startNestedScroll
    3675:3692:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    2402:2432:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    12361:12361:void stopNestedScroll() -> stopNestedScroll
    12366:12366:void stopNestedScroll(int) -> stopNestedScroll
    2874:2875:void stopScroll() -> stopScroll
    2882:2884:void stopScrollersInternal() -> stopScrollersInternal
    2462:2477:void suppressLayout(boolean) -> suppressLayout
    5121:5139:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    422:422:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    425:438:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    620:620:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    623:626:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    630:630:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    667:667:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    678:678:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    671:672:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    684:694:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    700:700:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    909:909:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    920:924:void addView(android.view.View,int) -> addView
    980:991:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    996:1010:void detachViewFromParent(int) -> detachViewFromParent
    954:954:android.view.View getChildAt(int) -> getChildAt
    912:912:int getChildCount() -> getChildCount
    974:974:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    929:929:int indexOfChild(android.view.View) -> indexOfChild
    1015:1017:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    1023:1025:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    959:969:void removeAllViews() -> removeAllViews
    934:946:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    1032:1032:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1077:1089:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1035:1041:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1067:1068:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1101:1102:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1107:1109:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1052:1054:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1060:1061:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1073:1073:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1096:1096:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$7 -> androidx.recyclerview.widget.RecyclerView$7:
    8237:8237:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    7597:7600:void <init>() -> <init>
    7749:7768:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    8237:8241:boolean canRestoreState() -> canRestoreState
    7718:7729:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7923:7923:boolean hasObservers() -> hasObservers
    7831:7831:boolean hasStableIds() -> hasStableIds
    8008:8008:void notifyDataSetChanged() -> notifyDataSetChanged
    8023:8023:void notifyItemChanged(int) -> notifyItemChanged
    8050:8050:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    8128:8128:void notifyItemMoved(int,int) -> notifyItemMoved
    8067:8067:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    8097:8097:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    8146:8146:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    8179:8179:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7678:7678:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7942:7942:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7797:7801:void setHasStableIds(boolean) -> setHasStableIds
    7955:7955:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy:
    8251:8267:void <clinit>() -> <clinit>
    8251:8251:void <init>(java.lang.String,int) -> <init>
    8251:8251:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String) -> valueOf
    8251:8251:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values() -> values
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    13096:13096:void <init>() -> <init>
    13098:13098:boolean hasObservers() -> hasObservers
    13106:13107:void notifyChanged() -> notifyChanged
    13153:13154:void notifyItemMoved(int,int) -> notifyItemMoved
    13118:13118:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    13127:13128:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    13137:13138:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    13147:13148:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    12560:12560:void <init>() -> <init>
    12572:12572:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    6084:6084:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    13593:13663:void <init>() -> <init>
    13980:13986:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    14196:14196:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    14064:14066:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    14204:14208:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13689:13689:long getAddDuration() -> getAddDuration
    13725:13725:long getChangeDuration() -> getChangeDuration
    13671:13671:long getMoveDuration() -> getMoveDuration
    13707:13707:long getRemoveDuration() -> getRemoveDuration
    14137:14142:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    14222:14222:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13812:13812:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    13784:13784:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13746:13746:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    14289:14289:void <init>() -> <init>
    14301:14301:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    14317:14321:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    13551:13551:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13556:13565:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    11429:11429:void <init>() -> <init>
    11478:11478:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    11503:11503:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    11440:11440:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    11461:11461:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    8316:8423:void <init>() -> <init>
    9258:9258:void addDisappearingView(android.view.View) -> addDisappearingView
    9277:9277:void addDisappearingView(android.view.View,int) -> addDisappearingView
    9289:9289:void addView(android.view.View) -> addView
    9302:9302:void addView(android.view.View,int) -> addView
    9306:9355:void addViewInt(android.view.View,int,boolean) -> addViewInt
    8631:8632:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    9546:9552:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    9567:9567:void attachView(android.view.View,int) -> attachView
    10441:10446:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8609:8618:int chooseSize(int,int,int) -> chooseSize
    9933:9936:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    9526:9526:void detachViewAt(int) -> detachViewAt
    9533:9533:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8844:8845:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8849:8850:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    9445:9452:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    9473:9481:android.view.View findViewByPosition(int) -> findViewByPosition
    9078:9083:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    9103:9103:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    10476:10476:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9676:9676:android.view.View getChildAt(int) -> getChildAt
    9665:9665:int getChildCount() -> getChildCount
    10184:10225:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    10570:10599:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8957:8957:boolean getClipToPadding() -> getClipToPadding
    10420:10420:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    10372:10372:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    10384:10384:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    10250:10251:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    10237:10238:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    10408:10408:int getDecoratedRight(android.view.View) -> getDecoratedRight
    10396:10396:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9830:9834:android.view.View getFocusedChild() -> getFocusedChild
    9740:9740:int getHeight() -> getHeight
    9708:9708:int getHeightMode() -> getHeightMode
    9853:9854:int getItemCount() -> getItemCount
    9227:9227:int getLayoutDirection() -> getLayoutDirection
    10491:10491:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10999:10999:int getMinimumHeight() -> getMinimumHeight
    10991:10991:int getMinimumWidth() -> getMinimumWidth
    9780:9780:int getPaddingBottom() -> getPaddingBottom
    9750:9750:int getPaddingLeft() -> getPaddingLeft
    9770:9770:int getPaddingRight() -> getPaddingRight
    9760:9760:int getPaddingTop() -> getPaddingTop
    9417:9417:int getPosition(android.view.View) -> getPosition
    11359:11367:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10506:10506:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10461:10461:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    10340:10361:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    9724:9724:int getWidth() -> getWidth
    9692:9692:int getWidthMode() -> getWidthMode
    11393:11397:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8861:8861:boolean isAttachedToWindow() -> isAttachedToWindow
    8722:8722:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    10708:10719:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8787:8787:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10080:10081:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    9215:9215:boolean isSmoothScrolling() -> isSmoothScrolling
    10687:10689:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    10319:10321:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    10109:10124:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    9598:9604:void moveView(int,int) -> moveView
    9864:9865:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9876:9877:void offsetChildrenVertical(int) -> offsetChildrenVertical
    8948:8948:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    11124:11124:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    11140:11149:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    11075:11075:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    11105:11119:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    11155:11158:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10842:10842:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    9013:9013:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    10972:10972:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10733:10733:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10755:10755:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    11039:11040:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    11264:11264:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    11280:11315:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    11322:11322:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    11065:11068:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9969:9994:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9642:9643:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    9653:9655:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8892:8893:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9369:9369:void removeView(android.view.View) -> removeView
    9381:9383:void removeViewAt(int) -> removeViewAt
    10622:10622:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10643:10652:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8581:8582:void requestLayout() -> requestLayout
    11192:11192:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9941:9955:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    11372:11374:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8492:8501:void setMeasureSpecs(int,int) -> setMeasureSpecs
    8570:8574:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10983:10983:void setMeasuredDimension(int,int) -> setMeasuredDimension
    8519:8547:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    8477:8488:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    10049:10052:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10034:10036:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    9188:9188:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    9203:9208:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    11033:11034:void stopSmoothScroller() -> stopSmoothScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    8325:8325:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8328:8328:android.view.View getChildAt(int) -> getChildAt
    8351:8352:int getChildEnd(android.view.View) -> getChildEnd
    8344:8345:int getChildStart(android.view.View) -> getChildStart
    8338:8338:int getParentEnd() -> getParentEnd
    8333:8333:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    8361:8361:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8364:8364:android.view.View getChildAt(int) -> getChildAt
    8388:8389:int getChildEnd(android.view.View) -> getChildEnd
    8381:8382:int getChildStart(android.view.View) -> getChildStart
    8374:8375:int getParentEnd() -> getParentEnd
    8369:8369:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    11407:11407:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    12430:12438:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    12430:12442:void <init>(int,int) -> <init>
    12430:12446:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    12430:12450:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    12430:12454:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12514:12514:int getViewLayoutPosition() -> getViewLayoutPosition
    12496:12496:boolean isItemChanged() -> isItemChanged
    12485:12485:boolean isItemRemoved() -> isItemRemoved
    12474:12474:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    13529:13529:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    11591:11591:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    6140:6192:void <init>() -> <init>
    6318:6318:void attach() -> attach
    6333:6333:void attachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter) -> attachForPoolingContainer
    6198:6203:void clear() -> clear
    6322:6322:void detach() -> detach
    6347:6353:void detachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> detachForPoolingContainer
    6302:6303:void factorInBindTime(int,long) -> factorInBindTime
    6296:6297:void factorInCreateTime(int,long) -> factorInCreateTime
    6239:6244:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    6385:6388:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    6374:6380:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6275:6285:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    6292:6292:long runningAverage(long,long) -> runningAverage
    6313:6313:boolean willBindInTime(int,long,long) -> willBindInTime
    6308:6308:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    6157:6161:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    6466:6476:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    7094:7112:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6868:6885:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6489:6490:void clear() -> clear
    7524:7536:void clearOldPositions() -> clearOldPositions
    7183:7185:void clearScrap() -> clearScrap
    6658:6665:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    7337:7349:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    7192:7211:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7481:7485:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    7175:7175:int getScrapCount() -> getScrapCount
    6521:6521:java.util.List getScrapList() -> getScrapList
    7283:7326:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    7228:7269:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    7179:7179:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6684:6684:android.view.View getViewForPosition(int) -> getViewForPosition
    6688:6688:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6890:6891:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6896:6912:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    7542:7547:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7508:7519:void markKnownViewsInvalid() -> markKnownViewsInvalid
    7452:7455:void maybeSendPoolingContainerAttach() -> maybeSendPoolingContainerAttach
    7393:7402:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    7374:7383:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7415:7429:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    7356:7360:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    7470:7470:void onAttachedToWindow() -> onAttachedToWindow
    7474:7477:void onDetachedFromWindow() -> onDetachedFromWindow
    7460:7460:void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter) -> poolingContainerDetach
    7464:7465:void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> poolingContainerDetach
    7121:7125:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6959:6965:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6984:6989:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6929:6954:void recycleView(android.view.View) -> recycleView
    6998:7081:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    7138:7153:void scrapView(android.view.View) -> scrapView
    7440:7448:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6499:6500:void setViewCacheSize(int) -> setViewCacheSize
    6573:6587:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6711:6863:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    7164:7171:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6504:6510:void updateViewCacheSize() -> updateViewCacheSize
    6535:6554:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7490:7500:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    6009:6009:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6014:6019:void onChanged() -> onChanged
    6025:6027:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    6033:6035:void onItemRangeInserted(int,int) -> onItemRangeInserted
    6049:6051:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    6041:6043:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    6056:6060:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    13196:13196:void <clinit>() -> <clinit>
    13174:13176:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    13183:13183:void <init>(android.os.Parcelable) -> <init>
    13193:13193:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    13188:13189:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    13196:13196:void <init>() -> <init>
    13196:13196:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    13196:13196:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    13199:13199:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    13204:13204:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    13196:13196:java.lang.Object[] newArray(int) -> newArray
    13209:13209:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    12611:12628:void <init>() -> <init>
    12685:12691:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    12822:12822:android.view.View findViewByPosition(int) -> findViewByPosition
    12815:12815:int getChildCount() -> getChildCount
    12808:12808:int getChildPosition(android.view.View) -> getChildPosition
    12701:12701:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    12753:12753:int getTargetPosition() -> getTargetPosition
    12735:12735:boolean isPendingInitialRun() -> isPendingInitialRun
    12743:12743:boolean isRunning() -> isRunning
    12849:12852:void normalize(android.graphics.PointF) -> normalize
    12757:12798:void onAnimation(int,int) -> onAnimation
    12835:12836:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    12671:12671:void setTargetPosition(int) -> setTargetPosition
    12646:12667:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    12711:12724:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    12923:12923:void <init>(int,int) -> <init>
    12908:12947:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12970:12970:boolean hasJumpTarget() -> hasJumpTarget
    12966:12966:void jumpTo(int) -> jumpTo
    12974:12993:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    13063:13067:void update(int,int,int,android.view.animation.Interpolator) -> update
    12998:13002:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    13224:13296:void <init>() -> <init>
    13230:13233:void assertLayoutStep(int) -> assertLayoutStep
    13477:13479:int getItemCount() -> getItemCount
    13431:13431:int getTargetScrollPosition() -> getTargetScrollPosition
    13441:13441:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    13353:13353:boolean isPreLayout() -> isPreLayout
    13322:13326:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    13506:13506:java.lang.String toString() -> toString
    13364:13364:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory:
    6124:6124:void <init>() -> <init>
    6128:6128:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5721:5730:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5971:5979:int computeScrollDuration(int,int) -> computeScrollDuration
    5903:5914:void fling(int,int) -> fling
    5898:5899:void internalPostOnAnimation() -> internalPostOnAnimation
    5890:5893:void postOnAnimation() -> postOnAnimation
    5735:5885:void run() -> run
    5934:5961:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5983:5984:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11782:11782:void <clinit>() -> <clinit>
    11676:11816:void <init>(android.view.View) -> <init>
    12116:12119:void addChangePayload(java.lang.Object) -> addChangePayload
    12111:12111:void addFlags(int) -> addFlags
    11842:11843:void clearOldPosition() -> clearOldPosition
    12131:12134:void clearPayload() -> clearPayload
    12058:12058:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    12062:12062:void clearTmpDetachFlag() -> clearTmpDetachFlag
    12124:12126:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    12269:12269:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11820:11822:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11995:11998:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    12035:12035:long getItemId() -> getItemId
    12042:12042:int getItemViewType() -> getItemViewType
    11894:11894:int getLayoutPosition() -> getLayoutPosition
    12025:12025:int getOldPosition() -> getOldPosition
    12138:12147:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    12091:12091:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    12103:12103:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    12099:12099:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    12083:12083:boolean isBound() -> isBound
    12075:12075:boolean isInvalid() -> isInvalid
    12252:12253:boolean isRecyclable() -> isRecyclable
    12087:12087:boolean isRemoved() -> isRemoved
    12046:12046:boolean isScrap() -> isScrap
    12095:12095:boolean isTmpDetached() -> isTmpDetached
    12273:12273:boolean isUpdated() -> isUpdated
    12079:12079:boolean needsUpdate() -> needsUpdate
    11826:11837:void offsetPosition(int,boolean) -> offsetPosition
    12171:12177:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    12185:12187:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    12152:12163:void resetInternal() -> resetInternal
    11847:11848:void saveOldPosition() -> saveOldPosition
    12107:12107:void setFlags(int,int) -> setFlags
    12228:12240:void setIsRecyclable(boolean) -> setIsRecyclable
    12070:12071:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    12261:12261:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11853:11853:boolean shouldIgnore() -> shouldIgnore
    12193:12212:java.lang.String toString() -> toString
    12050:12050:void unScrap() -> unScrap
    12054:12054:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    109:109:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    90:94:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    79:81:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    64:68:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    122:130:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    219:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    263:267:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    148:148:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    241:245:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    157:168:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    230:234:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    252:256:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    178:191:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    138:140:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    197:201:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    208:212:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    36:42:void <init>() -> <init>
    115:127:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    153:163:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    91:108:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    134:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    85:85:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    311:312:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    358:358:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    327:328:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    372:372:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    300:301:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    348:348:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    285:286:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    338:338:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    35:43:void <init>() -> <init>
    94:105:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    124:125:void destroyCallbacks() -> destroyCallbacks
    66:76:boolean onFling(int,int) -> onFling
    113:117:void setupCallbacks() -> setupCallbacks
    159:174:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    184:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    44:45:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    49:52:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    59:59:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    106:234:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1780:1781:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    794:825:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1839:1841:boolean areAllEndsEqual() -> areAllEndsEqual
    1849:1851:boolean areAllStartsEqual() -> areAllStartsEqual
    527:528:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1724:1734:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2017:2021:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:309:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:413:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2097:2127:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2026:2036:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2368:2393:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1706:1709:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1715:1718:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    257:259:void createOrientationHelpers() -> createOrientationHelpers
    1549:1702:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2192:2195:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1361:1367:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1338:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2209:2211:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1385:1398:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1404:1417:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1859:1861:int getMaxEnd(int) -> getMaxEnd
    1817:1819:int getMaxStart(int) -> getMaxStart
    1870:1872:int getMinEnd(int) -> getMinEnd
    1828:1830:int getMinStart(int) -> getMinStart
    1954:1984:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1505:1543:void handleUpdate(int,int,int) -> handleUpdate
    339:391:android.view.View hasGapsToFix() -> hasGapsToFix
    548:549:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    1136:1190:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1201:1211:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1460:1462:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1468:1470:void offsetChildrenVertical(int) -> offsetChildrenVertical
    611:613:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    322:329:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2258:2346:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1294:1308:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1481:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1487:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1492:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1476:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1498:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    604:604:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    619:728:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    734:738:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1230:1236:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1244:1284:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:316:void onScrollStateChanged(int) -> onScrollStateChanged
    1944:1947:boolean preferLastSpan(int) -> preferLastSpan
    2136:2145:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1787:1788:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1740:1772:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1910:1933:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1881:1902:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    742:784:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    559:562:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2149:2172:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2007:2007:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2051:2056:void scrollToPosition(int) -> scrollToPosition
    2013:2013:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1453:1455:void setLayoutStateDirection(int) -> setLayoutStateDirection
    586:599:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:459:void setOrientation(int) -> setOrientation
    476:481:void setReverseLayout(boolean) -> setReverseLayout
    428:437:void setSpanCount(int) -> setSpanCount
    2044:2046:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1793:1797:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    848:851:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    857:929:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:840:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1422:1449:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    935:938:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1802:1811:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1220:1223:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:218:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3243:3244:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3270:3271:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3275:3278:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3248:3254:void reset() -> reset
    3259:3265:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2424:2424:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2428:void <init>(int,int) -> <init>
    2432:2432:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2436:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2462:2462:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2812:2812:void <init>() -> <init>
    2983:3002:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2891:2894:void clear() -> clear
    2879:2886:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3036:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3011:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2858:2861:int getSpan(int) -> getSpan
    2838:2852:int invalidateAfter(int) -> invalidateAfter
    2957:2977:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2936:void offsetForAddition(int,int) -> offsetForAddition
    2898:2906:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2948:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2922:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2866:2867:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2871:2871:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3105:3105:void <clinit>() -> <clinit>
    3059:3066:void <init>(android.os.Parcel) -> <init>
    3070:3070:void <init>() -> <init>
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3091:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3215:3215:void <clinit>() -> <clinit>
    3138:3138:void <init>() -> <init>
    3141:3161:void <init>(android.os.Parcel) -> <init>
    3164:3174:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3186:3189:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3178:3182:void invalidateSpanInfo() -> invalidateSpanInfo
    3199:3212:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2483:2490:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2574:2582:void appendToSpan(android.view.View) -> appendToSpan
    2590:2605:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2539:2546:void calculateCachedEnd() -> calculateCachedEnd
    2505:2512:void calculateCachedStart() -> calculateCachedStart
    2609:2611:void clear() -> clear
    2674:2676:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2692:2694:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2730:2753:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2767:2767:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2651:2651:int getDeletedSize() -> getDeletedSize
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2777:2797:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2616:void invalidateCache() -> invalidateCache
    2659:2663:void onOffset(int) -> onOffset
    2624:2634:void popEnd() -> popEnd
    2638:2647:void popStart() -> popStart
    2561:2569:void prependToSpan(android.view.View) -> prependToSpan
    2620:2620:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:233:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:253:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:148:void addFlags(int) -> addFlags
    166:185:boolean boundsMatch() -> boundsMatch
    152:152:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:151:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:203:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:132:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:188:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:70:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:55:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:273:void onDetach() -> onDetach
    277:277:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:119:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:215:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:309:void <init>() -> <init>
    326:326:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:321:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.room.AutoCloser -> androidx.room.AutoCloser:
    46:144:void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor) -> <init>
    269:276:void closeDatabaseIfOpen() -> closeDatabaseIfOpen
    229:246:void decrementCountAndScheduleClose() -> decrementCountAndScheduleClose
    173:177:java.lang.Object executeRefCountingFunction(androidx.arch.core.util.Function) -> executeRefCountingFunction
    258:260:androidx.sqlite.db.SupportSQLiteDatabase getDelegateDatabase() -> getDelegateDatabase
    195:220:androidx.sqlite.db.SupportSQLiteDatabase incrementCountAndEnsureDbIsOpen() -> incrementCountAndEnsureDbIsOpen
    155:161:void init(androidx.sqlite.db.SupportSQLiteOpenHelper) -> init
    287:287:boolean isActive() -> isActive
    309:309:void setAutoCloseCallback(java.lang.Runnable) -> setAutoCloseCallback
androidx.room.AutoCloser$1 -> androidx.room.AutoCloser$1:
    83:83:void <init>(androidx.room.AutoCloser) -> <init>
    86:86:void run() -> run
androidx.room.AutoCloser$2 -> androidx.room.AutoCloser$2:
    92:92:void <init>(androidx.room.AutoCloser) -> <init>
    95:128:void run() -> run
androidx.room.AutoClosingRoomOpenHelper -> androidx.room.AutoClosingRoomOpenHelper:
    63:67:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper,androidx.room.AutoCloser) -> <init>
    105:107:void close() -> close
    116:116:androidx.room.AutoCloser getAutoCloser() -> getAutoCloser
    73:73:java.lang.String getDatabaseName() -> getDatabaseName
    127:127:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate() -> getDelegate
    88:89:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    79:79:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase:
    java.lang.Object $r8$lambda$1rVAjIl-UMGj5Yn-_VB8qqaoX5o(java.lang.String,java.lang.Object[],androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$1rVAjIl-UMGj5Yn-_VB8qqaoX5o
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$JmCZFgYqN8IAleNUA8VAUt1bG9c(java.lang.String,androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$JmCZFgYqN8IAleNUA8VAUt1bG9c
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Boolean $r8$lambda$b-KdzNDeRaI1t9yiwJWyXV5j2Yw(androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$b-KdzNDeRaI1t9yiwJWyXV5j2Yw
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$hug7CM9bxDvNgNDT4597Gsa-NPA(androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$hug7CM9bxDvNgNDT4597Gsa-NPA
      # {"id":"com.android.tools.r8.synthesized"}
    137:138:void <init>(androidx.room.AutoCloser) -> <init>
    154:161:void beginTransaction() -> beginTransaction
    169:176:void beginTransactionNonExclusive() -> beginTransactionNonExclusive
    490:490:void close() -> close
    147:147:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    214:223:void endTransaction() -> endTransaction
    386:386:void execSQL(java.lang.String) -> execSQL
    394:394:void execSQL(java.lang.String,java.lang.Object[]) -> execSQL
    479:479:java.util.List getAttachedDbs() -> getAttachedDbs
    424:424:java.lang.String getPath() -> getPath
    241:244:boolean inTransaction() -> inTransaction
    409:414:boolean isOpen() -> isOpen
    469:469:boolean isWriteAheadLoggingEnabled() -> isWriteAheadLoggingEnabled
    387:387:java.lang.Object lambda$execSQL$7(java.lang.String,androidx.sqlite.db.SupportSQLiteDatabase) -> lambda$execSQL$7
    395:395:java.lang.Object lambda$execSQL$8(java.lang.String,java.lang.Object[],androidx.sqlite.db.SupportSQLiteDatabase) -> lambda$execSQL$8
    471:471:java.lang.Boolean lambda$isWriteAheadLoggingEnabled$13(androidx.sqlite.db.SupportSQLiteDatabase) -> lambda$isWriteAheadLoggingEnabled$13
    142:142:void pokeOpen() -> pokeOpen
    310:317:android.database.Cursor query(java.lang.String) -> query
    339:346:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    354:361:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    228:236:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda0 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4df8e5c0e7900286fb417c6b4398144c370eb006c479ba234733ad9eaf1923c8$0.f$0 -> f$0
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4df8e5c0e7900286fb417c6b4398144c370eb006c479ba234733ad9eaf1923c8$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4df8e5c0e7900286fb417c6b4398144c370eb006c479ba234733ad9eaf1923c8$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object[] androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$90d7c4e84c31c66f50ed77bd202cc1437d2424269aaf628d2d68490d1c32a8e2$0.f$1 -> f$1
    java.lang.String androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$90d7c4e84c31c66f50ed77bd202cc1437d2424269aaf628d2d68490d1c32a8e2$0.f$0 -> f$0
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$90d7c4e84c31c66f50ed77bd202cc1437d2424269aaf628d2d68490d1c32a8e2$0.<init>(java.lang.String,java.lang.Object[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$90d7c4e84c31c66f50ed77bd202cc1437d2424269aaf628d2d68490d1c32a8e2$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda2 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$0d8735d58eeccdd76093e59e4aa7ffdcb0b0e6b1da2f20530d7c5299dec55099$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$0d8735d58eeccdd76093e59e4aa7ffdcb0b0e6b1da2f20530d7c5299dec55099$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$0d8735d58eeccdd76093e59e4aa7ffdcb0b0e6b1da2f20530d7c5299dec55099$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$0d8735d58eeccdd76093e59e4aa7ffdcb0b0e6b1da2f20530d7c5299dec55099$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$0d8735d58eeccdd76093e59e4aa7ffdcb0b0e6b1da2f20530d7c5299dec55099$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda3 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4b60f1fa17153105f25aa3f8e825594013d5476f1267c783ad2abd4afa512e2b$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4b60f1fa17153105f25aa3f8e825594013d5476f1267c783ad2abd4afa512e2b$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4b60f1fa17153105f25aa3f8e825594013d5476f1267c783ad2abd4afa512e2b$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4b60f1fa17153105f25aa3f8e825594013d5476f1267c783ad2abd4afa512e2b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$4b60f1fa17153105f25aa3f8e825594013d5476f1267c783ad2abd4afa512e2b$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda4 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$3faeba870b62d0a42ce491b998185506765ad61a34de37e347298cca763611fb$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$3faeba870b62d0a42ce491b998185506765ad61a34de37e347298cca763611fb$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$3faeba870b62d0a42ce491b998185506765ad61a34de37e347298cca763611fb$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$3faeba870b62d0a42ce491b998185506765ad61a34de37e347298cca763611fb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$3faeba870b62d0a42ce491b998185506765ad61a34de37e347298cca763611fb$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda5 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$93b699e81d409ebf92e3716ef7c0a65cb003a59b707e33802ecb17a892c5ea49$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$93b699e81d409ebf92e3716ef7c0a65cb003a59b707e33802ecb17a892c5ea49$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$93b699e81d409ebf92e3716ef7c0a65cb003a59b707e33802ecb17a892c5ea49$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$93b699e81d409ebf92e3716ef7c0a65cb003a59b707e33802ecb17a892c5ea49$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$93b699e81d409ebf92e3716ef7c0a65cb003a59b707e33802ecb17a892c5ea49$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda6 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$383a1bd28a4e18cf8a2a24d932a72fd0d42597715b9e75b0b2f2cc9d5605708a$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$383a1bd28a4e18cf8a2a24d932a72fd0d42597715b9e75b0b2f2cc9d5605708a$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$383a1bd28a4e18cf8a2a24d932a72fd0d42597715b9e75b0b2f2cc9d5605708a$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$383a1bd28a4e18cf8a2a24d932a72fd0d42597715b9e75b0b2f2cc9d5605708a$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$$InternalSyntheticLambda$0$383a1bd28a4e18cf8a2a24d932a72fd0d42597715b9e75b0b2f2cc9d5605708a$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement:
    java.lang.Object $r8$lambda$BOH_ZFMRPQcgvS_zTZRrOdsODxg(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.arch.core.util.Function,androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$BOH_ZFMRPQcgvS_zTZRrOdsODxg
      # {"id":"com.android.tools.r8.synthesized"}
    757:763:void <init>(java.lang.String,androidx.room.AutoCloser) -> <init>
    861:861:void bindBlob(int,byte[]) -> bindBlob
    851:851:void bindDouble(int,double) -> bindDouble
    846:846:void bindLong(int,long) -> bindLong
    841:841:void bindNull(int) -> bindNull
    856:856:void bindString(int,java.lang.String) -> bindString
    778:790:void doBinds(androidx.sqlite.db.SupportSQLiteStatement) -> doBinds
    826:826:long executeInsert() -> executeInsert
    767:767:java.lang.Object executeSqliteStatementWithRefCount(androidx.arch.core.util.Function) -> executeSqliteStatementWithRefCount
    821:821:int executeUpdateDelete() -> executeUpdateDelete
    769:771:java.lang.Object lambda$executeSqliteStatementWithRefCount$0(androidx.arch.core.util.Function,androidx.sqlite.db.SupportSQLiteDatabase) -> lambda$executeSqliteStatementWithRefCount$0
    797:803:void saveBinds(int,java.lang.Object) -> saveBinds
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$ExternalSyntheticLambda0 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.arch.core.util.Function androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$1$54b9a018188b2c4cc18dee81a8103c4fe313a4f37e3420b4f220cfb015bec2b1$0.f$1 -> f$1
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$1$54b9a018188b2c4cc18dee81a8103c4fe313a4f37e3420b4f220cfb015bec2b1$0.f$0 -> f$0
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$1$54b9a018188b2c4cc18dee81a8103c4fe313a4f37e3420b4f220cfb015bec2b1$0.<init>(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.arch.core.util.Function) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$1$54b9a018188b2c4cc18dee81a8103c4fe313a4f37e3420b4f220cfb015bec2b1$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$ExternalSyntheticLambda1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$0db7eab81b9d249aeb808a1d4a0b3eddcf91d8229e9c1518e084b5e2be06b91f$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$0db7eab81b9d249aeb808a1d4a0b3eddcf91d8229e9c1518e084b5e2be06b91f$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$0db7eab81b9d249aeb808a1d4a0b3eddcf91d8229e9c1518e084b5e2be06b91f$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$0db7eab81b9d249aeb808a1d4a0b3eddcf91d8229e9c1518e084b5e2be06b91f$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$0db7eab81b9d249aeb808a1d4a0b3eddcf91d8229e9c1518e084b5e2be06b91f$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$ExternalSyntheticLambda2 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$8b7f41eedcaefb7af96ee884c696500d9e9632a32faaa34c74840e88997830f5$0 androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$8b7f41eedcaefb7af96ee884c696500d9e9632a32faaa34c74840e88997830f5$0.INSTANCE -> INSTANCE
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$8b7f41eedcaefb7af96ee884c696500d9e9632a32faaa34c74840e88997830f5$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$8b7f41eedcaefb7af96ee884c696500d9e9632a32faaa34c74840e88997830f5$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$$InternalSyntheticLambda$0$8b7f41eedcaefb7af96ee884c696500d9e9632a32faaa34c74840e88997830f5$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor -> androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor:
    503:505:void <init>(android.database.Cursor,androidx.room.AutoCloser) -> <init>
    511:512:void close() -> close
    618:618:void copyStringToBuffer(int,android.database.CharArrayBuffer) -> copyStringToBuffer
    662:662:void deactivate() -> deactivate
    608:608:byte[] getBlob(int) -> getBlob
    603:603:int getColumnCount() -> getColumnCount
    583:583:int getColumnIndex(java.lang.String) -> getColumnIndex
    588:588:int getColumnIndexOrThrow(java.lang.String) -> getColumnIndexOrThrow
    593:593:java.lang.String getColumnName(int) -> getColumnName
    598:598:java.lang.String[] getColumnNames() -> getColumnNames
    523:523:int getCount() -> getCount
    643:643:double getDouble(int) -> getDouble
    732:732:android.os.Bundle getExtras() -> getExtras
    638:638:float getFloat(int) -> getFloat
    628:628:int getInt(int) -> getInt
    633:633:long getLong(int) -> getLong
    709:709:android.net.Uri getNotificationUri() -> getNotificationUri
    716:716:java.util.List getNotificationUris() -> getNotificationUris
    528:528:int getPosition() -> getPosition
    623:623:short getShort(int) -> getShort
    613:613:java.lang.String getString(int) -> getString
    648:648:int getType(int) -> getType
    721:721:boolean getWantsAllOnMoveCalls() -> getWantsAllOnMoveCalls
    578:578:boolean isAfterLast() -> isAfterLast
    573:573:boolean isBeforeFirst() -> isBeforeFirst
    517:517:boolean isClosed() -> isClosed
    563:563:boolean isFirst() -> isFirst
    568:568:boolean isLast() -> isLast
    653:653:boolean isNull(int) -> isNull
    533:533:boolean move(int) -> move
    543:543:boolean moveToFirst() -> moveToFirst
    548:548:boolean moveToLast() -> moveToLast
    553:553:boolean moveToNext() -> moveToNext
    538:538:boolean moveToPosition(int) -> moveToPosition
    558:558:boolean moveToPrevious() -> moveToPrevious
    676:676:void registerContentObserver(android.database.ContentObserver) -> registerContentObserver
    686:686:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    671:671:boolean requery() -> requery
    737:737:android.os.Bundle respond(android.os.Bundle) -> respond
    727:727:void setExtras(android.os.Bundle) -> setExtras
    696:696:void setNotificationUri(android.content.ContentResolver,android.net.Uri) -> setNotificationUri
    703:703:void setNotificationUris(android.content.ContentResolver,java.util.List) -> setNotificationUris
    681:681:void unregisterContentObserver(android.database.ContentObserver) -> unregisterContentObserver
    691:691:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.room.AutoClosingRoomOpenHelperFactory -> androidx.room.AutoClosingRoomOpenHelperFactory:
    34:36:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.AutoCloser) -> <init>
    25:25:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
    46:46:androidx.room.AutoClosingRoomOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.room.CoroutinesRoom -> androidx.room.CoroutinesRoom:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
androidx.room.CoroutinesRoom$Companion -> androidx.room.CoroutinesRoom$Companion:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    48:48:void <init>() -> <init>
    109:109:kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable) -> createFlow
    56:64:java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    77:84:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    315:321:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> execute
    315:321:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation):85 -> execute
    86:94:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    314:323:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> execute
    314:323:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation):85 -> execute
androidx.room.CoroutinesRoom$Companion$createFlow$1 -> androidx.room.CoroutinesRoom$Companion$createFlow$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    109:138:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoom$Companion$createFlow$1$1 -> androidx.room.CoroutinesRoom$Companion$createFlow$1$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    110:137:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 -> androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    122:134:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 -> androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    113:113:void <init>(java.lang.String[],kotlinx.coroutines.channels.Channel) -> <init>
    115:115:void onInvalidated(java.util.Set) -> onInvalidated
androidx.room.CoroutinesRoom$Companion$execute$2 -> androidx.room.CoroutinesRoom$Companion$execute$2:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    64:65:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoom$Companion$execute$4$1 -> androidx.room.CoroutinesRoom$Companion$execute$4$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    94:94:java.lang.Object invoke(java.lang.Object) -> invoke
    96:98:void invoke(java.lang.Throwable) -> invoke
androidx.room.CoroutinesRoom$Companion$execute$4$job$1 -> androidx.room.CoroutinesRoom$Companion$execute$4$job$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    86:93:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoomKt -> androidx.room.CoroutinesRoomKt:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    149:149:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase) -> getQueryDispatcher
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getQueryDispatcher
    357:357:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase):149 -> getQueryDispatcher
    150:150:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase) -> getQueryDispatcher
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getQueryDispatcher
    360:360:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase):149 -> getQueryDispatcher
    149:149:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase) -> getQueryDispatcher
    160:160:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase) -> getTransactionDispatcher
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getTransactionDispatcher
    357:357:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase):160 -> getTransactionDispatcher
    161:161:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase) -> getTransactionDispatcher
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getTransactionDispatcher
    360:360:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase):160 -> getTransactionDispatcher
    160:160:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase) -> getTransactionDispatcher
androidx.room.DatabaseConfiguration -> androidx.room.DatabaseConfiguration:
    568:590:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,android.content.Intent,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List) -> <init>
    618:627:boolean isMigrationRequired(int,int) -> isMigrationRequired
androidx.room.EntityDeletionOrUpdateAdapter -> androidx.room.EntityDeletionOrUpdateAdapter:
    40:40:void <init>(androidx.room.RoomDatabase) -> <init>
    67:73:int handle(java.lang.Object) -> handle
androidx.room.EntityInsertionAdapter -> androidx.room.EntityInsertionAdapter:
    43:43:void <init>(androidx.room.RoomDatabase) -> <init>
    61:67:void insert(java.lang.Object) -> insert
androidx.room.IMultiInstanceInvalidationCallback$Stub -> androidx.room.IMultiInstanceInvalidationCallback$Stub:
    34:35:void <init>() -> <init>
    46:50:androidx.room.IMultiInstanceInvalidationCallback asInterface(android.os.IBinder) -> asInterface
    133:133:androidx.room.IMultiInstanceInvalidationCallback getDefaultImpl() -> getDefaultImpl
    63:76:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy:
    84:85:void <init>(android.os.IBinder) -> <init>
    89:89:android.os.IBinder asBinder() -> asBinder
    102:114:void onInvalidation(java.lang.String[]) -> onInvalidation
androidx.room.IMultiInstanceInvalidationService$Stub -> androidx.room.IMultiInstanceInvalidationService$Stub:
    63:64:void <init>() -> <init>
    75:79:androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder) -> asInterface
    254:254:androidx.room.IMultiInstanceInvalidationService getDefaultImpl() -> getDefaultImpl
    92:130:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationService$Stub$Proxy:
    138:139:void <init>(android.os.IBinder) -> <init>
    143:143:android.os.IBinder asBinder() -> asBinder
    220:233:void broadcastInvalidation(int,java.lang.String[]) -> broadcastInvalidation
    159:176:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> registerCallback
androidx.room.Index$Order -> androidx.room.Index$Order:
    100:113:void <clinit>() -> <clinit>
    100:100:void <init>(java.lang.String,int) -> <init>
    100:100:androidx.room.Index$Order valueOf(java.lang.String) -> valueOf
    100:100:androidx.room.Index$Order[] values() -> values
androidx.room.InvalidationLiveDataContainer -> androidx.room.InvalidationLiveDataContainer:
    35:43:void <init>(androidx.room.RoomDatabase) -> <init>
androidx.room.InvalidationTracker -> androidx.room.InvalidationTracker:
    67:67:void <clinit>() -> <clinit>
    94:403:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    292:309:void addObserver(androidx.room.InvalidationTracker$Observer) -> addObserver
    230:235:void appendTriggerName(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTriggerName
    344:347:void beginTransactionInternal(androidx.sqlite.db.SupportSQLiteDatabase) -> beginTransactionInternal
    389:397:boolean ensureInitialization() -> ensureInitialization
    192:206:void internalInit(androidx.sqlite.db.SupportSQLiteDatabase) -> internalInit
    527:533:void notifyObserversByTableNames(java.lang.String[]) -> notifyObserversByTableNames
    210:213:void onAutoCloseCallback() -> onAutoCloseCallback
    487:495:void refreshVersionsAsync() -> refreshVersionsAsync
    379:383:void removeObserver(androidx.room.InvalidationTracker$Observer) -> removeObserver
    330:339:java.lang.String[] resolveViews(java.lang.String[]) -> resolveViews
    182:183:void setAutoCloser(androidx.room.AutoCloser) -> setAutoCloser
    217:218:void startMultiInstanceInvalidation(android.content.Context,java.lang.String,android.content.Intent) -> startMultiInstanceInvalidation
    250:268:void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> startTrackingTable
    239:245:void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> stopTrackingTable
    537:576:void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> syncTriggers
    590:593:void syncTriggers() -> syncTriggers
androidx.room.InvalidationTracker$$ExternalSyntheticLambda0 -> androidx.room.InvalidationTracker$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.InvalidationTracker androidx.room.InvalidationTracker$$InternalSyntheticLambda$0$490437fb36f9dc5c32435c4ffb027bfff7efd6df5e7cca22425f8990765b9222$0.f$0 -> f$0
    void androidx.room.InvalidationTracker$$InternalSyntheticLambda$0$490437fb36f9dc5c32435c4ffb027bfff7efd6df5e7cca22425f8990765b9222$0.<init>(androidx.room.InvalidationTracker) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.InvalidationTracker$$InternalSyntheticLambda$0$490437fb36f9dc5c32435c4ffb027bfff7efd6df5e7cca22425f8990765b9222$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.InvalidationTracker$1 -> androidx.room.InvalidationTracker$1:
    404:404:void <init>(androidx.room.InvalidationTracker) -> <init>
    459:471:java.util.Set checkUpdatedTable() -> checkUpdatedTable
    407:454:void run() -> run
androidx.room.InvalidationTracker$ObservedTableTracker -> androidx.room.InvalidationTracker$ObservedTableTracker:
    792:797:void <init>(int) -> <init>
    855:871:int[] getTablesToSync() -> getTablesToSync
    805:814:boolean onAdded(int[]) -> onAdded
    823:832:boolean onRemoved(int[]) -> onRemoved
    841:844:void resetTriggerState() -> resetTriggerState
androidx.room.InvalidationTracker$Observer -> androidx.room.InvalidationTracker$Observer:
    752:754:void <init>(java.lang.String[]) -> <init>
androidx.room.InvalidationTracker$ObserverWrapper -> androidx.room.InvalidationTracker$ObserverWrapper:
    652:661:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]) -> <init>
    673:689:void notifyByTableInvalidStatus(java.util.Set) -> notifyByTableInvalidStatus
    701:724:void notifyByTableNames(java.lang.String[]) -> notifyByTableNames
androidx.room.MultiInstanceInvalidationClient -> androidx.room.MultiInstanceInvalidationClient:
    79:179:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
androidx.room.MultiInstanceInvalidationClient$1 -> androidx.room.MultiInstanceInvalidationClient$1:
    81:81:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    84:84:void onInvalidation(java.lang.String[]) -> onInvalidation
androidx.room.MultiInstanceInvalidationClient$1$1 -> androidx.room.MultiInstanceInvalidationClient$1$1:
    84:84:void <init>(androidx.room.MultiInstanceInvalidationClient$1,java.lang.String[]) -> <init>
    87:87:void run() -> run
androidx.room.MultiInstanceInvalidationClient$2 -> androidx.room.MultiInstanceInvalidationClient$2:
    99:99:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    103:104:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    109:110:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.room.MultiInstanceInvalidationClient$3 -> androidx.room.MultiInstanceInvalidationClient$3:
    117:117:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    121:127:void run() -> run
androidx.room.MultiInstanceInvalidationClient$4 -> androidx.room.MultiInstanceInvalidationClient$4:
    134:134:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    137:137:void run() -> run
androidx.room.MultiInstanceInvalidationClient$5 -> androidx.room.MultiInstanceInvalidationClient$5:
    158:158:void <init>(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> <init>
    161:170:void onInvalidated(java.util.Set) -> onInvalidated
androidx.room.MultiInstanceInvalidationService -> androidx.room.MultiInstanceInvalidationService:
    42:63:void <init>() -> <init>
    135:135:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.room.MultiInstanceInvalidationService$1 -> androidx.room.MultiInstanceInvalidationService$1:
    55:55:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    55:55:void onCallbackDied(android.os.IInterface,java.lang.Object) -> onCallbackDied
    59:59:void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object) -> onCallbackDied
androidx.room.MultiInstanceInvalidationService$2 -> androidx.room.MultiInstanceInvalidationService$2:
    64:64:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    102:128:void broadcastInvalidation(int,java.lang.String[]) -> broadcastInvalidation
    73:83:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> registerCallback
    92:95:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> unregisterCallback
androidx.room.QueryInterceptorDatabase -> androidx.room.QueryInterceptorDatabase:
    void $r8$lambda$-r0VJIb-SXaJpWgpFKDtPpC-YbQ(androidx.room.QueryInterceptorDatabase) -> $r8$lambda$-r0VJIb-SXaJpWgpFKDtPpC-YbQ
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$2Bw1_mcYTrjaNcvAFu88RWoC1zc(androidx.room.QueryInterceptorDatabase) -> $r8$lambda$2Bw1_mcYTrjaNcvAFu88RWoC1zc
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$G2uMRw08CD8CZIEmWPamLQZm-YY(androidx.room.QueryInterceptorDatabase) -> $r8$lambda$G2uMRw08CD8CZIEmWPamLQZm-YY
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$GzOyG0dejP0qdpp0SF8gnMV9uEw(androidx.room.QueryInterceptorDatabase,java.lang.String,java.util.List) -> $r8$lambda$GzOyG0dejP0qdpp0SF8gnMV9uEw
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$NA95bwzl6ypPQuOg6ufJ2Y9ai7Y(androidx.room.QueryInterceptorDatabase,java.lang.String) -> $r8$lambda$NA95bwzl6ypPQuOg6ufJ2Y9ai7Y
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$QtTq_CaWbFOQiMXA3IbTenmcZT4(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram) -> $r8$lambda$QtTq_CaWbFOQiMXA3IbTenmcZT4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$e_yUx2RhE4gIbG0uPZ5dgwePTvg(androidx.room.QueryInterceptorDatabase,java.lang.String) -> $r8$lambda$e_yUx2RhE4gIbG0uPZ5dgwePTvg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$j065LbIvTXep5D6SsMORdy7nCZ0(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram) -> $r8$lambda$j065LbIvTXep5D6SsMORdy7nCZ0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$mdMz2KzBtUSdwrthK9_RXFoyu08(androidx.room.QueryInterceptorDatabase) -> $r8$lambda$mdMz2KzBtUSdwrthK9_RXFoyu08
      # {"id":"com.android.tools.r8.synthesized"}
    53:56:void <init>(androidx.sqlite.db.SupportSQLiteDatabase,androidx.room.RoomDatabase$QueryCallback,java.util.concurrent.Executor) -> <init>
    68:70:void beginTransaction() -> beginTransaction
    75:77:void beginTransactionNonExclusive() -> beginTransactionNonExclusive
    300:300:void close() -> close
    62:62:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    98:100:void endTransaction() -> endTransaction
    221:222:void execSQL(java.lang.String) -> execSQL
    227:230:void execSQL(java.lang.String,java.lang.Object[]) -> execSQL
    290:290:java.util.List getAttachedDbs() -> getAttachedDbs
    251:251:java.lang.String getPath() -> getPath
    112:112:boolean inTransaction() -> inTransaction
    240:240:boolean isOpen() -> isOpen
    284:284:boolean isWriteAheadLoggingEnabled() -> isWriteAheadLoggingEnabled
    68:69:void lambda$beginTransaction$0() -> lambda$beginTransaction$0
    75:76:void lambda$beginTransactionNonExclusive$1() -> lambda$beginTransactionNonExclusive$1
    98:99:void lambda$endTransaction$4() -> lambda$endTransaction$4
    221:221:void lambda$execSQL$10(java.lang.String) -> lambda$execSQL$10
    229:229:void lambda$execSQL$11(java.lang.String,java.util.List) -> lambda$execSQL$11
    163:164:void lambda$query$6(java.lang.String) -> lambda$query$6
    183:184:void lambda$query$8(androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram) -> lambda$query$8
    194:195:void lambda$query$9(androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram) -> lambda$query$9
    105:106:void lambda$setTransactionSuccessful$5() -> lambda$setTransactionSuccessful$5
    163:165:android.database.Cursor query(java.lang.String) -> query
    181:185:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    192:196:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    105:107:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda0 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$db865243abef22d3408357910c21c8aea4d1e7336f4fedc3aa44786a6cef2f8f$0.f$0 -> f$0
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$db865243abef22d3408357910c21c8aea4d1e7336f4fedc3aa44786a6cef2f8f$0.<init>(androidx.room.QueryInterceptorDatabase) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$db865243abef22d3408357910c21c8aea4d1e7336f4fedc3aa44786a6cef2f8f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda1 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$07c98a66d3bb607177da851a202ff1f5e264f4b4dcbdc8317c0e3087ea24abbd$0.f$0 -> f$0
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$07c98a66d3bb607177da851a202ff1f5e264f4b4dcbdc8317c0e3087ea24abbd$0.<init>(androidx.room.QueryInterceptorDatabase) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$07c98a66d3bb607177da851a202ff1f5e264f4b4dcbdc8317c0e3087ea24abbd$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda2 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$2395e48c85d4ca60cdd55a1f31a369c0bfc61614065f1512e237b7142bcd29f2$0.f$0 -> f$0
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$2395e48c85d4ca60cdd55a1f31a369c0bfc61614065f1512e237b7142bcd29f2$0.<init>(androidx.room.QueryInterceptorDatabase) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$2395e48c85d4ca60cdd55a1f31a369c0bfc61614065f1512e237b7142bcd29f2$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda3 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$8dad71c3887cb7eb81685b8cbd71d80d56f7be100af0e411df4e816e1a75460d$0.f$0 -> f$0
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$8dad71c3887cb7eb81685b8cbd71d80d56f7be100af0e411df4e816e1a75460d$0.<init>(androidx.room.QueryInterceptorDatabase) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$8dad71c3887cb7eb81685b8cbd71d80d56f7be100af0e411df4e816e1a75460d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda4 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorProgram androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$78e680e34426da1791cbd65c8e79cb9e3ab4395da021220b745b5af327d2cf1d$0.f$2 -> f$2
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$78e680e34426da1791cbd65c8e79cb9e3ab4395da021220b745b5af327d2cf1d$0.f$0 -> f$0
    androidx.sqlite.db.SupportSQLiteQuery androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$78e680e34426da1791cbd65c8e79cb9e3ab4395da021220b745b5af327d2cf1d$0.f$1 -> f$1
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$78e680e34426da1791cbd65c8e79cb9e3ab4395da021220b745b5af327d2cf1d$0.<init>(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$78e680e34426da1791cbd65c8e79cb9e3ab4395da021220b745b5af327d2cf1d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda5 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorProgram androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$146004870b9d55cc96dc4c010ffa4ce5735b88b03900d2acb2e5b32768e6ef4a$0.f$2 -> f$2
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$146004870b9d55cc96dc4c010ffa4ce5735b88b03900d2acb2e5b32768e6ef4a$0.f$0 -> f$0
    androidx.sqlite.db.SupportSQLiteQuery androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$146004870b9d55cc96dc4c010ffa4ce5735b88b03900d2acb2e5b32768e6ef4a$0.f$1 -> f$1
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$146004870b9d55cc96dc4c010ffa4ce5735b88b03900d2acb2e5b32768e6ef4a$0.<init>(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$146004870b9d55cc96dc4c010ffa4ce5735b88b03900d2acb2e5b32768e6ef4a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda6 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$f353040550c12218f916facd14e1e96912f1888168cd54c0a4c7dbba53ac47d1$0.f$0 -> f$0
    java.lang.String androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$f353040550c12218f916facd14e1e96912f1888168cd54c0a4c7dbba53ac47d1$0.f$1 -> f$1
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$f353040550c12218f916facd14e1e96912f1888168cd54c0a4c7dbba53ac47d1$0.<init>(androidx.room.QueryInterceptorDatabase,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$f353040550c12218f916facd14e1e96912f1888168cd54c0a4c7dbba53ac47d1$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda7 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$b0454aa2ddc6d0596684b26c29244fdbd0859110d5f191e0c633f17af88c8965$0.f$0 -> f$0
    java.lang.String androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$b0454aa2ddc6d0596684b26c29244fdbd0859110d5f191e0c633f17af88c8965$0.f$1 -> f$1
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$b0454aa2ddc6d0596684b26c29244fdbd0859110d5f191e0c633f17af88c8965$0.<init>(androidx.room.QueryInterceptorDatabase,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$b0454aa2ddc6d0596684b26c29244fdbd0859110d5f191e0c633f17af88c8965$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda8 -> androidx.room.QueryInterceptorDatabase$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$dc826fe79b0ac533a3eee8d6937e106756ed76e1bf215f3b0f2983f0634801fe$0.f$2 -> f$2
    androidx.room.QueryInterceptorDatabase androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$dc826fe79b0ac533a3eee8d6937e106756ed76e1bf215f3b0f2983f0634801fe$0.f$0 -> f$0
    java.lang.String androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$dc826fe79b0ac533a3eee8d6937e106756ed76e1bf215f3b0f2983f0634801fe$0.f$1 -> f$1
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$dc826fe79b0ac533a3eee8d6937e106756ed76e1bf215f3b0f2983f0634801fe$0.<init>(androidx.room.QueryInterceptorDatabase,java.lang.String,java.util.List) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorDatabase$$InternalSyntheticLambda$0$dc826fe79b0ac533a3eee8d6937e106756ed76e1bf215f3b0f2983f0634801fe$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorOpenHelper -> androidx.room.QueryInterceptorOpenHelper:
    37:40:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper,androidx.room.RoomDatabase$QueryCallback,java.util.concurrent.Executor) -> <init>
    69:69:void close() -> close
    46:46:java.lang.String getDatabaseName() -> getDatabaseName
    75:75:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate() -> getDelegate
    57:57:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    52:52:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
androidx.room.QueryInterceptorOpenHelperFactory -> androidx.room.QueryInterceptorOpenHelperFactory:
    37:40:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$QueryCallback,java.util.concurrent.Executor) -> <init>
    47:47:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.room.QueryInterceptorProgram -> androidx.room.QueryInterceptorProgram:
    27:28:void <init>() -> <init>
    52:52:void bindBlob(int,byte[]) -> bindBlob
    42:42:void bindDouble(int,double) -> bindDouble
    37:37:void bindLong(int,long) -> bindLong
    32:32:void bindNull(int) -> bindNull
    47:47:void bindString(int,java.lang.String) -> bindString
    80:80:java.util.List getBindArgs() -> getBindArgs
    66:71:void saveArgsToCache(int,java.lang.Object) -> saveArgsToCache
androidx.room.QueryInterceptorStatement -> androidx.room.QueryInterceptorStatement:
    void $r8$lambda$ELQNFMDGOEjhRlX6Wq4FB-kg4Dc(androidx.room.QueryInterceptorStatement) -> $r8$lambda$ELQNFMDGOEjhRlX6Wq4FB-kg4Dc
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Fav2IvQ8S4czZpFSCDm5mZmIxKE(androidx.room.QueryInterceptorStatement) -> $r8$lambda$Fav2IvQ8S4czZpFSCDm5mZmIxKE
      # {"id":"com.android.tools.r8.synthesized"}
    35:44:void <init>(androidx.sqlite.db.SupportSQLiteStatement,androidx.room.RoomDatabase$QueryCallback,java.lang.String,java.util.concurrent.Executor) -> <init>
    103:104:void bindBlob(int,byte[]) -> bindBlob
    91:92:void bindDouble(int,double) -> bindDouble
    85:86:void bindLong(int,long) -> bindLong
    79:80:void bindNull(int) -> bindNull
    97:98:void bindString(int,java.lang.String) -> bindString
    115:115:void close() -> close
    61:62:long executeInsert() -> executeInsert
    55:56:int executeUpdateDelete() -> executeUpdateDelete
    61:61:void lambda$executeInsert$2() -> lambda$executeInsert$2
    55:55:void lambda$executeUpdateDelete$1() -> lambda$executeUpdateDelete$1
    120:126:void saveArgsToCache(int,java.lang.Object) -> saveArgsToCache
androidx.room.QueryInterceptorStatement$$ExternalSyntheticLambda0 -> androidx.room.QueryInterceptorStatement$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorStatement androidx.room.QueryInterceptorStatement$$InternalSyntheticLambda$0$5cd987d6458b326ddee29903637ea33ac0327b340ade504a0980d0ca3f9df1df$0.f$0 -> f$0
    void androidx.room.QueryInterceptorStatement$$InternalSyntheticLambda$0$5cd987d6458b326ddee29903637ea33ac0327b340ade504a0980d0ca3f9df1df$0.<init>(androidx.room.QueryInterceptorStatement) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorStatement$$InternalSyntheticLambda$0$5cd987d6458b326ddee29903637ea33ac0327b340ade504a0980d0ca3f9df1df$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.QueryInterceptorStatement$$ExternalSyntheticLambda1 -> androidx.room.QueryInterceptorStatement$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.QueryInterceptorStatement androidx.room.QueryInterceptorStatement$$InternalSyntheticLambda$0$170cf2e3378da46a17be59a0bb15f4dfdd01ce6dec106076d24bcf78b611b0ee$0.f$0 -> f$0
    void androidx.room.QueryInterceptorStatement$$InternalSyntheticLambda$0$170cf2e3378da46a17be59a0bb15f4dfdd01ce6dec106076d24bcf78b611b0ee$0.<init>(androidx.room.QueryInterceptorStatement) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.room.QueryInterceptorStatement$$InternalSyntheticLambda$0$170cf2e3378da46a17be59a0bb15f4dfdd01ce6dec106076d24bcf78b611b0ee$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.Room -> androidx.room.Room:
    52:57:androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String) -> databaseBuilder
    82:106:java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String) -> getGeneratedImplementation
    74:74:androidx.room.RoomDatabase$Builder inMemoryDatabaseBuilder(android.content.Context,java.lang.Class) -> inMemoryDatabaseBuilder
androidx.room.RoomDatabase -> androidx.room.RoomDatabase:
    java.lang.Object $r8$lambda$GuFQL6oa4rRatJAY4ELbKosygs8(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$GuFQL6oa4rRatJAY4ELbKosygs8
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object $r8$lambda$lM9aNaGxIIMhUsr4XoMGXDUymWg(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteDatabase) -> $r8$lambda$lM9aNaGxIIMhUsr4XoMGXDUymWg
      # {"id":"com.android.tools.r8.synthesized"}
    114:188:void <init>() -> <init>
    465:469:void assertNotMainThread() -> assertNotMainThread
    483:484:void assertNotSuspendingTransaction() -> assertNotSuspendingTransaction
    553:557:void beginTransaction() -> beginTransaction
    541:543:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    583:586:void endTransaction() -> endTransaction
    325:325:java.util.List getAutoMigrations(java.util.Map) -> getAutoMigrations
    159:159:java.util.Map getBackingFieldMap() -> getBackingFieldMap
    130:130:java.util.concurrent.locks.Lock getCloseLock() -> getCloseLock
    695:695:androidx.room.InvalidationTracker getInvalidationTracker() -> getInvalidationTracker
    355:355:androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper() -> getOpenHelper
    607:607:java.util.concurrent.Executor getQueryExecutor() -> getQueryExecutor
    406:406:java.util.Set getRequiredAutoMigrationSpecs() -> getRequiredAutoMigrationSpecs
    391:391:java.util.Map getRequiredTypeConverters() -> getRequiredTypeConverters
    615:615:java.util.concurrent.Executor getTransactionExecutor() -> getTransactionExecutor
    706:706:boolean inTransaction() -> inTransaction
    198:305:void init(androidx.room.DatabaseConfiguration) -> init
    565:572:void internalBeginTransaction() -> internalBeginTransaction
    594:598:void internalEndTransaction() -> internalEndTransaction
    682:682:void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase) -> internalInitInvalidationTracker
    1608:1608:boolean isMainThread() -> isMainThread
    432:437:boolean isOpen() -> isOpen
    558:558:java.lang.Object lambda$beginTransaction$0(androidx.sqlite.db.SupportSQLiteDatabase) -> lambda$beginTransaction$0
    587:587:java.lang.Object lambda$endTransaction$1(androidx.sqlite.db.SupportSQLiteDatabase) -> lambda$endTransaction$1
    513:513:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    525:530:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    625:625:void setTransactionSuccessful() -> setTransactionSuccessful
    339:343:java.lang.Object unwrapOpenHelper(java.lang.Class,androidx.sqlite.db.SupportSQLiteOpenHelper) -> unwrapOpenHelper
androidx.room.RoomDatabase$$ExternalSyntheticLambda0 -> androidx.room.RoomDatabase$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.RoomDatabase androidx.room.RoomDatabase$$InternalSyntheticLambda$0$a66d06de26fd10afab3a3d7b575aaecb79de2389bb4b39b220e638f799387965$0.f$0 -> f$0
    void androidx.room.RoomDatabase$$InternalSyntheticLambda$0$a66d06de26fd10afab3a3d7b575aaecb79de2389bb4b39b220e638f799387965$0.<init>(androidx.room.RoomDatabase) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.RoomDatabase$$InternalSyntheticLambda$0$a66d06de26fd10afab3a3d7b575aaecb79de2389bb4b39b220e638f799387965$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.RoomDatabase$$ExternalSyntheticLambda1 -> androidx.room.RoomDatabase$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.RoomDatabase androidx.room.RoomDatabase$$InternalSyntheticLambda$0$d6132c2f2b2bb18332e58707337d0432b95e4ac6347989db0de23fc3fd2e23c5$0.f$0 -> f$0
    void androidx.room.RoomDatabase$$InternalSyntheticLambda$0$d6132c2f2b2bb18332e58707337d0432b95e4ac6347989db0de23fc3fd2e23c5$0.<init>(androidx.room.RoomDatabase) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.room.RoomDatabase$$InternalSyntheticLambda$0$d6132c2f2b2bb18332e58707337d0432b95e4ac6347989db0de23fc3fd2e23c5$0.apply(java.lang.Object) -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.RoomDatabase$Builder -> androidx.room.RoomDatabase$Builder:
    789:814:void <init>(android.content.Context,java.lang.Class,java.lang.String) -> <init>
    1287:1290:androidx.room.RoomDatabase$Builder addCallback(androidx.room.RoomDatabase$Callback) -> addCallback
    1036:1044:androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[]) -> addMigrations
    1079:1079:androidx.room.RoomDatabase$Builder allowMainThreadQueries() -> allowMainThreadQueries
    1387:1487:androidx.room.RoomDatabase build() -> build
    1227:1228:androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration() -> fallbackToDestructiveMigration
    1011:1011:androidx.room.RoomDatabase$Builder openHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory) -> openHelperFactory
    1125:1125:androidx.room.RoomDatabase$Builder setQueryExecutor(java.util.concurrent.Executor) -> setQueryExecutor
androidx.room.RoomDatabase$Callback -> androidx.room.RoomDatabase$Callback:
    1614:1614:void <init>() -> <init>
androidx.room.RoomDatabase$JournalMode -> androidx.room.RoomDatabase$JournalMode:
    714:733:void <clinit>() -> <clinit>
    714:714:void <init>(java.lang.String,int) -> <init>
    756:756:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
    741:751:androidx.room.RoomDatabase$JournalMode resolve(android.content.Context) -> resolve
    714:714:androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String) -> valueOf
    714:714:androidx.room.RoomDatabase$JournalMode[] values() -> values
androidx.room.RoomDatabase$MigrationContainer -> androidx.room.RoomDatabase$MigrationContainer:
    1496:1497:void <init>() -> <init>
    1524:1535:void addMigration(androidx.room.migration.Migration) -> addMigration
    1506:1507:void addMigrations(androidx.room.migration.Migration[]) -> addMigrations
    1562:1566:java.util.List findMigrationPath(int,int) -> findMigrationPath
    1572:1592:java.util.List findUpMigrationPath(java.util.List,boolean,int,int) -> findUpMigrationPath
    1546:1546:java.util.Map getMigrations() -> getMigrations
androidx.room.RoomMasterTable -> androidx.room.RoomMasterTable:
    51:51:java.lang.String createInsertQuery(java.lang.String) -> createInsertQuery
androidx.room.RoomOpenHelper -> androidx.room.RoomOpenHelper:
    54:58:void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String) -> <init>
    142:167:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    177:177:void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase) -> createMasterTableIfNotExists
    192:199:boolean hasEmptySchema(androidx.sqlite.db.SupportSQLiteDatabase) -> hasEmptySchema
    181:188:boolean hasRoomMasterTable(androidx.sqlite.db.SupportSQLiteDatabase) -> hasRoomMasterTable
    68:68:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase) -> onConfigure
    73:87:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    129:129:void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onDowngrade
    134:138:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    93:117:void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onUpgrade
    172:173:void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> updateIdentity
androidx.room.RoomOpenHelper$Delegate -> androidx.room.RoomOpenHelper$Delegate:
    209:210:void <init>(int) -> <init>
androidx.room.RoomOpenHelper$ValidationResult -> androidx.room.RoomOpenHelper$ValidationResult:
    272:274:void <init>(boolean,java.lang.String) -> <init>
androidx.room.RoomSQLiteQuery -> androidx.room.RoomSQLiteQuery:
    79:79:void <clinit>() -> <clinit>
    156:165:void <init>(int) -> <init>
    141:152:androidx.room.RoomSQLiteQuery acquire(java.lang.String,int) -> acquire
    257:258:void bindBlob(int,byte[]) -> bindBlob
    245:246:void bindDouble(int,double) -> bindDouble
    239:240:void bindLong(int,long) -> bindLong
    234:234:void bindNull(int) -> bindNull
    251:252:void bindString(int,java.lang.String) -> bindString
    211:226:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> bindTo
    201:201:java.lang.String getSql() -> getSql
    170:171:void init(java.lang.String,int) -> init
    189:194:void prunePoolLocked() -> prunePoolLocked
    182:185:void release() -> release
androidx.room.SQLiteCopyOpenHelper -> androidx.room.SQLiteCopyOpenHelper:
    71:77:void <init>(android.content.Context,java.lang.String,java.io.File,java.util.concurrent.Callable,int,androidx.sqlite.db.SupportSQLiteOpenHelper) -> <init>
    111:113:void close() -> close
    190:229:void copyDatabaseFile(java.io.File,boolean) -> copyDatabaseFile
    234:234:void dispatchOnOpenPrepackagedDatabase(java.io.File,boolean) -> dispatchOnOpenPrepackagedDatabase
    82:82:java.lang.String getDatabaseName() -> getDatabaseName
    118:118:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate() -> getDelegate
    93:97:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    124:124:void setDatabaseConfiguration(androidx.room.DatabaseConfiguration) -> setDatabaseConfiguration
    88:88:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
    128:185:void verifyDatabaseFile(boolean) -> verifyDatabaseFile
androidx.room.SQLiteCopyOpenHelperFactory -> androidx.room.SQLiteCopyOpenHelperFactory:
    46:50:void <init>(java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory) -> <init>
    56:62:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.room.SharedSQLiteStatement -> androidx.room.SharedSQLiteStatement:
    37:49:void <init>(androidx.room.RoomDatabase) -> <init>
    86:87:androidx.sqlite.db.SupportSQLiteStatement acquire() -> acquire
    60:60:void assertNotMainThread() -> assertNotMainThread
    64:65:androidx.sqlite.db.SupportSQLiteStatement createNewStatement() -> createNewStatement
    71:77:androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean) -> getStmt
    96:97:void release(androidx.sqlite.db.SupportSQLiteStatement) -> release
androidx.room.TransactionElement -> androidx.room.TransactionElement:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    142:142:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    142:142:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    151:151:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    145:145:kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release() -> getTransactionDispatcher$room_ktx_release
    142:142:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    142:142:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
androidx.room.TransactionElement$Key -> androidx.room.TransactionElement$Key:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    148:148:void <init>() -> <init>
androidx.room.TransactionExecutor -> androidx.room.TransactionExecutor:
    34:38:void <init>(java.util.concurrent.Executor) -> <init>
    43:56:void execute(java.lang.Runnable) -> execute
    60:63:void scheduleNext() -> scheduleNext
androidx.room.TransactionExecutor$1 -> androidx.room.TransactionExecutor$1:
    43:43:void <init>(androidx.room.TransactionExecutor,java.lang.Runnable) -> <init>
    47:50:void run() -> run
androidx.room.migration.Migration -> androidx.room.migration.Migration:
    47:49:void <init>(int,int) -> <init>
androidx.room.util.CopyLock -> androidx.room.util.CopyLock:
    55:55:void <clinit>() -> <clinit>
    69:72:void <init>(java.lang.String,java.io.File,boolean) -> <init>
    103:110:java.util.concurrent.locks.Lock getThreadLock(java.lang.String) -> getThreadLock
    79:85:void lock() -> lock
    94:99:void unlock() -> unlock
androidx.room.util.CursorUtil -> androidx.room.util.CursorUtil:
    51:79:android.database.Cursor copyAndClose(android.database.Cursor) -> copyAndClose
    135:143:int findColumnIndexBySuffix(android.database.Cursor,java.lang.String) -> findColumnIndexBySuffix
    148:157:int findColumnIndexBySuffix(java.lang.String[],java.lang.String) -> findColumnIndexBySuffix
    92:100:int getColumnIndex(android.database.Cursor,java.lang.String) -> getColumnIndex
    113:123:int getColumnIndexOrThrow(android.database.Cursor,java.lang.String) -> getColumnIndexOrThrow
androidx.room.util.DBUtil -> androidx.room.util.DBUtil:
    187:187:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
    113:126:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> dropFtsSyncTriggers
    86:97:android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal) -> query
    161:175:int readVersion(java.io.File) -> readVersion
androidx.room.util.FileUtil -> androidx.room.util.FileUtil:
    51:66:void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.FileChannel) -> copy
androidx.room.util.SneakyThrow -> androidx.room.util.SneakyThrow:
    36:36:void reThrow(java.lang.Exception) -> reThrow
    41:41:void sneakyThrow(java.lang.Throwable) -> sneakyThrow
androidx.room.util.StringUtil -> androidx.room.util.StringUtil:
    37:37:void <clinit>() -> <clinit>
    57:59:void appendPlaceholders(java.lang.StringBuilder,int) -> appendPlaceholders
    45:45:java.lang.StringBuilder newStringBuilder() -> newStringBuilder
androidx.room.util.TableInfo -> androidx.room.util.TableInfo:
    103:107:void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set) -> <init>
    121:138:boolean equals(java.lang.Object) -> equals
    143:145:int hashCode() -> hashCode
    169:172:androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> read
    241:266:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readColumns
    219:234:java.util.List readForeignKeyFieldMappings(android.database.Cursor) -> readForeignKeyFieldMappings
    177:214:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    311:345:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> readIndex
    275:303:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readIndices
    152:152:java.lang.String toString() -> toString
androidx.room.util.TableInfo$Column -> androidx.room.util.TableInfo$Column:
    405:412:void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int) -> <init>
    515:529:boolean containsSurroundingParenthesis(java.lang.String) -> containsSurroundingParenthesis
    501:504:boolean defaultValueEquals(java.lang.String,java.lang.String) -> defaultValueEquals
    451:484:boolean equals(java.lang.Object) -> equals
    426:440:int findAffinity(java.lang.String) -> findAffinity
    548:551:int hashCode() -> hashCode
    560:560:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKey -> androidx.room.util.TableInfo$ForeignKey:
    591:596:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List) -> <init>
    602:611:boolean equals(java.lang.Object) -> equals
    616:620:int hashCode() -> hashCode
    626:626:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKeyWithSequence -> androidx.room.util.TableInfo$ForeignKeyWithSequence:
    649:653:void <init>(int,int,java.lang.String,java.lang.String) -> <init>
    642:642:int compareTo(java.lang.Object) -> compareTo
    658:660:int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence) -> compareTo
androidx.room.util.TableInfo$Index -> androidx.room.util.TableInfo$Index:
    685:685:void <init>(java.lang.String,boolean,java.util.List) -> <init>
    688:694:void <init>(java.lang.String,boolean,java.util.List,java.util.List) -> <init>
    700:715:boolean equals(java.lang.Object) -> equals
    722:729:int hashCode() -> hashCode
    735:735:java.lang.String toString() -> toString
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    24:25:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    29:42:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    48:70:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$Companion -> androidx.savedstate.Recreator$Companion:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    93:93:void <init>() -> <init>
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    73:79:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    89:89:void add(java.lang.String) -> add
    83:84:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    void $r8$lambda$fqOml4yVknvVr08QjHEXC_isf3A(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$fqOml4yVknvVr08QjHEXC_isf3A
      # {"id":"com.android.tools.r8.synthesized"}
    32:34:void <init>() -> <init>
    48:48:void setAllowingSavingState$savedstate_release(boolean) -> <init>
    48:48:void <init>():48 -> <init>
    72:80:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    128:129:androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String) -> getSavedStateProvider
    202:205:void performAttach$lambda-4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> performAttach$lambda-4
    199:208:void performAttach$savedstate_release(androidx.lifecycle.Lifecycle) -> performAttach$savedstate_release
    217:224:void performRestore$savedstate_release(android.os.Bundle) -> performRestore$savedstate_release
    239:250:void performSave(android.os.Bundle) -> performSave
    109:110:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    180:190:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0 -> androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$0$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.f$0 -> f$0
    void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$0$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.<init>(androidx.savedstate.SavedStateRegistry) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$0$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$AutoRecreated:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistry$Companion -> androidx.savedstate.SavedStateRegistry$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    267:267:void <init>() -> <init>
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$SavedStateProvider:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    28:33:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    33:33:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    44:50:void performAttach() -> performAttach
    62:69:void performRestore(android.os.Bundle) -> performRestore
    81:81:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.SavedStateRegistryController$Companion -> androidx.savedstate.SavedStateRegistryController$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    84:84:void <init>() -> <init>
    92:92:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.SavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"SavedStateRegistryOwner.kt"}
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"ViewTreeSavedStateRegistryOwner.kt"}
    41:41:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.sqlite.db.SimpleSQLiteQuery -> androidx.sqlite.db.SimpleSQLiteQuery:
    36:38:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    47:47:void <init>(java.lang.String) -> <init>
    75:78:void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[]) -> bind
    85:105:void bind(androidx.sqlite.db.SupportSQLiteProgram,int,java.lang.Object) -> bind
    57:57:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> bindTo
    52:52:java.lang.String getSql() -> getSql
androidx.sqlite.db.SupportSQLiteCompat$Api16Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api16Impl:
    63:63:void cancel(android.os.CancellationSignal) -> cancel
    76:76:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
    91:91:boolean deleteDatabase(java.io.File) -> deleteDatabase
    166:166:boolean isWriteAheadLoggingEnabled(android.database.sqlite.SQLiteDatabase) -> isWriteAheadLoggingEnabled
    117:117:android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal,android.database.sqlite.SQLiteDatabase$CursorFactory) -> rawQueryWithFactory
    178:178:void setWriteAheadLoggingEnabled(android.database.sqlite.SQLiteOpenHelper,boolean) -> setWriteAheadLoggingEnabled
androidx.sqlite.db.SupportSQLiteCompat$Api19Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api19Impl:
    206:206:android.net.Uri getNotificationUri(android.database.Cursor) -> getNotificationUri
    220:220:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
androidx.sqlite.db.SupportSQLiteCompat$Api21Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api21Impl:
    246:246:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.sqlite.db.SupportSQLiteCompat$Api23Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api23Impl:
    270:270:void setExtras(android.database.Cursor,android.os.Bundle) -> setExtras
androidx.sqlite.db.SupportSQLiteCompat$Api29Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api29Impl:
    315:315:java.util.List getNotificationUris(android.database.Cursor) -> getNotificationUris
    298:298:void setNotificationUris(android.database.Cursor,android.content.ContentResolver,java.util.List) -> setNotificationUris
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback -> androidx.sqlite.db.SupportSQLiteOpenHelper$Callback:
    130:131:void <init>(int) -> <init>
    278:297:void deleteDatabaseFile(java.lang.String) -> deleteDatabaseFile
    236:274:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase) -> onCorruption
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration:
    337:341:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean) -> <init>
    351:351:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context) -> builder
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder:
    392:393:void <init>(android.content.Context) -> <init>
    376:389:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build() -> build
    412:412:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> callback
    402:402:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String) -> name
    424:424:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder noBackupDirectory(boolean) -> noBackupDirectory
androidx.sqlite.db.framework.FrameworkSQLiteDatabase -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase:
    51:53:void <clinit>() -> <clinit>
    62:63:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    73:73:void beginTransaction() -> beginTransaction
    78:78:void beginTransactionNonExclusive() -> beginTransactionNonExclusive
    338:338:void close() -> close
    68:68:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    94:94:void endTransaction() -> endTransaction
    265:265:void execSQL(java.lang.String) -> execSQL
    270:270:void execSQL(java.lang.String,java.lang.Object[]) -> execSQL
    328:328:java.util.List getAttachedDbs() -> getAttachedDbs
    290:290:java.lang.String getPath() -> getPath
    104:104:boolean inTransaction() -> inTransaction
    345:345:boolean isDelegate(android.database.sqlite.SQLiteDatabase) -> isDelegate
    280:280:boolean isOpen() -> isOpen
    323:323:boolean isWriteAheadLoggingEnabled() -> isWriteAheadLoggingEnabled
    172:172:android.database.Cursor query(java.lang.String) -> query
    183:190:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    197:197:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    99:99:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$1 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$1:
    183:183:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase,androidx.sqlite.db.SupportSQLiteQuery) -> <init>
    187:188:android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$2 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$2:
    198:198:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase,androidx.sqlite.db.SupportSQLiteQuery) -> <init>
    202:203:android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper:
    55:60:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean) -> <init>
    122:122:void close() -> close
    96:96:java.lang.String getDatabaseName() -> getDatabaseName
    71:91:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper getDelegate() -> getDelegate
    112:112:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    102:107:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper:
    138:146:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    207:209:void close() -> close
    172:172:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase) -> getWrappedDb
    213:217:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],android.database.sqlite.SQLiteDatabase) -> getWrappedDb
    150:157:androidx.sqlite.db.SupportSQLiteDatabase getWritableSupportDatabase() -> getWritableSupportDatabase
    188:188:void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    177:177:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    193:194:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    199:201:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    182:183:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1 -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1:
    139:139:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[]) -> <init>
    142:142:void onCorruption(android.database.sqlite.SQLiteDatabase) -> onCorruption
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory:
    27:27:void <init>() -> <init>
    32:32:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.sqlite.db.framework.FrameworkSQLiteProgram -> androidx.sqlite.db.framework.FrameworkSQLiteProgram:
    29:30:void <init>(android.database.sqlite.SQLiteProgram) -> <init>
    55:55:void bindBlob(int,byte[]) -> bindBlob
    45:45:void bindDouble(int,double) -> bindDouble
    40:40:void bindLong(int,long) -> bindLong
    35:35:void bindNull(int) -> bindNull
    50:50:void bindString(int,java.lang.String) -> bindString
    65:65:void close() -> close
androidx.sqlite.db.framework.FrameworkSQLiteStatement -> androidx.sqlite.db.framework.FrameworkSQLiteStatement:
    35:36:void <init>(android.database.sqlite.SQLiteStatement) -> <init>
    51:51:long executeInsert() -> executeInsert
    46:46:int executeUpdateDelete() -> executeUpdateDelete
androidx.startup.AppInitializer -> androidx.startup.AppInitializer:
    57:57:void <clinit>() -> <clinit>
    73:76:void <init>(android.content.Context) -> <init>
    200:211:void discoverAndInitialize() -> discoverAndInitialize
    216:242:void discoverAndInitialize(android.os.Bundle) -> discoverAndInitialize
    135:140:java.lang.Object doInitialize(java.lang.Class) -> doInitialize
    149:195:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    86:93:androidx.startup.AppInitializer getInstance(android.content.Context) -> getInstance
    117:117:java.lang.Object initializeComponent(java.lang.Class) -> initializeComponent
    128:128:boolean isEagerlyInitialized(java.lang.Class) -> isEagerlyInitialized
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
    33:33:void <init>() -> <init>
    83:83:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    69:69:java.lang.String getType(android.net.Uri) -> getType
    75:75:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    37:50:boolean onCreate() -> onCreate
    63:63:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    92:92:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.startup.StartupException -> androidx.startup.StartupException:
    31:31:void <init>(java.lang.String) -> <init>
    35:35:void <init>(java.lang.Throwable) -> <init>
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    58:89:void <init>(android.content.Context) -> <init>
    119:121:void onAnimationEnd() -> onAnimationEnd
    111:113:void onAnimationStart() -> onAnimationStart
    98:100:void onMeasure(int,int) -> onMeasure
    106:106:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    127:129:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    143:147:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    158:161:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    152:153:void onResize(float,float) -> onResize
    165:165:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:145:void <init>(android.content.Context) -> <init>
    519:529:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    537:564:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:403:void draw(android.graphics.Canvas) -> draw
    414:414:int getAlpha() -> getAlpha
    441:441:boolean isRunning() -> isRunning
    408:409:void setAlpha(int) -> setAlpha
    280:281:void setArrowEnabled(boolean) -> setArrowEnabled
    299:300:void setArrowScale(float) -> setArrowScale
    419:420:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:394:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:351:void setProgressRotation(float) -> setProgressRotation
    424:424:void setRotation(float) -> setRotation
    151:158:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:332:void setStartEndTrim(float,float) -> setStartEndTrim
    192:193:void setStrokeWidth(float) -> setStrokeWidth
    169:174:void setStyle(int) -> setStyle
    569:618:void setupAnimators() -> setupAnimators
    449:460:void start() -> start
    469:474:void stop() -> stop
    503:507:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    571:571:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    574:577:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    583:583:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    602:614:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    587:587:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    626:661:void <init>() -> <init>
    695:723:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    727:754:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    838:838:int getAlpha() -> getAlpha
    878:878:float getEndTrim() -> getEndTrim
    808:808:int getNextColor() -> getNextColor
    812:812:int getNextColorIndex() -> getNextColorIndex
    858:858:float getStartTrim() -> getStartTrim
    870:870:int getStartingColor() -> getStartingColor
    866:866:float getStartingEndTrim() -> getStartingEndTrim
    930:930:float getStartingRotation() -> getStartingRotation
    862:862:float getStartingStartTrim() -> getStartingStartTrim
    820:820:void goToNextColor() -> goToNextColor
    947:952:void resetOriginals() -> resetOriginals
    831:831:void setAlpha(int) -> setAlpha
    671:672:void setArrowDimensions(float,float) -> setArrowDimensions
    917:918:void setArrowScale(float) -> setArrowScale
    893:893:void setCenterRadius(float) -> setCenterRadius
    781:781:void setColor(int) -> setColor
    824:824:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    800:801:void setColorIndex(int) -> setColorIndex
    764:766:void setColors(int[]) -> setColors
    874:874:void setEndTrim(float) -> setEndTrim
    882:882:void setRotation(float) -> setRotation
    904:905:void setShowArrow(boolean) -> setShowArrow
    854:854:void setStartTrim(float) -> setStartTrim
    845:846:void setStrokeWidth(float) -> setStrokeWidth
    938:940:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    92:150:void <clinit>() -> <clinit>
    118:1367:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1317:1325:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1329:1341:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    736:742:boolean canChildScrollUp() -> canChildScrollUp
    462:467:void createProgressView() -> createProgressView
    1128:1128:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1133:1133:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1122:1122:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1048:1048:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    1116:1116:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    651:655:void ensureTarget() -> ensureTarget
    1193:1221:void finishSpinner(float) -> finishSpinner
    447:447:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    1005:1005:int getNestedScrollAxes() -> getNestedScrollAxes
    728:728:int getProgressCircleDiameter() -> getProgressCircleDiameter
    344:344:int getProgressViewEndOffset() -> getProgressViewEndOffset
    336:336:int getProgressViewStartOffset() -> getProgressViewStartOffset
    1110:1110:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1137:1137:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    1095:1095:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1141:1189:void moveSpinner(float) -> moveSpinner
    1362:1364:void moveToStart(float) -> moveToStart
    294:295:void onDetachedFromWindow() -> onDetachedFromWindow
    756:809:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    673:692:void onLayout(boolean,int,int,int,int) -> onLayout
    698:715:void onMeasure(int,int) -> onMeasure
    1038:1038:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1032:1032:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    949:949:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    975:999:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    873:904:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    940:940:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1025:1025:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    924:924:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    964:968:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    287:289:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    281:282:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1401:1407:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    913:913:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    957:957:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    933:933:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    1010:1019:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1227:1297:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    843:855:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    219:229:void reset() -> reset
    524:525:void setAnimationProgress(float) -> setAnimationProgress
    609:609:void setColorScheme(int[]) -> setColorScheme
    636:637:void setColorSchemeColors(int[]) -> setColorSchemeColors
    620:625:void setColorSchemeResources(int[]) -> setColorSchemeResources
    299:300:void setColorViewAlpha(int) -> setColorViewAlpha
    668:668:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    234:236:void setEnabled(boolean) -> setEnabled
    835:835:void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean) -> setLegacyRequestDisallowInterceptTouchEventEnabled
    1090:1090:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    751:751:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    475:475:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    583:583:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    601:601:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    592:592:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    485:498:void setRefreshing(boolean) -> setRefreshing
    529:536:void setRefreshing(boolean,boolean) -> setRefreshing
    384:395:void setSize(int) -> setSize
    374:374:void setSlingshotDistance(int) -> setSlingshotDistance
    1395:1397:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    563:574:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1308:1312:void startDragging(float) -> startDragging
    1100:1100:boolean startNestedScroll(int) -> startNestedScroll
    559:559:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    555:555:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    542:551:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1376:1391:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    503:516:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    1105:1105:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    191:191:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    202:213:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    505:505:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    508:508:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    542:542:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    545:545:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    563:563:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    566:566:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    1201:1201:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1209:1210:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1345:1345:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1349:1357:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1367:1367:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1370:1370:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1378:1378:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1381:1383:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
    265:265:void <clinit>() -> <clinit>
    247:248:void <init>(android.os.Parcelable,boolean) -> <init>
    255:256:void <init>(android.os.Parcel) -> <init>
    261:262:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
    266:266:void <init>() -> <init>
    266:266:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    269:269:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    266:266:java.lang.Object[] newArray(int) -> newArray
    274:274:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
androidx.tracing.Trace -> androidx.tracing.Trace:
    81:81:void beginSection(java.lang.String) -> beginSection
    94:94:void endSection() -> endSection
    229:237:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    161:169:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:49:void beginSection(java.lang.String) -> beginSection
    60:60:void endSection() -> endSection
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    32:32:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    38:38:void pause(android.animation.Animator) -> pause
    54:54:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    39:40:void <init>() -> <init>
    49:52:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    61:168:void <clinit>() -> <clinit>
    164:170:void <init>() -> <init>
    244:244:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:239:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:232:void captureValues(androidx.transition.TransitionValues) -> captureValues
    267:448:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    249:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:452:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    88:88:java.lang.Object get(java.lang.Object) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    101:101:java.lang.Object get(java.lang.Object) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    114:114:java.lang.Object get(java.lang.Object) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:121:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    131:131:java.lang.Object get(java.lang.Object) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:138:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    148:148:java.lang.Object get(java.lang.Object) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:155:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:375:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:400:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:408:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:413:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:418:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    471:472:void <init>(android.view.View) -> <init>
    485:489:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:496:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:480:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    92:93:void <init>(int) -> <init>
    99:99:void <init>() -> <init>
    116:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    128:136:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    176:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    157:161:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    168:170:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    136:136:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    139:141:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    187:190:void <init>(android.view.View) -> <init>
    204:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    195:198:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    44:44:void <init>() -> <init>
    335:336:void addTarget(java.lang.Object,android.view.View) -> addTarget
    104:121:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    223:223:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    48:48:boolean canHandle(java.lang.Object) -> canHandle
    55:55:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    128:130:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    196:214:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    136:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    308:326:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    152:153:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    231:232:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    89:93:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    351:352:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    267:274:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    73:83:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    297:301:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    65:66:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    93:93:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    153:153:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    168:172:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    162:163:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    232:232:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    248:248:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    235:242:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    268:268:void <init>(androidx.transition.FragmentTransitionSupport,androidx.transition.Transition) -> <init>
    271:271:void onCancel() -> onCancel
androidx.transition.FragmentTransitionSupport$5 -> androidx.transition.FragmentTransitionSupport$5:
    274:274:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Runnable) -> <init>
    280:280:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.FragmentTransitionSupport$6 -> androidx.transition.FragmentTransitionSupport$6:
    352:352:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    29:29:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    45:45:void <init>() -> <init>
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    39:39:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:39:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:151:void exit() -> exit
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:196:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    164:205:void <clinit>() -> <clinit>
    181:260:void <init>() -> <init>
    2029:2032:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    997:997:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    644:657:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1529:1562:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1887:1905:void animate(android.animation.Animator) -> animate
    2004:2014:void cancel() -> cancel
    1599:1647:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    1468:1521:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1575:1581:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2206:2211:androidx.transition.Transition clone() -> clone
    707:797:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1945:1967:void end() -> end
    354:354:long getDuration() -> getDuration
    2120:2120:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1679:1702:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2232:2232:java.lang.String getName() -> getName
    2090:2090:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    856:859:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    1660:1664:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1831:1841:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    813:847:boolean isValidTarget(android.view.View) -> isValidTarget
    1853:1864:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:603:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:550:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:576:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:630:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:686:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1716:1730:void pause(android.view.View) -> pause
    1769:1809:void playTransition(android.view.ViewGroup) -> playTransition
    2045:2050:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1095:1095:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1743:1759:void resume(android.view.View) -> resume
    895:907:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    875:888:void runAnimators() -> runAnimators
    341:341:androidx.transition.Transition setDuration(long) -> setDuration
    2105:2105:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:395:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2073:2075:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    368:368:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1918:1929:void start() -> start
    2200:2200:java.lang.String toString() -> toString
    2236:2265:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    171:171:void <init>() -> <init>
    174:176:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    895:895:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    903:904:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    898:898:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1898:1898:void <init>(androidx.transition.Transition) -> <init>
    1901:1902:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2350:2355:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2413:2413:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    407:419:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    199:209:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    216:218:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    308:323:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    237:239:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    267:300:boolean onPreDraw() -> onPreDraw
    253:262:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    243:244:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    286:286:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    289:291:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    80:110:void <init>() -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:200:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    581:584:void cancel() -> cancel
    536:540:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:551:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:528:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    639:643:androidx.transition.Transition clone() -> clone
    466:480:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:562:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    570:573:void resume(android.view.View) -> resume
    491:517:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:243:androidx.transition.TransitionSet setDuration(long) -> setDuration
    620:624:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    137:143:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:394:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    610:614:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:422:void setupStartEndListeners() -> setupStartEndListeners
    630:632:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:507:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    433:434:void <init>(androidx.transition.TransitionSet) -> <init>
    447:453:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:441:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:71:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:138:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    149:150:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    49:70:void <init>() -> <init>
    52:70:void <init>(android.view.View) -> <init>
    74:76:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:95:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:33:void <init>(android.view.ViewGroup) -> <init>
    38:38:void add(android.graphics.drawable.Drawable) -> add
    48:48:void add(android.view.View) -> add
    43:43:void remove(android.graphics.drawable.Drawable) -> remove
    53:53:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    47:47:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:74:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:59:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:32:void <init>(android.view.View) -> <init>
    37:37:void add(android.graphics.drawable.Drawable) -> add
    42:42:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    38:71:void <clinit>() -> <clinit>
    128:128:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    91:91:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    101:101:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:119:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    199:199:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:107:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:145:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:161:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:177:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:66:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:81:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    26:26:void <init>() -> <init>
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    36:46:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    28:28:void <init>() -> <init>
    46:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:66:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    26:26:void <init>() -> <init>
    36:42:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
    27:27:void <init>() -> <init>
    38:47:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    46:46:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:31:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:41:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:51:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:56:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    32:32:void <init>() -> <init>
    179:187:void fetchSetFrame() -> fetchSetFrame
    142:149:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    155:167:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.Visibility -> androidx.transition.Visibility:
    81:81:void <clinit>() -> <clinit>
    98:100:void <init>() -> <init>
    165:165:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:160:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:155:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:257:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:241:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    515:523:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    284:298:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    343:480:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    127:129:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    441:441:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    459:461:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    445:445:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    450:453:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    536:544:void <init>(android.view.View,int,boolean) -> <init>
    609:617:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    567:567:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    580:580:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    551:552:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    560:561:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    590:591:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    600:600:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    605:605:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    621:623:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    87:87:void <init>() -> <init>
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:30:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:168:void <init>() -> <init>
    172:172:void <init>(android.content.Context) -> <init>
    156:733:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:523:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:533:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    253:254:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:290:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:266:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:511:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:517:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:194:android.graphics.drawable.Drawable mutate() -> mutate
    296:300:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:333:void setAlpha(int) -> setAlpha
    436:440:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:342:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:360:void setTint(int) -> setTint
    365:370:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:380:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:692:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    709:720:void start() -> start
    725:730:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:736:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:741:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:746:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:627:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:651:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:549:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:557:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:566:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:575:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    68:68:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    514:568:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    809:809:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:327:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:664:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:649:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    100:103:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    131:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:911:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:864:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:874:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    696:771:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    579:624:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:376:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:425:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:493:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:166:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:199:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:96:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:107:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:87:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:165:void setChangingConfigurations(int) -> setChangingConfigurations
    36:40:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    62:63:void setHotspot(float,float) -> setHotspot
    70:71:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    311:322:void <init>() -> <init>
    311:327:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:687:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:588:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:668:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:682:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:427:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:560:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:701:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:725:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:937:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:339:android.graphics.drawable.Drawable mutate() -> mutate
    908:909:boolean needMirroring() -> needMirroring
    918:919:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:551:boolean onStateChange(int[]) -> onStateChange
    736:746:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:946:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:902:void setAllowCaching(boolean) -> setAllowCaching
    441:448:void setAlpha(int) -> setAlpha
    604:608:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:460:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:493:void setTint(int) -> setTint
    498:507:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:522:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:963:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:810:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    482:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1768:void <init>() -> <init>
    1773:1773:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1785:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1793:1803:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1822:1835:void <init>() -> <init>
    1822:1855:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1861:1865:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1874:1878:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1893:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1966:boolean onStateChanged(int[]) -> onStateChanged
    2033:2033:void setFillAlpha(float) -> setFillAlpha
    2023:2023:void setFillColor(int) -> setFillColor
    2012:2012:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1992:void setStrokeColor(int) -> setStrokeColor
    2002:2002:void setStrokeWidth(float) -> setStrokeWidth
    2053:2053:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2063:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2043:void setTrimPathStart(float) -> setTrimPathStart
    1901:1953:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1445:1500:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1445:1506:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1521:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1665:boolean isStateful() -> isStateful
    1675:1676:boolean onStateChanged(int[]) -> onStateChanged
    1591:1593:void setPivotX(float) -> setPivotX
    1604:1606:void setPivotY(float) -> setPivotY
    1578:1580:void setRotation(float) -> setRotation
    1617:1619:void setScaleX(float) -> setScaleX
    1630:1632:void setScaleY(float) -> setScaleY
    1643:1645:void setTranslateX(float) -> setTranslateX
    1656:1658:void setTranslateY(float) -> setTranslateY
    1563:1567:void updateLocalMatrix() -> updateLocalMatrix
    1529:1557:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1687:1693:void <init>() -> <init>
    1687:1722:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1755:1759:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1728:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1171:1194:void <init>() -> <init>
    1171:1230:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1264:1264:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1259:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1373:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1403:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1208:void setAlpha(float) -> setAlpha
    1198:1198:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1015:1045:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1015:1122:void <init>() -> <init>
    1093:1094:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1105:boolean canReuseCache() -> canReuseCache
    1084:1087:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1053:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1148:boolean onStateChanged(int[]) -> onStateChanged
    1114:1118:void updateCacheStates() -> updateCacheStates
    1078:1080:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:976:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:982:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:989:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:997:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:89:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1633:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1609:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1621:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    294:295:void writeBoolean(boolean,int) -> writeBoolean
    304:305:void writeByteArray(byte[],int) -> writeByteArray
    325:326:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:335:void writeInt(int,int) -> writeInt
    391:392:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:371:void writeString(java.lang.String,int) -> writeString
    1586:1598:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1022:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1029:1036:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1042:1047:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    154:154:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    143:143:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:99:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    155:397:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2937:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1015:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    723:726:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2955:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1485:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2853:boolean arrowScroll(int) -> arrowScroll
    1298:1380:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2701:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1974:2005:void completeScroll(boolean) -> completeScroll
    1793:1814:void computeScroll() -> computeScroll
    1023:1087:void dataSetChanged() -> dataSetChanged
    2406:2418:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1935:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1952:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1969:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3008:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    929:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2462:void draw(android.graphics.Canvas) -> draw
    915:918:void drawableStateChanged() -> drawableStateChanged
    2015:2019:void enableLayers(boolean) -> enableLayers
    2659:2664:void endDrag() -> endDrag
    2757:2777:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:804:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2860:2879:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1514:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2397:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1535:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:427:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1545:void onAttachedToWindow() -> onAttachedToWindow
    479:484:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2500:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2161:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1788:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1638:void onMeasure(int,int) -> onMeasure
    1865:1919:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2985:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1466:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1445:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2653:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1650:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2287:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2886:boolean pageLeft() -> pageLeft
    2893:2894:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2312:2353:boolean performDrag(float) -> performDrag
    1092:1092:void populate() -> populate
    1097:1272:void populate(int) -> populate
    1655:1675:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:559:void removeNonDecorViews() -> removeNonDecorViews
    736:737:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1507:void removeView(android.view.View) -> removeView
    2303:2305:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2298:boolean resetTouch() -> resetTouch
    676:694:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:549:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:612:void setCurrentItem(int) -> setCurrentItem
    622:623:void setCurrentItem(int,boolean) -> setCurrentItem
    631:631:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:670:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    850:856:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:709:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:875:void setPageMargin(int) -> setPageMargin
    893:896:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:905:void setPageMarginDrawable(int) -> setPageMarginDrawable
    488:497:void setScrollState(int) -> setScrollState
    2669:2670:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    950:1004:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1293:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:273:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    436:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3126:3145:void <init>() -> <init>
    3126:3153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3047:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3060:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3078:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3092:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3097:void onChanged() -> onChanged
    3101:3101:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1395:void <init>(android.os.Parcelable) -> <init>
    1429:1435:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1402:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    351:351:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    588:590:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    657:657:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.work.ArrayCreatingInputMerger -> androidx.work.ArrayCreatingInputMerger:
    50:50:void <init>() -> <init>
    124:127:java.lang.Object concatenateArrayAndNonArray(java.lang.Object,java.lang.Object) -> concatenateArrayAndNonArray
    107:112:java.lang.Object concatenateArrays(java.lang.Object,java.lang.Object) -> concatenateArrays
    117:119:java.lang.Object concatenateNonArrays(java.lang.Object,java.lang.Object) -> concatenateNonArrays
    132:133:java.lang.Object createArrayFor(java.lang.Object) -> createArrayFor
    54:103:androidx.work.Data merge(java.util.List) -> merge
androidx.work.BackoffPolicy -> androidx.work.BackoffPolicy:
    29:39:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:androidx.work.BackoffPolicy valueOf(java.lang.String) -> valueOf
    29:29:androidx.work.BackoffPolicy[] values() -> values
androidx.work.Configuration -> androidx.work.Configuration:
    82:123:void <init>(androidx.work.Configuration$Builder) -> <init>
    261:264:java.util.concurrent.Executor createDefaultExecutor(boolean) -> createDefaultExecutor
    269:269:java.util.concurrent.ThreadFactory createDefaultThreadFactory(boolean) -> createDefaultThreadFactory
    218:218:java.lang.String getDefaultProcessName() -> getDefaultProcessName
    257:257:androidx.work.InitializationExceptionHandler getExceptionHandler() -> getExceptionHandler
    132:132:java.util.concurrent.Executor getExecutor() -> getExecutor
    161:161:androidx.work.InputMergerFactory getInputMergerFactory() -> getInputMergerFactory
    210:210:int getMaxJobSchedulerId() -> getMaxJobSchedulerId
    233:236:int getMaxSchedulerLimit() -> getMaxSchedulerLimit
    196:196:int getMinJobSchedulerId() -> getMinJobSchedulerId
    182:182:int getMinimumLoggingLevel() -> getMinimumLoggingLevel
    170:170:androidx.work.RunnableScheduler getRunnableScheduler() -> getRunnableScheduler
    142:142:java.util.concurrent.Executor getTaskExecutor() -> getTaskExecutor
    153:153:androidx.work.WorkerFactory getWorkerFactory() -> getWorkerFactory
androidx.work.Configuration$1 -> androidx.work.Configuration$1:
    269:270:void <init>(androidx.work.Configuration,boolean) -> <init>
    275:276:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.work.Configuration$Builder -> androidx.work.Configuration$Builder:
    302:306:void <init>() -> <init>
    509:509:androidx.work.Configuration build() -> build
androidx.work.Constraints -> androidx.work.Constraints:
    45:45:void <clinit>() -> <clinit>
    49:79:void <init>() -> <init>
    49:91:void <init>(androidx.work.Constraints$Builder) -> <init>
    49:101:void <init>(androidx.work.Constraints) -> <init>
    251:262:boolean equals(java.lang.Object) -> equals
    235:235:androidx.work.ContentUriTriggers getContentUriTriggers() -> getContentUriTriggers
    105:105:androidx.work.NetworkType getRequiredNetworkType() -> getRequiredNetworkType
    189:189:long getTriggerContentUpdateDelay() -> getTriggerContentUpdateDelay
    207:207:long getTriggerMaxContentDelay() -> getTriggerMaxContentDelay
    245:245:boolean hasContentUriTriggers() -> hasContentUriTriggers
    267:275:int hashCode() -> hashCode
    155:155:boolean requiresBatteryNotLow() -> requiresBatteryNotLow
    121:121:boolean requiresCharging() -> requiresCharging
    138:138:boolean requiresDeviceIdle() -> requiresDeviceIdle
    171:171:boolean requiresStorageNotLow() -> requiresStorageNotLow
    226:226:void setContentUriTriggers(androidx.work.ContentUriTriggers) -> setContentUriTriggers
    114:114:void setRequiredNetworkType(androidx.work.NetworkType) -> setRequiredNetworkType
    164:164:void setRequiresBatteryNotLow(boolean) -> setRequiresBatteryNotLow
    130:130:void setRequiresCharging(boolean) -> setRequiresCharging
    148:148:void setRequiresDeviceIdle(boolean) -> setRequiresDeviceIdle
    180:180:void setRequiresStorageNotLow(boolean) -> setRequiresStorageNotLow
    198:198:void setTriggerContentUpdateDelay(long) -> setTriggerContentUpdateDelay
    216:216:void setTriggerMaxContentDelay(long) -> setTriggerMaxContentDelay
androidx.work.Constraints$Builder -> androidx.work.Constraints$Builder:
    283:293:void <init>() -> <init>
    474:474:androidx.work.Constraints build() -> build
    347:347:androidx.work.Constraints$Builder setRequiredNetworkType(androidx.work.NetworkType) -> setRequiredNetworkType
androidx.work.ContentUriTriggers -> androidx.work.ContentUriTriggers:
    39:41:void <init>() -> <init>
    51:52:void add(android.net.Uri,boolean) -> add
    69:73:boolean equals(java.lang.Object) -> equals
    56:56:java.util.Set getTriggers() -> getTriggers
    78:78:int hashCode() -> hashCode
    63:63:int size() -> size
androidx.work.ContentUriTriggers$Trigger -> androidx.work.ContentUriTriggers$Trigger:
    88:90:void <init>(android.net.Uri,boolean) -> <init>
    110:115:boolean equals(java.lang.Object) -> equals
    97:97:android.net.Uri getUri() -> getUri
    120:121:int hashCode() -> hashCode
    104:104:boolean shouldTriggerForDescendants() -> shouldTriggerForDescendants
androidx.work.CoroutineWorker -> androidx.work.CoroutineWorker:
# {"id":"sourceFile","fileName":"CoroutineWorker.kt"}
    41:41:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    43:43:kotlinx.coroutines.CompletableJob getJob$work_runtime_ktx_release() -> <init>
    43:43:void <init>(android.content.Context,androidx.work.WorkerParameters):43 -> <init>
    44:44:androidx.work.impl.utils.futures.SettableFuture getFuture$work_runtime_ktx_release() -> <init>
    44:44:void <init>(android.content.Context,androidx.work.WorkerParameters):44 -> <init>
    47:53:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    61:61:kotlinx.coroutines.CoroutineDispatcher getCoroutineContext() -> <init>
    61:61:void <init>(android.content.Context,androidx.work.WorkerParameters):61 -> <init>
    61:61:kotlinx.coroutines.CoroutineDispatcher getCoroutineContext() -> getCoroutineContext
    100:100:java.lang.Object getForegroundInfo$suspendImpl(androidx.work.CoroutineWorker,kotlin.coroutines.Continuation) -> getForegroundInfo$suspendImpl
    130:133:com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync() -> getForegroundInfoAsync
    44:44:androidx.work.impl.utils.futures.SettableFuture getFuture$work_runtime_ktx_release() -> getFuture$work_runtime_ktx_release
    43:43:kotlinx.coroutines.CompletableJob getJob$work_runtime_ktx_release() -> getJob$work_runtime_ktx_release
    140:141:void onStopped() -> onStopped
    65:74:com.google.common.util.concurrent.ListenableFuture startWork() -> startWork
androidx.work.CoroutineWorker$1 -> androidx.work.CoroutineWorker$1:
# {"id":"sourceFile","fileName":"CoroutineWorker.kt"}
    49:50:void run() -> run
androidx.work.CoroutineWorker$getForegroundInfoAsync$1 -> androidx.work.CoroutineWorker$getForegroundInfoAsync$1:
# {"id":"sourceFile","fileName":"CoroutineWorker.kt"}
    133:135:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.work.CoroutineWorker$startWork$1 -> androidx.work.CoroutineWorker$startWork$1:
# {"id":"sourceFile","fileName":"CoroutineWorker.kt"}
    66:73:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.work.Data -> androidx.work.Data:
    52:57:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    72:73:void <init>(androidx.work.Data) -> <init>
    80:81:void <init>(java.util.Map) -> <init>
    521:523:java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[]) -> convertPrimitiveBooleanArray
    534:536:java.lang.Byte[] convertPrimitiveByteArray(byte[]) -> convertPrimitiveByteArray
    586:588:java.lang.Double[] convertPrimitiveDoubleArray(double[]) -> convertPrimitiveDoubleArray
    573:575:java.lang.Float[] convertPrimitiveFloatArray(float[]) -> convertPrimitiveFloatArray
    547:549:java.lang.Integer[] convertPrimitiveIntArray(int[]) -> convertPrimitiveIntArray
    560:562:java.lang.Long[] convertPrimitiveLongArray(long[]) -> convertPrimitiveLongArray
    461:480:boolean equals(java.lang.Object) -> equals
    424:453:androidx.work.Data fromByteArray(byte[]) -> fromByteArray
    92:94:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    322:322:java.util.Map getKeyValueMap() -> getKeyValueMap
    290:292:java.lang.String getString(java.lang.String) -> getString
    492:492:int hashCode() -> hashCode
    361:361:int size() -> size
    377:411:byte[] toByteArrayInternal(androidx.work.Data) -> toByteArrayInternal
    498:512:java.lang.String toString() -> toString
androidx.work.Data$Builder -> androidx.work.Data$Builder:
    674:676:void <init>() -> <init>
    954:957:androidx.work.Data build() -> build
    908:940:androidx.work.Data$Builder put(java.lang.String,java.lang.Object) -> put
    871:871:androidx.work.Data$Builder putAll(androidx.work.Data) -> putAll
    886:889:androidx.work.Data$Builder putAll(java.util.Map) -> putAll
    843:843:androidx.work.Data$Builder putString(java.lang.String,java.lang.String) -> putString
androidx.work.ExistingPeriodicWorkPolicy -> androidx.work.ExistingPeriodicWorkPolicy:
    24:36:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:androidx.work.ExistingPeriodicWorkPolicy valueOf(java.lang.String) -> valueOf
    24:24:androidx.work.ExistingPeriodicWorkPolicy[] values() -> values
androidx.work.ExistingWorkPolicy -> androidx.work.ExistingWorkPolicy:
    24:57:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:androidx.work.ExistingWorkPolicy valueOf(java.lang.String) -> valueOf
    24:24:androidx.work.ExistingWorkPolicy[] values() -> values
androidx.work.ForegroundInfo -> androidx.work.ForegroundInfo:
    62:65:void <init>(int,android.app.Notification,int) -> <init>
    93:99:boolean equals(java.lang.Object) -> equals
    79:79:int getForegroundServiceType() -> getForegroundServiceType
    87:87:android.app.Notification getNotification() -> getNotification
    72:72:int getNotificationId() -> getNotificationId
    104:106:int hashCode() -> hashCode
    112:117:java.lang.String toString() -> toString
androidx.work.InputMerger -> androidx.work.InputMerger:
    40:40:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    62:65:androidx.work.InputMerger fromClassName(java.lang.String) -> fromClassName
androidx.work.InputMergerFactory -> androidx.work.InputMergerFactory:
    32:32:void <init>() -> <init>
    59:61:androidx.work.InputMerger createInputMergerWithDefaultFallback(java.lang.String) -> createInputMergerWithDefaultFallback
    74:74:androidx.work.InputMergerFactory getDefaultInputMergerFactory() -> getDefaultInputMergerFactory
androidx.work.InputMergerFactory$1 -> androidx.work.InputMergerFactory$1:
    74:74:void <init>() -> <init>
androidx.work.JobListenableFuture -> androidx.work.JobListenableFuture:
# {"id":"sourceFile","fileName":"ListenableFuture.kt"}
    73:83:void <init>(kotlinx.coroutines.Job,androidx.work.impl.utils.futures.SettableFuture) -> <init>
    73:75:void <init>(kotlinx.coroutines.Job,androidx.work.impl.utils.futures.SettableFuture,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    73:73:androidx.work.impl.utils.futures.SettableFuture access$getUnderlying$p(androidx.work.JobListenableFuture) -> access$getUnderlying$p
    79:79:void complete(java.lang.Object) -> complete
androidx.work.JobListenableFuture$1 -> androidx.work.JobListenableFuture$1:
# {"id":"sourceFile","fileName":"ListenableFuture.kt"}
    83:83:java.lang.Object invoke(java.lang.Object) -> invoke
    85:87:void invoke(java.lang.Throwable) -> invoke
androidx.work.ListenableWorker -> androidx.work.ListenableWorker:
    79:90:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    99:99:android.content.Context getApplicationContext() -> getApplicationContext
    343:343:java.util.concurrent.Executor getBackgroundExecutor() -> getBackgroundExecutor
    256:260:com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync() -> getForegroundInfoAsync
    108:108:java.util.UUID getId() -> getId
    119:119:androidx.work.Data getInputData() -> getInputData
    351:351:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor() -> getTaskExecutor
    359:359:androidx.work.WorkerFactory getWorkerFactory() -> getWorkerFactory
    327:327:boolean isRunInForeground() -> isRunInForeground
    274:274:boolean isStopped() -> isStopped
    306:306:boolean isUsed() -> isUsed
    335:335:void setRunInForeground(boolean) -> setRunInForeground
    317:317:void setUsed() -> setUsed
    282:283:void stop() -> stop
androidx.work.ListenableWorker$Result -> androidx.work.ListenableWorker$Result:
    447:447:void <init>() -> <init>
    417:417:androidx.work.ListenableWorker$Result failure() -> failure
    403:403:androidx.work.ListenableWorker$Result retry() -> retry
    377:377:androidx.work.ListenableWorker$Result success() -> success
    391:391:androidx.work.ListenableWorker$Result success(androidx.work.Data) -> success
androidx.work.ListenableWorker$Result$Failure -> androidx.work.ListenableWorker$Result$Failure:
    515:515:void <init>() -> <init>
    523:524:void <init>(androidx.work.Data) -> <init>
    535:539:boolean equals(java.lang.Object) -> equals
    529:529:androidx.work.Data getOutputData() -> getOutputData
    544:545:int hashCode() -> hashCode
    550:550:java.lang.String toString() -> toString
androidx.work.ListenableWorker$Result$Retry -> androidx.work.ListenableWorker$Result$Retry:
    564:564:void <init>() -> <init>
    571:571:boolean equals(java.lang.Object) -> equals
    576:577:int hashCode() -> hashCode
androidx.work.ListenableWorker$Result$Success -> androidx.work.ListenableWorker$Result$Success:
    463:463:void <init>() -> <init>
    471:472:void <init>(androidx.work.Data) -> <init>
    483:487:boolean equals(java.lang.Object) -> equals
    477:477:androidx.work.Data getOutputData() -> getOutputData
    492:493:int hashCode() -> hashCode
    498:498:java.lang.String toString() -> toString
androidx.work.Logger -> androidx.work.Logger:
    81:81:void <init>(int) -> <init>
    75:78:androidx.work.Logger get() -> get
    45:46:void setLogger(androidx.work.Logger) -> setLogger
    53:62:java.lang.String tagWithPrefix(java.lang.String) -> tagWithPrefix
androidx.work.Logger$LogcatLogger -> androidx.work.Logger$LogcatLogger:
    119:120:void <init>(int) -> <init>
    136:140:void debug(java.lang.String,java.lang.String,java.lang.Throwable[]) -> debug
    169:173:void error(java.lang.String,java.lang.String,java.lang.Throwable[]) -> error
    147:151:void info(java.lang.String,java.lang.String,java.lang.Throwable[]) -> info
    125:129:void verbose(java.lang.String,java.lang.String,java.lang.Throwable[]) -> verbose
    158:162:void warning(java.lang.String,java.lang.String,java.lang.Throwable[]) -> warning
androidx.work.NetworkType -> androidx.work.NetworkType:
    25:60:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:androidx.work.NetworkType valueOf(java.lang.String) -> valueOf
    25:25:androidx.work.NetworkType[] values() -> values
androidx.work.OneTimeWorkRequest -> androidx.work.OneTimeWorkRequest:
    65:65:void <init>(androidx.work.OneTimeWorkRequest$Builder) -> <init>
    44:44:androidx.work.OneTimeWorkRequest from(java.lang.Class) -> from
androidx.work.OneTimeWorkRequest$Builder -> androidx.work.OneTimeWorkRequest$Builder:
    79:80:void <init>(java.lang.Class) -> <init>
    71:71:androidx.work.WorkRequest buildInternal() -> buildInternal
    104:110:androidx.work.OneTimeWorkRequest buildInternal() -> buildInternal
    71:71:androidx.work.WorkRequest$Builder getThis() -> getThis
androidx.work.Operation -> androidx.work.Operation:
    44:52:void <clinit>() -> <clinit>
androidx.work.Operation$State -> androidx.work.Operation$State:
    87:87:void <init>() -> <init>
androidx.work.Operation$State$FAILURE -> androidx.work.Operation$State$FAILURE:
    130:131:void <init>(java.lang.Throwable) -> <init>
    139:139:java.lang.Throwable getThrowable() -> getThrowable
    145:145:java.lang.String toString() -> toString
androidx.work.Operation$State$IN_PROGRESS -> androidx.work.Operation$State$IN_PROGRESS:
    110:110:void <init>(androidx.work.Operation$1) -> <init>
    112:112:void <init>() -> <init>
androidx.work.Operation$State$SUCCESS -> androidx.work.Operation$State$SUCCESS:
    95:95:void <init>(androidx.work.Operation$1) -> <init>
    97:97:void <init>() -> <init>
androidx.work.OutOfQuotaPolicy -> androidx.work.OutOfQuotaPolicy:
    22:34:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.String,int) -> <init>
    22:22:androidx.work.OutOfQuotaPolicy valueOf(java.lang.String) -> valueOf
    22:22:androidx.work.OutOfQuotaPolicy[] values() -> values
androidx.work.OverwritingInputMerger -> androidx.work.OverwritingInputMerger:
    32:32:void <init>() -> <init>
    36:44:androidx.work.Data merge(java.util.List) -> merge
androidx.work.PeriodicWorkRequest -> androidx.work.PeriodicWorkRequest:
    70:70:void <init>(androidx.work.PeriodicWorkRequest$Builder) -> <init>
androidx.work.PeriodicWorkRequest$Builder -> androidx.work.PeriodicWorkRequest$Builder:
    96:97:void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit) -> <init>
    76:76:androidx.work.WorkRequest buildInternal() -> buildInternal
    186:196:androidx.work.PeriodicWorkRequest buildInternal() -> buildInternal
    76:76:androidx.work.WorkRequest$Builder getThis() -> getThis
androidx.work.WorkContinuation -> androidx.work.WorkContinuation:
    65:65:void <init>() -> <init>
    76:76:androidx.work.WorkContinuation then(androidx.work.OneTimeWorkRequest) -> then
androidx.work.WorkInfo -> androidx.work.WorkInfo:
    53:59:void <init>(java.util.UUID,androidx.work.WorkInfo$State,androidx.work.Data,java.util.List,androidx.work.Data,int) -> <init>
    122:131:boolean equals(java.lang.Object) -> equals
    136:141:int hashCode() -> hashCode
    147:147:java.lang.String toString() -> toString
androidx.work.WorkInfo$State -> androidx.work.WorkInfo$State:
    159:195:void <clinit>() -> <clinit>
    159:159:void <init>(java.lang.String,int) -> <init>
    204:204:boolean isFinished() -> isFinished
    159:159:androidx.work.WorkInfo$State valueOf(java.lang.String) -> valueOf
    159:159:androidx.work.WorkInfo$State[] values() -> values
androidx.work.WorkManager -> androidx.work.WorkManager:
    585:585:void <init>() -> <init>
    292:292:androidx.work.WorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,androidx.work.OneTimeWorkRequest) -> beginUniqueWork
    221:221:androidx.work.Operation enqueue(androidx.work.WorkRequest) -> enqueue
    351:354:androidx.work.Operation enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,androidx.work.OneTimeWorkRequest) -> enqueueUniqueWork
    184:184:androidx.work.WorkManager getInstance(android.content.Context) -> getInstance
    210:210:void initialize(android.content.Context,androidx.work.Configuration) -> initialize
androidx.work.WorkManagerInitializer -> androidx.work.WorkManagerInitializer:
    32:32:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    30:30:java.lang.Object create(android.content.Context) -> create
    38:40:androidx.work.WorkManager create(android.content.Context) -> create
    46:46:java.util.List dependencies() -> dependencies
androidx.work.WorkRequest -> androidx.work.WorkRequest:
    66:69:void <init>(java.util.UUID,androidx.work.impl.model.WorkSpec,java.util.Set) -> <init>
    89:89:java.lang.String getStringId() -> getStringId
    111:111:java.util.Set getTags() -> getTags
    100:100:androidx.work.impl.model.WorkSpec getWorkSpec() -> getWorkSpec
androidx.work.WorkRequest$Builder -> androidx.work.WorkRequest$Builder:
    123:133:void <init>(java.lang.Class) -> <init>
    210:211:androidx.work.WorkRequest$Builder addTag(java.lang.String) -> addTag
    311:332:androidx.work.WorkRequest build() -> build
    186:187:androidx.work.WorkRequest$Builder setConstraints(androidx.work.Constraints) -> setConstraints
    198:199:androidx.work.WorkRequest$Builder setInputData(androidx.work.Data) -> setInputData
androidx.work.Worker -> androidx.work.Worker:
    55:55:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    81:94:com.google.common.util.concurrent.ListenableFuture startWork() -> startWork
androidx.work.Worker$1 -> androidx.work.Worker$1:
    82:82:void <init>(androidx.work.Worker) -> <init>
    86:89:void run() -> run
androidx.work.WorkerFactory -> androidx.work.WorkerFactory:
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    83:113:androidx.work.ListenableWorker createWorkerWithDefaultFallback(android.content.Context,java.lang.String,androidx.work.WorkerParameters) -> createWorkerWithDefaultFallback
    125:125:androidx.work.WorkerFactory getDefaultWorkerFactory() -> getDefaultWorkerFactory
androidx.work.WorkerFactory$1 -> androidx.work.WorkerFactory$1:
    125:125:void <init>() -> <init>
androidx.work.WorkerParameters -> androidx.work.WorkerParameters:
    68:78:void <init>(java.util.UUID,androidx.work.Data,java.util.Collection,androidx.work.WorkerParameters$RuntimeExtras,int,java.util.concurrent.Executor,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.WorkerFactory,androidx.work.ProgressUpdater,androidx.work.ForegroundUpdater) -> <init>
    162:162:java.util.concurrent.Executor getBackgroundExecutor() -> getBackgroundExecutor
    194:194:androidx.work.ForegroundUpdater getForegroundUpdater() -> getForegroundUpdater
    87:87:java.util.UUID getId() -> getId
    98:98:androidx.work.Data getInputData() -> getInputData
    170:170:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor() -> getTaskExecutor
    178:178:androidx.work.WorkerFactory getWorkerFactory() -> getWorkerFactory
androidx.work.WorkerParameters$RuntimeExtras -> androidx.work.WorkerParameters$RuntimeExtras:
    211:213:void <init>() -> <init>
androidx.work.impl.DefaultRunnableScheduler -> androidx.work.impl.DefaultRunnableScheduler:
    39:40:void <init>() -> <init>
    60:60:void cancel(java.lang.Runnable) -> cancel
    55:55:void scheduleWithDelay(long,java.lang.Runnable) -> scheduleWithDelay
androidx.work.impl.OperationImpl -> androidx.work.impl.OperationImpl:
    39:43:void <init>() -> <init>
    62:69:void setState(androidx.work.Operation$State) -> setState
androidx.work.impl.Processor -> androidx.work.impl.Processor:
    54:54:void <clinit>() -> <clinit>
    78:89:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List) -> <init>
    277:279:void addExecutionListener(androidx.work.impl.ExecutionListener) -> addExecutionListener
    340:344:boolean interrupt(java.lang.String,androidx.work.impl.WorkerWrapper) -> interrupt
    235:237:boolean isCancelled(java.lang.String) -> isCancelled
    255:258:boolean isEnqueued(java.lang.String) -> isEnqueued
    266:268:boolean isEnqueuedInForeground(java.lang.String) -> isEnqueuedInForeground
    298:306:void onExecuted(java.lang.String,boolean) -> onExecuted
    288:290:void removeExecutionListener(androidx.work.impl.ExecutionListener) -> removeExecutionListener
    149:163:void startForeground(java.lang.String,androidx.work.ForegroundInfo) -> startForeground
    99:99:boolean startWork(java.lang.String) -> startWork
    114:142:boolean startWork(java.lang.String,androidx.work.WorkerParameters$RuntimeExtras) -> startWork
    201:217:boolean stopAndCancelWork(java.lang.String) -> stopAndCancelWork
    222:225:void stopForeground(java.lang.String) -> stopForeground
    310:328:void stopForegroundService() -> stopForegroundService
    173:177:boolean stopForegroundWork(java.lang.String) -> stopForegroundWork
    187:191:boolean stopWork(java.lang.String) -> stopWork
androidx.work.impl.Processor$FutureListener -> androidx.work.impl.Processor$FutureListener:
    362:365:void <init>(androidx.work.impl.ExecutionListener,java.lang.String,com.google.common.util.concurrent.ListenableFuture) -> <init>
    372:377:void run() -> run
androidx.work.impl.Schedulers -> androidx.work.impl.Schedulers:
    51:51:void <clinit>() -> <clinit>
    132:141:androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl) -> createBestAvailableBackgroundScheduler
    63:119:void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List) -> schedule
    150:156:androidx.work.impl.Scheduler tryCreateGcmBasedScheduler(android.content.Context) -> tryCreateGcmBasedScheduler
androidx.work.impl.WorkContinuationImpl -> androidx.work.impl.WorkContinuationImpl:
    53:53:void <clinit>() -> <clinit>
    112:112:void <init>(androidx.work.impl.WorkManagerImpl,java.util.List) -> <init>
    125:125:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List) -> <init>
    132:148:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List) -> <init>
    183:193:androidx.work.Operation enqueue() -> enqueue
    77:77:androidx.work.ExistingWorkPolicy getExistingWorkPolicy() -> getExistingWorkPolicy
    87:87:java.util.List getIds() -> getIds
    73:73:java.lang.String getName() -> getName
    106:106:java.util.List getParents() -> getParents
    82:82:java.util.List getWork() -> getWork
    68:68:androidx.work.impl.WorkManagerImpl getWorkManagerImpl() -> getWorkManagerImpl
    223:223:boolean hasCycles() -> hasCycles
    240:265:boolean hasCycles(androidx.work.impl.WorkContinuationImpl,java.util.Set) -> hasCycles
    95:95:boolean isEnqueued() -> isEnqueued
    102:102:void markEnqueued() -> markEnqueued
    277:281:java.util.Set prerequisitesFor(androidx.work.impl.WorkContinuationImpl) -> prerequisitesFor
    154:161:androidx.work.WorkContinuation then(java.util.List) -> then
androidx.work.impl.WorkDatabase -> androidx.work.impl.WorkDatabase:
    94:94:void <clinit>() -> <clinit>
    80:80:void <init>() -> <init>
    112:155:androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean) -> create
    159:159:androidx.room.RoomDatabase$Callback generateCleanupCallback() -> generateCleanupCallback
    183:183:long getPruneDate() -> getPruneDate
    179:179:java.lang.String getPruneSQL() -> getPruneSQL
androidx.work.impl.WorkDatabase$1 -> androidx.work.impl.WorkDatabase$1:
    118:118:void <init>(android.content.Context) -> <init>
    123:130:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.work.impl.WorkDatabase$2 -> androidx.work.impl.WorkDatabase$2:
    159:159:void <init>() -> <init>
    162:171:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
androidx.work.impl.WorkDatabaseMigrations -> androidx.work.impl.WorkDatabaseMigrations:
    119:240:void <clinit>() -> <clinit>
androidx.work.impl.WorkDatabaseMigrations$1 -> androidx.work.impl.WorkDatabaseMigrations$1:
    119:119:void <init>(int,int) -> <init>
    122:125:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$2 -> androidx.work.impl.WorkDatabaseMigrations$2:
    163:163:void <init>(int,int) -> <init>
    166:167:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$3 -> androidx.work.impl.WorkDatabaseMigrations$3:
    176:176:void <init>(int,int) -> <init>
    179:180:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$4 -> androidx.work.impl.WorkDatabaseMigrations$4:
    188:188:void <init>(int,int) -> <init>
    191:191:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$5 -> androidx.work.impl.WorkDatabaseMigrations$5:
    199:199:void <init>(int,int) -> <init>
    202:202:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$6 -> androidx.work.impl.WorkDatabaseMigrations$6:
    210:210:void <init>(int,int) -> <init>
    213:213:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$7 -> androidx.work.impl.WorkDatabaseMigrations$7:
    240:240:void <init>(int,int) -> <init>
    243:243:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$RescheduleMigration -> androidx.work.impl.WorkDatabaseMigrations$RescheduleMigration:
    137:138:void <init>(android.content.Context,int,int) -> <init>
    143:153:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabaseMigrations$WorkMigration9To10 -> androidx.work.impl.WorkDatabaseMigrations$WorkMigration9To10:
    224:225:void <init>(android.content.Context) -> <init>
    230:232:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
androidx.work.impl.WorkDatabasePathHelper -> androidx.work.impl.WorkDatabasePathHelper:
    42:47:void <clinit>() -> <clinit>
    127:131:java.io.File getDatabasePath(android.content.Context) -> getDatabasePath
    117:117:java.io.File getDefaultDatabasePath(android.content.Context) -> getDefaultDatabasePath
    145:145:java.io.File getNoBackupPath(android.content.Context,java.lang.String) -> getNoBackupPath
    63:81:void migrateDatabase(android.content.Context) -> migrateDatabase
    96:104:java.util.Map migrationPaths(android.content.Context) -> migrationPaths
androidx.work.impl.WorkDatabase_Impl -> androidx.work.impl.WorkDatabase_Impl:
    42:42:void <init>() -> <init>
    42:42:java.util.List access$000(androidx.work.impl.WorkDatabase_Impl) -> access$000
    42:42:java.util.List access$100(androidx.work.impl.WorkDatabase_Impl) -> access$100
    42:42:java.util.List access$1000(androidx.work.impl.WorkDatabase_Impl) -> access$1000
    42:42:java.util.List access$200(androidx.work.impl.WorkDatabase_Impl) -> access$200
    42:42:java.util.List access$300(androidx.work.impl.WorkDatabase_Impl) -> access$300
    42:42:java.util.List access$400(androidx.work.impl.WorkDatabase_Impl) -> access$400
    42:42:java.util.List access$500(androidx.work.impl.WorkDatabase_Impl) -> access$500
    42:42:androidx.sqlite.db.SupportSQLiteDatabase access$602(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$602
    42:42:void access$700(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$700
    42:42:java.util.List access$800(androidx.work.impl.WorkDatabase_Impl) -> access$800
    42:42:java.util.List access$900(androidx.work.impl.WorkDatabase_Impl) -> access$900
    261:263:androidx.room.InvalidationTracker createInvalidationTracker() -> createInvalidationTracker
    61:255:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> createOpenHelper
    315:323:androidx.work.impl.model.DependencyDao dependencyDao() -> dependencyDao
    385:393:androidx.work.impl.model.PreferenceDao preferenceDao() -> preferenceDao
    343:351:androidx.work.impl.model.SystemIdInfoDao systemIdInfoDao() -> systemIdInfoDao
    357:365:androidx.work.impl.model.WorkNameDao workNameDao() -> workNameDao
    371:379:androidx.work.impl.model.WorkProgressDao workProgressDao() -> workProgressDao
    301:309:androidx.work.impl.model.WorkSpecDao workSpecDao() -> workSpecDao
    329:337:androidx.work.impl.model.WorkTagDao workTagDao() -> workTagDao
androidx.work.impl.WorkDatabase_Impl$1 -> androidx.work.impl.WorkDatabase_Impl$1:
    61:61:void <init>(androidx.work.impl.WorkDatabase_Impl,int) -> <init>
    64:78:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> createAllTables
    83:92:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> dropAllTables
    99:101:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    108:113:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    120:120:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPreMigrate
    129:248:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> onValidateSchema
androidx.work.impl.WorkManagerImpl -> androidx.work.impl.WorkManagerImpl:
    85:104:void <clinit>() -> <clinit>
    219:222:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    241:246:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,boolean) -> <init>
    266:277:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase) -> <init>
    397:401:androidx.work.WorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List) -> beginUniqueWork
    464:466:androidx.work.Operation cancelUniqueWork(java.lang.String) -> cancelUniqueWork
    449:451:androidx.work.Operation cancelWorkById(java.util.UUID) -> cancelWorkById
    785:786:java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> createSchedulers
    435:444:androidx.work.impl.WorkContinuationImpl createWorkContinuationForUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest) -> createWorkContinuationForUniquePeriodicWork
    376:380:androidx.work.Operation enqueue(java.util.List) -> enqueue
    419:423:androidx.work.Operation enqueueUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest) -> enqueueUniquePeriodicWork
    409:409:androidx.work.Operation enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List) -> enqueueUniqueWork
    309:309:android.content.Context getApplicationContext() -> getApplicationContext
    329:329:androidx.work.Configuration getConfiguration() -> getConfiguration
    130:136:androidx.work.impl.WorkManagerImpl getInstance() -> getInstance
    148:166:androidx.work.impl.WorkManagerImpl getInstance(android.content.Context) -> getInstance
    366:366:androidx.work.impl.utils.PreferenceUtils getPreferenceUtils() -> getPreferenceUtils
    348:348:androidx.work.impl.Processor getProcessor() -> getProcessor
    339:339:java.util.List getSchedulers() -> getSchedulers
    319:319:androidx.work.impl.WorkDatabase getWorkDatabase() -> getWorkDatabase
    357:357:androidx.work.impl.utils.taskexecutor.TaskExecutor getWorkTaskExecutor() -> getWorkTaskExecutor
    183:202:void initialize(android.content.Context,androidx.work.Configuration) -> initialize
    756:772:void internalInit(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor) -> internalInit
    711:717:void onForceStopRunnableCompleted() -> onForceStopRunnableCompleted
    691:701:void rescheduleEligibleWork() -> rescheduleEligibleWork
    731:737:void setReschedulePendingResult(android.content.BroadcastReceiver$PendingResult) -> setReschedulePendingResult
    647:647:void startWork(java.lang.String) -> startWork
    659:660:void startWork(java.lang.String,androidx.work.WorkerParameters$RuntimeExtras) -> startWork
    680:680:void stopForegroundWork(java.lang.String) -> stopForegroundWork
    670:670:void stopWork(java.lang.String) -> stopWork
androidx.work.impl.WorkerWrapper -> androidx.work.impl.WorkerWrapper:
    76:76:void <clinit>() -> <clinit>
    90:125:void <init>(androidx.work.impl.WorkerWrapper$Builder) -> <init>
    605:620:java.lang.String createWorkDescription(java.util.List) -> createWorkDescription
    129:129:com.google.common.util.concurrent.ListenableFuture getFuture() -> getFuture
    470:492:void handleResult(androidx.work.ListenableWorker$Result) -> handleResult
    384:401:void interrupt() -> interrupt
    532:540:void iterativelyFailWorkAndDependents(java.lang.String) -> iterativelyFailWorkAndDependents
    342:375:void onWorkFinished() -> onWorkFinished
    545:554:void rescheduleAndResolve() -> rescheduleAndResolve
    558:572:void resetPeriodicAndResolve() -> resetPeriodicAndResolve
    440:466:void resolve(boolean) -> resolve
    406:414:void resolveIncorrectStatus() -> resolveIncorrectStatus
    135:137:void run() -> run
    141:336:void runWorker() -> runWorker
    516:527:void setFailedAndResolve() -> setFailedAndResolve
    576:601:void setSucceededAndResolve() -> setSucceededAndResolve
    424:432:boolean tryCheckForInterruptionAndResolve() -> tryCheckForInterruptionAndResolve
    499:510:boolean trySetRunning() -> trySetRunning
androidx.work.impl.WorkerWrapper$1 -> androidx.work.impl.WorkerWrapper$1:
    287:287:void <init>(androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture,androidx.work.impl.utils.futures.SettableFuture) -> <init>
    291:298:void run() -> run
androidx.work.impl.WorkerWrapper$2 -> androidx.work.impl.WorkerWrapper$2:
    305:305:void <init>(androidx.work.impl.WorkerWrapper,androidx.work.impl.utils.futures.SettableFuture,java.lang.String) -> <init>
    311:332:void run() -> run
androidx.work.impl.WorkerWrapper$Builder -> androidx.work.impl.WorkerWrapper$Builder:
    639:653:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.WorkDatabase,java.lang.String) -> <init>
    697:697:androidx.work.impl.WorkerWrapper build() -> build
    675:675:androidx.work.impl.WorkerWrapper$Builder withRuntimeExtras(androidx.work.WorkerParameters$RuntimeExtras) -> withRuntimeExtras
    662:662:androidx.work.impl.WorkerWrapper$Builder withSchedulers(java.util.List) -> withSchedulers
androidx.work.impl.background.greedy.DelayedWorkTracker -> androidx.work.impl.background.greedy.DelayedWorkTracker:
    40:40:void <clinit>() -> <clinit>
    51:55:void <init>(androidx.work.impl.background.greedy.GreedyScheduler,androidx.work.RunnableScheduler) -> <init>
    66:82:void schedule(androidx.work.impl.model.WorkSpec) -> schedule
    91:93:void unschedule(java.lang.String) -> unschedule
androidx.work.impl.background.greedy.DelayedWorkTracker$1 -> androidx.work.impl.background.greedy.DelayedWorkTracker$1:
    71:71:void <init>(androidx.work.impl.background.greedy.DelayedWorkTracker,androidx.work.impl.model.WorkSpec) -> <init>
    74:75:void run() -> run
androidx.work.impl.background.greedy.GreedyScheduler -> androidx.work.impl.background.greedy.GreedyScheduler:
    53:53:void <clinit>() -> <clinit>
    58:75:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkManagerImpl) -> <init>
    169:184:void cancel(java.lang.String) -> cancel
    163:164:void checkDefaultProcess() -> checkDefaultProcess
    189:193:void onAllConstraintsMet(java.util.List) -> onAllConstraintsMet
    199:202:void onAllConstraintsNotMet(java.util.List) -> onAllConstraintsNotMet
    208:208:void onExecuted(java.lang.String,boolean) -> onExecuted
    232:234:void registerExecutionListenerIfNeeded() -> registerExecutionListenerIfNeeded
    214:226:void removeConstraintTrackingFor(java.lang.String) -> removeConstraintTrackingFor
    101:159:void schedule(androidx.work.impl.model.WorkSpec[]) -> schedule
androidx.work.impl.background.systemalarm.Alarms -> androidx.work.impl.background.systemalarm.Alarms:
    44:44:void <clinit>() -> <clinit>
    87:94:void cancelAlarm(android.content.Context,androidx.work.impl.WorkManagerImpl,java.lang.String) -> cancelAlarm
    103:115:void cancelExactAlarm(android.content.Context,java.lang.String,int) -> cancelExactAlarm
    60:71:void setAlarm(android.content.Context,androidx.work.impl.WorkManagerImpl,java.lang.String,long) -> setAlarm
    125:134:void setExactAlarm(android.content.Context,java.lang.String,int,long) -> setExactAlarm
androidx.work.impl.background.systemalarm.CommandHandler -> androidx.work.impl.background.systemalarm.CommandHandler:
    45:45:void <clinit>() -> <clinit>
    113:116:void <init>(android.content.Context) -> <init>
    85:86:android.content.Intent createConstraintsChangedIntent(android.content.Context) -> createConstraintsChangedIntent
    71:73:android.content.Intent createDelayMetIntent(android.content.Context,java.lang.String) -> createDelayMetIntent
    101:104:android.content.Intent createExecutionCompletedIntent(android.content.Context,java.lang.String,boolean) -> createExecutionCompletedIntent
    91:92:android.content.Intent createRescheduleIntent(android.content.Context) -> createRescheduleIntent
    64:66:android.content.Intent createScheduleWorkIntent(android.content.Context,java.lang.String) -> createScheduleWorkIntent
    78:80:android.content.Intent createStopWorkIntent(android.content.Context,java.lang.String) -> createStopWorkIntent
    300:305:void handleConstraintsChanged(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> handleConstraintsChanged
    261:278:void handleDelayMet(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> handleDelayMet
    321:328:void handleExecutionCompleted(android.content.Intent,int) -> handleExecutionCompleted
    313:314:void handleReschedule(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> handleReschedule
    188:253:void handleScheduleWorkIntent(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> handleScheduleWorkIntent
    285:293:void handleStopWork(android.content.Intent,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> handleStopWork
    332:336:boolean hasKeys(android.os.Bundle,java.lang.String[]) -> hasKeys
    138:142:boolean hasPendingCommands() -> hasPendingCommands
    121:128:void onExecuted(java.lang.String,boolean) -> onExecuted
    154:177:void onHandleIntent(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> onHandleIntent
androidx.work.impl.background.systemalarm.ConstraintProxy -> androidx.work.impl.background.systemalarm.ConstraintProxy:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    35:37:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    76:100:void updateAll(android.content.Context,java.util.List) -> updateAll
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy -> androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy:
    49:49:void <init>() -> <init>
    49:49:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy -> androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy:
    43:43:void <init>() -> <init>
    43:43:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy -> androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy:
    61:61:void <init>() -> <init>
    61:61:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy -> androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy:
    55:55:void <init>() -> <init>
    55:55:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver -> androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver:
    41:41:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    68:76:android.content.Intent newConstraintProxyUpdateIntent(android.content.Context,boolean,boolean,boolean,boolean) -> newConstraintProxyUpdateIntent
    83:90:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver$1 -> androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver$1:
    90:90:void <init>(androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver,android.content.Intent,android.content.Context,android.content.BroadcastReceiver$PendingResult) -> <init>
    97:128:void run() -> run
androidx.work.impl.background.systemalarm.ConstraintsCommandHandler -> androidx.work.impl.background.systemalarm.ConstraintsCommandHandler:
    42:42:void <clinit>() -> <clinit>
    52:58:void <init>(android.content.Context,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> <init>
    63:95:void handleConstraintsChanged() -> handleConstraintsChanged
androidx.work.impl.background.systemalarm.DelayMetCommandHandler -> androidx.work.impl.background.systemalarm.DelayMetCommandHandler:
    53:53:void <clinit>() -> <clinit>
    100:110:void <init>(android.content.Context,int,java.lang.String,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> <init>
    265:277:void cleanUp() -> cleanUp
    186:215:void handleProcessWork() -> handleProcessWork
    118:145:void onAllConstraintsMet(java.util.List) -> onAllConstraintsMet
    181:181:void onAllConstraintsNotMet(java.util.List) -> onAllConstraintsNotMet
    150:166:void onExecuted(java.lang.String,boolean) -> onExecuted
    173:176:void onTimeLimitExceeded(java.lang.String) -> onTimeLimitExceeded
    226:255:void stopWork() -> stopWork
androidx.work.impl.background.systemalarm.RescheduleReceiver -> androidx.work.impl.background.systemalarm.RescheduleReceiver:
    32:32:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    36:50:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher -> androidx.work.impl.background.systemalarm.SystemAlarmDispatcher:
    53:53:void <clinit>() -> <clinit>
    76:76:void <init>(android.content.Context) -> <init>
    83:96:void <init>(android.content.Context,androidx.work.impl.Processor,androidx.work.impl.WorkManagerImpl) -> <init>
    136:162:boolean add(android.content.Intent,int) -> add
    318:319:void assertMainThread() -> assertMainThread
    199:241:void dequeueAndCheckForCompletion() -> dequeueAndCheckForCompletion
    177:177:androidx.work.impl.Processor getProcessor() -> getProcessor
    189:189:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor() -> getTaskExecutor
    185:185:androidx.work.impl.WorkManagerImpl getWorkManager() -> getWorkManager
    181:181:androidx.work.impl.utils.WorkTimer getWorkTimer() -> getWorkTimer
    306:314:boolean hasIntentWithAction(java.lang.String) -> hasIntentWithAction
    104:107:void onDestroy() -> onDestroy
    117:120:void onExecuted(java.lang.String,boolean) -> onExecuted
    193:193:void postOnMainThread(java.lang.Runnable) -> postOnMainThread
    247:301:void processCommand() -> processCommand
    167:173:void setCompletedListener(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$CommandsCompletedListener) -> setCompletedListener
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1 -> androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1:
    253:253:void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> <init>
    256:295:void run() -> run
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$AddRunnable -> androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$AddRunnable:
    349:352:void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher,android.content.Intent,int) -> <init>
    357:357:void run() -> run
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion -> androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion:
    329:330:void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher) -> <init>
    335:335:void run() -> run
androidx.work.impl.background.systemalarm.SystemAlarmScheduler -> androidx.work.impl.background.systemalarm.SystemAlarmScheduler:
    36:36:void <clinit>() -> <clinit>
    40:41:void <init>(android.content.Context) -> <init>
    53:54:void cancel(java.lang.String) -> cancel
    46:47:void schedule(androidx.work.impl.model.WorkSpec[]) -> schedule
    67:69:void scheduleWorkSpec(androidx.work.impl.model.WorkSpec) -> scheduleWorkSpec
androidx.work.impl.background.systemalarm.SystemAlarmService -> androidx.work.impl.background.systemalarm.SystemAlarmService:
    37:37:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    93:94:void initializeDispatcher() -> initializeDispatcher
    82:88:void onAllCommandsCompleted() -> onAllCommandsCompleted
    44:46:void onCreate() -> onCreate
    51:53:void onDestroy() -> onDestroy
    58:72:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
androidx.work.impl.background.systemjob.SystemJobInfoConverter -> androidx.work.impl.background.systemjob.SystemJobInfoConverter:
    50:50:void <clinit>() -> <clinit>
    58:60:void <init>(android.content.Context) -> <init>
    73:133:android.app.job.JobInfo convert(androidx.work.impl.model.WorkSpec,int) -> convert
    139:141:android.app.job.JobInfo$TriggerContentUri convertContentUriTrigger(androidx.work.ContentUriTriggers$Trigger) -> convertContentUriTrigger
    173:191:int convertNetworkType(androidx.work.NetworkType) -> convertNetworkType
    154:161:void setRequiredNetwork(android.app.job.JobInfo$Builder,androidx.work.NetworkType) -> setRequiredNetwork
androidx.work.impl.background.systemjob.SystemJobInfoConverter$1 -> androidx.work.impl.background.systemjob.SystemJobInfoConverter$1:
    173:173:void <clinit>() -> <clinit>
androidx.work.impl.background.systemjob.SystemJobScheduler -> androidx.work.impl.background.systemjob.SystemJobScheduler:
    62:62:void <clinit>() -> <clinit>
    70:72:void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl) -> <init>
    81:85:void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl,android.app.job.JobScheduler,androidx.work.impl.background.systemjob.SystemJobInfoConverter) -> <init>
    227:236:void cancel(java.lang.String) -> cancel
    265:270:void cancelAll(android.content.Context) -> cancelAll
    247:254:void cancelJobById(android.app.job.JobScheduler,int) -> cancelJobById
    389:399:java.util.List getPendingJobIds(android.content.Context,android.app.job.JobScheduler,java.lang.String) -> getPendingJobIds
    355:371:java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler) -> getPendingJobs
    408:411:java.lang.String getWorkSpecIdFromJobInfo(android.app.job.JobInfo) -> getWorkSpecIdFromJobInfo
    295:341:boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl) -> reconcileJobs
    90:171:void schedule(androidx.work.impl.model.WorkSpec[]) -> schedule
    182:221:void scheduleInternal(androidx.work.impl.model.WorkSpec,int) -> scheduleInternal
androidx.work.impl.background.systemjob.SystemJobService -> androidx.work.impl.background.systemjob.SystemJobService:
    49:49:void <clinit>() -> <clinit>
    48:51:void <init>() -> <init>
    187:189:java.lang.String getWorkSpecIdFromJobParameters(android.app.job.JobParameters) -> getWorkSpecIdFromJobParameters
    55:76:void onCreate() -> onCreate
    85:87:void onDestroy() -> onDestroy
    173:179:void onExecuted(java.lang.String,boolean) -> onExecuted
    93:145:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    151:168:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.work.impl.constraints.NetworkState -> androidx.work.impl.constraints.NetworkState:
    32:36:void <init>(boolean,boolean,boolean,boolean) -> <init>
    80:84:boolean equals(java.lang.Object) -> equals
    93:96:int hashCode() -> hashCode
    45:45:boolean isConnected() -> isConnected
    63:63:boolean isMetered() -> isMetered
    72:72:boolean isNotRoaming() -> isNotRoaming
    54:54:boolean isValidated() -> isValidated
    103:104:java.lang.String toString() -> toString
androidx.work.impl.constraints.WorkConstraintsTracker -> androidx.work.impl.constraints.WorkConstraintsTracker:
    46:46:void <clinit>() -> <clinit>
    67:80:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.constraints.WorkConstraintsCallback) -> <init>
    134:143:boolean areAllConstraintsMet(java.lang.String) -> areAllConstraintsMet
    148:159:void onConstraintMet(java.util.List) -> onConstraintMet
    164:168:void onConstraintNotMet(java.util.List) -> onConstraintNotMet
    100:112:void replace(java.lang.Iterable) -> replace
    119:123:void reset() -> reset
androidx.work.impl.constraints.controllers.BatteryChargingController -> androidx.work.impl.constraints.controllers.BatteryChargingController:
    31:31:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    36:36:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    29:29:boolean isConstrained(java.lang.Object) -> isConstrained
    41:41:boolean isConstrained(java.lang.Boolean) -> isConstrained
androidx.work.impl.constraints.controllers.BatteryNotLowController -> androidx.work.impl.constraints.controllers.BatteryNotLowController:
    31:31:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    36:36:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    29:29:boolean isConstrained(java.lang.Object) -> isConstrained
    41:41:boolean isConstrained(java.lang.Boolean) -> isConstrained
androidx.work.impl.constraints.controllers.ConstraintController -> androidx.work.impl.constraints.controllers.ConstraintController:
    55:62:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker) -> <init>
    122:123:boolean isWorkSpecConstrained(java.lang.String) -> isWorkSpecConstrained
    146:147:void onConstraintChanged(java.lang.Object) -> onConstraintChanged
    88:101:void replace(java.lang.Iterable) -> replace
    108:110:void reset() -> reset
    72:74:void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback) -> setCallback
    133:140:void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback,java.lang.Object) -> updateCallback
androidx.work.impl.constraints.controllers.NetworkConnectedController -> androidx.work.impl.constraints.controllers.NetworkConnectedController:
    41:41:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    46:46:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    39:39:boolean isConstrained(java.lang.Object) -> isConstrained
    51:54:boolean isConstrained(androidx.work.impl.constraints.NetworkState) -> isConstrained
androidx.work.impl.constraints.controllers.NetworkMeteredController -> androidx.work.impl.constraints.controllers.NetworkMeteredController:
    36:36:void <clinit>() -> <clinit>
    39:39:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    44:44:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    35:35:boolean isConstrained(java.lang.Object) -> isConstrained
    53:58:boolean isConstrained(androidx.work.impl.constraints.NetworkState) -> isConstrained
androidx.work.impl.constraints.controllers.NetworkNotRoamingController -> androidx.work.impl.constraints.controllers.NetworkNotRoamingController:
    36:36:void <clinit>() -> <clinit>
    39:39:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    44:44:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    35:35:boolean isConstrained(java.lang.Object) -> isConstrained
    53:60:boolean isConstrained(androidx.work.impl.constraints.NetworkState) -> isConstrained
androidx.work.impl.constraints.controllers.NetworkUnmeteredController -> androidx.work.impl.constraints.controllers.NetworkUnmeteredController:
    39:39:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    44:46:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    35:35:boolean isConstrained(java.lang.Object) -> isConstrained
    51:51:boolean isConstrained(androidx.work.impl.constraints.NetworkState) -> isConstrained
androidx.work.impl.constraints.controllers.StorageNotLowController -> androidx.work.impl.constraints.controllers.StorageNotLowController:
    31:31:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    36:36:boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> hasConstraint
    29:29:boolean isConstrained(java.lang.Object) -> isConstrained
    41:41:boolean isConstrained(java.lang.Boolean) -> isConstrained
androidx.work.impl.constraints.trackers.BatteryChargingTracker -> androidx.work.impl.constraints.trackers.BatteryChargingTracker:
    36:36:void <clinit>() -> <clinit>
    44:44:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    33:33:java.lang.Object getInitialState() -> getInitialState
    51:57:java.lang.Boolean getInitialState() -> getInitialState
    62:68:android.content.IntentFilter getIntentFilter() -> getIntentFilter
    102:107:boolean isBatteryChangedIntentCharging(android.content.Intent) -> isBatteryChangedIntentCharging
    75:95:void onBroadcastReceive(android.content.Context,android.content.Intent) -> onBroadcastReceive
androidx.work.impl.constraints.trackers.BatteryNotLowTracker -> androidx.work.impl.constraints.trackers.BatteryNotLowTracker:
    35:35:void <clinit>() -> <clinit>
    48:48:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    32:32:java.lang.Object getInitialState() -> getInitialState
    59:73:java.lang.Boolean getInitialState() -> getInitialState
    79:81:android.content.IntentFilter getIntentFilter() -> getIntentFilter
    87:99:void onBroadcastReceive(android.content.Context,android.content.Intent) -> onBroadcastReceive
androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker -> androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker:
    37:37:void <clinit>() -> <clinit>
    39:51:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    70:73:void startTracking() -> startTracking
    78:81:void stopTracking() -> stopTracking
androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker$1 -> androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker$1:
    39:39:void <init>(androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker) -> <init>
    43:43:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.constraints.trackers.ConstraintTracker -> androidx.work.impl.constraints.trackers.ConstraintTracker:
    40:40:void <clinit>() -> <clinit>
    45:53:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    64:75:void addListener(androidx.work.impl.constraints.ConstraintListener) -> addListener
    84:88:void removeListener(androidx.work.impl.constraints.ConstraintListener) -> removeListener
    98:118:void setState(java.lang.Object) -> setState
androidx.work.impl.constraints.trackers.ConstraintTracker$1 -> androidx.work.impl.constraints.trackers.ConstraintTracker$1:
    110:110:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker,java.util.List) -> <init>
    113:114:void run() -> run
androidx.work.impl.constraints.trackers.NetworkStateTracker -> androidx.work.impl.constraints.trackers.NetworkStateTracker:
    55:55:void <clinit>() -> <clinit>
    69:75:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    137:142:androidx.work.impl.constraints.NetworkState getActiveNetworkState() -> getActiveNetworkState
    51:51:java.lang.Object getInitialState() -> getInitialState
    81:81:androidx.work.impl.constraints.NetworkState getInitialState() -> getInitialState
    147:157:boolean isActiveNetworkValidated() -> isActiveNetworkValidated
    131:131:boolean isNetworkCallbackSupported() -> isNetworkCallbackSupported
    86:102:void startTracking() -> startTracking
    109:125:void stopTracking() -> stopTracking
androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateBroadcastReceiver -> androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateBroadcastReceiver:
    185:185:void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker) -> <init>
    190:195:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateCallback -> androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateCallback:
    164:164:void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker) -> <init>
    171:174:void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
    179:180:void onLost(android.net.Network) -> onLost
androidx.work.impl.constraints.trackers.StorageNotLowTracker -> androidx.work.impl.constraints.trackers.StorageNotLowTracker:
    34:34:void <clinit>() -> <clinit>
    42:42:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    31:31:java.lang.Object getInitialState() -> getInitialState
    47:59:java.lang.Boolean getInitialState() -> getInitialState
    74:76:android.content.IntentFilter getIntentFilter() -> getIntentFilter
    82:94:void onBroadcastReceive(android.content.Context,android.content.Intent) -> onBroadcastReceive
androidx.work.impl.constraints.trackers.Trackers -> androidx.work.impl.constraints.trackers.Trackers:
    61:66:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    76:76:androidx.work.impl.constraints.trackers.BatteryChargingTracker getBatteryChargingTracker() -> getBatteryChargingTracker
    86:86:androidx.work.impl.constraints.trackers.BatteryNotLowTracker getBatteryNotLowTracker() -> getBatteryNotLowTracker
    42:45:androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> getInstance
    96:96:androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker() -> getNetworkStateTracker
    106:106:androidx.work.impl.constraints.trackers.StorageNotLowTracker getStorageNotLowTracker() -> getStorageNotLowTracker
androidx.work.impl.diagnostics.DiagnosticsReceiver -> androidx.work.impl.diagnostics.DiagnosticsReceiver:
    38:38:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    45:50:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.foreground.SystemForegroundDispatcher -> androidx.work.impl.foreground.SystemForegroundDispatcher:
    62:62:void <clinit>() -> <clinit>
    102:112:void <init>(android.content.Context) -> <init>
    398:403:android.content.Intent createNotifyIntent(android.content.Context,java.lang.String,androidx.work.ForegroundInfo) -> createNotifyIntent
    354:360:android.content.Intent createStartForegroundIntent(android.content.Context,java.lang.String,androidx.work.ForegroundInfo) -> createStartForegroundIntent
    415:416:android.content.Intent createStopForegroundIntent(android.content.Context) -> createStopForegroundIntent
    318:321:void handleCancelWork(android.content.Intent) -> handleCancelWork
    264:300:void handleNotify(android.content.Intent) -> handleNotify
    242:245:void handleStartForeground(android.content.Intent) -> handleStartForeground
    310:312:void handleStop(android.content.Intent) -> handleStop
    332:336:void onAllConstraintsNotMet(java.util.List) -> onAllConstraintsNotMet
    233:237:void onDestroy() -> onDestroy
    137:198:void onExecuted(java.lang.String,boolean) -> onExecuted
    216:227:void onStartCommand(android.content.Intent) -> onStartCommand
    204:208:void setCallback(androidx.work.impl.foreground.SystemForegroundDispatcher$Callback) -> setCallback
androidx.work.impl.foreground.SystemForegroundDispatcher$1 -> androidx.work.impl.foreground.SystemForegroundDispatcher$1:
    245:245:void <init>(androidx.work.impl.foreground.SystemForegroundDispatcher,androidx.work.impl.WorkDatabase,java.lang.String) -> <init>
    248:256:void run() -> run
androidx.work.impl.foreground.SystemForegroundService -> androidx.work.impl.foreground.SystemForegroundService:
    42:45:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    144:144:void cancelNotification(int) -> cancelNotification
    93:97:void initializeDispatcher() -> initializeDispatcher
    134:134:void notify(int,android.app.Notification) -> notify
    57:59:void onCreate() -> onCreate
    87:88:void onDestroy() -> onDestroy
    64:78:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    120:120:void startForeground(int,int,android.app.Notification) -> startForeground
    103:111:void stop() -> stop
androidx.work.impl.foreground.SystemForegroundService$1 -> androidx.work.impl.foreground.SystemForegroundService$1:
    120:120:void <init>(androidx.work.impl.foreground.SystemForegroundService,int,android.app.Notification,int) -> <init>
    123:126:void run() -> run
androidx.work.impl.foreground.SystemForegroundService$2 -> androidx.work.impl.foreground.SystemForegroundService$2:
    134:134:void <init>(androidx.work.impl.foreground.SystemForegroundService,int,android.app.Notification) -> <init>
    137:137:void run() -> run
androidx.work.impl.foreground.SystemForegroundService$3 -> androidx.work.impl.foreground.SystemForegroundService$3:
    144:144:void <init>(androidx.work.impl.foreground.SystemForegroundService,int) -> <init>
    147:147:void run() -> run
androidx.work.impl.model.Dependency -> androidx.work.impl.model.Dependency:
    59:61:void <init>(java.lang.String,java.lang.String) -> <init>
androidx.work.impl.model.DependencyDao_Impl -> androidx.work.impl.model.DependencyDao_Impl:
    21:23:void <init>(androidx.room.RoomDatabase) -> <init>
    114:134:java.util.List getDependentWorkIds(java.lang.String) -> getDependentWorkIds
    60:82:boolean hasCompletedAllPrerequisites(java.lang.String) -> hasCompletedAllPrerequisites
    140:162:boolean hasDependents(java.lang.String) -> hasDependents
    47:54:void insertDependency(androidx.work.impl.model.Dependency) -> insertDependency
androidx.work.impl.model.DependencyDao_Impl$1 -> androidx.work.impl.model.DependencyDao_Impl$1:
    23:23:void <init>(androidx.work.impl.model.DependencyDao_Impl,androidx.room.RoomDatabase) -> <init>
    23:23:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    31:39:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.Dependency) -> bind
androidx.work.impl.model.Preference -> androidx.work.impl.model.Preference:
    42:42:void <init>(java.lang.String,boolean) -> <init>
    45:47:void <init>(java.lang.String,long) -> <init>
    53:58:boolean equals(java.lang.Object) -> equals
    63:64:int hashCode() -> hashCode
androidx.work.impl.model.PreferenceDao_Impl -> androidx.work.impl.model.PreferenceDao_Impl:
    23:25:void <init>(androidx.room.RoomDatabase) -> <init>
    62:86:java.lang.Long getLongValue(java.lang.String) -> getLongValue
    49:56:void insertPreference(androidx.work.impl.model.Preference) -> insertPreference
androidx.work.impl.model.PreferenceDao_Impl$1 -> androidx.work.impl.model.PreferenceDao_Impl$1:
    25:25:void <init>(androidx.work.impl.model.PreferenceDao_Impl,androidx.room.RoomDatabase) -> <init>
    25:25:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    33:41:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.Preference) -> bind
androidx.work.impl.model.SystemIdInfo -> androidx.work.impl.model.SystemIdInfo:
    48:50:void <init>(java.lang.String,int) -> <init>
    56:61:boolean equals(java.lang.Object) -> equals
    66:67:int hashCode() -> hashCode
androidx.work.impl.model.SystemIdInfoDao_Impl -> androidx.work.impl.model.SystemIdInfoDao_Impl:
    25:43:void <init>(androidx.room.RoomDatabase) -> <init>
    87:113:androidx.work.impl.model.SystemIdInfo getSystemIdInfo(java.lang.String) -> getSystemIdInfo
    119:133:java.util.List getWorkSpecIds() -> getWorkSpecIds
    54:61:void insertSystemIdInfo(androidx.work.impl.model.SystemIdInfo) -> insertSystemIdInfo
    66:81:void removeSystemIdInfo(java.lang.String) -> removeSystemIdInfo
androidx.work.impl.model.SystemIdInfoDao_Impl$1 -> androidx.work.impl.model.SystemIdInfoDao_Impl$1:
    27:27:void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase) -> <init>
    27:27:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    35:40:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.SystemIdInfo) -> bind
androidx.work.impl.model.SystemIdInfoDao_Impl$2 -> androidx.work.impl.model.SystemIdInfoDao_Impl$2:
    43:43:void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkName -> androidx.work.impl.model.WorkName:
    52:54:void <init>(java.lang.String,java.lang.String) -> <init>
androidx.work.impl.model.WorkNameDao_Impl -> androidx.work.impl.model.WorkNameDao_Impl:
    21:23:void <init>(androidx.room.RoomDatabase) -> <init>
    86:106:java.util.List getNamesForWorkSpecId(java.lang.String) -> getNamesForWorkSpecId
    47:54:void insert(androidx.work.impl.model.WorkName) -> insert
androidx.work.impl.model.WorkNameDao_Impl$1 -> androidx.work.impl.model.WorkNameDao_Impl$1:
    23:23:void <init>(androidx.work.impl.model.WorkNameDao_Impl,androidx.room.RoomDatabase) -> <init>
    23:23:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    31:39:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkName) -> bind
androidx.work.impl.model.WorkProgressDao_Impl -> androidx.work.impl.model.WorkProgressDao_Impl:
    29:60:void <init>(androidx.room.RoomDatabase) -> <init>
    83:98:void delete(java.lang.String) -> delete
    103:112:void deleteAll() -> deleteAll
androidx.work.impl.model.WorkProgressDao_Impl$1 -> androidx.work.impl.model.WorkProgressDao_Impl$1:
    31:31:void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase) -> <init>
    31:31:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    39:49:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkProgress) -> bind
androidx.work.impl.model.WorkProgressDao_Impl$2 -> androidx.work.impl.model.WorkProgressDao_Impl$2:
    53:53:void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkProgressDao_Impl$3 -> androidx.work.impl.model.WorkProgressDao_Impl$3:
    60:60:void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpec -> androidx.work.impl.model.WorkSpec:
    60:481:void <clinit>() -> <clinit>
    68:149:void <init>(java.lang.String,java.lang.String) -> <init>
    68:170:void <init>(androidx.work.impl.model.WorkSpec) -> <init>
    266:300:long calculateNextRunTime() -> calculateNextRunTime
    314:339:boolean equals(java.lang.Object) -> equals
    308:308:boolean hasConstraints() -> hasConstraints
    344:361:int hashCode() -> hashCode
    193:193:boolean isBackedOff() -> isBackedOff
    189:189:boolean isPeriodic() -> isPeriodic
    203:208:void setPeriodic(long) -> setPeriodic
    219:237:void setPeriodic(long,long) -> setPeriodic
    368:368:java.lang.String toString() -> toString
androidx.work.impl.model.WorkSpec$1 -> androidx.work.impl.model.WorkSpec$1:
    482:482:void <init>() -> <init>
    482:482:java.lang.Object apply(java.lang.Object) -> apply
    488:490:java.util.List apply(java.util.List) -> apply
androidx.work.impl.model.WorkSpec$IdAndState -> androidx.work.impl.model.WorkSpec$IdAndState:
    374:374:void <init>() -> <init>
    385:390:boolean equals(java.lang.Object) -> equals
    395:396:int hashCode() -> hashCode
androidx.work.impl.model.WorkSpec$WorkInfoPojo -> androidx.work.impl.model.WorkSpec$WorkInfoPojo:
    404:404:void <init>() -> <init>
    457:466:boolean equals(java.lang.Object) -> equals
    471:476:int hashCode() -> hashCode
    441:446:androidx.work.WorkInfo toWorkInfo() -> toWorkInfo
androidx.work.impl.model.WorkSpecDao_Impl -> androidx.work.impl.model.WorkSpecDao_Impl:
    52:198:void <init>(androidx.room.RoomDatabase) -> <init>
    221:236:void delete(java.lang.String) -> delete
    1669:1780:java.util.List getAllEligibleWorkSpecsForScheduling(int) -> getAllEligibleWorkSpecsForScheduling
    1552:1663:java.util.List getEligibleWorkForScheduling(int) -> getEligibleWorkForScheduling
    1392:1414:java.util.List getInputsFromPrerequisites(java.lang.String) -> getInputsFromPrerequisites
    2016:2127:java.util.List getRecentlyCompletedWork(long) -> getRecentlyCompletedWork
    1901:2010:java.util.List getRunningWork() -> getRunningWork
    1786:1895:java.util.List getScheduledWork() -> getScheduledWork
    727:749:androidx.work.WorkInfo$State getState(java.lang.String) -> getState
    1446:1466:java.util.List getUnfinishedWorkWithName(java.lang.String) -> getUnfinishedWorkWithName
    386:501:androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String) -> getWorkSpec
    641:667:java.util.List getWorkSpecIdAndStatesForName(java.lang.String) -> getWorkSpecIdAndStatesForName
    1492:1508:boolean hasUnfinishedWork() -> hasUnfinishedWork
    291:307:int incrementWorkSpecRunAttemptCount(java.lang.String) -> incrementWorkSpecRunAttemptCount
    209:216:void insertWorkSpec(androidx.work.impl.model.WorkSpec) -> insertWorkSpec
    333:351:int markWorkSpecScheduled(java.lang.String,long) -> markWorkSpecScheduled
    356:366:int resetScheduledState() -> resetScheduledState
    312:328:int resetWorkSpecRunAttemptCount(java.lang.String) -> resetWorkSpecRunAttemptCount
    241:264:void setOutput(java.lang.String,androidx.work.Data) -> setOutput
    269:286:void setPeriodStartTime(java.lang.String,long) -> setPeriodStartTime
    2132:2162:int setState(androidx.work.WorkInfo$State,java.lang.String[]) -> setState
androidx.work.impl.model.WorkSpecDao_Impl$1 -> androidx.work.impl.model.WorkSpecDao_Impl$1:
    54:54:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
    54:54:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    62:145:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkSpec) -> bind
androidx.work.impl.model.WorkSpecDao_Impl$2 -> androidx.work.impl.model.WorkSpecDao_Impl$2:
    149:149:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$3 -> androidx.work.impl.model.WorkSpecDao_Impl$3:
    156:156:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$4 -> androidx.work.impl.model.WorkSpecDao_Impl$4:
    163:163:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$5 -> androidx.work.impl.model.WorkSpecDao_Impl$5:
    170:170:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$6 -> androidx.work.impl.model.WorkSpecDao_Impl$6:
    177:177:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$7 -> androidx.work.impl.model.WorkSpecDao_Impl$7:
    184:184:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$8 -> androidx.work.impl.model.WorkSpecDao_Impl$8:
    191:191:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkSpecDao_Impl$9 -> androidx.work.impl.model.WorkSpecDao_Impl$9:
    198:198:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase) -> <init>
androidx.work.impl.model.WorkTag -> androidx.work.impl.model.WorkTag:
    52:54:void <init>(java.lang.String,java.lang.String) -> <init>
androidx.work.impl.model.WorkTagDao_Impl -> androidx.work.impl.model.WorkTagDao_Impl:
    21:23:void <init>(androidx.room.RoomDatabase) -> <init>
    86:106:java.util.List getTagsForWorkSpecId(java.lang.String) -> getTagsForWorkSpecId
    47:54:void insert(androidx.work.impl.model.WorkTag) -> insert
androidx.work.impl.model.WorkTagDao_Impl$1 -> androidx.work.impl.model.WorkTagDao_Impl$1:
    23:23:void <init>(androidx.work.impl.model.WorkTagDao_Impl,androidx.room.RoomDatabase) -> <init>
    23:23:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    31:39:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkTag) -> bind
androidx.work.impl.model.WorkTypeConverters -> androidx.work.impl.model.WorkTypeConverters:
    167:175:int backoffPolicyToInt(androidx.work.BackoffPolicy) -> backoffPolicyToInt
    355:384:androidx.work.ContentUriTriggers byteArrayToContentUriTriggers(byte[]) -> byteArrayToContentUriTriggers
    316:344:byte[] contentUriTriggersToByteArray(androidx.work.ContentUriTriggers) -> contentUriTriggersToByteArray
    190:196:androidx.work.BackoffPolicy intToBackoffPolicy(int) -> intToBackoffPolicy
    246:264:androidx.work.NetworkType intToNetworkType(int) -> intToNetworkType
    299:303:androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int) -> intToOutOfQuotaPolicy
    136:154:androidx.work.WorkInfo$State intToState(int) -> intToState
    209:230:int networkTypeToInt(androidx.work.NetworkType) -> networkTypeToInt
    277:283:int outOfQuotaPolicyToInt(androidx.work.OutOfQuotaPolicy) -> outOfQuotaPolicyToInt
    101:121:int stateToInt(androidx.work.WorkInfo$State) -> stateToInt
androidx.work.impl.model.WorkTypeConverters$1 -> androidx.work.impl.model.WorkTypeConverters$1:
    101:277:void <clinit>() -> <clinit>
androidx.work.impl.utils.CancelWorkRunnable -> androidx.work.impl.utils.CancelWorkRunnable:
    47:49:void <init>() -> <init>
    71:77:void cancel(androidx.work.impl.WorkManagerImpl,java.lang.String) -> cancel
    116:116:androidx.work.impl.utils.CancelWorkRunnable forId(java.util.UUID,androidx.work.impl.WorkManagerImpl) -> forId
    176:176:androidx.work.impl.utils.CancelWorkRunnable forName(java.lang.String,androidx.work.impl.WorkManagerImpl,boolean) -> forName
    55:55:androidx.work.Operation getOperation() -> getOperation
    89:102:void iterativelyCancelWorkAndDependents(androidx.work.impl.WorkDatabase,java.lang.String) -> iterativelyCancelWorkAndDependents
    82:85:void reschedulePendingWorkers(androidx.work.impl.WorkManagerImpl) -> reschedulePendingWorkers
    61:64:void run() -> run
androidx.work.impl.utils.CancelWorkRunnable$1 -> androidx.work.impl.utils.CancelWorkRunnable$1:
    116:116:void <init>(androidx.work.impl.WorkManagerImpl,java.util.UUID) -> <init>
    120:128:void runInternal() -> runInternal
androidx.work.impl.utils.CancelWorkRunnable$3 -> androidx.work.impl.utils.CancelWorkRunnable$3:
    176:176:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,boolean) -> <init>
    180:194:void runInternal() -> runInternal
androidx.work.impl.utils.EnqueueRunnable -> androidx.work.impl.utils.EnqueueRunnable:
    72:72:void <clinit>() -> <clinit>
    77:79:void <init>(androidx.work.impl.WorkContinuationImpl) -> <init>
    117:126:boolean addToDatabase() -> addToDatabase
    161:170:boolean enqueueContinuation(androidx.work.impl.WorkContinuationImpl) -> enqueueContinuation
    188:348:boolean enqueueWorkWithPrerequisites(androidx.work.impl.WorkManagerImpl,java.util.List,java.lang.String[],java.lang.String,androidx.work.ExistingWorkPolicy) -> enqueueWorkWithPrerequisites
    108:108:androidx.work.Operation getOperation() -> getOperation
    143:156:boolean processContinuation(androidx.work.impl.WorkContinuationImpl) -> processContinuation
    85:99:void run() -> run
    134:138:void scheduleWorkInBackground() -> scheduleWorkInBackground
    357:375:void tryDelegateConstrainedWorkSpec(androidx.work.impl.model.WorkSpec) -> tryDelegateConstrainedWorkSpec
    388:390:boolean usesScheduler(androidx.work.impl.WorkManagerImpl,java.lang.String) -> usesScheduler
androidx.work.impl.utils.ForceStopRunnable -> androidx.work.impl.utils.ForceStopRunnable:
    75:85:void <clinit>() -> <clinit>
    91:94:void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl) -> <init>
    245:277:boolean cleanUp() -> cleanUp
    215:229:void forceStopRunnable() -> forceStopRunnable
    338:340:android.content.Intent getIntent(android.content.Context) -> getIntent
    329:330:android.app.PendingIntent getPendingIntent(android.content.Context,int) -> getPendingIntent
    167:205:boolean isForceStopped() -> isForceStopped
    297:307:boolean multiProcessChecks() -> multiProcessChecks
    100:152:void run() -> run
    346:356:void setAlarm(android.content.Context) -> setAlarm
    286:286:boolean shouldRescheduleWorkers() -> shouldRescheduleWorkers
    318:318:void sleep(long) -> sleep
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver -> androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver:
    372:372:void <clinit>() -> <clinit>
    371:371:void <init>() -> <init>
    379:384:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.work.impl.utils.IdGenerator -> androidx.work.impl.utils.IdGenerator:
    53:54:void <init>(androidx.work.impl.WorkDatabase) -> <init>
    120:144:void migrateLegacyIdGenerator(android.content.Context,androidx.sqlite.db.SupportSQLiteDatabase) -> migrateLegacyIdGenerator
    76:78:int nextAlarmManagerId() -> nextAlarmManagerId
    89:99:int nextId(java.lang.String) -> nextId
    61:69:int nextJobSchedulerIdWithRange(int,int) -> nextJobSchedulerIdWithRange
    104:104:void update(java.lang.String,int) -> update
androidx.work.impl.utils.PackageManagerHelper -> androidx.work.impl.utils.PackageManagerHelper:
    30:30:void <clinit>() -> <clinit>
    47:58:void setComponentEnabled(android.content.Context,java.lang.Class,boolean) -> setComponentEnabled
androidx.work.impl.utils.PreferenceUtils -> androidx.work.impl.utils.PreferenceUtils:
    50:51:void <init>(androidx.work.impl.WorkDatabase) -> <init>
    96:97:boolean getNeedsReschedule() -> getNeedsReschedule
    119:145:void migrateLegacyPreferences(android.content.Context,androidx.sqlite.db.SupportSQLiteDatabase) -> migrateLegacyPreferences
    104:105:void setNeedsReschedule(boolean) -> setNeedsReschedule
androidx.work.impl.utils.ProcessUtils -> androidx.work.impl.utils.ProcessUtils:
    46:46:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
    75:115:java.lang.String getProcessName(android.content.Context) -> getProcessName
    59:65:boolean isDefaultProcess(android.content.Context,androidx.work.Configuration) -> isDefaultProcess
androidx.work.impl.utils.SerialExecutor -> androidx.work.impl.utils.SerialExecutor:
    35:38:void <init>(java.util.concurrent.Executor) -> <init>
    43:48:void execute(java.lang.Runnable) -> execute
    64:66:boolean hasPendingTasks() -> hasPendingTasks
    53:57:void scheduleNext() -> scheduleNext
androidx.work.impl.utils.SerialExecutor$Task -> androidx.work.impl.utils.SerialExecutor$Task:
    83:85:void <init>(androidx.work.impl.utils.SerialExecutor,java.lang.Runnable) -> <init>
    91:94:void run() -> run
androidx.work.impl.utils.StartWorkRunnable -> androidx.work.impl.utils.StartWorkRunnable:
    38:41:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.WorkerParameters$RuntimeExtras) -> <init>
    46:46:void run() -> run
androidx.work.impl.utils.StopWorkRunnable -> androidx.work.impl.utils.StopWorkRunnable:
    36:36:void <clinit>() -> <clinit>
    45:48:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,boolean) -> <init>
    53:86:void run() -> run
androidx.work.impl.utils.WakeLocks -> androidx.work.impl.utils.WakeLocks:
    40:42:void <clinit>() -> <clinit>
    80:91:void checkWakeLocks() -> checkWakeLocks
    56:65:android.os.PowerManager$WakeLock newWakeLock(android.content.Context,java.lang.String) -> newWakeLock
androidx.work.impl.utils.WorkForegroundRunnable -> androidx.work.impl.utils.WorkForegroundRunnable:
    42:42:void <clinit>() -> <clinit>
    58:65:void <init>(android.content.Context,androidx.work.impl.model.WorkSpec,androidx.work.ListenableWorker,androidx.work.ForegroundUpdater,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    70:70:com.google.common.util.concurrent.ListenableFuture getFuture() -> getFuture
    76:111:void run() -> run
androidx.work.impl.utils.WorkForegroundRunnable$1 -> androidx.work.impl.utils.WorkForegroundRunnable$1:
    82:82:void <init>(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture) -> <init>
    85:85:void run() -> run
androidx.work.impl.utils.WorkForegroundRunnable$2 -> androidx.work.impl.utils.WorkForegroundRunnable$2:
    89:89:void <init>(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture) -> <init>
    93:108:void run() -> run
androidx.work.impl.utils.WorkForegroundUpdater -> androidx.work.impl.utils.WorkForegroundUpdater:
    50:50:void <clinit>() -> <clinit>
    66:70:void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
    80:81:com.google.common.util.concurrent.ListenableFuture setForegroundAsync(android.content.Context,java.util.UUID,androidx.work.ForegroundInfo) -> setForegroundAsync
androidx.work.impl.utils.WorkForegroundUpdater$1 -> androidx.work.impl.utils.WorkForegroundUpdater$1:
    81:81:void <init>(androidx.work.impl.utils.WorkForegroundUpdater,androidx.work.impl.utils.futures.SettableFuture,java.util.UUID,androidx.work.ForegroundInfo,android.content.Context) -> <init>
    85:106:void run() -> run
androidx.work.impl.utils.WorkProgressUpdater -> androidx.work.impl.utils.WorkProgressUpdater:
    48:48:void <clinit>() -> <clinit>
    60:62:void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.utils.taskexecutor.TaskExecutor) -> <init>
androidx.work.impl.utils.WorkTimer -> androidx.work.impl.utils.WorkTimer:
    42:42:void <clinit>() -> <clinit>
    44:67:void <init>() -> <init>
    116:119:void onDestroy() -> onDestroy
    85:93:void startTimer(java.lang.String,long,androidx.work.impl.utils.WorkTimer$TimeLimitExceededListener) -> startTimer
    102:108:void stopTimer(java.lang.String) -> stopTimer
androidx.work.impl.utils.WorkTimer$1 -> androidx.work.impl.utils.WorkTimer$1:
    44:46:void <init>(androidx.work.impl.utils.WorkTimer) -> <init>
    51:53:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.work.impl.utils.WorkTimer$WorkTimerRunnable -> androidx.work.impl.utils.WorkTimer$WorkTimerRunnable:
    153:155:void <init>(androidx.work.impl.utils.WorkTimer,java.lang.String) -> <init>
    160:172:void run() -> run
androidx.work.impl.utils.futures.AbstractFuture -> androidx.work.impl.utils.futures.AbstractFuture:
    70:219:void <clinit>() -> <clinit>
    319:319:void <init>() -> <init>
    1021:1028:void addDoneString(java.lang.StringBuilder) -> addDoneString
    651:666:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    553:606:boolean cancel(boolean) -> cancel
    1184:1185:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    1193:1193:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    958:964:androidx.work.impl.utils.futures.AbstractFuture$Listener clearListeners(androidx.work.impl.utils.futures.AbstractFuture$Listener) -> clearListeners
    869:900:void complete(androidx.work.impl.utils.futures.AbstractFuture) -> complete
    1051:1056:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    360:457:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    470:506:java.lang.Object get() -> get
    513:517:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    798:839:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> getFutureValue
    851:860:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    534:535:boolean isCancelled() -> isCancelled
    528:529:boolean isDone() -> isDone
    1008:1013:java.lang.String pendingToString() -> pendingToString
    937:941:void releaseWaiters() -> releaseWaiters
    174:193:void removeWaiter(androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> removeWaiter
    683:685:boolean set(java.lang.Object) -> set
    708:710:boolean setException(java.lang.Throwable) -> setException
    744:785:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    973:997:java.lang.String toString() -> toString
    1042:1042:java.lang.String userObjectToString(java.lang.Object) -> userObjectToString
androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper -> androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper:
    1064:1064:void <init>() -> <init>
    1064:1064:void <init>(androidx.work.impl.utils.futures.AbstractFuture$1) -> <init>
androidx.work.impl.utils.futures.AbstractFuture$Cancellation -> androidx.work.impl.utils.futures.AbstractFuture$Cancellation:
    245:250:void <clinit>() -> <clinit>
    258:260:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.work.impl.utils.futures.AbstractFuture$Failure -> androidx.work.impl.utils.futures.AbstractFuture$Failure:
    223:223:void <clinit>() -> <clinit>
    233:234:void <init>(java.lang.Throwable) -> <init>
androidx.work.impl.utils.futures.AbstractFuture$Failure$1 -> androidx.work.impl.utils.futures.AbstractFuture$Failure$1:
    225:225:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.work.impl.utils.futures.AbstractFuture$Listener -> androidx.work.impl.utils.futures.AbstractFuture$Listener:
    204:204:void <clinit>() -> <clinit>
    212:214:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper -> androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper:
    1094:1099:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1119:1119:boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener) -> casListeners
    1124:1124:boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1114:1114:boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> casWaiters
    1109:1109:void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> putNext
    1104:1104:void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread) -> putThread
androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$0$6d1cb63ffb0ced1845b531aab3fdf393a481ea5ad89de4d526b7044868c71e65$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.futures.AbstractFuture$SetFuture -> androidx.work.impl.utils.futures.AbstractFuture$SetFuture:
    269:271:void <init>(androidx.work.impl.utils.futures.AbstractFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    276:282:void run() -> run
androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper -> androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper:
    1135:1135:void <init>() -> <init>
    1161:1167:boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener) -> casListeners
    1172:1178:boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1150:1156:boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> casWaiters
    1145:1145:void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> putNext
    1140:1140:void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread) -> putThread
androidx.work.impl.utils.futures.AbstractFuture$Waiter -> androidx.work.impl.utils.futures.AbstractFuture$Waiter:
    124:124:void <clinit>() -> <clinit>
    135:135:void <init>(boolean) -> <init>
    138:140:void <init>() -> <init>
    146:146:void setNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> setNext
    154:157:void unpark() -> unpark
androidx.work.impl.utils.futures.DirectExecutor -> androidx.work.impl.utils.futures.DirectExecutor:
    32:34:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    38:38:void execute(java.lang.Runnable) -> execute
    32:32:androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String) -> valueOf
    32:32:androidx.work.impl.utils.futures.DirectExecutor[] values() -> values
androidx.work.impl.utils.futures.SettableFuture -> androidx.work.impl.utils.futures.SettableFuture:
    64:64:void <init>() -> <init>
    46:46:androidx.work.impl.utils.futures.SettableFuture create() -> create
    51:51:boolean set(java.lang.Object) -> set
    56:56:boolean setException(java.lang.Throwable) -> setException
    61:61:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor -> androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor:
    37:45:void <init>(java.util.concurrent.Executor) -> <init>
    64:64:void executeOnBackgroundThread(java.lang.Runnable) -> executeOnBackgroundThread
    70:70:androidx.work.impl.utils.SerialExecutor getBackgroundExecutor() -> getBackgroundExecutor
    59:59:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
    54:54:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1 -> androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1:
    45:45:void <init>(androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor) -> <init>
    48:48:void execute(java.lang.Runnable) -> execute
androidx.work.impl.workers.CombineContinuationsWorker -> androidx.work.impl.workers.CombineContinuationsWorker:
    36:36:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    41:41:androidx.work.ListenableWorker$Result doWork() -> doWork
androidx.work.impl.workers.ConstraintTrackingWorker -> androidx.work.impl.workers.ConstraintTrackingWorker:
    52:52:void <clinit>() -> <clinit>
    72:76:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    210:210:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor() -> getTaskExecutor
    198:198:androidx.work.impl.WorkDatabase getWorkDatabase() -> getWorkDatabase
    187:187:boolean isRunInForeground() -> isRunInForeground
    233:236:void onAllConstraintsNotMet(java.util.List) -> onAllConstraintsNotMet
    178:181:void onStopped() -> onStopped
    168:168:void setFutureFailed() -> setFutureFailed
    173:173:void setFutureRetry() -> setFutureRetry
    93:161:void setupAndRunConstraintTrackingWork() -> setupAndRunConstraintTrackingWork
    82:88:com.google.common.util.concurrent.ListenableFuture startWork() -> startWork
androidx.work.impl.workers.ConstraintTrackingWorker$1 -> androidx.work.impl.workers.ConstraintTrackingWorker$1:
    82:82:void <init>(androidx.work.impl.workers.ConstraintTrackingWorker) -> <init>
    85:85:void run() -> run
androidx.work.impl.workers.ConstraintTrackingWorker$2 -> androidx.work.impl.workers.ConstraintTrackingWorker$2:
    133:133:void <init>(androidx.work.impl.workers.ConstraintTrackingWorker,com.google.common.util.concurrent.ListenableFuture) -> <init>
    136:142:void run() -> run
androidx.work.impl.workers.DiagnosticsWorker -> androidx.work.impl.workers.DiagnosticsWorker:
    51:51:void <clinit>() -> <clinit>
    54:54:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    60:86:androidx.work.ListenableWorker$Result doWork() -> doWork
    125:130:java.lang.String workSpecRow(androidx.work.impl.model.WorkSpec,java.lang.String,java.lang.Integer,java.lang.String) -> workSpecRow
    96:116:java.lang.String workSpecRows(androidx.work.impl.model.WorkNameDao,androidx.work.impl.model.WorkTagDao,androidx.work.impl.model.SystemIdInfoDao,java.util.List) -> workSpecRows
com.github.chrisbanes.photoview.Compat -> com.github.chrisbanes.photoview.Compat:
    29:29:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    37:37:void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> postOnAnimationJellyBean
com.github.chrisbanes.photoview.CustomGestureDetector -> com.github.chrisbanes.photoview.CustomGestureDetector:
    31:74:void <init>(android.content.Context,com.github.chrisbanes.photoview.OnGestureListener) -> <init>
    27:27:com.github.chrisbanes.photoview.OnGestureListener access$000(com.github.chrisbanes.photoview.CustomGestureDetector) -> access$000
    79:81:float getActiveX(android.view.MotionEvent) -> getActiveX
    87:89:float getActiveY(android.view.MotionEvent) -> getActiveY
    98:98:boolean isDragging() -> isDragging
    94:94:boolean isScaling() -> isScaling
    103:104:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    112:199:boolean processTouchEvent(android.view.MotionEvent) -> processTouchEvent
com.github.chrisbanes.photoview.CustomGestureDetector$1 -> com.github.chrisbanes.photoview.CustomGestureDetector$1:
    50:50:void <init>(com.github.chrisbanes.photoview.CustomGestureDetector) -> <init>
    54:60:boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.github.chrisbanes.photoview.PhotoView -> com.github.chrisbanes.photoview.PhotoView:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:71:com.github.chrisbanes.photoview.PhotoViewAttacher getAttacher() -> getAttacher
    154:154:android.graphics.RectF getDisplayRect() -> getDisplayRect
    81:81:android.graphics.Matrix getImageMatrix() -> getImageMatrix
    182:182:float getMaximumScale() -> getMaximumScale
    178:178:float getMediumScale() -> getMediumScale
    174:174:float getMinimumScale() -> getMinimumScale
    186:186:float getScale() -> getScale
    76:76:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    52:59:void init() -> init
    190:190:void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    130:132:boolean setFrame(int,int,int,int) -> setFrame
    105:108:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    114:116:void setImageResource(int) -> setImageResource
    122:124:void setImageURI(android.net.Uri) -> setImageURI
    202:202:void setMaximumScale(float) -> setMaximumScale
    198:198:void setMediumScale(float) -> setMediumScale
    194:194:void setMinimumScale(float) -> setMinimumScale
    91:91:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    246:246:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    86:86:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    210:210:void setOnMatrixChangeListener(com.github.chrisbanes.photoview.OnMatrixChangedListener) -> setOnMatrixChangeListener
    218:218:void setOnOutsidePhotoTapListener(com.github.chrisbanes.photoview.OnOutsidePhotoTapListener) -> setOnOutsidePhotoTapListener
    214:214:void setOnPhotoTapListener(com.github.chrisbanes.photoview.OnPhotoTapListener) -> setOnPhotoTapListener
    250:250:void setOnScaleChangeListener(com.github.chrisbanes.photoview.OnScaleChangedListener) -> setOnScaleChangeListener
    254:254:void setOnSingleFlingListener(com.github.chrisbanes.photoview.OnSingleFlingListener) -> setOnSingleFlingListener
    226:226:void setOnViewDragListener(com.github.chrisbanes.photoview.OnViewDragListener) -> setOnViewDragListener
    222:222:void setOnViewTapListener(com.github.chrisbanes.photoview.OnViewTapListener) -> setOnViewTapListener
    142:142:void setRotationBy(float) -> setRotationBy
    138:138:void setRotationTo(float) -> setRotationTo
    230:230:void setScale(float) -> setScale
    234:234:void setScale(float,boolean) -> setScale
    96:99:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    242:242:void setZoomTransitionDuration(int) -> setZoomTransitionDuration
    150:150:void setZoomable(boolean) -> setZoomable
com.github.chrisbanes.photoview.PhotoViewAttacher -> com.github.chrisbanes.photoview.PhotoViewAttacher:
    53:186:void <init>(android.widget.ImageView) -> <init>
    39:39:com.github.chrisbanes.photoview.CustomGestureDetector access$000(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$000
    39:39:com.github.chrisbanes.photoview.OnViewDragListener access$100(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$100
    39:39:int access$1000(com.github.chrisbanes.photoview.PhotoViewAttacher,android.widget.ImageView) -> access$1000
    39:39:float access$1100(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1100
    39:39:float access$1200(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1200
    39:39:com.github.chrisbanes.photoview.OnScaleChangedListener access$1300(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1300
    39:39:android.view.View$OnLongClickListener access$1400(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1400
    39:39:com.github.chrisbanes.photoview.OnSingleFlingListener access$1500(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1500
    39:39:float access$1600() -> access$1600
    39:39:int access$1700() -> access$1700
    39:39:android.view.View$OnClickListener access$1800(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1800
    39:39:com.github.chrisbanes.photoview.OnViewTapListener access$1900(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$1900
    39:39:android.graphics.Matrix access$200(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$200
    39:39:com.github.chrisbanes.photoview.OnPhotoTapListener access$2000(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$2000
    39:39:com.github.chrisbanes.photoview.OnOutsidePhotoTapListener access$2100(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$2100
    39:39:com.github.chrisbanes.photoview.OnGestureListener access$2200(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$2200
    39:39:int access$2300(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$2300
    39:39:android.view.animation.Interpolator access$2400(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$2400
    39:39:void access$300(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$300
    39:39:android.widget.ImageView access$400(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$400
    39:39:boolean access$500(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$500
    39:39:boolean access$600(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$600
    39:39:int access$700(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$700
    39:39:com.github.chrisbanes.photoview.PhotoViewAttacher$FlingRunnable access$800(com.github.chrisbanes.photoview.PhotoViewAttacher) -> access$800
    39:39:com.github.chrisbanes.photoview.PhotoViewAttacher$FlingRunnable access$802(com.github.chrisbanes.photoview.PhotoViewAttacher,com.github.chrisbanes.photoview.PhotoViewAttacher$FlingRunnable) -> access$802
    39:39:int access$900(com.github.chrisbanes.photoview.PhotoViewAttacher,android.widget.ImageView) -> access$900
    704:706:void cancelFling() -> cancelFling
    562:563:void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    643:691:boolean checkMatrixBounds() -> checkMatrixBounds
    262:263:android.graphics.RectF getDisplayRect() -> getDisplayRect
    574:579:android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    512:514:android.graphics.Matrix getDrawMatrix() -> getDrawMatrix
    518:518:android.graphics.Matrix getImageMatrix() -> getImageMatrix
    700:700:int getImageViewHeight(android.widget.ImageView) -> getImageViewHeight
    696:696:int getImageViewWidth(android.widget.ImageView) -> getImageViewWidth
    304:304:float getMaximumScale() -> getMaximumScale
    300:300:float getMediumScale() -> getMediumScale
    296:296:float getMinimumScale() -> getMinimumScale
    308:309:float getScale() -> getScale
    313:313:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    533:534:float getValue(android.graphics.Matrix,int) -> getValue
    321:321:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    328:372:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    541:544:void resetMatrix() -> resetMatrix
    381:381:void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    548:553:void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    395:396:void setMaximumScale(float) -> setMaximumScale
    390:391:void setMediumScale(float) -> setMediumScale
    385:386:void setMinimumScale(float) -> setMinimumScale
    411:411:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    245:245:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    407:407:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    415:415:void setOnMatrixChangeListener(com.github.chrisbanes.photoview.OnMatrixChangedListener) -> setOnMatrixChangeListener
    423:423:void setOnOutsidePhotoTapListener(com.github.chrisbanes.photoview.OnOutsidePhotoTapListener) -> setOnOutsidePhotoTapListener
    419:419:void setOnPhotoTapListener(com.github.chrisbanes.photoview.OnPhotoTapListener) -> setOnPhotoTapListener
    249:249:void setOnScaleChangeListener(com.github.chrisbanes.photoview.OnScaleChangedListener) -> setOnScaleChangeListener
    253:253:void setOnSingleFlingListener(com.github.chrisbanes.photoview.OnSingleFlingListener) -> setOnSingleFlingListener
    431:431:void setOnViewDragListener(com.github.chrisbanes.photoview.OnViewDragListener) -> setOnViewDragListener
    427:427:void setOnViewTapListener(com.github.chrisbanes.photoview.OnViewTapListener) -> setOnViewTapListener
    291:292:void setRotationBy(float) -> setRotationBy
    286:287:void setRotationTo(float) -> setRotationTo
    435:435:void setScale(float) -> setScale
    439:441:void setScale(float,boolean) -> setScale
    448:456:void setScale(float,float,float,boolean) -> setScale
    470:472:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    522:522:void setZoomTransitionDuration(int) -> setZoomTransitionDuration
    481:482:void setZoomable(boolean) -> setZoomable
    486:491:void update() -> update
    593:639:void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
com.github.chrisbanes.photoview.PhotoViewAttacher$1 -> com.github.chrisbanes.photoview.PhotoViewAttacher$1:
    93:93:void <init>(com.github.chrisbanes.photoview.PhotoViewAttacher) -> <init>
    96:125:void onDrag(float,float) -> onDrag
    132:135:void onFling(float,float,float,float) -> onFling
    140:145:void onScale(float,float,float) -> onScale
com.github.chrisbanes.photoview.PhotoViewAttacher$2 -> com.github.chrisbanes.photoview.PhotoViewAttacher$2:
    160:160:void <init>(com.github.chrisbanes.photoview.PhotoViewAttacher) -> <init>
    173:181:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    165:166:void onLongPress(android.view.MotionEvent) -> onLongPress
com.github.chrisbanes.photoview.PhotoViewAttacher$3 -> com.github.chrisbanes.photoview.PhotoViewAttacher$3:
    186:186:void <init>(com.github.chrisbanes.photoview.PhotoViewAttacher) -> <init>
    220:228:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    189:210:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.github.chrisbanes.photoview.PhotoViewAttacher$4 -> com.github.chrisbanes.photoview.PhotoViewAttacher$4:
    622:622:void <clinit>() -> <clinit>
com.github.chrisbanes.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> com.github.chrisbanes.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    717:722:void <init>(com.github.chrisbanes.photoview.PhotoViewAttacher,float,float,float,float) -> <init>
    738:740:float interpolate() -> interpolate
    727:733:void run() -> run
com.github.chrisbanes.photoview.PhotoViewAttacher$FlingRunnable -> com.github.chrisbanes.photoview.PhotoViewAttacher$FlingRunnable:
    750:751:void <init>(com.github.chrisbanes.photoview.PhotoViewAttacher,android.content.Context) -> <init>
    755:755:void cancelFling() -> cancelFling
    760:783:void fling(int,int,int,int) -> fling
    790:801:void run() -> run
com.github.chrisbanes.photoview.Util -> com.github.chrisbanes.photoview.Util:
    11:14:void checkZoomLevels(float,float,float) -> checkZoomLevels
    20:20:boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    27:29:boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
com.github.chrisbanes.photoview.Util$1 -> com.github.chrisbanes.photoview.Util$1:
    27:27:void <clinit>() -> <clinit>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    37:44:void <clinit>() -> <clinit>
    53:53:int lerp(int,int,float) -> lerp
    73:73:float lerp(float,float,float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    39:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    29:29:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    38:38:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:64:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    36:36:void <clinit>() -> <clinit>
    39:42:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    49:49:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    63:63:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    28:31:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:36:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    26:29:void <init>() -> <init>
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    66:71:void <init>() -> <init>
    215:220:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    175:178:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:200:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:209:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    229:235:boolean equals(java.lang.Object) -> equals
    84:87:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    161:163:long getTotalDuration() -> getTotalDuration
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:123:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:92:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    33:41:void <init>(long,long) -> <init>
    35:47:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:56:void apply(android.animation.Animator) -> apply
    83:87:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    119:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:108:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:146:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:37:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    179:179:void <clinit>() -> <clinit>
    136:136:android.graphics.drawable.Drawable access$000(com.google.android.material.appbar.AppBarLayout) -> access$000
    136:136:java.util.List access$100(com.google.android.material.appbar.AppBarLayout) -> access$100
    633:633:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1020:1023:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    419:426:void draw(android.graphics.Canvas) -> draw
    432:438:void drawableStateChanged() -> drawableStateChanged
    1002:1016:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    136:136:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    136:136:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    638:638:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    136:136:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    136:136:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    136:136:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    136:136:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    643:643:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    648:653:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    581:581:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    720:758:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    763:794:int getDownNestedScrollRange() -> getDownNestedScrollRange
    988:988:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    817:834:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    1050:1050:int getPendingAction() -> getPendingAction
    414:414:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    1059:1059:int getTopInset() -> getTopInset
    673:706:int getTotalScrollRange() -> getTotalScrollRange
    715:715:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    664:664:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    532:533:boolean hasCollapsibleChild() -> hasCollapsibleChild
    710:710:boolean hasScrollableChildren() -> hasScrollableChildren
    547:558:void invalidateScrollRanges() -> invalidateScrollRanges
    969:969:boolean isLiftOnScroll() -> isLiftOnScroll
    573:575:void onAttachedToWindow() -> onAttachedToWindow
    839:855:int[] onCreateDrawableState(int) -> onCreateDrawableState
    658:660:void onDetachedFromWindow() -> onDetachedFromWindow
    489:519:void onLayout(boolean,int,int,int,int) -> onLayout
    459:484:void onMeasure(int,int) -> onMeasure
    798:810:void onOffsetChanged(int) -> onOffsetChanged
    1054:1054:void resetPendingAction() -> resetPendingAction
    588:590:void setElevation(float) -> setElevation
    605:605:void setExpanded(boolean) -> setExpanded
    620:620:void setExpanded(boolean,boolean) -> setExpanded
    627:628:void setExpanded(boolean,boolean,boolean) -> setExpanded
    964:964:void setLiftOnScroll(boolean) -> setLiftOnScroll
    977:979:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    880:880:void setLiftableOverrideEnabled(boolean) -> setLiftableOverrideEnabled
    885:887:boolean setLiftableState(boolean) -> setLiftableState
    908:908:boolean setLiftedState(boolean) -> setLiftedState
    913:917:boolean setLiftedState(boolean,boolean) -> setLiftedState
    565:568:void setOrientation(int) -> setOrientation
    362:376:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    390:390:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    403:403:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    1036:1036:void setTargetElevation(float) -> setTargetElevation
    449:453:void setVisibility(int) -> setVisibility
    528:528:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    992:997:boolean shouldLift(android.view.View) -> shouldLift
    1067:1069:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    926:952:void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> startLiftOnScrollElevationOverlayAnimation
    524:524:void updateWillNotDraw() -> updateWillNotDraw
    444:444:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$2 -> com.google.android.material.appbar.AppBarLayout$2:
    939:939:void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    942:948:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    1375:1375:void <init>() -> <init>
    1378:1378:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1345:1345:boolean access$200(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$200
    1345:1345:int access$300(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$300
    1803:1841:boolean addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> addAccessibilityScrollActions
    1853:1853:void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean) -> addActionToExpand
    1504:1515:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1523:1548:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1627:1627:int calculateSnapOffset(int,int,int) -> calculateSnapOffset
    1345:1345:boolean canDragView(android.view.View) -> canDragView
    1874:1879:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1412:1413:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1785:1789:boolean childrenHaveScrollFlags(com.google.android.material.appbar.AppBarLayout) -> childrenHaveScrollFlags
    2104:2106:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    2092:2095:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1552:1561:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1771:1777:android.view.View getChildWithScrollingBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout) -> getChildWithScrollingBehavior
    1345:1345:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1897:1897:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1345:1345:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1902:1902:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    2117:2117:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1979:2013:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1345:1345:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1889:1891:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1345:1345:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1666:1727:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1345:1345:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1643:1659:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1345:1345:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1430:1442:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1345:1345:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1461:1467:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1345:1345:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2130:2135:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1345:1345:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2122:2123:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1345:1345:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1393:1404:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1345:1345:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1478:1487:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    2164:2165:void restoreScrollState(com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState,boolean) -> restoreScrollState
    2141:2156:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState saveScrollState(android.os.Parcelable,com.google.android.material.appbar.AppBarLayout) -> saveScrollState
    1345:1345:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1912:1969:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    2075:2083:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1572:1621:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1733:1766:void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> updateAccessibilityActions
    2032:2068:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1535:1535:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1538:1539:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$2:
    1754:1754:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> <init>
    1758:1760:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
    1822:1822:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> <init>
    1825:1825:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$4 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$4:
    1857:1857:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean) -> <init>
    1860:1860:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    2200:2200:void <clinit>() -> <clinit>
    2178:2183:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2187:2187:void <init>(android.os.Parcelable) -> <init>
    2192:2197:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    2201:2201:void <init>() -> <init>
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2205:2205:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2211:2211:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object[] newArray(int) -> newArray
    2217:2217:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1332:1332:void <init>() -> <init>
    1336:1336:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1326:1326:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1326:1326:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1326:1326:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1326:1326:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1326:1326:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1326:1326:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1326:1326:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1326:1326:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1326:1326:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1326:1326:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1326:1326:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1326:1326:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$ChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$ChildScrollEffect:
    2371:2371:void <init>() -> <init>
com.google.android.material.appbar.AppBarLayout$CompressChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$CompressChildScrollEffect:
    2391:2400:void <init>() -> <init>
    2412:2445:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,android.view.View,float) -> onOffsetChanged
    2403:2406:void updateRelativeRect(android.graphics.Rect,com.google.android.material.appbar.AppBarLayout,android.view.View) -> updateRelativeRect
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    1171:1203:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1171:1207:void <init>(int,int) -> <init>
    1171:1215:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1171:1219:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1171:1225:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1266:1266:com.google.android.material.appbar.AppBarLayout$ChildScrollEffect createScrollEffectFromInt(int) -> createScrollEffectFromInt
    1277:1277:com.google.android.material.appbar.AppBarLayout$ChildScrollEffect getScrollEffect() -> getScrollEffect
    1259:1259:int getScrollFlags() -> getScrollFlags
    1311:1311:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1316:1316:boolean isCollapsible() -> isCollapsible
    1287:1287:void setScrollEffect(com.google.android.material.appbar.AppBarLayout$ChildScrollEffect) -> setScrollEffect
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    2229:2229:void <init>() -> <init>
    2232:2238:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2227:2227:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    2339:2342:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    2329:2331:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    2307:2311:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2350:2353:int getScrollRange(android.view.View) -> getScrollRange
    2244:2244:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2291:2301:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    2250:2251:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2258:2261:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2227:2227:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2227:2227:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2271:2282:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2358:2361:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    45:50:void <init>() -> <init>
    45:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    254:255:void ensureVelocityTracker() -> ensureVelocityTracker
    202:226:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    246:246:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    250:250:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    183:183:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    59:102:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    112:154:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    188:191:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    158:158:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    164:173:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    263:265:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    270:276:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    41:47:void <init>() -> <init>
    41:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:168:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    204:204:int getOverlayTop() -> getOverlayTop
    179:179:int getScrollRange(android.view.View) -> getScrollRange
    186:186:int getVerticalLayoutGap() -> getVerticalLayoutGap
    113:153:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:99:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    196:196:void setOverlayTop(int) -> setOverlayTop
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    72:74:void <clinit>() -> <clinit>
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    163:180:android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView) -> calculateTitleBoundLimits
    227:227:android.widget.ImageView$ScaleType getLogoScaleType() -> getLogoScaleType
    297:297:java.lang.Integer getNavigationIconTint() -> getNavigationIconTint
    349:359:void initBackground(android.content.Context) -> initBackground
    185:204:void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair) -> layoutTitleCenteredHorizontally
    139:157:void maybeCenterTitleViews() -> maybeCenterTitleViews
    364:366:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    257:259:void onAttachedToWindow() -> onAttachedToWindow
    132:135:void onLayout(boolean,int,int,int,int) -> onLayout
    265:267:void setElevation(float) -> setElevation
    249:251:void setLogoAdjustViewBounds(boolean) -> setLogoAdjustViewBounds
    232:234:void setLogoScaleType(android.widget.ImageView$ScaleType) -> setLogoScaleType
    272:272:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    281:285:void setNavigationIconTint(int) -> setNavigationIconTint
    332:334:void setSubtitleCentered(boolean) -> setSubtitleCentered
    308:310:void setTitleCentered(boolean) -> setTitleCentered
    208:215:void updateLogoImageView() -> updateLogoImageView
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    30:33:void <init>() -> <init>
    30:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    66:66:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:57:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    70:73:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    37:41:void <init>(android.view.View) -> <init>
    51:52:void applyOffsets() -> applyOffsets
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    46:47:void onViewLayout() -> onViewLayout
    77:79:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:64:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    36:36:void <clinit>() -> <clinit>
    62:79:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    47:52:void <init>() -> <init>
    47:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    196:200:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    153:153:boolean isScrolledDown() -> isScrolledDown
    112:112:boolean isScrolledUp() -> isScrolledUp
    62:64:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    104:106:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    74:77:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    161:161:void slideDown(android.view.View) -> slideDown
    171:188:void slideDown(android.view.View,boolean) -> slideDown
    120:120:void slideUp(android.view.View) -> slideUp
    130:147:void slideUp(android.view.View,boolean) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    201:201:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    204:204:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    43:231:void <init>() -> <init>
    439:439:float clamp(float,float,float) -> clamp
    443:443:int clamp(int,int,int) -> clamp
    379:383:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    190:207:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    178:182:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    214:215:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    160:160:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    117:117:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    151:151:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    133:133:void setSwipeDirection(int) -> setSwipeDirection
    409:411:void updateAccessibilityActions(android.view.View) -> updateAccessibilityActions
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    232:236:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    326:351:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    356:356:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    320:320:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    247:254:void onViewCaptured(android.view.View,int) -> onViewCaptured
    260:261:void onViewDragStateChanged(int) -> onViewDragStateChanged
    361:373:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    268:288:void onViewReleased(android.view.View,float,float) -> onViewReleased
    295:312:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    241:242:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$2 -> com.google.android.material.behavior.SwipeDismissBehavior$2:
    415:415:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    418:428:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    391:393:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    398:402:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    113:113:void <clinit>() -> <clinit>
    111:111:boolean access$002(com.google.android.material.bottomappbar.BottomAppBar,boolean) -> access$002
    111:111:void access$1300(com.google.android.material.bottomappbar.BottomAppBar) -> access$1300
    111:111:void access$1500(com.google.android.material.bottomappbar.BottomAppBar) -> access$1500
    111:111:void access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> access$1600
    111:111:android.animation.Animator access$1702(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$1702
    111:111:float access$1800(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1800
    111:111:android.animation.Animator access$1902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$1902
    111:111:int access$2000(com.google.android.material.bottomappbar.BottomAppBar) -> access$2000
    111:111:void access$2100(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> access$2100
    111:111:com.google.android.material.floatingactionbutton.FloatingActionButton access$2200(com.google.android.material.bottomappbar.BottomAppBar) -> access$2200
    111:111:float access$2300(com.google.android.material.bottomappbar.BottomAppBar) -> access$2300
    111:111:int access$2700(com.google.android.material.bottomappbar.BottomAppBar) -> access$2700
    111:111:int access$2800(com.google.android.material.bottomappbar.BottomAppBar) -> access$2800
    111:111:int access$2900(com.google.android.material.bottomappbar.BottomAppBar) -> access$2900
    111:111:int access$3000(com.google.android.material.bottomappbar.BottomAppBar) -> access$3000
    111:111:android.view.View access$3100(com.google.android.material.bottomappbar.BottomAppBar) -> access$3100
    111:111:void access$3200(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$3200
    1003:1017:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    939:943:void cancelAnimations() -> cancelAnimations
    690:698:void createFabDefaultXAnimation(int,java.util.List) -> createFabDefaultXAnimation
    717:719:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    781:825:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    588:591:void dispatchAnimationEnd() -> dispatchAnimationEnd
    579:582:void dispatchAnimationStart() -> dispatchAnimationStart
    655:656:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    661:668:android.view.View findDependentView() -> findDependentView
    850:853:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    912:932:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    426:426:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    111:111:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1045:1048:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    1021:1021:int getBottomInset() -> getBottomInset
    466:466:float getCradleVerticalOffset() -> getCradleVerticalOffset
    365:365:int getFabAlignmentMode() -> getFabAlignmentMode
    406:406:int getFabAnimationMode() -> getFabAnimationMode
    433:433:float getFabCradleMargin() -> getFabCradleMargin
    449:449:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    834:838:float getFabTranslationX(int) -> getFabTranslationX
    845:845:float getFabTranslationX() -> getFabTranslationX
    830:830:float getFabTranslationY() -> getFabTranslationY
    488:488:boolean getHideOnScroll() -> getHideOnScroll
    1029:1029:int getLeftInset() -> getLeftInset
    1025:1025:int getRightInset() -> getRightInset
    967:968:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    677:678:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    734:773:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    618:650:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    724:726:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    1053:1060:void onAttachedToWindow() -> onAttachedToWindow
    949:962:void onLayout(boolean,int,int,int,int) -> onLayout
    1221:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1212:1215:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    557:559:void replaceMenu(int) -> replaceMenu
    983:991:void setActionMenuViewPosition() -> setActionMenuViewPosition
    421:421:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    475:478:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    973:978:void setCutoutState() -> setCutoutState
    542:546:void setElevation(float) -> setElevation
    376:376:void setFabAlignmentMode(int) -> setFabAlignmentMode
    393:397:void setFabAlignmentModeAndReplaceMenu(int,int) -> setFabAlignmentModeAndReplaceMenu
    417:417:void setFabAnimationMode(int) -> setFabAnimationMode
    611:613:void setFabCornerSize(float) -> setFabCornerSize
    440:442:void setFabCradleMargin(float) -> setFabCradleMargin
    454:456:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    601:603:boolean setFabDiameter(int) -> setFabDiameter
    497:497:void setHideOnScroll(boolean) -> setHideOnScroll
    342:342:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    351:355:void setNavigationIconTint(int) -> setNavigationIconTint
    864:864:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
    882:894:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    638:638:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    646:647:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    641:641:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
    699:699:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    702:703:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
com.google.android.material.bottomappbar.BottomAppBar$5$1 -> com.google.android.material.bottomappbar.BottomAppBar$5$1:
    704:704:void <init>(com.google.android.material.bottomappbar.BottomAppBar$5) -> <init>
    707:707:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
    760:760:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    768:770:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    763:763:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
    800:800:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    805:805:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    810:813:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
    882:882:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    885:886:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar$9 -> com.google.android.material.bottomappbar.BottomAppBar$9:
    1005:1005:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    1008:1013:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    1076:1140:void <init>() -> <init>
    1076:1145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1068:1068:java.lang.ref.WeakReference access$2400(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2400
    1068:1068:android.graphics.Rect access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2500
    1068:1068:int access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2600
    1068:1068:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1151:1191:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    1068:1068:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1203:1204:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
    1077:1077:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    1089:1133:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    1252:1252:void <clinit>() -> <clinit>
    1236:1236:void <init>(android.os.Parcelable) -> <init>
    1240:1242:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1247:1249:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    1253:1253:void <init>() -> <init>
    1253:1253:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1253:1253:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1257:1257:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1263:1263:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1253:1253:java.lang.Object[] newArray(int) -> newArray
    1269:1269:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    223:223:float getCradleVerticalOffset() -> getCradleVerticalOffset
    74:179:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    255:255:float getFabCornerRadius() -> getFabCornerRadius
    239:239:float getFabCradleMargin() -> getFabCradleMargin
    247:247:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    189:189:float getFabDiameter() -> getFabDiameter
    233:235:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    259:259:void setFabCornerSize(float) -> setFabCornerSize
    243:243:void setFabCradleMargin(float) -> setFabCradleMargin
    251:251:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    199:199:void setFabDiameter(float) -> setFabDiameter
    204:204:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    263:263:void <clinit>() -> <clinit>
    203:1591:void <init>() -> <init>
    203:1591:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    86:86:void access$100(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int,boolean) -> access$100
    86:86:boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1000
    86:86:int access$1102(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$1102
    86:86:void access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> access$1200
    86:86:boolean access$1300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1300
    86:86:boolean access$1400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1400
    86:86:int access$1700(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1700
    86:86:boolean access$1800(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1800
    86:86:com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    86:86:int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$302
    86:86:boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    86:86:int access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    86:86:int access$502(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$502
    86:86:boolean access$600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$600
    86:86:boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$700
    86:86:boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$800
    86:86:boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$900
    2108:2111:int addAccessibilityActionForState(android.view.View,int,int) -> addAccessibilityActionForState
    1346:1351:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1356:1356:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1333:1342:int calculatePeekHeight() -> calculatePeekHeight
    2115:2115:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    1425:1438:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    1447:1449:void createShapeValueAnimator() -> createShapeValueAnimator
    1751:1758:void dispatchOnSlide(int) -> dispatchOnSlide
    1403:1409:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    481:494:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    1054:1056:int getExpandedOffset() -> getExpandedOffset
    1578:1588:int getTopOffsetForState(int) -> getTopOffsetForState
    1551:1555:float getYVelocity() -> getYVelocity
    1262:1262:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    1241:1242:boolean isLayouting(android.view.View) -> isLayouting
    431:435:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    440:443:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    579:636:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    502:571:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    454:475:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    836:839:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    696:737:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    415:425:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    409:409:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    678:679:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    746:811:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    642:667:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2102:2103:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    1360:1363:void reset() -> reset
    1368:1383:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    1233:1236:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    1118:1118:void setDraggable(boolean) -> setDraggable
    1041:1043:void setExpandedOffset(int) -> setExpandedOffset
    862:875:void setFitToContents(boolean) -> setFitToContents
    1255:1255:void setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    1008:1014:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    1066:1072:void setHideable(boolean) -> setHideable
    911:911:void setMaxHeight(int) -> setMaxHeight
    888:888:void setMaxWidth(int) -> setMaxWidth
    934:934:void setPeekHeight(int) -> setPeekHeight
    950:962:void setPeekHeight(int,boolean) -> setPeekHeight
    1134:1134:void setSaveFlags(int) -> setSaveFlags
    1095:1095:void setSkipCollapsed(boolean) -> setSkipCollapsed
    1198:1221:void setState(int) -> setState
    1277:1307:void setStateInternal(int) -> setStateInternal
    1464:1477:void setWindowInsetsListener(android.view.View) -> setWindowInsetsListener
    1421:1421:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    1388:1397:boolean shouldHide(android.view.View,float) -> shouldHide
    1559:1571:void startSettling(android.view.View,int,boolean) -> startSettling
    2048:2092:void updateAccessibilityActions() -> updateAccessibilityActions
    1317:1326:void updateDrawableForTargetState(int) -> updateDrawableForTargetState
    1993:2043:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
    967:975:void updatePeekHeight(boolean) -> updatePeekHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
    1223:1223:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1226:1226:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    1450:1450:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1453:1455:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    1479:1479:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> <init>
    1484:1543:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    1592:1592:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1737:1737:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1731:1732:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1742:1745:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1623:1624:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1618:1618:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1637:1726:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1630:1630:boolean releasedLow(android.view.View) -> releasedLow
    1598:1612:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$5 -> com.google.android.material.bottomsheet.BottomSheetBehavior$5:
    2115:2115:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    2118:2118:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
    89:89:void <init>() -> <init>
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    1937:1937:void <clinit>() -> <clinit>
    1895:1901:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1905:1910:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1929:1934:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    1938:1938:void <init>() -> <init>
    1938:1938:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1938:1938:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1942:1942:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1948:1948:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1938:1938:java.lang.Object[] newArray(int) -> newArray
    1954:1954:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker:
    1852:1856:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1852:1852:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,com.google.android.material.bottomsheet.BottomSheetBehavior$1) -> <init>
    1852:1852:boolean access$1502(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker,boolean) -> access$1502
    1852:1852:int access$1600(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> access$1600
    1871:1877:void continueSettlingToState(int) -> continueSettlingToState
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1:
    1857:1857:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> <init>
    1860:1864:void run() -> run
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    129:194:void <clinit>() -> <clinit>
    219:219:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    197:253:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    259:259:java.lang.String getA11yClassName() -> getA11yClassName
    533:545:android.text.Layout$Alignment getActualTextAlignment() -> getActualTextAlignment
    381:381:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    392:392:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1043:1043:int getCornerRadius() -> getCornerRadius
    508:517:android.text.Layout$Alignment getGravityTextAlignment() -> getGravityTextAlignment
    751:751:android.graphics.drawable.Drawable getIcon() -> getIcon
    1055:1055:int getIconGravity() -> getIconGravity
    676:676:int getIconPadding() -> getIconPadding
    706:706:int getIconSize() -> getIconSize
    790:790:android.content.res.ColorStateList getIconTint() -> getIconTint
    815:815:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    1090:1090:int getInsetBottom() -> getInsetBottom
    1110:1110:int getInsetTop() -> getInsetTop
    917:917:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1245:1248:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    959:959:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1002:1002:int getStrokeWidth() -> getStrokeWidth
    326:332:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    364:369:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    624:635:int getTextHeight() -> getTextHeight
    612:620:int getTextWidth() -> getTextWidth
    1204:1204:boolean isCheckable() -> isCheckable
    1182:1182:boolean isChecked() -> isChecked
    872:872:boolean isIconEnd() -> isIconEnd
    868:868:boolean isIconStart() -> isIconStart
    876:876:boolean isIconTop() -> isIconTop
    639:639:boolean isLayoutRTL() -> isLayoutRTL
    1271:1271:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    462:466:void onAttachedToWindow() -> onAttachedToWindow
    1115:1122:int[] onCreateDrawableState(int) -> onCreateDrawableState
    273:275:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    264:268:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    446:451:void onLayout(boolean,int,int,int,int) -> onLayout
    289:295:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    281:283:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    456:457:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    1192:1194:boolean performClick() -> performClick
    481:488:void refreshDrawableState() -> refreshDrawableState
    858:863:void resetIconDrawable() -> resetIconDrawable
    408:408:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    397:402:void setBackgroundColor(int) -> setBackgroundColor
    422:440:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    415:417:void setBackgroundResource(int) -> setBackgroundResource
    375:375:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    386:386:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1214:1215:void setCheckable(boolean) -> setCheckable
    1158:1176:void setChecked(boolean) -> setChecked
    1014:1015:void setCornerRadius(int) -> setCornerRadius
    1028:1029:void setCornerRadiusResource(int) -> setCornerRadiusResource
    473:475:void setElevation(float) -> setElevation
    719:722:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1066:1068:void setIconGravity(int) -> setIconGravity
    661:663:void setIconPadding(int) -> setIconPadding
    737:739:void setIconResource(int) -> setIconResource
    688:693:void setIconSize(int) -> setIconSize
    763:765:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    801:803:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    778:778:void setIconTintResource(int) -> setIconTintResource
    1079:1079:void setInsetBottom(int) -> setInsetBottom
    1099:1099:void setInsetTop(int) -> setInsetTop
    650:650:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1259:1259:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1264:1267:void setPressed(boolean) -> setPressed
    888:889:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    902:903:void setRippleColorResource(int) -> setRippleColorResource
    1226:1229:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1275:1276:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    930:931:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    945:946:void setStrokeColorResource(int) -> setStrokeColorResource
    972:973:void setStrokeWidth(int) -> setStrokeWidth
    987:988:void setStrokeWidthResource(int) -> setStrokeWidthResource
    307:312:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    345:350:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    496:497:void setTextAlignment(int) -> setTextAlignment
    1187:1187:void toggle() -> toggle
    823:853:void updateIcon(boolean) -> updateIcon
    550:606:void updateIconPosition(int,int) -> updateIconPosition
com.google.android.material.button.MaterialButton$SavedState -> com.google.android.material.button.MaterialButton$SavedState:
    1306:1306:void <clinit>() -> <clinit>
    1285:1285:void <init>(android.os.Parcelable) -> <init>
    1289:1293:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1303:1303:void readFromParcel(android.os.Parcel) -> readFromParcel
    1298:1299:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.button.MaterialButton$SavedState$1 -> com.google.android.material.button.MaterialButton$SavedState$1:
    1307:1307:void <init>() -> <init>
    1307:1307:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1307:1307:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1311:1311:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1317:1317:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1307:1307:java.lang.Object[] newArray(int) -> newArray
    1323:1323:com.google.android.material.button.MaterialButton$SavedState[] newArray(int) -> newArray
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    55:57:void <clinit>() -> <clinit>
    75:84:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    208:244:android.graphics.drawable.Drawable createBackground() -> createBackground
    329:329:int getCornerRadius() -> getCornerRadius
    422:422:int getInsetBottom() -> getInsetBottom
    452:452:int getInsetTop() -> getInsetTop
    395:401:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    334:342:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    351:351:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    276:276:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    414:414:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    288:288:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    299:299:int getStrokeWidth() -> getStrokeWidth
    181:181:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    194:194:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    364:364:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    163:163:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    359:359:boolean isCheckable() -> isCheckable
    88:133:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    255:256:void setBackgroundColor(int) -> setBackgroundColor
    155:159:void setBackgroundOverwritten() -> setBackgroundOverwritten
    355:355:void setCheckable(boolean) -> setCheckable
    320:324:void setCornerRadius(int) -> setCornerRadius
    418:418:void setInsetBottom(int) -> setInsetBottom
    426:426:void setInsetTop(int) -> setInsetTop
    261:269:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    408:409:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    198:199:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    280:282:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    292:294:void setStrokeWidth(int) -> setStrokeWidth
    172:175:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    185:188:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    431:443:void setVerticalInsets(int,int) -> setVerticalInsets
    142:145:void updateBackground() -> updateBackground
    370:388:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    249:250:void updateMaskBounds(int,int) -> updateMaskBounds
    303:311:void updateStroke() -> updateStroke
    168:168:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
    142:143:void <clinit>() -> <clinit>
    184:184:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    146:206:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    125:125:int access$100(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View) -> access$100
    406:406:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    229:252:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    500:528:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    732:737:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    665:683:void checkInternal(int,boolean) -> checkInternal
    349:349:void clearChecked() -> clearChecked
    219:220:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    700:701:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    368:368:int getCheckedButtonId() -> getCheckedButtonId
    385:389:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    532:532:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    746:751:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    575:577:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    612:620:int getIndexWithinVisibleButtons(android.view.View) -> getIndexWithinVisibleButtons
    586:588:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    630:643:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    603:604:int getVisibleButtonCount() -> getVisibleButtonCount
    597:598:boolean isChildVisible(int) -> isChildVisible
    431:431:boolean isSingleSelection() -> isSingleSelection
    766:769:void onButtonCheckedStateChanged(com.google.android.material.button.MaterialButton,boolean) -> onButtonCheckedStateChanged
    211:213:void onFinishInflate() -> onFinishInflate
    298:305:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    290:293:void onMeasure(int,int) -> onMeasure
    273:285:void onViewRemoved(android.view.View) -> onViewRemoved
    536:551:void resetChildMargins(int) -> resetChildMargins
    480:484:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    707:708:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    455:455:void setSelectionRequired(boolean) -> setSelectionRequired
    443:445:void setSingleSelection(boolean) -> setSingleSelection
    476:476:void setSingleSelection(int) -> setSingleSelection
    720:727:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    652:660:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    687:696:void updateCheckedIds(java.util.Set) -> updateCheckedIds
    755:761:void updateChildOrder() -> updateChildOrder
    557:570:void updateChildShapes() -> updateChildShapes
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
    152:152:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    152:152:int compare(java.lang.Object,java.lang.Object) -> compare
    155:166:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$2 -> com.google.android.material.button.MaterialButtonToggleGroup$2:
    254:254:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    258:266:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
    782:782:void <clinit>() -> <clinit>
    790:794:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    824:824:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    804:804:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    809:809:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    814:814:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    799:799:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    819:819:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
    772:772:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    772:772:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    776:776:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    58:61:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    93:97:void <clinit>() -> <clinit>
    160:160:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    151:185:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:80:float access$001(com.google.android.material.card.MaterialCardView) -> access$001
    680:681:void forceRippleRedrawIfNeeded() -> forceRippleRedrawIfNeeded
    655:656:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    336:336:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    358:358:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    270:270:float getCardViewRadius() -> getCardViewRadius
    559:559:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    694:694:int getCheckedIconGravity() -> getCheckedIconGravity
    633:633:int getCheckedIconMargin() -> getCheckedIconMargin
    606:606:int getCheckedIconSize() -> getCheckedIconSize
    590:590:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    320:320:int getContentPaddingBottom() -> getContentPaddingBottom
    305:305:int getContentPaddingLeft() -> getContentPaddingLeft
    315:315:int getContentPaddingRight() -> getContentPaddingRight
    310:310:int getContentPaddingTop() -> getContentPaddingTop
    291:291:float getProgress() -> getProgress
    266:266:float getRadius() -> getRadius
    548:548:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    676:676:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    233:233:int getStrokeColor() -> getStrokeColor
    239:239:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    255:255:int getStrokeWidth() -> getStrokeWidth
    461:461:boolean isCheckable() -> isCheckable
    426:426:boolean isChecked() -> isChecked
    451:451:boolean isDragged() -> isDragged
    371:373:void onAttachedToWindow() -> onAttachedToWindow
    489:499:int[] onCreateDrawableState(int) -> onCreateDrawableState
    199:201:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    190:194:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    206:207:void onMeasure(int,int) -> onMeasure
    300:300:void setAncestorContentPadding(int,int,int,int) -> setAncestorContentPadding
    404:404:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    409:414:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    421:421:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    325:325:void setCardBackgroundColor(int) -> setCardBackgroundColor
    330:330:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    378:379:void setCardElevation(float) -> setCardElevation
    347:347:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    471:471:void setCheckable(boolean) -> setCheckable
    431:432:void setChecked(boolean) -> setChecked
    579:579:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    705:706:void setCheckedIconGravity(int) -> setCheckedIconGravity
    637:637:void setCheckedIconMargin(int) -> setCheckedIconMargin
    648:649:void setCheckedIconMarginResource(int) -> setCheckedIconMarginResource
    569:569:void setCheckedIconResource(int) -> setCheckedIconResource
    616:616:void setCheckedIconSize(int) -> setCheckedIconSize
    627:627:void setCheckedIconSizeResource(int) -> setCheckedIconSizeResource
    601:601:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    363:365:void setClickable(boolean) -> setClickable
    442:446:void setDragged(boolean) -> setDragged
    384:385:void setMaxCardElevation(float) -> setMaxCardElevation
    511:511:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    397:399:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    280:280:void setProgress(float) -> setProgress
    260:261:void setRadius(float) -> setRadius
    523:523:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    535:536:void setRippleColorResource(int) -> setRippleColorResource
    663:665:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    216:216:void setStrokeColor(int) -> setStrokeColor
    225:226:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    248:249:void setStrokeWidth(int) -> setStrokeWidth
    390:392:void setUseCompatPadding(boolean) -> setUseCompatPadding
    476:482:void toggle() -> toggle
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.MaterialCardViewHelper:
    68:94:void <clinit>() -> <clinit>
    97:149:void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int) -> <init>
    608:621:float calculateActualCornerPadding() -> calculateActualCornerPadding
    625:627:float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float) -> calculateCornerPaddingForCornerTreatment
    573:574:float calculateHorizontalBackgroundPadding() -> calculateHorizontalBackgroundPadding
    563:564:float calculateVerticalBackgroundPadding() -> calculateVerticalBackgroundPadding
    578:578:boolean canClipToOutline() -> canClipToOutline
    662:665:android.graphics.drawable.Drawable createCompatRippleDrawable() -> createCompatRippleDrawable
    651:657:android.graphics.drawable.Drawable createForegroundRippleDrawable() -> createForegroundRippleDrawable
    680:680:com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable() -> createForegroundShapeDrawable
    468:475:void forceRippleRedraw() -> forceRippleRedraw
    246:246:com.google.android.material.shape.MaterialShapeDrawable getBackground() -> getBackground
    254:254:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    263:263:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    391:391:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    691:691:int getCheckedIconGravity() -> getCheckedIconGravity
    420:420:int getCheckedIconMargin() -> getCheckedIconMargin
    411:411:int getCheckedIconSize() -> getCheckedIconSize
    381:381:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    635:646:android.graphics.drawable.Drawable getClickableForeground() -> getClickableForeground
    299:299:float getCornerRadius() -> getCornerRadius
    582:584:float getParentCardViewCalculatedCornerPadding() -> getParentCardViewCalculatedCornerPadding
    315:315:float getProgress() -> getProgress
    386:386:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    497:497:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    223:223:int getStrokeColor() -> getStrokeColor
    228:228:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    241:241:int getStrokeWidth() -> getStrokeWidth
    273:273:android.graphics.Rect getUserContentPadding() -> getUserContentPadding
    529:534:android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable) -> insetDrawable
    205:205:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    364:364:boolean isCheckable() -> isCheckable
    705:705:boolean isCheckedIconBottom() -> isCheckedIconBottom
    701:701:boolean isCheckedIconEnd() -> isCheckedIconEnd
    153:201:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    428:462:void recalculateCheckedIconPosition(int,int) -> recalculateCheckedIconPosition
    209:209:void setBackgroundOverwritten(boolean) -> setBackgroundOverwritten
    250:250:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    258:259:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    360:360:void setCheckable(boolean) -> setCheckable
    684:685:void setChecked(boolean) -> setChecked
    396:404:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    695:697:void setCheckedIconGravity(int) -> setCheckedIconGravity
    424:424:void setCheckedIconMargin(int) -> setCheckedIconMargin
    415:415:void setCheckedIconSize(int) -> setCheckedIconSize
    373:375:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    286:294:void setCornerRadius(float) -> setCornerRadius
    303:309:void setProgress(float) -> setProgress
    368:369:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    480:492:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    213:218:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    232:236:void setStrokeWidth(int) -> setStrokeWidth
    267:268:void setUserContentPadding(int,int,int,int) -> setUserContentPadding
    590:590:boolean shouldAddCornerPaddingInsideCardBackground() -> shouldAddCornerPaddingInsideCardBackground
    594:596:boolean shouldAddCornerPaddingOutsideCardBackground() -> shouldAddCornerPaddingOutsideCardBackground
    277:281:void updateClickable() -> updateClickable
    343:352:void updateContentPadding() -> updateContentPadding
    319:319:void updateElevation() -> updateElevation
    506:510:void updateInsetForeground(android.graphics.drawable.Drawable) -> updateInsetForeground
    324:327:void updateInsets() -> updateInsets
    671:674:void updateRippleColor() -> updateRippleColor
    331:331:void updateStroke() -> updateStroke
com.google.android.material.card.MaterialCardViewHelper$1 -> com.google.android.material.card.MaterialCardViewHelper$1:
    535:535:void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int) -> <init>
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    50:52:void <clinit>() -> <clinit>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:94:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    169:186:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    126:129:void onAttachedToWindow() -> onAttachedToWindow
    100:121:void onDraw(android.graphics.Canvas) -> onDraw
    157:157:void setCenterIfNoTextEnabled(boolean) -> setCenterIfNoTextEnabled
    139:143:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    135:142:void <clinit>() -> <clinit>
    199:199:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    178:257:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    130:130:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    130:130:com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener access$100(com.google.android.material.chip.Chip) -> access$100
    130:130:android.widget.CompoundButton$OnCheckedChangeListener access$200(com.google.android.material.chip.Chip) -> access$200
    130:130:boolean access$300(com.google.android.material.chip.Chip) -> access$300
    130:130:android.graphics.RectF access$400(com.google.android.material.chip.Chip) -> access$400
    130:130:android.view.View$OnClickListener access$500(com.google.android.material.chip.Chip) -> access$500
    130:130:boolean access$602(com.google.android.material.chip.Chip,boolean) -> access$602
    130:130:android.graphics.Rect access$700(com.google.android.material.chip.Chip) -> access$700
    130:130:android.graphics.Rect access$800() -> access$800
    501:501:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    902:938:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    825:829:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    834:848:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    886:895:void drawableStateChanged() -> drawableStateChanged
    2271:2319:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    466:469:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    2335:2344:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    475:476:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1835:1835:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1870:1870:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1079:1079:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1147:1147:float getChipCornerRadius() -> getChipCornerRadius
    438:438:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2213:2213:float getChipEndPadding() -> getChipEndPadding
    1460:1460:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1532:1532:float getChipIconSize() -> getChipIconSize
    1495:1495:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1113:1113:float getChipMinHeight() -> getChipMinHeight
    1975:1975:float getChipStartPadding() -> getChipStartPadding
    1195:1195:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1229:1229:float getChipStrokeWidth() -> getChipStrokeWidth
    1304:1304:java.lang.CharSequence getChipText() -> getChipText
    1622:1622:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1738:1738:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2179:2179:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1693:1693:float getCloseIconSize() -> getCloseIconSize
    2145:2145:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1659:1659:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    950:957:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    962:964:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    653:653:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    861:866:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1941:1941:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2043:2043:float getIconEndPadding() -> getIconEndPadding
    2009:2009:float getIconStartPadding() -> getIconStartPadding
    1264:1264:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1171:1171:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1906:1906:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1397:1397:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2111:2111:float getTextEndPadding() -> getTextEndPadding
    2077:2077:float getTextStartPadding() -> getTextStartPadding
    945:945:boolean hasCloseIcon() -> hasCloseIcon
    325:341:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    421:421:void initOutlineProvider() -> initOutlineProvider
    2362:2362:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1748:1748:boolean isCheckable() -> isCheckable
    1570:1570:boolean isCloseIconVisible() -> isCloseIconVisible
    273:275:void onAttachedToWindow() -> onAttachedToWindow
    712:715:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    506:511:int[] onCreateDrawableState(int) -> onCreateDrawableState
    853:855:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    809:820:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    289:306:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    971:972:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    376:382:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    775:804:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    752:763:boolean performCloseIconClick() -> performCloseIconClick
    2352:2356:void removeBackgroundInset() -> removeBackgroundInset
    2329:2329:void setAccessibilityClassName(java.lang.CharSequence) -> setAccessibilityClassName
    546:549:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    536:536:void setBackgroundColor(int) -> setBackgroundColor
    555:558:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    541:541:void setBackgroundResource(int) -> setBackgroundResource
    526:526:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    531:531:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1770:1771:void setCheckable(boolean) -> setCheckable
    1758:1759:void setCheckableResource(int) -> setCheckableResource
    721:725:void setChecked(boolean) -> setChecked
    1857:1858:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1824:1824:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1818:1818:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1845:1846:void setCheckedIconResource(int) -> setCheckedIconResource
    1893:1894:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    1880:1881:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1798:1799:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1810:1811:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1101:1102:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1089:1090:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1182:1183:void setChipCornerRadius(float) -> setChipCornerRadius
    1158:1159:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    443:450:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2235:2236:void setChipEndPadding(float) -> setChipEndPadding
    2223:2224:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1482:1483:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1449:1449:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1443:1443:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1470:1471:void setChipIconResource(int) -> setChipIconResource
    1558:1559:void setChipIconSize(float) -> setChipIconSize
    1544:1545:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1518:1519:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1505:1506:void setChipIconTintResource(int) -> setChipIconTintResource
    1423:1424:void setChipIconVisible(int) -> setChipIconVisible
    1435:1436:void setChipIconVisible(boolean) -> setChipIconVisible
    1135:1136:void setChipMinHeight(float) -> setChipMinHeight
    1123:1124:void setChipMinHeightResource(int) -> setChipMinHeightResource
    1997:1998:void setChipStartPadding(float) -> setChipStartPadding
    1985:1986:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1217:1218:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1205:1206:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1251:1252:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1239:1240:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1340:1340:void setChipText(java.lang.CharSequence) -> setChipText
    1334:1334:void setChipTextResource(int) -> setChipTextResource
    1645:1648:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1726:1727:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1611:1611:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1605:1605:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2201:2202:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2189:2190:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    878:880:void setCloseIconHovered(boolean) -> setCloseIconHovered
    871:873:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1632:1635:void setCloseIconResource(int) -> setCloseIconResource
    1715:1716:void setCloseIconSize(float) -> setCloseIconSize
    1703:1704:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2167:2168:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2155:2156:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1681:1682:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1669:1670:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1586:1586:void setCloseIconVisible(int) -> setCloseIconVisible
    1596:1599:void setCloseIconVisible(boolean) -> setCloseIconVisible
    569:575:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    613:619:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    626:632:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    642:647:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    581:587:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    597:603:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    281:283:void setElevation(float) -> setElevation
    658:666:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2259:2260:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    519:521:void setGravity(int) -> setGravity
    1963:1964:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1951:1952:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2065:2066:void setIconEndPadding(float) -> setIconEndPadding
    2053:2054:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2031:2032:void setIconStartPadding(float) -> setIconStartPadding
    2019:2020:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    982:982:void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener) -> setInternalOnCheckedChangeListener
    1309:1313:void setLayoutDirection(int) -> setLayoutDirection
    681:683:void setLines(int) -> setLines
    697:699:void setMaxLines(int) -> setMaxLines
    704:706:void setMaxWidth(int) -> setMaxWidth
    689:691:void setMinLines(int) -> setMinLines
    733:733:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    738:739:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1289:1293:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1274:1277:void setRippleColorResource(int) -> setRippleColorResource
    1165:1165:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1928:1929:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1916:1917:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    673:675:void setSingleLine(boolean) -> setSingleLine
    1319:1327:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1360:1363:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1368:1372:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1377:1381:void setTextAppearance(int) -> setTextAppearance
    1350:1350:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2133:2134:void setTextEndPadding(float) -> setTextEndPadding
    2121:2122:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2099:2100:void setTextStartPadding(float) -> setTextStartPadding
    2087:2088:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2248:2248:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    496:496:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    313:319:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    455:461:void updateBackgroundDrawable() -> updateBackgroundDrawable
    483:491:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    349:370:void updatePaddingInternal() -> updatePaddingInternal
    1385:1391:void updateTextPaintDrawState() -> updateTextPaintDrawState
    390:415:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    181:181:void <init>(com.google.android.material.chip.Chip) -> <init>
    185:187:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    258:258:void <init>(com.google.android.material.chip.Chip) -> <init>
    261:265:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.Chip$3 -> com.google.android.material.chip.Chip$3:
    422:422:void <init>(com.google.android.material.chip.Chip) -> <init>
    426:429:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    988:989:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    994:994:int getVirtualViewAt(float,float) -> getVirtualViewAt
    1001:1003:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1060:1062:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1042:1051:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1019:1036:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    1010:1011:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    166:170:void <clinit>() -> <clinit>
    176:332:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1329:1345:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    823:839:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    538:539:float calculateChipIconWidth() -> calculateChipIconWidth
    933:946:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    914:928:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    952:971:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    578:579:float calculateCloseIconWidth() -> calculateCloseIconWidth
    888:905:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    879:880:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    846:860:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    533:533:boolean canShowCheckedIcon() -> canShowCheckedIcon
    280:281:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    590:635:void draw(android.graphics.Canvas) -> draw
    709:719:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    649:654:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    694:704:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    663:677:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    640:644:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    760:777:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    682:689:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    782:814:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    725:754:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1238:1238:int getAlpha() -> getAlpha
    2040:2040:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    2079:2079:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1422:1422:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1489:1489:float getChipCornerRadius() -> getChipCornerRadius
    2432:2432:float getChipEndPadding() -> getChipEndPadding
    1718:1718:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1786:1786:float getChipIconSize() -> getChipIconSize
    1747:1747:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1455:1455:float getChipMinHeight() -> getChipMinHeight
    2180:2180:float getChipStartPadding() -> getChipStartPadding
    1526:1526:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1562:1562:float getChipStrokeWidth() -> getChipStrokeWidth
    1868:1868:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1958:1958:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2396:2396:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1930:1930:float getCloseIconSize() -> getCloseIconSize
    2360:2360:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1013:1013:int[] getCloseIconState() -> getCloseIconState
    1910:1910:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    492:492:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1252:1252:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    561:565:float getCurrentChipIconHeight() -> getCurrentChipIconHeight
    549:551:float getCurrentChipIconWidth() -> getCurrentChipIconWidth
    1663:1663:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2150:2150:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2253:2253:float getIconEndPadding() -> getIconEndPadding
    2214:2214:float getIconStartPadding() -> getIconStartPadding
    513:513:int getIntrinsicHeight() -> getIntrinsicHeight
    498:507:int getIntrinsicWidth() -> getIntrinsicWidth
    1280:1291:void getOutline(android.graphics.Outline) -> getOutline
    1601:1601:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    2119:2119:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1630:1630:java.lang.CharSequence getText() -> getText
    1651:1651:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2326:2326:float getTextEndPadding() -> getTextEndPadding
    2292:2292:float getTextStartPadding() -> getTextStartPadding
    1355:1355:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    463:463:boolean getUseCompatRipple() -> getUseCompatRipple
    1376:1376:boolean hasState(int[],int) -> hasState
    1296:1298:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1962:1962:boolean isCheckable() -> isCheckable
    993:993:boolean isCloseIconStateful() -> isCloseIconStateful
    1821:1821:boolean isCloseIconVisible() -> isCloseIconVisible
    979:987:boolean isStateful() -> isStateful
    1151:1151:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1155:1155:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1160:1161:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    338:449:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1166:1179:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1186:1199:boolean onLevelChange(int) -> onLevelChange
    473:475:void onSizeChange() -> onSizeChange
    1024:1027:boolean onStateChange(int[]) -> onStateChange
    1033:1145:boolean onStateChange(int[],int[]) -> onStateChange
    1018:1019:void onTextSizeChange() -> onTextSizeChange
    1304:1306:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1230:1232:void setAlpha(int) -> setAlpha
    1970:1981:void setCheckable(boolean) -> setCheckable
    1966:1966:void setCheckableResource(int) -> setCheckableResource
    2060:2071:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    2050:2050:void setCheckedIconResource(int) -> setCheckedIconResource
    2100:2107:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    2089:2089:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1997:1997:void setCheckedIconVisible(int) -> setCheckedIconVisible
    2001:2015:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1442:1444:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1432:1432:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1511:1514:void setChipCornerRadius(float) -> setChipCornerRadius
    1500:1500:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2452:2455:void setChipEndPadding(float) -> setChipEndPadding
    2442:2442:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1726:1739:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1722:1722:void setChipIconResource(int) -> setChipIconResource
    1808:1815:void setChipIconSize(float) -> setChipIconSize
    1797:1797:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1767:1774:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1757:1757:void setChipIconTintResource(int) -> setChipIconTintResource
    1681:1681:void setChipIconVisible(int) -> setChipIconVisible
    1685:1699:void setChipIconVisible(boolean) -> setChipIconVisible
    1475:1478:void setChipMinHeight(float) -> setChipMinHeight
    1465:1465:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2200:2203:void setChipStartPadding(float) -> setChipStartPadding
    2190:2190:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1546:1551:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1536:1536:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1582:1589:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1572:1572:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1364:1366:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1876:1892:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1948:1952:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    2416:2420:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2406:2406:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1872:1872:void setCloseIconResource(int) -> setCloseIconResource
    1938:1942:void setCloseIconSize(float) -> setCloseIconSize
    1934:1934:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2380:2384:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2370:2370:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1001:1004:boolean setCloseIconState(int[]) -> setCloseIconState
    1918:1925:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1914:1914:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1835:1849:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1243:1245:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    468:468:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1667:1667:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2170:2170:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2160:2160:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2273:2280:void setIconEndPadding(float) -> setIconEndPadding
    2263:2263:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2234:2241:void setIconStartPadding(float) -> setIconStartPadding
    2224:2224:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2475:2475:void setMaxWidth(int) -> setMaxWidth
    1621:1624:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1611:1611:void setRippleColorResource(int) -> setRippleColorResource
    2489:2489:void setShouldDrawText(boolean) -> setShouldDrawText
    2139:2139:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    2129:2129:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1641:1645:void setText(java.lang.CharSequence) -> setText
    1659:1659:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1655:1655:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2346:2349:void setTextEndPadding(float) -> setTextEndPadding
    2336:2336:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2312:2315:void setTextStartPadding(float) -> setTextStartPadding
    2302:2302:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1257:1259:void setTintList(android.content.res.ColorStateList) -> setTintList
    1265:1268:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    454:457:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1206:1219:boolean setVisible(boolean,boolean) -> setVisible
    2479:2479:boolean shouldDrawText() -> shouldDrawText
    523:523:boolean showsCheckedIcon() -> showsCheckedIcon
    518:518:boolean showsChipIcon() -> showsChipIcon
    528:528:boolean showsCloseIcon() -> showsCloseIcon
    1320:1320:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1312:1314:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1360:1360:void updateCompatRippleColor() -> updateCompatRippleColor
    1899:1901:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    113:113:void <clinit>() -> <clinit>
    132:132:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    120:169:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:60:com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener access$100(com.google.android.material.chip.ChipGroup) -> access$100
    60:60:com.google.android.material.internal.CheckableGroup access$200(com.google.android.material.chip.ChipGroup) -> access$200
    208:208:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    203:203:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    191:191:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    197:197:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    290:290:int getCheckedChipId() -> getCheckedChipId
    306:306:java.util.List getCheckedChipIds() -> getCheckedChipIds
    359:360:int getChipCount() -> getChipCount
    403:403:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    423:423:int getChipSpacingVertical() -> getChipSpacingVertical
    373:379:int getIndexOfChip(android.view.View) -> getIndexOfChip
    444:444:boolean isSingleLine() -> isSingleLine
    461:461:boolean isSingleSelection() -> isSingleSelection
    219:223:void onFinishInflate() -> onFinishInflate
    174:183:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    391:392:void setChipSpacing(int) -> setChipSpacing
    408:411:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    417:417:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    397:397:void setChipSpacingResource(int) -> setChipSpacingResource
    428:431:void setChipSpacingVertical(int) -> setChipSpacingVertical
    437:437:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    230:230:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    238:238:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    260:260:void setFlexWrap(int) -> setFlexWrap
    331:334:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    354:354:void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener) -> setOnCheckedStateChangeListener
    214:214:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    489:489:void setSelectionRequired(boolean) -> setSelectionRequired
    246:246:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    253:253:void setShowDividerVertical(int) -> setShowDividerVertical
    451:451:void setSingleLine(boolean) -> setSingleLine
    456:456:void setSingleLine(int) -> setSingleLine
    470:470:void setSingleSelection(boolean) -> setSingleSelection
    479:479:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$1 -> com.google.android.material.chip.ChipGroup$1:
    157:157:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    160:163:void onCheckedStateChanged(java.util.Set) -> onCheckedStateChanged
com.google.android.material.chip.ChipGroup$2 -> com.google.android.material.chip.ChipGroup$2:
    335:335:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> <init>
    339:342:void onCheckedChanged(com.google.android.material.chip.ChipGroup,java.util.List) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:101:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    105:105:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    508:508:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    508:508:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    508:508:android.view.ViewGroup$OnHierarchyChangeListener access$302(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$302
    513:524:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    530:535:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    57:76:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:131:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:126:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    44:44:void buildCircularRevealCache() -> buildCircularRevealCache
    49:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    90:90:void draw(android.graphics.Canvas) -> draw
    76:76:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    65:65:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    55:55:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    104:104:boolean isOpaque() -> isOpaque
    81:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    70:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    60:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    128:128:void <clinit>() -> <clinit>
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:185:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:196:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    230:230:void <clinit>() -> <clinit>
    234:234:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:245:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:149:void <init>(float,float,float) -> <init>
    157:159:void set(float,float,float) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    47:47:void buildCircularRevealCache() -> buildCircularRevealCache
    52:52:void destroyCircularRevealCache() -> destroyCircularRevealCache
    92:92:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    106:106:boolean isOpaque() -> isOpaque
    84:84:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:57:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
    169:170:int compositeARGBWithAlpha(int,int) -> compositeARGBWithAlpha
    69:69:int getColor(android.view.View,int) -> getColor
    80:80:int getColor(android.content.Context,int,java.lang.String) -> getColor
    90:90:int getColor(android.view.View,int,int) -> getColor
    100:102:int getColor(android.content.Context,int,int) -> getColor
    175:175:boolean isColorLight(int) -> isColorLight
    130:132:int layer(android.view.View,int,int,float) -> layer
    144:146:int layer(int,int,float) -> layer
    155:155:int layer(int,int) -> layer
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
    149:149:void <clinit>() -> <clinit>
    33:33:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    60:72:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month) -> <init>
    33:33:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    33:33:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    33:33:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    33:33:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    185:190:com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month) -> clamp
    130:137:boolean equals(java.lang.Object) -> equals
    83:83:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    95:95:com.google.android.material.datepicker.Month getEnd() -> getEnd
    114:114:int getMonthSpan() -> getMonthSpan
    101:101:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    89:89:com.google.android.material.datepicker.Month getStart() -> getStart
    122:122:int getYearSpan() -> getYearSpan
    142:143:int hashCode() -> hashCode
    175:178:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
    150:150:void <init>() -> <init>
    150:150:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    154:158:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    150:150:java.lang.Object[] newArray(int) -> newArray
    164:164:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
    204:210:void <clinit>() -> <clinit>
    214:225:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    322:328:com.google.android.material.datepicker.CalendarConstraints build() -> build
    305:305:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
    66:77:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    87:130:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    166:166:int getBottomInset() -> getBottomInset
    162:162:int getTopInset() -> getTopInset
    136:149:void styleItem(android.widget.TextView) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
    74:115:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
    82:82:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    86:89:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    36:36:java.lang.String getYearMonth(long) -> getYearMonth
    93:93:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    97:100:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:35:void <init>(long) -> <init>
    92:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    84:84:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
    50:50:void <clinit>() -> <clinit>
    52:55:void <init>() -> <init>
    75:75:int getCount() -> getCount
    41:41:java.lang.Object getItem(int) -> getItem
    61:64:java.lang.Integer getItem(int) -> getItem
    82:95:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    101:102:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
    75:81:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    61:61:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    61:61:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    61:61:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    61:61:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    61:61:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    61:61:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    61:61:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    368:439:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    485:485:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    234:234:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    292:292:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    326:326:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    286:286:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    322:322:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    337:337:int getDayHeight(android.content.Context) -> getDayHeight
    462:474:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    480:480:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    99:105:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    120:125:void onCreate(android.os.Bundle) -> onCreate
    134:228:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    111:115:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    452:452:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    302:315:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    341:354:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    359:362:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
    155:155:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    159:161:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
    453:453:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    456:456:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
    171:171:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    174:179:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
    191:191:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    195:203:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
    234:237:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    242:277:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
    372:372:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    377:381:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
    395:395:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    411:413:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    400:405:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
    422:422:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    425:425:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
    430:430:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    433:435:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
    440:440:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    443:445:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
    64:66:void <clinit>() -> <clinit>
    64:64:void <init>(java.lang.String,int) -> <init>
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    230:234:void gainFocus(int,android.graphics.Rect) -> gainFocus
    41:41:android.widget.Adapter getAdapter() -> getAdapter
    41:41:android.widget.ListAdapter getAdapter() -> getAdapter
    109:109:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    239:239:android.view.View getChildAtPosition(int) -> getChildAtPosition
    254:254:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    76:77:void onAttachedToWindow() -> onAttachedToWindow
    126:200:void onDraw(android.graphics.Canvas) -> onDraw
    222:224:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    91:100:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    207:215:void onMeasure(int,int) -> onMeasure
    41:41:void setAdapter(android.widget.Adapter) -> setAdapter
    114:121:void setAdapter(android.widget.ListAdapter) -> setAdapter
    82:85:void setSelection(int) -> setSelection
    250:250:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
    63:63:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    67:69:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
    79:81:void <clinit>() -> <clinit>
    66:122:void <init>() -> <init>
    66:66:java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker) -> access$000
    66:66:java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    66:66:void access$200(com.google.android.material.datepicker.MaterialDatePicker) -> access$200
    66:66:com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    66:66:android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker) -> access$400
    66:66:com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker) -> access$500
    66:66:void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton) -> access$600
    66:66:void access$700(com.google.android.material.datepicker.MaterialDatePicker) -> access$700
    469:475:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    362:389:void enableEdgeToEdgeIfNeeded(android.view.Window) -> enableEdgeToEdgeIfNeeded
    460:463:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    113:113:java.lang.String getHeaderText() -> getHeaderText
    499:504:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    358:358:java.lang.Object getSelection() -> getSelection
    201:204:int getThemeResId(android.content.Context) -> getThemeResId
    429:437:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    480:480:boolean isFullscreen(android.content.Context) -> isFullscreen
    484:484:boolean isNestedScrollable(android.content.Context) -> isNestedScrollable
    334:337:void onCancel(android.content.DialogInterface) -> onCancel
    186:197:void onCreate(android.os.Bundle) -> onCreate
    210:224:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    234:291:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    342:349:void onDismiss(android.content.DialogInterface) -> onDismiss
    166:181:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    306:323:void onStart() -> onStart
    328:329:void onStop() -> onStop
    488:494:boolean readMaterialCalendarStyleBoolean(android.content.Context,int) -> readMaterialCalendarStyleBoolean
    400:413:void startPickerFragment() -> startPickerFragment
    393:396:void updateHeader() -> updateHeader
    453:456:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$1 -> com.google.android.material.datepicker.MaterialDatePicker$1:
    273:273:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    277:280:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$2 -> com.google.android.material.datepicker.MaterialDatePicker$2:
    292:292:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    295:298:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$3 -> com.google.android.material.datepicker.MaterialDatePicker$3:
    373:373:void <init>(com.google.android.material.datepicker.MaterialDatePicker,int,android.view.View,int) -> <init>
    376:385:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
    414:414:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    417:418:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.MaterialDatePicker$5 -> com.google.android.material.datepicker.MaterialDatePicker$5:
    438:438:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    442:446:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
    35:35:void <init>() -> <init>
    50:55:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    69:73:void onCreate(android.os.Bundle) -> onCreate
    82:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    61:64:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
    89:89:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
    92:93:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
    201:201:void <clinit>() -> <clinit>
    59:66:void <init>(java.util.Calendar) -> <init>
    30:30:int compareTo(java.lang.Object) -> compareTo
    133:133:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    75:77:com.google.android.material.datepicker.Month create(long) -> create
    90:93:com.google.android.material.datepicker.Month create(int,int) -> create
    102:102:com.google.android.material.datepicker.Month current() -> current
    106:108:int daysFromStartOfWeekToFirstOfMonth() -> daysFromStartOfWeekToFirstOfMonth
    118:122:boolean equals(java.lang.Object) -> equals
    167:169:long getDay(int) -> getDay
    173:175:int getDayOfMonth(long) -> getDayOfMonth
    192:195:java.lang.String getLongName() -> getLongName
    154:154:long getStableId() -> getStableId
    127:128:int hashCode() -> hashCode
    184:186:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    146:149:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    225:226:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
    202:202:void <init>() -> <init>
    202:202:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    206:208:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    202:202:java.lang.Object[] newArray(int) -> newArray
    214:214:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
    43:43:void <clinit>() -> <clinit>
    56:60:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    240:240:int dayToPosition(int) -> dayToPosition
    212:212:int firstPositionInMonth() -> firstPositionInMonth
    100:100:int getCount() -> getCount
    38:38:java.lang.Object getItem(int) -> getItem
    79:82:java.lang.Long getItem(int) -> getItem
    87:87:long getItemId(int) -> getItemId
    38:38:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    106:136:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    199:200:void initializeStyles(android.content.Context) -> initializeStyles
    253:253:boolean isFirstInRow(int) -> isFirstInRow
    261:261:boolean isLastInRow(int) -> isLastInRow
    190:191:boolean isSelected(long) -> isSelected
    223:223:int lastPositionInMonth() -> lastPositionInMonth
    234:234:int positionToDay(int) -> positionToDay
    173:186:void updateSelectedState(android.widget.TextView,long) -> updateSelectedState
    157:163:void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long) -> updateSelectedStateForDate
    142:152:void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView) -> updateSelectedStates
    245:245:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
    49:69:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    38:38:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    137:137:int getItemCount() -> getItemCount
    132:132:long getItemId(int) -> getItemId
    147:147:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    142:142:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    151:151:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    38:38:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    106:119:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    93:100:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
    120:120:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    123:124:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
    78:83:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.OnSelectionChangedListener -> com.google.android.material.datepicker.OnSelectionChangedListener:
    24:24:void <init>() -> <init>
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:40:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    34:34:void <init>(android.content.Context,int,boolean) -> <init>
    40:49:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.TimeSource -> com.google.android.material.datepicker.TimeSource:
    25:25:void <clinit>() -> <clinit>
    31:33:void <init>(java.lang.Long,java.util.TimeZone) -> <init>
    80:80:java.util.Calendar now() -> now
    90:92:java.util.Calendar now(java.util.TimeZone) -> now
    43:43:com.google.android.material.datepicker.TimeSource system() -> system
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
    40:40:void <clinit>() -> <clinit>
    130:133:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    198:198:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    139:140:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    113:118:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    145:146:java.text.DateFormat getFormat(int,java.util.Locale) -> getFormat
    229:229:java.text.DateFormat getFullFormat(java.util.Locale) -> getFullFormat
    47:48:com.google.android.material.datepicker.TimeSource getTimeSource() -> getTimeSource
    54:54:java.util.TimeZone getTimeZone() -> getTimeZone
    66:71:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    59:59:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    83:83:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    95:99:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    203:203:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
    45:46:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    84:84:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    98:98:int getItemCount() -> getItemCount
    102:102:int getPositionForYear(int) -> getPositionForYear
    106:106:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:79:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    54:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
    84:84:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    87:91:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
    40:41:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
    45:49:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:76:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    65:66:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
    36:36:void <clinit>() -> <clinit>
    45:50:void <init>(android.content.Context) -> <init>
    58:63:void <init>(boolean,int,int,int,float) -> <init>
    158:164:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    132:142:int compositeOverlay(int,float) -> compositeOverlay
    109:110:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    169:169:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    193:193:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.expandable.ExpandableWidgetHelper:
    36:41:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    91:93:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    87:87:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    56:56:boolean isExpanded() -> isExpanded
    71:75:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    62:64:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    81:81:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
com.google.android.material.floatingactionbutton.BorderDrawable -> com.google.android.material.floatingactionbutton.BorderDrawable:
    61:85:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    224:249:android.graphics.Shader createGradientShader() -> createGradientShader
    125:141:void draw(android.graphics.Canvas) -> draw
    173:174:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    256:256:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    194:194:int getOpacity() -> getOpacity
    148:158:void getOutline(android.graphics.Outline) -> getOutline
    164:166:boolean getPadding(android.graphics.Rect) -> getPadding
    204:204:boolean isStateful() -> isStateful
    199:199:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    209:219:boolean onStateChange(int[]) -> onStateChange
    188:189:void setAlpha(int) -> setAlpha
    99:103:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    89:93:void setBorderWidth(float) -> setBorderWidth
    108:109:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    117:120:void setGradientColors(int,int,int,int) -> setGradientColors
    182:183:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState -> com.google.android.material.floatingactionbutton.BorderDrawable$BorderState:
    263:263:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable) -> <init>
    263:263:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1) -> <init>
    268:268:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    76:777:void <clinit>() -> <clinit>
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$200
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$300
    74:74:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$400
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$500
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$600
    298:298:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    808:808:int getCollapsedPadding() -> getCollapsedPadding
    802:803:int getCollapsedSize() -> getCollapsedSize
    585:585:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    561:561:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    537:537:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    611:611:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    680:685:boolean isOrWillBeShown() -> isOrWillBeShown
    287:291:void onAttachedToWindow() -> onAttachedToWindow
    634:676:void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    274:274:void saveOriginalTextCsl() -> saveOriginalTextCsl
    330:330:void setAnimateShowBeforeLayout(boolean) -> setAnimateShowBeforeLayout
    594:594:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    603:603:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    306:315:void setExtended(boolean) -> setExtended
    570:570:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    579:579:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    344:347:void setPadding(int,int,int,int) -> setPadding
    335:338:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    546:546:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    555:555:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    620:620:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    629:629:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    263:264:void setTextColor(int) -> setTextColor
    269:270:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    700:701:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    648:648:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    659:660:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    665:667:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    653:654:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    709:709:void <init>(java.lang.Class,java.lang.String) -> <init>
    709:709:java.lang.Object get(java.lang.Object) -> get
    723:723:java.lang.Float get(android.view.View) -> get
    709:709:void set(java.lang.Object,java.lang.Object) -> set
    714:715:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    732:732:void <init>(java.lang.Class,java.lang.String) -> <init>
    732:732:java.lang.Object get(java.lang.Object) -> get
    746:746:java.lang.Float get(android.view.View) -> get
    732:732:void set(java.lang.Object,java.lang.Object) -> set
    737:738:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6:
    755:755:void <init>(java.lang.Class,java.lang.String) -> <init>
    755:755:java.lang.Object get(java.lang.Object) -> get
    769:769:java.lang.Float get(android.view.View) -> get
    755:755:void set(java.lang.Object,java.lang.Object) -> set
    758:763:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7:
    778:778:void <init>(java.lang.Class,java.lang.String) -> <init>
    778:778:java.lang.Object get(java.lang.Object) -> get
    792:792:java.lang.Float get(android.view.View) -> get
    778:778:void set(java.lang.Object,java.lang.Object) -> set
    781:786:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    829:831:void <init>() -> <init>
    838:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1053:1060:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    816:816:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    913:913:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    939:941:boolean isBottomSheet(android.view.View) -> isBottomSheet
    918:921:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    816:816:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    928:933:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    816:816:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1069:1083:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    961:966:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    1030:1037:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    979:996:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1005:1012:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    110:110:void <clinit>() -> <clinit>
    201:201:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    188:271:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    638:638:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    606:606:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1376:1376:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    1470:1470:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    834:835:void drawableStateChanged() -> drawableStateChanged
    363:363:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    389:389:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    351:351:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1225:1225:float getCompatElevation() -> getCompatElevation
    1261:1261:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1298:1298:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    912:912:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    884:886:boolean getContentRect(android.graphics.Rect) -> getContentRect
    781:781:int getCustomSize() -> getCustomSize
    662:662:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1352:1352:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1461:1464:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    898:899:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    303:303:int getRippleColor() -> getRippleColor
    314:314:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    538:538:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1328:1328:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    722:722:int getSize() -> getSize
    795:795:int getSizeDimension() -> getSizeDimension
    799:816:int getSizeDimension(int) -> getSizeDimension
    423:423:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    442:442:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    456:456:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    470:470:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    690:690:boolean getUseCompatPadding() -> getUseCompatPadding
    630:630:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    634:634:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    652:652:boolean isExpanded() -> isExpanded
    746:746:boolean isOrWillBeHidden() -> isOrWillBeHidden
    750:750:boolean isOrWillBeShown() -> isOrWillBeShown
    840:841:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    903:906:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    474:492:void onApplySupportImageTint() -> onApplySupportImageTint
    822:823:void onAttachedToWindow() -> onAttachedToWindow
    828:829:void onDetachedFromWindow() -> onDetachedFromWindow
    276:289:void onMeasure(int,int) -> onMeasure
    862:871:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    846:853:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    943:949:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    917:936:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    507:507:void setBackgroundColor(int) -> setBackgroundColor
    497:497:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    502:502:void setBackgroundResource(int) -> setBackgroundResource
    374:376:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    401:403:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1237:1237:void setCompatElevation(float) -> setCompatElevation
    1249:1249:void setCompatElevationResource(int) -> setCompatElevationResource
    1274:1274:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1287:1287:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1310:1310:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1322:1322:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    765:770:void setCustomSize(int) -> setCustomSize
    1213:1214:void setElevation(float) -> setElevation
    559:561:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    657:657:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1361:1361:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1370:1370:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    519:523:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    513:514:void setImageResource(int) -> setImageResource
    577:578:void setMaxImageSize(int) -> setMaxImageSize
    328:328:void setRippleColor(int) -> setRippleColor
    342:344:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1439:1440:void setScaleX(float) -> setScaleX
    1445:1446:void setScaleY(float) -> setScaleY
    1457:1457:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    531:531:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1337:1337:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1346:1346:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    707:710:void setSize(int) -> setSize
    413:413:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    432:432:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    447:449:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    461:463:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1421:1422:void setTranslationX(float) -> setTranslationX
    1427:1428:void setTranslationY(float) -> setTranslationY
    1433:1434:void setTranslationZ(float) -> setTranslationZ
    675:677:void setUseCompatPadding(boolean) -> setUseCompatPadding
    567:567:void setVisibility(int) -> setVisibility
    598:598:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
    602:602:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    732:732:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    732:732:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    740:740:void onHidden() -> onHidden
    735:735:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    984:985:void <init>() -> <init>
    989:996:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    975:975:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1158:1163:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1046:1048:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1176:1204:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1025:1028:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    975:975:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1035:1040:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    975:975:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1131:1147:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    1063:1075:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1087:1104:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1113:1120:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    961:961:void <init>() -> <init>
    965:965:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    958:958:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    958:958:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    958:958:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    958:958:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
    113:113:void <init>() -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1477:1477:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1500:1500:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1494:1494:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1486:1488:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
    1393:1394:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1409:1410:boolean equals(java.lang.Object) -> equals
    1415:1415:int hashCode() -> hashCode
    1404:1404:void onScaleChanged() -> onScaleChanged
    1399:1399:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    70:144:void <clinit>() -> <clinit>
    97:184:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    68:68:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    68:68:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    68:68:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    68:68:void access$300(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,android.graphics.Matrix) -> access$300
    404:407:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    388:391:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    679:682:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    296:308:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    567:603:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    618:653:android.animation.AnimatorSet createDefaultAnimator(float,float,float) -> createDefaultAnimator
    825:830:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    712:712:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    355:355:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    343:343:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    253:253:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    784:795:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    727:734:void getPadding(android.graphics.Rect) -> getPadding
    257:257:float getPressedTranslationZ() -> getPressedTranslationZ
    329:329:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    334:334:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    420:485:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    814:819:boolean isOrWillBeHidden() -> isOrWillBeHidden
    804:809:boolean isOrWillBeShown() -> isOrWillBeShown
    753:758:void onAttachedToWindow() -> onAttachedToWindow
    763:766:void onDetachedFromWindow() -> onDetachedFromWindow
    738:744:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    775:778:void onPreDraw() -> onPreDraw
    703:705:void onScaleChanged() -> onScaleChanged
    695:697:void onTranslationChanged() -> onTranslationChanged
    216:220:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    225:226:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    242:244:void setElevation(float) -> setElevation
    359:359:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    347:347:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    261:263:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    288:292:void setImageMatrixScale(float) -> setImageMatrixScale
    275:277:void setMaxImageSize(int) -> setMaxImageSize
    231:231:void setMinTouchTargetSize(int) -> setMinTouchTargetSize
    268:270:void setPressedTranslationZ(float) -> setPressedTranslationZ
    235:237:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    363:364:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    313:323:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    338:338:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    902:902:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    351:351:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    491:559:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    284:284:void updateImageMatrixScale() -> updateImageMatrixScale
    720:723:void updatePadding() -> updatePadding
    374:375:void updateShapeElevation(float) -> updateShapeElevation
    664:668:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    445:445:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    459:459:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    464:470:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    450:454:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    527:527:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    538:542:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    530:533:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    588:588:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    588:588:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    594:595:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    627:627:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,float,float,float,float,float,float,android.graphics.Matrix) -> <init>
    630:639:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
    668:669:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    668:668:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    672:673:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6:
    786:786:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    789:789:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    893:893:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    875:875:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    879:879:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    884:884:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    888:888:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    866:866:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    870:870:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    834:834:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    834:834:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    857:858:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    843:852:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:53:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    216:224:com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    156:161:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    231:232:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    167:167:float getElevation() -> getElevation
    237:243:void getPadding(android.graphics.Rect) -> getPadding
    63:84:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    172:172:void onCompatShadowChanged() -> onCompatShadowChanged
    182:194:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    103:150:void onElevationsChanged(float,float,float) -> onElevationsChanged
    89:93:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    177:177:boolean shouldAddPadding() -> shouldAddPadding
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable:
    256:256:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
com.google.android.material.imageview.ShapeableImageView -> com.google.android.material.imageview.ShapeableImageView:
    60:60:void <clinit>() -> <clinit>
    92:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:149:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:58:com.google.android.material.shape.ShapeAppearanceModel access$000(com.google.android.material.imageview.ShapeableImageView) -> access$000
    58:58:com.google.android.material.shape.MaterialShapeDrawable access$100(com.google.android.material.imageview.ShapeableImageView) -> access$100
    58:58:com.google.android.material.shape.MaterialShapeDrawable access$102(com.google.android.material.imageview.ShapeableImageView,com.google.android.material.shape.MaterialShapeDrawable) -> access$102
    58:58:android.graphics.RectF access$200(com.google.android.material.imageview.ShapeableImageView) -> access$200
    491:501:void drawStroke(android.graphics.Canvas) -> drawStroke
    272:272:int getContentPaddingBottom() -> getContentPaddingBottom
    283:286:int getContentPaddingEnd() -> getContentPaddingEnd
    297:305:int getContentPaddingLeft() -> getContentPaddingLeft
    315:323:int getContentPaddingRight() -> getContentPaddingRight
    334:337:int getContentPaddingStart() -> getContentPaddingStart
    348:348:int getContentPaddingTop() -> getContentPaddingTop
    401:401:int getPaddingBottom() -> getPaddingBottom
    412:412:int getPaddingEnd() -> getPaddingEnd
    423:423:int getPaddingLeft() -> getPaddingLeft
    434:434:int getPaddingRight() -> getPaddingRight
    445:445:int getPaddingStart() -> getPaddingStart
    456:456:int getPaddingTop() -> getPaddingTop
    475:475:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    527:527:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    569:569:float getStrokeWidth() -> getStrokeWidth
    262:262:boolean isContentPaddingRelative() -> isContentPaddingRelative
    352:352:boolean isRtl() -> isRtl
    161:162:void onAttachedToWindow() -> onAttachedToWindow
    155:156:void onDetachedFromWindow() -> onDetachedFromWindow
    198:200:void onDraw(android.graphics.Canvas) -> onDraw
    167:193:void onMeasure(int,int) -> onMeasure
    205:206:void onSizeChanged(int,int,int,int) -> onSizeChanged
    367:371:void setPadding(int,int,int,int) -> setPadding
    386:390:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    461:468:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    573:574:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    515:515:void setStrokeColorResource(int) -> setStrokeColorResource
    540:542:void setStrokeWidth(float) -> setStrokeWidth
    556:556:void setStrokeWidthResource(int) -> setStrokeWidthResource
    479:487:void updateShapeMask(int,int) -> updateShapeMask
com.google.android.material.imageview.ShapeableImageView$OutlineProvider -> com.google.android.material.imageview.ShapeableImageView$OutlineProvider:
    578:580:void <init>(com.google.android.material.imageview.ShapeableImageView) -> <init>
    584:594:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    31:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:108:void onLayout(boolean,int,int,int,int) -> onLayout
    47:79:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableGroup -> com.google.android.material.internal.CheckableGroup:
    43:45:void <init>() -> <init>
    43:43:boolean access$000(com.google.android.material.internal.CheckableGroup,com.google.android.material.internal.MaterialCheckable) -> access$000
    43:43:boolean access$100(com.google.android.material.internal.CheckableGroup) -> access$100
    43:43:boolean access$200(com.google.android.material.internal.CheckableGroup,com.google.android.material.internal.MaterialCheckable,boolean) -> access$200
    43:43:void access$300(com.google.android.material.internal.CheckableGroup) -> access$300
    75:79:void addCheckable(com.google.android.material.internal.MaterialCheckable) -> addCheckable
    96:101:void check(int) -> check
    149:159:boolean checkInternal(com.google.android.material.internal.MaterialCheckable) -> checkInternal
    116:121:void clearCheck() -> clearCheck
    132:132:java.util.Set getCheckedIds() -> getCheckedIds
    137:142:java.util.List getCheckedIdsSortedByChildOrder(android.view.ViewGroup) -> getCheckedIdsSortedByChildOrder
    127:127:int getSingleCheckedId() -> getSingleCheckedId
    59:59:boolean isSingleSelection() -> isSingleSelection
    183:184:void onCheckedStateChanged() -> onCheckedStateChanged
    90:92:void removeCheckable(com.google.android.material.internal.MaterialCheckable) -> removeCheckable
    71:71:void setOnCheckedStateChangeListener(com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener) -> setOnCheckedStateChangeListener
    63:63:void setSelectionRequired(boolean) -> setSelectionRequired
    52:54:void setSingleSelection(boolean) -> setSingleSelection
    166:177:boolean uncheckInternal(com.google.android.material.internal.MaterialCheckable,boolean) -> uncheckInternal
com.google.android.material.internal.CheckableGroup$1 -> com.google.android.material.internal.CheckableGroup$1:
    79:79:void <init>(com.google.android.material.internal.CheckableGroup) -> <init>
    79:79:void onCheckedChanged(java.lang.Object,boolean) -> onCheckedChanged
    82:83:void onCheckedChanged(com.google.android.material.internal.MaterialCheckable,boolean) -> onCheckedChanged
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    41:41:void <clinit>() -> <clinit>
    52:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:131:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:119:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:138:void setCheckable(boolean) -> setCheckable
    79:82:void setChecked(boolean) -> setChecked
    149:149:void setPressable(boolean) -> setPressable
    98:99:void setPressed(boolean) -> setPressed
    93:93:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:64:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
    180:180:void <clinit>() -> <clinit>
    162:162:void <init>(android.os.Parcelable) -> <init>
    166:167:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:177:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:173:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    76:86:void <clinit>() -> <clinit>
    105:190:void <init>(android.view.View) -> <init>
    1249:1253:int blendARGB(int,int,float) -> blendARGB
    710:796:void calculateBaseOffsets(boolean) -> calculateBaseOffsets
    592:592:void calculateCurrentOffsets() -> calculateCurrentOffsets
    670:678:float calculateFadeModeTextAlpha(float) -> calculateFadeModeTextAlpha
    327:327:float calculateFadeModeThresholdFraction() -> calculateFadeModeThresholdFraction
    936:938:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    596:666:void calculateOffsets(float) -> calculateOffsets
    968:968:void calculateUsingTextSize(float) -> calculateUsingTextSize
    973:1053:void calculateUsingTextSize(float,boolean) -> calculateUsingTextSize
    1150:1152:void clearTexture() -> clearTexture
    1061:1076:android.text.StaticLayout createStaticLayout(int,float,boolean) -> createStaticLayout
    828:865:void draw(android.graphics.Canvas) -> draw
    874:928:void drawMultilineTransition(android.graphics.Canvas,float,float) -> drawMultilineTransition
    1095:1113:void ensureExpandedTexture() -> ensureExpandedTexture
    268:272:void getCollapsedTextActualBounds(android.graphics.RectF,int,int) -> getCollapsedTextActualBounds
    1229:1229:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    312:314:float getCollapsedTextHeight() -> getCollapsedTextHeight
    278:283:float getCollapsedTextLeftBound(int,int) -> getCollapsedTextLeftBound
    290:295:float getCollapsedTextRightBound(android.graphics.RectF,int,int) -> getCollapsedTextRightBound
    694:694:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    702:705:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    689:689:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    300:302:float getExpandedTextHeight() -> getExpandedTextHeight
    572:572:float getExpansionFraction() -> getExpansionFraction
    1080:1090:android.text.Layout$Alignment getMultilineTextLayoutAlignment() -> getMultilineTextLayoutAlignment
    344:347:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    336:339:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    804:813:void interpolateBounds(float) -> interpolateBounds
    1221:1221:boolean isClose(float,float) -> isClose
    943:943:boolean isDefaultIsRtl() -> isDefaultIsRtl
    563:564:boolean isStateful() -> isStateful
    948:950:boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean) -> isTextDirectionHeuristicsIsRtl
    1259:1261:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    517:531:void maybeUpdateFontWeightAdjustment(android.content.res.Configuration) -> maybeUpdateFontWeightAdjustment
    800:800:float measureTextWidth(android.text.TextPaint,java.lang.CharSequence) -> measureTextWidth
    352:356:void onBoundsChanged() -> onBoundsChanged
    1118:1118:void recalculate() -> recalculate
    1122:1126:void recalculate(boolean) -> recalculate
    1265:1265:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    256:259:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    264:264:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    382:413:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    818:819:void setCollapsedTextBlend(float) -> setCollapsedTextBlend
    223:225:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    371:373:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    451:452:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    474:483:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    244:247:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    252:252:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    237:239:void setExpandedLetterSpacing(float) -> setExpandedLetterSpacing
    823:824:void setExpandedTextBlend(float) -> setExpandedTextBlend
    230:232:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    360:362:void setExpandedTextGravity(int) -> setExpandedTextGravity
    209:211:void setExpandedTextSize(float) -> setExpandedTextSize
    493:502:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    543:547:void setExpansionFraction(float) -> setExpansionFraction
    954:964:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    199:200:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    552:555:boolean setState(int[]) -> setState
    1136:1140:void setText(java.lang.CharSequence) -> setText
    194:195:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    463:466:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    870:870:boolean shouldDrawMultiline() -> shouldDrawMultiline
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
    404:404:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    407:407:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    37:38:void <clinit>() -> <clinit>
    83:84:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:99:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.EdgeToEdgeUtils -> com.google.android.material.internal.EdgeToEdgeUtils:
    83:115:void applyEdgeToEdge(android.view.Window,boolean,java.lang.Integer,java.lang.Integer) -> applyEdgeToEdge
    138:146:int getNavigationBarColor(android.content.Context,boolean) -> getNavigationBarColor
    121:131:int getStatusBarColor(android.content.Context,boolean) -> getStatusBarColor
    150:150:boolean isUsingLightSystemBar(int,boolean) -> isUsingLightSystemBar
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    54:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    88:88:int getItemSpacing() -> getItemSpacing
    80:80:int getLineSpacing() -> getLineSpacing
    182:182:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    248:248:int getRowCount() -> getRowCount
    253:257:int getRowIndex(android.view.View) -> getRowIndex
    97:97:boolean isSingleLine() -> isSingleLine
    73:76:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    190:243:void onLayout(boolean,int,int,int,int) -> onLayout
    107:174:void onMeasure(int,int) -> onMeasure
    92:92:void setItemSpacing(int) -> setItemSpacing
    84:84:void setLineSpacing(int) -> setLineSpacing
    102:102:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:234:void draw(android.graphics.Canvas) -> draw
    242:244:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    138:140:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    130:132:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:194:void onLayout(boolean,int,int,int,int) -> onLayout
    199:200:void onSizeChanged(int,int,int,int) -> onSizeChanged
    153:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:118:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
    36:36:boolean isMeizuDevice() -> isMeizuDevice
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    55:55:void <clinit>() -> <clinit>
    91:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    136:149:void adjustAppearance() -> adjustAppearance
    175:181:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    189:189:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    107:126:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    255:257:int[] onCreateDrawableState(int) -> onCreateDrawableState
    163:169:void setActionView(android.view.View) -> setActionView
    199:202:void setCheckable(boolean) -> setCheckable
    209:210:void setChecked(boolean) -> setChecked
    284:284:void setHorizontalPadding(int) -> setHorizontalPadding
    219:236:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    288:288:void setIconPadding(int) -> setIconPadding
    240:240:void setIconSize(int) -> setIconSize
    263:267:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    292:292:void setMaxLines(int) -> setMaxLines
    280:280:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    272:272:void setTextAppearance(int) -> setTextAppearance
    276:276:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    194:194:void setTitle(java.lang.CharSequence) -> setTitle
    130:132:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    76:76:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    81:82:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    38:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    37:44:void <init>() -> <init>
    62:64:void addState(int[],android.animation.ValueAnimator) -> addState
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    120:122:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.StaticLayoutBuilderCompat -> com.google.android.material.internal.StaticLayoutBuilderCompat:
    57:57:void <clinit>() -> <clinit>
    88:100:void <init>(java.lang.CharSequence,android.text.TextPaint,int) -> <init>
    224:284:android.text.StaticLayout build() -> build
    309:348:void createConstructorWithReflection() -> createConstructorWithReflection
    114:114:com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int) -> obtain
    125:125:com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment) -> setAlignment
    218:218:com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    204:204:com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int) -> setHyphenationFrequency
    139:139:com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean) -> setIncludePad
    353:353:com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean) -> setIsRtl
    190:191:com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float) -> setLineSpacing
    176:176:com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int) -> setMaxLines
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException -> com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException:
    360:360:void <init>(java.lang.Throwable) -> <init>
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
    41:77:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    113:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:105:float getTextWidth(java.lang.String) -> getTextWidth
    82:82:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:150:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:91:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:156:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:63:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    50:53:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextWatcherAdapter -> com.google.android.material.internal.TextWatcherAdapter:
    33:33:void <init>() -> <init>
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    43:46:void <clinit>() -> <clinit>
    211:211:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    127:146:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    215:215:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    156:185:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    240:241:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    199:206:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    227:234:boolean isTheme(android.content.Context,int[]) -> isTheme
    75:81:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    113:119:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ToolbarUtils -> com.google.android.material.internal.ToolbarUtils:
    48:48:void <clinit>() -> <clinit>
    96:103:android.widget.ImageView getImageView(androidx.appcompat.widget.Toolbar,android.graphics.drawable.Drawable) -> getImageView
    88:88:android.widget.ImageView getLogoImageView(androidx.appcompat.widget.Toolbar) -> getLogoImageView
    68:69:android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar) -> getSubtitleTextView
    73:79:java.util.List getTextViewsWithText(androidx.appcompat.widget.Toolbar,java.lang.CharSequence) -> getTextViewsWithText
    62:63:android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar) -> getTitleTextView
com.google.android.material.internal.ToolbarUtils$1 -> com.google.android.material.internal.ToolbarUtils$1:
    49:49:void <init>() -> <init>
    49:49:int compare(java.lang.Object,java.lang.Object) -> compare
    52:52:int compare(android.view.View,android.view.View) -> compare
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    219:236:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    82:83:float dpToPx(android.content.Context,int) -> dpToPx
    350:351:java.lang.Integer getBackgroundColor(android.view.View) -> getBackgroundColor
    266:269:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    78:78:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    61:71:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    241:246:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    87:88:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
    89:89:void <init>(android.view.View) -> <init>
    92:95:void run() -> run
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
    229:229:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    232:232:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$4 -> com.google.android.material.internal.ViewUtils$4:
    247:247:void <init>() -> <init>
    250:251:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
    125:129:void <init>(int,int,int,int) -> <init>
    132:136:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:59:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:53:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    30:30:float dist(float,float,float,float) -> dist
    65:69:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
com.google.android.material.motion.MotionUtils -> com.google.android.material.motion.MotionUtils:
    101:103:float getControlPoint(java.lang.String[],int) -> getControlPoint
    95:97:java.lang.String getEasingContent(java.lang.String,java.lang.String) -> getEasingContent
    90:91:boolean isEasingType(java.lang.String,java.lang.String) -> isEasingType
    48:48:int resolveThemeDuration(android.content.Context,int,int) -> resolveThemeDuration
    56:83:android.animation.TimeInterpolator resolveThemeInterpolator(android.content.Context,int,android.animation.TimeInterpolator) -> resolveThemeInterpolator
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    45:47:void <clinit>() -> <clinit>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:136:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    92:95:void onAttachedToWindow() -> onAttachedToWindow
    105:109:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
    42:44:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:64:void cancel() -> cancel
    54:54:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:49:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:69:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
    46:47:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    106:108:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    118:120:int resolveInteger(android.content.Context,int,int) -> resolveInteger
    62:74:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    84:85:int resolveOrThrow(android.view.View,int) -> resolveOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    62:81:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    91:110:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    173:180:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    122:131:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    259:259:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    142:145:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
    188:188:boolean isFontScaleAtLeast1_3(android.content.Context) -> isFontScaleAtLeast1_3
    195:195:boolean isFontScaleAtLeast2_0(android.content.Context) -> isFontScaleAtLeast2_0
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    77:117:void <init>(android.content.Context,int) -> <init>
    48:48:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    48:48:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    48:48:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    269:289:void createFallbackFont() -> createFallbackFont
    263:264:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    132:154:android.graphics.Typeface getFont(android.content.Context) -> getFont
    172:216:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    235:237:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    363:363:android.content.res.ColorStateList getTextColor() -> getTextColor
    371:371:float getTextSize() -> getTextSize
    367:367:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    375:375:void setTextSize(float) -> setTextSize
    379:384:boolean shouldLoadFontSynchronously(android.content.Context) -> shouldLoadFontSynchronously
    303:314:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    328:331:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    342:356:void updateTextPaintMeasureState(android.content.Context,android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    194:194:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    204:205:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    197:199:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
    239:239:void <init>(com.google.android.material.resources.TextAppearance,android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    249:249:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    243:244:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    43:43:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
    30:30:void <init>() -> <init>
com.google.android.material.resources.TypefaceUtils -> com.google.android.material.resources.TypefaceUtils:
    45:45:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.Context,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
    52:60:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.res.Configuration,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:58:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:63:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:127:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:147:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:134:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:117:boolean onStateChange(int[]) -> onStateChange
    153:153:void setAlpha(int) -> setAlpha
    158:158:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:83:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:68:void setTint(int) -> setTint
    78:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:73:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    175:177:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:182:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    42:77:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    204:213:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    224:224:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
    60:66:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    68:83:void <init>(int) -> <init>
    132:182:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    96:116:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    187:187:android.graphics.Paint getShadowPaint() -> getShadowPaint
    87:90:void setShadowColor(int) -> setShadowColor
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
    28:29:void <init>(float) -> <init>
    49:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
    37:45:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    58:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    30:30:void <init>() -> <init>
    98:98:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
    24:26:void <init>() -> <init>
    47:52:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    29:29:void <init>() -> <init>
    64:64:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    77:112:void <clinit>() -> <clinit>
    75:75:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    186:186:void <init>() -> <init>
    194:194:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    207:207:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    118:217:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    75:75:java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    75:75:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    75:75:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable) -> access$200
    75:75:boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$402
    1277:1281:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1226:1236:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1165:1165:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1177:1196:void calculateStrokePath() -> calculateStrokePath
    1292:1297:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1269:1270:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    622:624:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    175:181:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    958:983:void draw(android.graphics.Canvas) -> draw
    1112:1134:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1065:1065:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    1044:1044:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1054:1060:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1078:1079:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    460:460:int getAlpha() -> getAlpha
    1378:1381:float getBottomLeftCornerResolvedSize() -> getBottomLeftCornerResolvedSize
    1386:1389:float getBottomRightCornerResolvedSize() -> getBottomRightCornerResolvedSize
    489:490:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1354:1357:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    237:237:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    673:673:float getElevation() -> getElevation
    320:320:android.content.res.ColorStateList getFillColor() -> getFillColor
    636:636:float getInterpolation() -> getInterpolation
    1203:1217:void getOutline(android.graphics.Outline) -> getOutline
    523:527:boolean getPadding(android.graphics.Rect) -> getPadding
    656:656:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    448:448:int getResolvedTintColor() -> getResolvedTintColor
    1140:1142:int getShadowOffsetX() -> getShadowOffsetX
    1147:1149:int getShadowOffsetY() -> getShadowOffsetY
    824:824:int getShadowRadius() -> getShadowRadius
    274:274:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1346:1347:float getStrokeInsetLength() -> getStrokeInsetLength
    364:364:android.content.res.ColorStateList getTintList() -> getTintList
    1362:1365:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    1370:1373:float getTopRightCornerResolvedSize() -> getTopRightCornerResolvedSize
    694:694:float getTranslationZ() -> getTranslationZ
    479:484:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    715:715:float getZ() -> getZ
    932:934:boolean hasCompatShadow() -> hasCompatShadow
    939:939:boolean hasFill() -> hasFill
    945:947:boolean hasStroke() -> hasStroke
    615:616:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    870:871:void invalidateSelf() -> invalidateSelf
    879:879:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    599:600:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    1400:1400:boolean isRoundRect() -> isRoundRect
    1302:1306:boolean isStateful() -> isStateful
    987:1030:void maybeDrawCompatShadow(android.graphics.Canvas) -> maybeDrawCompatShadow
    243:244:android.graphics.drawable.Drawable mutate() -> mutate
    952:953:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1311:1315:boolean onStateChange(int[]) -> onStateChange
    1084:1101:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    843:844:boolean requiresCompatShadow() -> requiresCompatShadow
    465:467:void setAlpha(int) -> setAlpha
    473:474:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    500:500:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    682:684:void setElevation(float) -> setElevation
    307:309:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    647:650:void setInterpolation(float) -> setInterpolation
    540:545:void setPadding(int,int,int,int) -> setPadding
    661:663:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    770:770:void setShadowBitmapDrawingEnable(boolean) -> setShadowBitmapDrawingEnable
    906:908:void setShadowColor(int) -> setShadowColor
    261:262:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    409:410:void setStroke(float,int) -> setStroke
    420:421:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    329:331:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    439:440:void setStrokeWidth(float) -> setStrokeWidth
    379:379:void setTint(int) -> setTint
    356:358:void setTintList(android.content.res.ColorStateList) -> setTintList
    347:350:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1323:1337:boolean updateColorsForState(int[]) -> updateColorsForState
    1240:1259:boolean updateTintFilter() -> updateTintFilter
    728:733:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
    218:218:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    222:223:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    228:229:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
    1181:1181:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1187:1189:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
    1409:1437:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1409:1463:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1470:1472:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
    33:37:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:59:void setElevation(android.view.View,float) -> setElevation
    70:72:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:84:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
    36:37:void <init>(float) -> <init>
    56:60:boolean equals(java.lang.Object) -> equals
    48:48:float getCornerSize(android.graphics.RectF) -> getCornerSize
    65:66:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
    24:26:void <init>() -> <init>
    43:44:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
    565:565:void <clinit>() -> <clinit>
    41:41:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    580:594:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    598:612:void <init>() -> <init>
    435:435:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    444:444:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    454:454:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    465:472:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    480:480:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    489:489:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    504:541:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    732:732:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    652:652:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    692:692:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    642:642:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    682:682:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    547:558:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    702:702:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    722:722:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    712:712:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    622:622:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    662:662:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    632:632:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    672:672:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    791:804:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    738:738:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    747:747:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    752:752:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    775:780:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
    47:68:void <init>() -> <init>
    47:84:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    44:44:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    44:44:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    44:44:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    44:44:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    44:44:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    44:44:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    44:44:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    44:44:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    44:44:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    44:44:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    44:44:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    44:44:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    429:429:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    418:421:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    122:125:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    131:134:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    339:340:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    350:354:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    182:182:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    189:189:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    297:298:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    308:312:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    168:168:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    175:175:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    214:215:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    225:229:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    140:140:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    147:147:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    255:256:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    266:270:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    154:154:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    161:161:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
    55:75:void <init>() -> <init>
    170:180:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    185:228:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    99:99:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    118:143:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    309:319:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    280:287:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    265:272:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    247:257:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    295:302:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    83:83:com.google.android.material.shape.ShapeAppearancePathProvider getInstance() -> getInstance
    234:243:boolean pathOverlapsCorner(android.graphics.Path,int) -> pathOverlapsCorner
    148:156:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    160:166:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$Lazy -> com.google.android.material.shape.ShapeAppearancePathProvider$Lazy:
    39:39:void <clinit>() -> <clinit>
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
    348:353:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    90:95:void <init>() -> <init>
    211:232:void addArc(float,float,float,float,float,float) -> addArc
    293:307:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    275:277:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    242:244:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    285:285:boolean containsIncompatibleShadowOp() -> containsIncompatibleShadowOp
    255:258:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    327:327:float getCurrentShadowAngle() -> getCurrentShadowAngle
    331:331:float getEndShadowAngle() -> getEndShadowAngle
    319:319:float getEndX() -> getEndX
    323:323:float getEndY() -> getEndY
    311:311:float getStartX() -> getStartX
    315:315:float getStartY() -> getStartY
    130:144:void lineTo(float,float) -> lineTo
    107:107:void reset(float,float) -> reset
    112:120:void reset(float,float,float,float) -> reset
    351:351:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    355:355:void setEndShadowAngle(float) -> setEndShadowAngle
    343:343:void setEndX(float) -> setEndX
    347:347:void setEndY(float) -> setEndY
    335:335:void setStartX(float) -> setStartX
    339:339:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
    258:258:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    262:263:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
    415:416:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    425:430:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
    383:386:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    395:402:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    406:406:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    527:527:void <clinit>() -> <clinit>
    560:564:void <init>(float,float,float,float) -> <init>
    526:526:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    526:526:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    526:526:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    526:526:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    526:526:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    526:526:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    526:526:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    526:526:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    569:574:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    590:590:float getBottom() -> getBottom
    578:578:float getLeft() -> getLeft
    586:586:float getRight() -> getRight
    610:610:float getStartAngle() -> getStartAngle
    614:614:float getSweepAngle() -> getSweepAngle
    582:582:float getTop() -> getTop
    606:606:void setBottom(float) -> setBottom
    594:594:void setLeft(float) -> setLeft
    602:602:void setRight(float) -> setRight
    618:618:void setStartAngle(float) -> setStartAngle
    622:622:void setSweepAngle(float) -> setSweepAngle
    598:598:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    446:446:void <init>() -> <init>
    446:446:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    446:446:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    446:446:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    446:446:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    452:456:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    436:439:void <init>() -> <init>
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    364:364:void <clinit>() -> <clinit>
    362:362:void <init>() -> <init>
    368:368:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    227:238:void <clinit>() -> <clinit>
    269:687:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    96:96:android.content.Context access$000(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$000
    96:96:int access$100(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$100
    96:96:void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1200
    96:96:void access$1300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1300
    96:96:com.google.android.material.snackbar.ContentViewCallback access$1400(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1400
    96:96:boolean access$1500() -> access$1500
    96:96:int access$200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$200
    96:96:int access$300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$300
    96:96:java.lang.String access$400() -> access$400
    96:96:int access$602(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$602
    96:96:int access$702(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$702
    96:96:int access$802(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$802
    96:96:void access$900(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$900
    861:861:void animateViewIn() -> animateViewIn
    882:885:void animateViewOut(int) -> animateViewOut
    844:854:int calculateBottomMarginForAnchorView() -> calculateBottomMarginForAnchorView
    628:628:void dismiss() -> dismiss
    632:632:void dispatchDismiss(int) -> dispatchDismiss
    920:922:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    612:612:android.content.Context getContext() -> getContext
    489:489:int getDuration() -> getDuration
    704:704:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    933:935:android.animation.ValueAnimator getScaleAnimator(float[]) -> getScaleAnimator
    786:789:int getScreenHeight() -> getScreenHeight
    455:455:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    1032:1035:int getTranslationYBottom() -> getTranslationYBottom
    780:781:int getViewAbsoluteBottom() -> getViewAbsoluteBottom
    464:466:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    1041:1045:void hideView(int) -> hideView
    684:684:boolean isShownOrQueued() -> isShownOrQueued
    447:449:boolean isSwipeDismissable() -> isSwipeDismissable
    733:737:void onAttachedToWindow() -> onAttachedToWindow
    743:748:void onDetachedFromWindow() -> onDetachedFromWindow
    759:761:void onLayoutChange() -> onLayoutChange
    1063:1076:void onViewHidden(int) -> onViewHidden
    1050:1056:void onViewShown() -> onViewShown
    839:840:void recalculateAndUpdateMargins() -> recalculateAndUpdateMargins
    478:478:com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int) -> setDuration
    797:834:void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> setUpBehavior
    1082:1088:boolean shouldAnimate() -> shouldAnimate
    443:443:boolean shouldUpdateGestureInset() -> shouldUpdateGestureInset
    623:623:void show() -> show
    708:729:void showView() -> showView
    766:774:void showViewImpl() -> showViewImpl
    890:903:void startFadeInAnimation() -> startFadeInAnimation
    907:916:void startFadeOutAnimation(int) -> startFadeOutAnimation
    948:990:void startSlideInAnimation() -> startSlideInAnimation
    994:1028:void startSlideOutAnimation(int) -> startSlideOutAnimation
    415:438:void updateMargins() -> updateMargins
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    239:239:void <init>() -> <init>
    242:247:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    910:910:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    913:913:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    923:923:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    926:926:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$12 -> com.google.android.material.snackbar.BaseTransientBottomBar$12:
    936:936:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    939:941:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$13 -> com.google.android.material.snackbar.BaseTransientBottomBar$13:
    960:960:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    969:969:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    963:963:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$14 -> com.google.android.material.snackbar.BaseTransientBottomBar$14:
    973:974:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    978:987:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$15 -> com.google.android.material.snackbar.BaseTransientBottomBar$15:
    999:999:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1007:1007:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1002:1002:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$16 -> com.google.android.material.snackbar.BaseTransientBottomBar$16:
    1011:1012:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1016:1025:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$2 -> com.google.android.material.snackbar.BaseTransientBottomBar$2:
    273:273:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    276:299:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$3 -> com.google.android.material.snackbar.BaseTransientBottomBar$3:
    374:374:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    380:383:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.snackbar.BaseTransientBottomBar$4 -> com.google.android.material.snackbar.BaseTransientBottomBar$4:
    391:391:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    395:397:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    403:406:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.snackbar.BaseTransientBottomBar$5 -> com.google.android.material.snackbar.BaseTransientBottomBar$5:
    689:689:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    697:698:void dismiss(int) -> dismiss
    692:692:void show() -> show
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    749:749:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    752:752:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    804:804:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    807:810:void onDismiss(android.view.View) -> onDismiss
    819:823:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    862:862:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    865:875:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    897:897:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    900:900:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    120:120:void <init>() -> <init>
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    1315:1316:void <init>() -> <init>
    1312:1312:void access$1100(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1100
    1326:1326:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1332:1333:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1321:1321:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    1343:1346:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1355:1355:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1360:1370:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1351:1351:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    1094:1094:void <clinit>() -> <clinit>
    1121:1149:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1093:1093:android.graphics.Rect access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) -> access$1000
    1093:1093:void access$500(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$500
    1274:1276:void addToTargetParent(android.view.ViewGroup) -> addToTargetParent
    1291:1306:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    1262:1262:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1250:1250:int getAnimationMode() -> getAnimationMode
    1258:1258:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1270:1270:int getMaxInlineActionWidth() -> getMaxInlineActionWidth
    1266:1266:int getMaxWidth() -> getMaxWidth
    1219:1223:void onAttachedToWindow() -> onAttachedToWindow
    1228:1230:void onDetachedFromWindow() -> onDetachedFromWindow
    1211:1213:void onLayout(boolean,int,int,int,int) -> onLayout
    1202:1205:void onMeasure(int,int) -> onMeasure
    1254:1254:void setAnimationMode(int) -> setAnimationMode
    1155:1155:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1160:1165:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1170:1176:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    1183:1188:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1280:1280:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
    1236:1243:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    1196:1197:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1284:1284:void updateOriginalMargins(android.view.ViewGroup$MarginLayoutParams) -> updateOriginalMargins
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    1095:1095:void <init>() -> <init>
com.google.android.material.snackbar.Snackbar -> com.google.android.material.snackbar.Snackbar:
    70:71:void <clinit>() -> <clinit>
    112:114:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    128:128:void dismiss() -> dismiss
    270:287:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    524:524:android.widget.Button getActionView() -> getActionView
    528:528:com.google.android.material.snackbar.SnackbarContentLayout getContentLayout() -> getContentLayout
    361:373:int getDuration() -> getDuration
    520:520:android.widget.TextView getMessageView() -> getMessageView
    238:241:boolean hasSnackbarContentStyleAttrs(android.content.Context) -> hasSnackbarContentStyleAttrs
    158:158:com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    263:263:com.google.android.material.snackbar.Snackbar make(android.view.View,int,int) -> make
    197:218:com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int) -> makeInternal
    324:324:com.google.android.material.snackbar.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    336:345:com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    302:302:com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence) -> setText
    121:121:void show() -> show
com.google.android.material.snackbar.Snackbar$1 -> com.google.android.material.snackbar.Snackbar$1:
    346:346:void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener) -> <init>
    349:351:void onClick(android.view.View) -> onClick
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    496:496:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    501:513:void onMeasure(int,int) -> onMeasure
    489:489:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    489:489:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    489:489:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    489:489:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    489:489:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    489:489:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    47:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    142:147:void animateContentIn(int,int) -> animateContentIn
    153:158:void animateContentOut(int,int) -> animateContentOut
    62:62:android.widget.Button getActionView() -> getActionView
    58:58:android.widget.TextView getMessageView() -> getMessageView
    52:54:void onFinishInflate() -> onFinishInflate
    77:107:void onMeasure(int,int) -> onMeasure
    163:163:void setMaxInlineActionWidth(int) -> setMaxInlineActionWidth
    67:71:void updateActionTextColorAlphaIfNeeded(float) -> updateActionTextColorAlphaIfNeeded
    128:136:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    114:120:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    49:53:void <init>() -> <init>
    205:209:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    107:113:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:244:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    169:171:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    220:220:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    121:129:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    137:141:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    145:150:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:159:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    224:236:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    75:103:void show(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> show
    190:199:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:59:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    179:181:void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> <init>
    185:185:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:42:void <init>(android.os.Parcelable) -> <init>
    46:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:78:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
    45:112:void <init>(com.google.android.material.textfield.TextInputLayout,int) -> <init>
    39:39:boolean access$000(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$000
    39:39:void access$100(com.google.android.material.textfield.ClearTextEndIconDelegate,boolean) -> access$100
    39:39:android.view.View$OnFocusChangeListener access$200(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$200
    39:39:android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$300
    148:159:void animateIcon(boolean) -> animateIcon
    187:190:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    203:206:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    165:177:void initAnimators() -> initAnimators
    117:136:void initialize() -> initialize
    141:144:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    219:222:boolean shouldBeVisible() -> shouldBeVisible
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
    46:46:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    55:58:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
    62:62:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    65:65:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.ClearTextEndIconDelegate$3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$3:
    69:69:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    72:78:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.ClearTextEndIconDelegate$4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4:
    82:82:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    85:101:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$4$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4$1:
    89:89:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate$4,android.widget.EditText) -> <init>
    92:94:void run() -> run
com.google.android.material.textfield.ClearTextEndIconDelegate$5 -> com.google.android.material.textfield.ClearTextEndIconDelegate$5:
    123:123:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    126:131:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.ClearTextEndIconDelegate$6 -> com.google.android.material.textfield.ClearTextEndIconDelegate$6:
    170:170:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    173:173:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$7 -> com.google.android.material.textfield.ClearTextEndIconDelegate$7:
    178:178:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    181:181:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.ClearTextEndIconDelegate$8 -> com.google.android.material.textfield.ClearTextEndIconDelegate$8:
    191:191:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    194:195:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.ClearTextEndIconDelegate$9 -> com.google.android.material.textfield.ClearTextEndIconDelegate$9:
    207:207:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    210:212:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
    33:33:void <init>(com.google.android.material.textfield.TextInputLayout,int) -> <init>
    38:40:void initialize() -> initialize
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    43:43:void <init>() -> <init>
    47:50:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    86:97:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    60:60:boolean hasCutout() -> hasCutout
    81:81:void removeCutout() -> removeCutout
    66:71:void setCutout(float,float,float,float) -> setCutout
    76:76:void setCutout(android.graphics.RectF) -> setCutout
    54:56:void setPaintStyles() -> setPaintStyles
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    73:73:void <clinit>() -> <clinit>
    77:241:void <init>(com.google.android.material.textfield.TextInputLayout,int) -> <init>
    71:71:android.widget.AutoCompleteTextView access$000(android.widget.EditText) -> access$000
    71:71:android.view.accessibility.AccessibilityManager access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$100
    71:71:android.text.TextWatcher access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1000
    71:71:com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$1100(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1100
    71:71:android.view.View$OnFocusChangeListener access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1200
    71:71:boolean access$1300() -> access$1300
    71:71:android.view.View$OnAttachStateChangeListener access$1400(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1400
    71:71:void access$1500(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1500
    71:71:void access$1600(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1600
    71:71:boolean access$1700(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1700
    71:71:boolean access$1800(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1800
    71:71:android.animation.ValueAnimator access$1900(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1900
    71:71:boolean access$200(android.widget.EditText) -> access$200
    71:71:void access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$300
    71:71:boolean access$402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$402
    71:71:void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$500
    71:71:void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$600
    71:71:void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$700
    71:71:void access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$800
    71:71:void access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$900
    368:383:void addRippleEffect(android.widget.AutoCompleteTextView) -> addRippleEffect
    423:443:void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnFilledLayout
    393:415:void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnOutlinedLayout
    557:560:void addTouchExplorationStateChangeListenerIfNeeded() -> addTouchExplorationStateChangeListenerIfNeeded
    501:507:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    541:544:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    481:490:com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int) -> getPopUpMaterialShapeDrawable
    528:530:void initAnimators() -> initAnimators
    246:303:void initialize() -> initialize
    495:495:boolean isDropdownPopupActive() -> isDropdownPopupActive
    516:516:boolean isEditable(android.widget.EditText) -> isEditable
    566:567:void removeTouchExplorationStateChangeListenerIfNeeded() -> removeTouchExplorationStateChangeListenerIfNeeded
    520:523:void setEndIconChecked(boolean) -> setEndIconChecked
    342:347:void setPopupBackground(android.widget.AutoCompleteTextView) -> setPopupBackground
    451:467:void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView) -> setUpDropdownShowHideBehavior
    320:337:void showHideDropdown(android.widget.AutoCompleteTextView) -> showHideDropdown
    511:512:void updateDropdownPopupDirty() -> updateDropdownPopupDirty
    357:363:void updateOutlinedRippleEffect(android.widget.AutoCompleteTextView) -> updateOutlinedRippleEffect
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
    78:78:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    82:90:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1:
    91:91:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView) -> <init>
    94:96:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$10 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$10:
    468:468:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    471:472:void onDismiss() -> onDismiss
com.google.android.material.textfield.DropdownMenuEndIconDelegate$11 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$11:
    531:531:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    534:535:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.DropdownMenuEndIconDelegate$12 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$12:
    545:545:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    548:549:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$2:
    102:102:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    105:108:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$3:
    113:113:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout) -> <init>
    117:125:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    131:141:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$4:
    146:146:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    150:166:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5:
    173:173:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    177:197:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1:
    181:181:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$5,android.widget.AutoCompleteTextView) -> <init>
    184:184:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$6:
    202:202:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    205:205:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    210:210:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$7:
    215:215:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    218:222:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$8:
    290:290:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    293:294:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$9:
    452:452:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> <init>
    455:460:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
    40:44:void <init>(com.google.android.material.textfield.TextInputLayout,int) -> <init>
com.google.android.material.textfield.IconHelper -> com.google.android.material.textfield.IconHelper:
    73:91:void applyIconTint(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> applyIconTint
    119:125:int[] mergeIconState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton) -> mergeIconState
    102:113:void refreshIconDrawableState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList) -> refreshIconDrawableState
    50:57:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    38:39:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    44:45:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    124:128:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    65:65:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    65:65:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    65:65:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    65:65:com.google.android.material.textfield.TextInputLayout access$300(com.google.android.material.textfield.IndicatorViewController) -> access$300
    394:418:void addIndicator(android.widget.TextView,int) -> addIndicator
    359:377:void adjustIndicatorPadding() -> adjustIndicatorPadding
    383:383:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    336:337:void cancelCaptionAnimator() -> cancelCaptionAnimator
    311:314:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    321:323:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    328:331:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    541:541:boolean errorShouldBeShown() -> errorShouldBeShown
    349:351:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    621:621:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    566:566:java.lang.CharSequence getErrorText() -> getErrorText
    590:590:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    595:595:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    570:570:java.lang.CharSequence getHelperText() -> getHelperText
    533:533:android.view.View getHelperTextView() -> getHelperTextView
    626:626:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    389:389:int getIndicatorPadding(boolean,int,int) -> getIndicatorPadding
    169:182:void hideError() -> hideError
    145:152:void hideHelperText() -> hideHelperText
    545:547:boolean isCaptionStateError(int) -> isCaptionStateError
    476:476:boolean isErrorEnabled() -> isErrorEnabled
    480:480:boolean isHelperTextEnabled() -> isHelperTextEnabled
    422:432:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    278:295:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    613:615:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    443:472:void setErrorEnabled(boolean) -> setErrorEnabled
    606:608:void setErrorTextAppearance(int) -> setErrorTextAppearance
    599:601:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    642:644:void setHelperTextAppearance(int) -> setHelperTextAppearance
    485:528:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    635:637:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    584:584:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    575:578:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    437:437:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    195:199:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    156:165:void showError(java.lang.CharSequence) -> showError
    132:141:void showHelper(java.lang.CharSequence) -> showHelper
    212:268:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    237:237:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    240:251:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    257:258:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.IndicatorViewController$2 -> com.google.android.material.textfield.IndicatorViewController$2:
    509:509:void <init>(com.google.android.material.textfield.IndicatorViewController) -> <init>
    513:516:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.MaterialAutoCompleteTextView -> com.google.android.material.textfield.MaterialAutoCompleteTextView:
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:143:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$000
    59:59:void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object) -> access$100
    278:283:com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor() -> findTextInputLayoutAncestor
    206:210:java.lang.CharSequence getHint() -> getHint
    230:270:int measureContentWidth() -> measureContentWidth
    187:197:void onAttachedToWindow() -> onAttachedToWindow
    215:225:void onMeasure(int,int) -> onMeasure
    157:158:void setAdapter(android.widget.ListAdapter) -> setAdapter
    170:170:void setSimpleItems(int) -> setSimpleItems
    182:182:void setSimpleItems(java.lang.String[]) -> setSimpleItems
    148:151:void showDropDown() -> showDropDown
    291:291:void updateText(java.lang.Object) -> updateText
com.google.android.material.textfield.MaterialAutoCompleteTextView$1 -> com.google.android.material.textfield.MaterialAutoCompleteTextView$1:
    115:115:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> <init>
    119:134:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
    26:26:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    31:33:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    36:80:void <init>(com.google.android.material.textfield.TextInputLayout,int) -> <init>
    34:34:boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$000
    34:34:android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$100
    124:126:boolean hasPasswordTransformation() -> hasPasswordTransformation
    85:119:void initialize() -> initialize
    131:134:boolean isInputTypePassword(android.widget.EditText) -> isInputTypePassword
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$1:
    37:37:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    42:42:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$2:
    47:47:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    50:54:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    58:58:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    61:67:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1:
    68:68:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate$3,android.widget.EditText) -> <init>
    71:71:void run() -> run
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$4:
    92:92:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    95:111:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.StartCompoundLayout -> com.google.android.material.textfield.StartCompoundLayout:
    71:94:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    170:170:java.lang.CharSequence getPrefixText() -> getPrefixText
    179:179:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    153:153:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    247:247:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    202:202:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    130:142:void initPrefixTextView(androidx.appcompat.widget.TintTypedArray) -> initPrefixTextView
    99:125:void initStartIconView(androidx.appcompat.widget.TintTypedArray) -> initStartIconView
    224:224:boolean isStartIconVisible() -> isStartIconVisible
    290:291:void onHintStateChanged(boolean) -> onHintStateChanged
    147:148:void onMeasure(int,int) -> onMeasure
    228:228:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    157:159:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    183:183:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    174:174:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    232:232:void setStartIconCheckable(boolean) -> setStartIconCheckable
    240:241:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    187:196:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    206:206:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    211:212:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    251:253:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    258:260:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    216:219:void setStartIconVisible(boolean) -> setStartIconVisible
    265:269:void setupAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> setupAccessibilityNodeInfo
    274:286:void updatePrefixTextViewPadding() -> updatePrefixTextViewPadding
    296:303:void updateVisibility() -> updateVisibility
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    207:216:java.lang.String getAccessibilityNodeInfoText(com.google.android.material.textfield.TextInputLayout) -> getAccessibilityNodeInfoText
    161:165:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    171:174:boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point) -> getGlobalVisibleRect
    104:108:java.lang.CharSequence getHint() -> getHint
    137:138:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    125:130:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    85:95:void onAttachedToWindow() -> onAttachedToWindow
    114:118:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    195:201:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    179:189:boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    145:145:void setTextInputLayoutFocusedRectEnabled(boolean) -> setTextInputLayoutFocusedRectEnabled
    156:156:boolean shouldUseTextInputLayoutFocusedRect(com.google.android.material.textfield.TextInputLayout) -> shouldUseTextInputLayoutFocusedRect
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    190:190:void <clinit>() -> <clinit>
    436:436:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    210:818:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    188:188:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    188:188:boolean access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    188:188:void access$200(com.google.android.material.textfield.TextInputLayout,int) -> access$200
    188:188:com.google.android.material.internal.CheckableImageButton access$300(com.google.android.material.textfield.TextInputLayout) -> access$300
    188:188:com.google.android.material.textfield.StartCompoundLayout access$400(com.google.android.material.textfield.TextInputLayout) -> access$400
    188:188:com.google.android.material.textfield.IndicatorViewController access$500(com.google.android.material.textfield.TextInputLayout) -> access$500
    3654:3656:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    3626:3626:void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> addOnEndIconChangedListener
    2392:2394:void addPlaceholderTextView() -> addPlaceholderTextView
    824:839:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    956:977:void adjustFilledEditTextPaddingForLargeFont() -> adjustFilledEditTextPaddingForLargeFont
    4363:4379:void animateToExpansionFraction(float) -> animateToExpansionFraction
    2809:2831:void applyBoxAttributes() -> applyBoxAttributes
    2836:2849:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    4188:4189:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    899:920:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    2800:2803:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    2707:2729:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    2779:2785:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    2771:2774:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    2754:2765:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    2690:2698:int calculateLabelMarginTop() -> calculateLabelMarginTop
    2853:2853:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    2857:2857:boolean canDrawStroke() -> canDrawStroke
    4182:4183:void closeCutout() -> closeCutout
    4135:4150:void collapseHint(boolean) -> collapseHint
    2353:2355:androidx.transition.Fade createPlaceholderFadeTransition() -> createPlaceholderFadeTransition
    4154:4154:boolean cutoutEnabled() -> cutoutEnabled
    3888:3889:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    3898:3899:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    1360:1392:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    3017:3019:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    4092:4094:void draw(android.graphics.Canvas) -> draw
    4110:4129:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    4104:4105:void drawHint(android.graphics.Canvas) -> drawHint
    4199:4228:void drawableStateChanged() -> drawableStateChanged
    4343:4358:void expandHint(boolean) -> expandHint
    1515:1518:int getBaseline() -> getBaseline
    845:848:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    1216:1216:int getBoxBackgroundColor() -> getBoxBackgroundColor
    884:884:int getBoxBackgroundMode() -> getBoxBackgroundMode
    1001:1001:int getBoxCollapsedPaddingTop() -> getBoxCollapsedPaddingTop
    1313:1315:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    1325:1327:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    1301:1303:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    1289:1291:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    1099:1099:int getBoxStrokeColor() -> getBoxStrokeColor
    1149:1149:android.content.res.ColorStateList getBoxStrokeErrorColor() -> getBoxStrokeErrorColor
    1037:1037:int getBoxStrokeWidth() -> getBoxStrokeWidth
    1074:1074:int getBoxStrokeWidthFocused() -> getBoxStrokeWidthFocused
    2635:2635:int getCounterMaxLength() -> getCounterMaxLength
    2644:2645:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    2209:2209:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    2166:2166:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1877:1877:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    1571:1571:android.widget.EditText getEditText() -> getEditText
    3580:3580:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    3883:3884:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    3540:3540:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    3378:3378:int getEndIconMode() -> getEndIconMode
    4012:4015:com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable() -> getEndIconToUpdateDummyDrawable
    3879:3879:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    3030:3030:java.lang.CharSequence getError() -> getError
    2009:2009:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    1908:1908:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2070:2070:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    4403:4403:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    3042:3043:java.lang.CharSequence getHelperText() -> getHelperText
    1985:1985:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1749:1749:java.lang.CharSequence getHint() -> getHint
    4398:4398:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    4393:4393:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1858:1858:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2735:2738:int getLabelLeftBoundAlightWithPrefix(int,boolean) -> getLabelLeftBoundAlightWithPrefix
    2744:2747:int getLabelRightBoundAlignedWithSuffix(int,boolean) -> getLabelRightBoundAlignedWithSuffix
    1621:1621:int getMaxEms() -> getMaxEms
    1703:1703:int getMaxWidth() -> getMaxWidth
    1596:1596:int getMinEms() -> getMinEms
    1662:1662:int getMinWidth() -> getMinWidth
    3763:3763:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    3749:3749:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2333:2333:java.lang.CharSequence getPlaceholderText() -> getPlaceholderText
    2448:2448:int getPlaceholderTextAppearance() -> getPlaceholderTextAppearance
    2425:2425:android.content.res.ColorStateList getPlaceholderTextColor() -> getPlaceholderTextColor
    2471:2471:java.lang.CharSequence getPrefixText() -> getPrefixText
    2503:2503:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    2484:2484:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    3310:3310:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    3200:3200:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    2537:2537:java.lang.CharSequence getSuffixText() -> getSuffixText
    2582:2582:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    2550:2550:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    1354:1354:android.graphics.Typeface getTypeface() -> getTypeface
    3894:3894:boolean hasEndIcon() -> hasEndIcon
    2384:2387:void hidePlaceholderText() -> hidePlaceholderText
    3457:3457:boolean isEndIconVisible() -> isEndIconVisible
    4339:4339:boolean isErrorIconVisible() -> isErrorIconVisible
    1979:1979:boolean isHelperTextEnabled() -> isHelperTextEnabled
    4383:4383:boolean isHintExpanded() -> isHintExpanded
    1814:1814:boolean isProvidingHint() -> isProvidingHint
    2789:2790:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    888:894:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    4099:4100:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    4053:4073:void onLayout(boolean,int,int,int,int) -> onLayout
    3117:3131:void onMeasure(int,int) -> onMeasure
    2990:3012:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3094:3107:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2976:2984:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4158:4171:void openCutout() -> openCutout
    4175:4177:void recalculateCutout() -> recalculateCutout
    2620:2624:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    3474:3474:void refreshEndIconDrawableState() -> refreshEndIconDrawableState
    3434:3434:void refreshErrorIconDrawableState() -> refreshErrorIconDrawableState
    3249:3249:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    2399:2400:void removePlaceholderTextView() -> removePlaceholderTextView
    1177:1182:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    1162:1162:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    1196:1206:void setBoxBackgroundColorStateList(android.content.res.ColorStateList) -> setBoxBackgroundColorStateList
    867:872:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    991:991:void setBoxCollapsedPaddingTop(int) -> setBoxCollapsedPaddingTop
    1257:1278:void setBoxCornerRadii(float,float,float,float) -> setBoxCornerRadii
    1086:1088:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1108:1123:void setBoxStrokeColorStateList(android.content.res.ColorStateList) -> setBoxStrokeColorStateList
    1135:1137:void setBoxStrokeErrorColor(android.content.res.ColorStateList) -> setBoxStrokeErrorColor
    1026:1027:void setBoxStrokeWidth(int) -> setBoxStrokeWidth
    1063:1064:void setBoxStrokeWidthFocused(int) -> setBoxStrokeWidthFocused
    1051:1051:void setBoxStrokeWidthFocusedResource(int) -> setBoxStrokeWidthFocusedResource
    1014:1014:void setBoxStrokeWidthResource(int) -> setBoxStrokeWidthResource
    2106:2124:void setCounterEnabled(boolean) -> setCounterEnabled
    2229:2236:void setCounterMaxLength(int) -> setCounterMaxLength
    2177:2179:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    2193:2195:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    2136:2138:void setCounterTextAppearance(int) -> setCounterTextAppearance
    2151:2153:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1863:1867:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    1400:1496:void setEditText(android.widget.EditText) -> setEditText
    927:928:void setEditTextBoxBackground() -> setEditTextBoxBackground
    2615:2616:void setEnabled(boolean) -> setEnabled
    3466:3466:void setEndIconActivated(boolean) -> setEndIconActivated
    3488:3488:void setEndIconCheckable(boolean) -> setEndIconCheckable
    3553:3553:void setEndIconContentDescription(int) -> setEndIconContentDescription
    3567:3568:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    3511:3511:void setEndIconDrawable(int) -> setEndIconDrawable
    3525:3528:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    3350:3366:void setEndIconMode(int) -> setEndIconMode
    3389:3389:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    3412:3413:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    3595:3597:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    3610:3612:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    3443:3447:void setEndIconVisible(boolean) -> setEndIconVisible
    2023:2035:void setError(java.lang.CharSequence) -> setError
    1999:1999:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    1888:1888:void setErrorEnabled(boolean) -> setErrorEnabled
    2046:2047:void setErrorIconDrawable(int) -> setErrorIconDrawable
    2057:2059:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    3400:3400:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    3425:3426:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    2080:2082:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    2094:2096:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    1897:1897:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1902:1902:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    3086:3088:void setExpandedHintEnabled(boolean) -> setExpandedHintEnabled
    1960:1968:void setHelperText(java.lang.CharSequence) -> setHelperText
    1922:1922:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    1943:1943:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1917:1917:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1713:1715:void setHint(java.lang.CharSequence) -> setHint
    1727:1727:void setHint(int) -> setHint
    3064:3064:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1764:1790:void setHintEnabled(boolean) -> setHintEnabled
    1731:1736:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1823:1829:void setHintTextAppearance(int) -> setHintTextAppearance
    1838:1846:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    4037:4044:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    4025:4026:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    4031:4032:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    1608:1610:void setMaxEms(int) -> setMaxEms
    1675:1677:void setMaxWidth(int) -> setMaxWidth
    1691:1691:void setMaxWidthResource(int) -> setMaxWidthResource
    1583:1585:void setMinEms(int) -> setMinEms
    1634:1636:void setMinWidth(int) -> setMinWidth
    1650:1650:void setMinWidthResource(int) -> setMinWidthResource
    3719:3720:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    3736:3736:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    3687:3688:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    3703:3703:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    3789:3794:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    3812:3813:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    3827:3828:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2298:2322:void setPlaceholderText(java.lang.CharSequence) -> setPlaceholderText
    2435:2437:void setPlaceholderTextAppearance(int) -> setPlaceholderTextAppearance
    2410:2413:void setPlaceholderTextColor(android.content.res.ColorStateList) -> setPlaceholderTextColor
    2338:2349:void setPlaceholderTextEnabled(boolean) -> setPlaceholderTextEnabled
    2460:2460:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    2512:2512:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    2493:2493:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    3263:3263:void setStartIconCheckable(boolean) -> setStartIconCheckable
    3285:3285:void setStartIconContentDescription(int) -> setStartIconContentDescription
    3299:3299:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    3175:3175:void setStartIconDrawable(int) -> setStartIconDrawable
    3188:3188:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    3211:3211:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    3223:3223:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    3325:3325:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    3337:3337:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    3232:3232:void setStartIconVisible(boolean) -> setStartIconVisible
    2524:2526:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    2591:2591:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    2572:2572:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    2667:2685:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    3861:3862:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1337:1344:void setTypeface(android.graphics.Typeface) -> setTypeface
    4004:4007:boolean shouldUpdateEndDummyDrawable() -> shouldUpdateEndDummyDrawable
    3998:4000:boolean shouldUpdateStartDummyDrawable() -> shouldUpdateStartDummyDrawable
    935:937:boolean shouldUseEditTextBackgroundForBoxBackground() -> shouldUseEditTextBackgroundForBoxBackground
    2372:2378:void showPlaceholderText() -> showPlaceholderText
    3904:3912:void tintEndIconOnError(boolean) -> tintEndIconOnError
    942:950:void updateBoxCollapsedPaddingTop() -> updateBoxCollapsedPaddingTop
    4080:4086:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    2242:2243:void updateCounter() -> updateCounter
    2248:2270:void updateCounter(int) -> updateCounter
    2280:2286:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    2651:2658:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    2865:2867:void updateDropdownMenuBackground() -> updateDropdownMenuBackground
    3921:3991:boolean updateDummyDrawables() -> updateDummyDrawables
    2874:2901:void updateEditTextBackground() -> updateEditTextBackground
    3135:3144:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    3868:3874:void updateEndLayoutVisibility() -> updateEndLayoutVisibility
    4327:4334:void updateErrorIconVisibility() -> updateErrorIconVisibility
    1502:1508:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1523:1523:void updateLabelState(boolean) -> updateLabelState
    1527:1563:void updateLabelState(boolean,boolean) -> updateLabelState
    3152:3161:void updatePlaceholderMeasurementsBasedOnEditText() -> updatePlaceholderMeasurementsBasedOnEditText
    2360:2360:void updatePlaceholderText() -> updatePlaceholderText
    2364:2367:void updatePlaceholderText(int) -> updatePlaceholderText
    4307:4321:void updateStrokeErrorColor(boolean,boolean) -> updateStrokeErrorColor
    2595:2607:void updateSuffixTextViewPadding() -> updateSuffixTextViewPadding
    2554:2563:void updateSuffixTextVisibility() -> updateSuffixTextVisibility
    4232:4303:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    1439:1439:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1442:1447:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    3000:3000:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3003:3005:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    3123:3123:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3126:3126:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
    4371:4371:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4374:4374:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    4415:4416:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4422:4475:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    2951:2951:void <clinit>() -> <clinit>
    2913:2913:void <init>(android.os.Parcelable) -> <init>
    2917:2922:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2938:2939:java.lang.String toString() -> toString
    2927:2932:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
    2952:2952:void <init>() -> <init>
    2952:2952:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2952:2952:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2956:2956:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2962:2962:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2952:2952:java.lang.Object[] newArray(int) -> newArray
    2968:2968:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
    83:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:103:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    119:129:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    134:134:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    172:177:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    143:144:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    111:114:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    156:165:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    39:39:void <init>() -> <init>
    68:68:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    43:43:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    49:49:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    55:55:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    61:61:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
com.google.android.material.theme.overlay.MaterialThemeOverlay -> com.google.android.material.theme.overlay.MaterialThemeOverlay:
    48:51:void <clinit>() -> <clinit>
    94:97:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    112:116:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    67:81:android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int) -> wrap
com.google.android.material.timepicker.ChipTextInputComboView -> com.google.android.material.timepicker.ChipTextInputComboView:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    52:52:java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence) -> access$100
    52:52:com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView) -> access$200
    128:128:java.lang.String formatText(java.lang.CharSequence) -> formatText
    97:97:boolean isChecked() -> isChecked
    181:182:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    102:108:void setChecked(boolean) -> setChecked
    133:133:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    138:138:void setTag(int,java.lang.Object) -> setTag
    115:115:void toggle() -> toggle
    88:91:void updateHintLocales() -> updateHintLocales
com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter -> com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter:
    164:164:void <init>(com.google.android.material.timepicker.ChipTextInputComboView) -> <init>
    164:164:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1) -> <init>
    170:175:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.ClockFaceView -> com.google.android.material.timepicker.ClockFaceView:
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:199:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:66:com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView) -> access$000
    66:66:int access$100(com.google.android.material.timepicker.ClockFaceView) -> access$100
    66:66:android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView) -> access$200
    273:288:void findIntersectingTextView() -> findIntersectingTextView
    294:303:android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.graphics.Rect,android.widget.TextView) -> getGradientForTextView
    335:335:float max3(float,float,float) -> max3
    243:246:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    263:264:void onLayout(boolean,int,int,int,int) -> onLayout
    319:331:void onMeasure(int,int) -> onMeasure
    311:313:void onRotate(float,boolean) -> onRotate
    255:257:void setRadius(int) -> setRadius
    207:208:void setValues(java.lang.String[],int) -> setValues
    212:236:void updateTextViews(int) -> updateTextViews
com.google.android.material.timepicker.ClockFaceView$1 -> com.google.android.material.timepicker.ClockFaceView$1:
    136:136:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    139:145:boolean onPreDraw() -> onPreDraw
com.google.android.material.timepicker.ClockFaceView$2 -> com.google.android.material.timepicker.ClockFaceView$2:
    153:153:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    157:173:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    179:188:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.timepicker.ClockHandView -> com.google.android.material.timepicker.ClockHandView:
    91:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:115:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:void access$000(com.google.android.material.timepicker.ClockHandView,float,boolean) -> access$000
    209:209:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    229:251:void drawSelector(android.graphics.Canvas) -> drawSelector
    256:256:android.graphics.RectF getCurrentSelectorBox() -> getCurrentSelectorBox
    334:338:int getDegreesFromXY(float,float) -> getDegreesFromXY
    218:218:float getHandRotation() -> getHandRotation
    261:261:int getSelectorRadius() -> getSelectorRadius
    161:176:android.util.Pair getValuesForAnimation(float) -> getValuesForAnimation
    319:326:boolean handleTouchInput(float,float,boolean,boolean,boolean) -> handleTouchInput
    223:225:void onDraw(android.graphics.Canvas) -> onDraw
    120:122:void onLayout(boolean,int,int,int,int) -> onLayout
    276:311:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    269:270:void setCircleRadius(int) -> setCircleRadius
    126:126:void setHandRotation(float) -> setHandRotation
    130:157:void setHandRotation(float,boolean) -> setHandRotation
    182:201:void setHandRotationInternal(float,boolean) -> setHandRotationInternal
com.google.android.material.timepicker.ClockHandView$1 -> com.google.android.material.timepicker.ClockHandView$1:
    142:142:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    145:146:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.timepicker.ClockHandView$2 -> com.google.android.material.timepicker.ClockHandView$2:
    150:150:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    153:153:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.google.android.material.timepicker.MaxInputValidator -> com.google.android.material.timepicker.MaxInputValidator:
    26:27:void <init>(int) -> <init>
    42:46:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.google.android.material.timepicker.RadialViewGroup -> com.google.android.material.timepicker.RadialViewGroup:
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    94:98:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    80:83:android.graphics.drawable.Drawable createBackground() -> createBackground
    158:158:int getRadius() -> getRadius
    119:120:void onFinishInflate() -> onFinishInflate
    103:105:void onViewRemoved(android.view.View) -> onViewRemoved
    89:89:void setBackgroundColor(int) -> setBackgroundColor
    152:153:void setRadius(int) -> setRadius
    162:162:boolean shouldSkipView(android.view.View) -> shouldSkipView
    126:148:void updateLayoutParams() -> updateLayoutParams
    110:113:void updateLayoutParamsAsync() -> updateLayoutParamsAsync
com.google.android.material.timepicker.RadialViewGroup$1 -> com.google.android.material.timepicker.RadialViewGroup$1:
    70:70:void <init>(com.google.android.material.timepicker.RadialViewGroup) -> <init>
    73:73:void run() -> run
com.google.android.material.timepicker.TimeModel -> com.google.android.material.timepicker.TimeModel:
    159:159:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    56:56:void <init>(int) -> <init>
    59:66:void <init>(int,int,int,int) -> <init>
    70:70:void <init>(android.os.Parcel) -> <init>
    134:139:boolean equals(java.lang.Object) -> equals
    183:183:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence) -> formatText
    187:190:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String) -> formatText
    124:125:int hashCode() -> hashCode
    152:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.timepicker.TimeModel$1 -> com.google.android.material.timepicker.TimeModel$1:
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:com.google.android.material.timepicker.TimeModel[] newArray(int) -> newArray
com.google.android.material.timepicker.TimePickerView -> com.google.android.material.timepicker.TimePickerView:
    98:98:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:124:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView) -> access$000
    56:56:com.google.android.material.timepicker.TimePickerView$OnPeriodChangeListener access$100(com.google.android.material.timepicker.TimePickerView) -> access$100
    56:56:com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$200(com.google.android.material.timepicker.TimePickerView) -> access$200
    265:266:void onAttachedToWindow() -> onAttachedToWindow
    257:259:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    169:176:void setUpDisplay() -> setUpDisplay
    129:157:void setupDoubleTap() -> setupDoubleTap
    270:278:void updateToggleConstraints() -> updateToggleConstraints
com.google.android.material.timepicker.TimePickerView$1 -> com.google.android.material.timepicker.TimePickerView$1:
    80:80:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    83:84:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerView$2 -> com.google.android.material.timepicker.TimePickerView$2:
    107:107:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    111:113:void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
com.google.android.material.timepicker.TimePickerView$3 -> com.google.android.material.timepicker.TimePickerView$3:
    132:132:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    135:137:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.google.android.material.timepicker.TimePickerView$4 -> com.google.android.material.timepicker.TimePickerView$4:
    145:145:void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector) -> <init>
    148:149:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    65:67:void <init>() -> <init>
    65:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    152:155:boolean didStateChange(boolean) -> didStateChange
    139:143:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    126:130:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    98:105:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    106:106:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    109:112:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    46:46:void <init>() -> <init>
    49:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    75:94:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    83:83:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    86:86:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    79:89:void <init>() -> <init>
    79:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    710:722:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    669:685:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    626:627:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    544:556:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    632:641:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    646:655:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    561:581:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    587:607:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    690:703:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    613:622:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    502:531:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    462:491:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    230:255:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    207:221:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    377:451:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    315:352:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    778:782:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    755:759:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    267:304:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    735:737:int getBackgroundTint(android.view.View) -> getBackgroundTint
    99:107:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    115:118:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    129:191:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    727:728:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    169:169:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    182:186:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    172:176:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    342:342:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    345:345:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    353:353:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    362:362:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    357:357:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    405:405:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    410:412:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    788:788:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    52:55:void <init>() -> <init>
    52:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:125:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    63:63:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    80:87:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    70:70:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    88:88:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    98:99:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    91:92:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    53:53:void <init>() -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:71:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    79:80:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    84:125:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.glass.companion.CompanionConstants -> com.google.glass.companion.CompanionConstants:
    15:15:void <clinit>() -> <clinit>
com.google.glass.companion.CompanionMessagingUtil -> com.google.glass.companion.CompanionMessagingUtil:
    13:16:void <clinit>() -> <clinit>
    20:30:com.google.glass.companion.Proto$Envelope newEnvelope() -> newEnvelope
com.google.glass.companion.GlassConnection -> com.google.glass.companion.GlassConnection:
    40:45:void <init>() -> <init>
    32:32:java.io.InputStream access$100(com.google.glass.companion.GlassConnection) -> access$100
    32:32:java.util.List access$200(com.google.glass.companion.GlassConnection) -> access$200
    81:96:void close() -> close
    56:73:void connect(android.bluetooth.BluetoothDevice) -> connect
    245:267:void handshake() -> handshake
    105:114:void registerListener(com.google.glass.companion.GlassConnection$GlassConnectionListener) -> registerListener
    276:287:void write(com.google.glass.companion.Proto$Envelope) -> write
com.google.glass.companion.GlassConnection$GlassReaderThread -> com.google.glass.companion.GlassConnection$GlassReaderThread:
    324:324:void <init>(com.google.glass.companion.GlassConnection) -> <init>
    324:324:void <init>(com.google.glass.companion.GlassConnection,com.google.glass.companion.GlassConnection$1) -> <init>
    327:350:void run() -> run
com.google.glass.companion.GlassMessagingUtil -> com.google.glass.companion.GlassMessagingUtil:
    126:138:com.google.glass.companion.Proto$Envelope createTimelineMessage(java.lang.String,java.lang.String) -> createTimelineMessage
com.google.glass.companion.GlassProtocol -> com.google.glass.companion.GlassProtocol:
    35:38:int getSizeToRead(int,java.io.InputStream) -> getSizeToRead
    50:64:com.google.protobuf.nano.MessageNano readMessage(com.google.protobuf.nano.MessageNano,java.io.InputStream) -> readMessage
    79:85:void writeMessage(com.google.protobuf.nano.MessageNano,java.io.OutputStream) -> writeMessage
    70:73:void writeSize(int,java.io.OutputStream) -> writeSize
com.google.glass.companion.Proto$Command -> com.google.glass.companion.Proto$Command:
    980:980:void <clinit>() -> <clinit>
    982:983:void <init>() -> <init>
    997:998:com.google.glass.companion.Proto$Command clear() -> clear
    1007:1015:boolean equals(java.lang.Object) -> equals
    1035:1038:int getSerializedSize() -> getSerializedSize
    1023:1023:int hashCode() -> hashCode
    977:977:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1047:1058:com.google.glass.companion.Proto$Command mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1030:1030:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$CompanionInfo -> com.google.glass.companion.Proto$CompanionInfo:
    665:665:void <clinit>() -> <clinit>
    667:668:void <init>() -> <init>
    690:696:com.google.glass.companion.Proto$CompanionInfo clear() -> clear
    705:748:boolean equals(java.lang.Object) -> equals
    795:818:int getSerializedSize() -> getSerializedSize
    758:768:int hashCode() -> hashCode
    662:662:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    827:858:com.google.glass.companion.Proto$CompanionInfo mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    775:789:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$Envelope -> com.google.glass.companion.Proto$Envelope:
    11:11:void <clinit>() -> <clinit>
    13:14:void <init>() -> <init>
    63:78:com.google.glass.companion.Proto$Envelope clear() -> clear
    87:200:boolean equals(java.lang.Object) -> equals
    303:372:int getSerializedSize() -> getSerializedSize
    211:239:int hashCode() -> hashCode
    8:8:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    381:501:com.google.glass.companion.Proto$Envelope mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    246:297:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$Error -> com.google.glass.companion.Proto$Error:
    880:880:void <clinit>() -> <clinit>
    882:883:void <init>() -> <init>
    897:898:com.google.glass.companion.Proto$Error clear() -> clear
    907:915:boolean equals(java.lang.Object) -> equals
    935:938:int getSerializedSize() -> getSerializedSize
    923:923:int hashCode() -> hashCode
    877:877:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    947:958:com.google.glass.companion.Proto$Error mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    930:930:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$GlassInfoRequest -> com.google.glass.companion.Proto$GlassInfoRequest:
    2074:2074:void <clinit>() -> <clinit>
    2076:2077:void <init>() -> <init>
    2096:2101:com.google.glass.companion.Proto$GlassInfoRequest clear() -> clear
    2110:2146:boolean equals(java.lang.Object) -> equals
    2190:2211:int getSerializedSize() -> getSerializedSize
    2156:2164:int hashCode() -> hashCode
    2071:2071:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    2220:2247:com.google.glass.companion.Proto$GlassInfoRequest mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    2171:2184:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$GlassInfoResponse -> com.google.glass.companion.Proto$GlassInfoResponse:
    2269:2269:void <clinit>() -> <clinit>
    2271:2272:void <init>() -> <init>
    2294:2300:com.google.glass.companion.Proto$GlassInfoResponse clear() -> clear
    2309:2352:boolean equals(java.lang.Object) -> equals
    2401:2426:int getSerializedSize() -> getSerializedSize
    2362:2372:int hashCode() -> hashCode
    2266:2266:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    2435:2466:com.google.glass.companion.Proto$GlassInfoResponse mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    2379:2395:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$MotionEvent -> com.google.glass.companion.Proto$MotionEvent:
    1203:1203:void <clinit>() -> <clinit>
    1205:1206:void <init>() -> <init>
    1666:1680:com.google.glass.companion.Proto$MotionEvent clear() -> clear
    1689:1782:boolean equals(java.lang.Object) -> equals
    1881:1948:int getSerializedSize() -> getSerializedSize
    1792:1818:int hashCode() -> hashCode
    1200:1200:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1957:2052:com.google.glass.companion.Proto$MotionEvent mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1825:1875:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$MotionEvent$PointerCoords -> com.google.glass.companion.Proto$MotionEvent$PointerCoords:
    1335:1335:void <clinit>() -> <clinit>
    1337:1338:void <init>() -> <init>
    1369:1378:com.google.glass.companion.Proto$MotionEvent$PointerCoords clear() -> clear
    1387:1451:boolean equals(java.lang.Object) -> equals
    1515:1552:int getSerializedSize() -> getSerializedSize
    1461:1477:int hashCode() -> hashCode
    1332:1332:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1561:1604:com.google.glass.companion.Proto$MotionEvent$PointerCoords mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1484:1509:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$MotionEvent$PointerProperties -> com.google.glass.companion.Proto$MotionEvent$PointerProperties:
    1212:1212:void <clinit>() -> <clinit>
    1214:1215:void <init>() -> <init>
    1225:1227:com.google.glass.companion.Proto$MotionEvent$PointerProperties clear() -> clear
    1236:1251:boolean equals(java.lang.Object) -> equals
    1280:1289:int getSerializedSize() -> getSerializedSize
    1261:1263:int hashCode() -> hashCode
    1209:1209:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1298:1313:com.google.glass.companion.Proto$MotionEvent$PointerProperties mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1270:1274:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$ScreenShot -> com.google.glass.companion.Proto$ScreenShot:
    523:523:void <clinit>() -> <clinit>
    525:526:void <init>() -> <init>
    539:542:com.google.glass.companion.Proto$ScreenShot clear() -> clear
    551:569:boolean equals(java.lang.Object) -> equals
    602:615:int getSerializedSize() -> getSerializedSize
    579:582:int hashCode() -> hashCode
    520:520:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    624:643:com.google.glass.companion.Proto$ScreenShot mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    589:596:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.glass.companion.Proto$TimelineItemResponse -> com.google.glass.companion.Proto$TimelineItemResponse:
    1080:1080:void <clinit>() -> <clinit>
    1082:1083:void <init>() -> <init>
    1093:1095:com.google.glass.companion.Proto$TimelineItemResponse clear() -> clear
    1104:1119:boolean equals(java.lang.Object) -> equals
    1148:1157:int getSerializedSize() -> getSerializedSize
    1129:1131:int hashCode() -> hashCode
    1077:1077:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1166:1181:com.google.glass.companion.Proto$TimelineItemResponse mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    1138:1142:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.googlex.glass.common.proto.TimelineNano$Entity -> com.google.googlex.glass.common.proto.TimelineNano$Entity:
    455:455:void <clinit>() -> <clinit>
    457:458:void <init>() -> <init>
    513:530:com.google.googlex.glass.common.proto.TimelineNano$Entity clear() -> clear
    539:644:boolean equals(java.lang.Object) -> equals
    773:892:int getSerializedSize() -> getSerializedSize
    654:686:int hashCode() -> hashCode
    452:452:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    901:1041:com.google.googlex.glass.common.proto.TimelineNano$Entity mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    693:767:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.googlex.glass.common.proto.TimelineNano$TimelineItem -> com.google.googlex.glass.common.proto.TimelineNano$TimelineItem:
    18:18:void <clinit>() -> <clinit>
    20:21:void <init>() -> <init>
    67:81:com.google.googlex.glass.common.proto.TimelineNano$TimelineItem clear() -> clear
    90:187:boolean equals(java.lang.Object) -> equals
    280:342:int getSerializedSize() -> getSerializedSize
    197:222:int hashCode() -> hashCode
    15:15:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    351:433:com.google.googlex.glass.common.proto.TimelineNano$TimelineItem mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano) -> mergeFrom
    229:274:void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano) -> writeTo
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    44:45:void <init>(java.lang.reflect.Field) -> <init>
    139:139:java.lang.String toString() -> toString
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    31:31:com.google.gson.FieldNamingPolicy[] $values() -> $values
    31:158:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    169:177:java.lang.String separateCamelCase(java.lang.String,char) -> separateCamelCase
    184:197:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    92:92:void <init>(java.lang.String,int) -> <init>
    94:94:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    110:110:void <init>(java.lang.String,int) -> <init>
    112:112:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$6 -> com.google.gson.FieldNamingPolicy$6:
    134:134:void <init>(java.lang.String,int) -> <init>
    136:136:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$7 -> com.google.gson.FieldNamingPolicy$7:
    158:158:void <init>(java.lang.String,int) -> <init>
    160:160:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    151:153:void <clinit>() -> <clinit>
    230:238:void <init>() -> <init>
    164:339:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List) -> <init>
    1131:1137:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    473:481:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> atomicLongAdapter
    485:508:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> atomicLongArrayAdapter
    443:444:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    393:395:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    417:419:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    969:970:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    1001:1001:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    1033:1034:java.lang.Object fromJson(java.lang.String,com.google.gson.reflect.TypeToken) -> fromJson
    1123:1125:java.lang.Object fromJson(java.io.Reader,com.google.gson.reflect.TypeToken) -> fromJson
    1173:1173:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    1208:1236:java.lang.Object fromJson(com.google.gson.stream.JsonReader,com.google.gson.reflect.TypeToken) -> fromJson
    518:566:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    650:650:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    622:640:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    451:454:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    904:905:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    882:891:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    717:719:java.lang.String toJson(java.lang.Object) -> toJson
    741:743:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    794:797:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    817:836:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    847:849:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    862:865:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    923:941:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    1354:1359:java.lang.String toString() -> toString
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    395:395:void <init>(com.google.gson.Gson) -> <init>
    395:395:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    397:401:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    395:395:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    405:410:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    419:419:void <init>(com.google.gson.Gson) -> <init>
    419:419:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    421:425:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    419:419:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    429:437:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    454:454:void <init>() -> <init>
    454:454:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    456:460:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    454:454:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    464:467:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    473:473:void <init>(com.google.gson.TypeAdapter) -> <init>
    473:473:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    478:479:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> read
    473:473:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    475:475:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    485:485:void <init>(com.google.gson.TypeAdapter) -> <init>
    485:485:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    494:504:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> read
    485:485:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    487:491:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    1322:1322:void <init>() -> <init>
    1333:1334:com.google.gson.TypeAdapter delegate() -> delegate
    1340:1340:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    1344:1344:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1326:1329:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    1348:1348:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    87:115:void <init>() -> <init>
    774:799:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
    752:762:com.google.gson.Gson create() -> create
    487:487:com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    45:46:void <init>() -> <init>
    126:128:void add(com.google.gson.JsonElement) -> add
    422:422:boolean equals(java.lang.Object) -> equals
    431:431:int hashCode() -> hashCode
    216:216:java.util.Iterator iterator() -> iterator
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    40:40:void <init>() -> <init>
    114:117:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    98:101:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    130:133:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    57:57:boolean isJsonArray() -> isJsonArray
    85:85:boolean isJsonNull() -> isJsonNull
    66:66:boolean isJsonObject() -> isJsonObject
    75:75:boolean isJsonPrimitive() -> isJsonPrimitive
    320:326:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    29:29:void <init>(java.lang.String) -> <init>
    33:33:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:43:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    32:32:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    67:67:boolean equals(java.lang.Object) -> equals
    59:59:int hashCode() -> hashCode
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    37:43:void <init>() -> <init>
    69:69:void add(java.lang.String,com.google.gson.JsonElement) -> add
    135:135:java.util.Set entrySet() -> entrySet
    237:238:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:62:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    42:43:void <init>(java.lang.Boolean) -> <init>
    52:53:void <init>(java.lang.Number) -> <init>
    62:63:void <init>(java.lang.String) -> <init>
    277:294:boolean equals(java.lang.Object) -> equals
    106:110:boolean getAsBoolean() -> getAsBoolean
    167:167:double getAsDouble() -> getAsDouble
    219:219:int getAsInt() -> getAsInt
    203:203:long getAsLong() -> getAsLong
    132:137:java.lang.Number getAsNumber() -> getAsNumber
    152:159:java.lang.String getAsString() -> getAsString
    252:264:int hashCode() -> hashCode
    95:95:boolean isBoolean() -> isBoolean
    302:304:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    119:119:boolean isNumber() -> isNumber
    146:146:boolean isString() -> isString
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    30:30:void <init>(java.lang.String) -> <init>
    34:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:45:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    27:27:com.google.gson.LongSerializationPolicy[] $values() -> $values
    27:52:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    36:36:void <init>(java.lang.String,int) -> <init>
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    52:52:void <init>(java.lang.String,int) -> <init>
com.google.gson.ReflectionAccessFilter$FilterResult -> com.google.gson.ReflectionAccessFilter$FilterResult:
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult[] $values() -> $values
    38:80:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String) -> valueOf
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult[] values() -> values
com.google.gson.ToNumberPolicy -> com.google.gson.ToNumberPolicy:
    33:33:com.google.gson.ToNumberPolicy[] $values() -> $values
    33:88:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:void <init>(java.lang.String,int,com.google.gson.ToNumberPolicy$1) -> <init>
    33:33:com.google.gson.ToNumberPolicy valueOf(java.lang.String) -> valueOf
    33:33:com.google.gson.ToNumberPolicy[] values() -> values
com.google.gson.ToNumberPolicy$1 -> com.google.gson.ToNumberPolicy$1:
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    41:41:java.lang.Double readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$2 -> com.google.gson.ToNumberPolicy$2:
    50:50:void <init>(java.lang.String,int) -> <init>
    52:52:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$3 -> com.google.gson.ToNumberPolicy$3:
    65:65:void <init>(java.lang.String,int) -> <init>
    67:78:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$4 -> com.google.gson.ToNumberPolicy$4:
    88:88:void <init>(java.lang.String,int) -> <init>
    88:88:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    90:94:java.math.BigDecimal readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    121:121:void <init>() -> <init>
    188:188:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    236:240:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    188:188:void <init>(com.google.gson.TypeAdapter) -> <init>
    197:201:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    191:193:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
# {"id":"sourceFile","fileName":"$Gson$Preconditions.java"}
    54:54:void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    45:45:void <clinit>() -> <clinit>
    69:69:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    109:124:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    480:480:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    473:475:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    170:170:boolean equal(java.lang.Object,java.lang.Object) -> equal
    181:223:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    299:301:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    309:314:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    246:264:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    327:335:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    133:164:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    282:291:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    460:465:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    59:59:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    342:342:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    350:437:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map) -> resolve
    443:453:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    80:85:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    95:100:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    232:232:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    555:557:void <init>(java.lang.reflect.Type) -> <init>
    565:566:boolean equals(java.lang.Object) -> equals
    561:561:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    570:570:int hashCode() -> hashCode
    574:574:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    488:504:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    521:522:boolean equals(java.lang.Object) -> equals
    509:509:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    517:517:java.lang.reflect.Type getOwnerType() -> getOwnerType
    513:513:java.lang.reflect.Type getRawType() -> getRawType
    530:532:int hashCode() -> hashCode
    526:526:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    536:546:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    590:605:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    618:619:boolean equals(java.lang.Object) -> equals
    614:614:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    610:610:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    624:625:int hashCode() -> hashCode
    629:634:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    58:61:void <init>(java.util.Map,boolean,java.util.List) -> <init>
    71:78:java.lang.String checkInstantiable(java.lang.Class) -> checkInstantiable
    84:150:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    206:258:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class,com.google.gson.ReflectionAccessFilter$FilterResult) -> newDefaultConstructor
    298:353:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    162:183:com.google.gson.internal.ObjectConstructor newSpecialCollectionConstructor(java.lang.reflect.Type,java.lang.Class) -> newSpecialCollectionConstructor
    365:383:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.Class) -> newUnsafeAllocator
    392:392:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    92:92:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    94:94:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    300:300:void <init>() -> <init>
    302:302:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    306:306:void <init>() -> <init>
    308:308:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    312:312:void <init>() -> <init>
    314:314:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$13:
    318:318:void <init>() -> <init>
    320:320:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$14:
    328:328:void <init>() -> <init>
    330:330:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$15 -> com.google.gson.internal.ConstructorConstructor$15:
    334:334:void <init>() -> <init>
    336:336:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$16 -> com.google.gson.internal.ConstructorConstructor$16:
    340:340:void <init>() -> <init>
    342:342:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$17 -> com.google.gson.internal.ConstructorConstructor$17:
    347:347:void <init>() -> <init>
    349:349:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$18 -> com.google.gson.internal.ConstructorConstructor$18:
    353:353:void <init>() -> <init>
    355:355:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$19 -> com.google.gson.internal.ConstructorConstructor$19:
    366:366:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class) -> <init>
    370:373:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    104:104:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    106:106:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$20 -> com.google.gson.internal.ConstructorConstructor$20:
    383:383:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    385:385:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    134:134:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    136:136:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    150:150:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    152:152:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    163:163:void <init>(java.lang.reflect.Type) -> <init>
    165:175:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    183:183:void <init>(java.lang.reflect.Type) -> <init>
    185:195:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    226:226:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    246:246:void <init>(java.lang.String) -> <init>
    252:252:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    258:258:void <init>(java.lang.reflect.Constructor) -> <init>
    262:276:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    52:52:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    50:50:java.lang.Object clone() -> clone
    63:65:com.google.gson.internal.Excluder clone() -> clone
    111:121:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    209:210:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    193:201:boolean excludeClassChecks(java.lang.Class) -> excludeClassChecks
    214:216:boolean excludeClassInStrategy(java.lang.Class,boolean) -> excludeClassInStrategy
    151:183:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    224:225:boolean isAnonymousOrNonStaticLocal(java.lang.Class) -> isAnonymousOrNonStaticLocal
    229:229:boolean isInnerClass(java.lang.Class) -> isInnerClass
    233:233:boolean isStatic(java.lang.Class) -> isStatic
    242:243:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    250:251:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    237:237:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    121:121:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    142:145:com.google.gson.TypeAdapter delegate() -> delegate
    126:130:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    134:138:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.JavaVersion -> com.google.gson.internal.JavaVersion:
    26:26:void <clinit>() -> <clinit>
    29:30:int determineMajorJavaVersion() -> determineMajorJavaVersion
    62:71:int extractBeginningInt(java.lang.String) -> extractBeginningInt
    35:37:int getMajorJavaVersion(java.lang.String) -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    48:51:int parseDotted(java.lang.String) -> parseDotted
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    25:25:void <init>() -> <init>
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    34:35:void <init>(java.lang.String) -> <init>
    67:67:double doubleValue() -> doubleValue
    99:101:boolean equals(java.lang.Object) -> equals
    62:62:float floatValue() -> floatValue
    91:91:int hashCode() -> hashCode
    41:46:int intValue() -> intValue
    54:56:long longValue() -> longValue
    72:72:java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    41:44:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    76:76:void <init>(boolean) -> <init>
    53:93:void <init>(java.util.Comparator,boolean) -> <init>
    123:129:void clear() -> clear
    106:106:boolean containsKey(java.lang.Object) -> containsKey
    452:453:java.util.Set entrySet() -> entrySet
    230:230:boolean equal(java.lang.Object,java.lang.Object) -> equal
    144:200:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    224:225:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    208:208:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    101:102:java.lang.Object get(java.lang.Object) -> get
    457:458:java.util.Set keySet() -> keySet
    111:118:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    333:384:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    133:134:java.lang.Object remove(java.lang.Object) -> remove
    241:295:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    299:301:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    307:321:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    396:417:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    424:445:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    97:97:int size() -> size
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    44:44:void <init>() -> <init>
    44:44:int compare(java.lang.Object,java.lang.Object) -> compare
    46:46:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    587:587:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    618:618:void clear() -> clear
    601:601:boolean contains(java.lang.Object) -> contains
    593:593:java.util.Iterator iterator() -> iterator
    605:613:boolean remove(java.lang.Object) -> remove
    589:589:int size() -> size
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    593:593:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    593:593:java.lang.Object next() -> next
    595:595:java.util.Map$Entry next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    622:622:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    644:644:void clear() -> clear
    636:636:boolean contains(java.lang.Object) -> contains
    628:628:java.util.Iterator iterator() -> iterator
    640:640:boolean remove(java.lang.Object) -> remove
    624:624:int size() -> size
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    628:628:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    630:630:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    554:558:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    562:562:boolean hasNext() -> hasNext
    566:574:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    578:583:void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    473:476:void <init>(boolean) -> <init>
    480:488:void <init>(boolean,com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    509:512:boolean equals(java.lang.Object) -> equals
    531:534:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    492:492:java.lang.Object getKey() -> getKey
    496:496:java.lang.Object getValue() -> getValue
    518:519:int hashCode() -> hashCode
    544:547:com.google.gson.internal.LinkedTreeMap$Node last() -> last
    500:504:java.lang.Object setValue(java.lang.Object) -> setValue
    523:523:java.lang.String toString() -> toString
com.google.gson.internal.PreJava9DateFormatProvider -> com.google.gson.internal.PreJava9DateFormatProvider:
    69:69:java.lang.String getDatePartOfDateTimePattern(int) -> getDatePartOfDateTimePattern
    83:83:java.lang.String getTimePartOfDateTimePattern(int) -> getTimePartOfDateTimePattern
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    66:74:java.lang.Class wrap(java.lang.Class) -> wrap
com.google.gson.internal.ReflectionAccessFilterHelper -> com.google.gson.internal.ReflectionAccessFilterHelper:
    64:64:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
    51:57:com.google.gson.ReflectionAccessFilter$FilterResult getFilterResult(java.util.List,java.lang.Class) -> getFilterResult
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker:
    72:96:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    67:67:void <init>(com.google.gson.internal.ReflectionAccessFilterHelper$1) -> <init>
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1 -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1:
    75:75:void <init>(java.lang.reflect.Method) -> <init>
    78:80:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2 -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2:
    89:89:void <init>() -> <init>
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    47:65:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    73:73:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    77:77:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    86:89:void <init>(java.lang.Appendable) -> <init>
    84:84:java.lang.Appendable append(java.lang.CharSequence) -> append
    84:84:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    114:114:java.io.Writer append(java.lang.CharSequence) -> append
    119:119:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    93:94:void write(char[],int,int) -> write
    104:104:void write(int) -> write
    109:110:void write(java.lang.String,int,int) -> write
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    126:126:void <init>() -> <init>
    126:126:void <init>(com.google.gson.internal.Streams$1) -> <init>
    139:139:char charAt(int) -> charAt
    136:136:int length() -> length
    131:132:void setChars(char[]) -> setChars
    142:142:java.lang.CharSequence subSequence(int,int) -> subSequence
    147:150:java.lang.String toString() -> toString
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    45:45:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    30:30:void access$000(java.lang.Class) -> access$000
    39:41:void assertInstantiable(java.lang.Class) -> assertInstantiable
    53:114:com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    58:58:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    62:63:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    82:82:void <init>(java.lang.reflect.Method,int) -> <init>
    86:87:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    102:102:void <init>(java.lang.reflect.Method) -> <init>
    106:107:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    114:114:void <init>() -> <init>
    117:117:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    37:37:void <clinit>() -> <clinit>
    57:60:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:90:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    96:106:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    37:37:void <init>() -> <init>
    39:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    39:40:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:57:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    67:70:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    74:85:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    91:99:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    47:47:void <clinit>() -> <clinit>
    58:66:void <init>() -> <init>
    79:90:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> deserializeToDate
    46:46:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    71:75:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    46:46:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    96:105:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    47:47:void <init>() -> <init>
    50:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.DefaultDateTypeAdapter -> com.google.gson.internal.bind.DefaultDateTypeAdapter:
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    92:98:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String) -> <init>
    92:120:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int) -> <init>
    152:164:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> deserializeToDate
    47:47:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    143:148:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    170:174:java.lang.String toString() -> toString
    47:47:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    129:138:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType:
    51:51:void <clinit>() -> <clinit>
    59:60:void <init>(java.lang.Class) -> <init>
    70:70:com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String) -> createAdapterFactory
    78:78:com.google.gson.TypeAdapterFactory createAdapterFactory(int,int) -> createAdapterFactory
    66:66:com.google.gson.TypeAdapterFactory createFactory(com.google.gson.internal.bind.DefaultDateTypeAdapter) -> createFactory
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1 -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1:
    51:51:void <init>(java.lang.Class) -> <init>
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    37:38:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    54:83:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    40:48:void <clinit>() -> <clinit>
    73:76:void beginArray() -> beginArray
    89:91:void beginObject() -> beginObject
    272:273:void close() -> close
    80:84:void endArray() -> endArray
    95:100:void endObject() -> endObject
    163:165:void expect(com.google.gson.stream.JsonToken) -> expect
    323:345:java.lang.String getPath(boolean) -> getPath
    353:353:java.lang.String getPath() -> getPath
    349:349:java.lang.String getPreviousPath() -> getPreviousPath
    105:106:boolean hasNext() -> hasNext
    357:357:java.lang.String locationString() -> locationString
    197:200:boolean nextBoolean() -> nextBoolean
    214:225:double nextDouble() -> nextDouble
    245:253:int nextInt() -> nextInt
    259:267:com.google.gson.JsonElement nextJsonElement() -> nextJsonElement
    231:239:long nextLong() -> nextLong
    170:175:java.lang.String nextName(boolean) -> nextName
    180:180:java.lang.String nextName() -> nextName
    206:209:void nextNull() -> nextNull
    184:191:java.lang.String nextString() -> nextString
    110:148:com.google.gson.stream.JsonToken peek() -> peek
    153:153:java.lang.Object peekStack() -> peekStack
    157:158:java.lang.Object popStack() -> popStack
    305:309:void promoteNameToValue() -> promoteNameToValue
    313:319:void push(java.lang.Object) -> push
    277:294:void skipValue() -> skipValue
    301:301:java.lang.String toString() -> toString
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    40:40:void <init>() -> <init>
    45:45:void close() -> close
    42:42:int read(char[],int,int) -> read
com.google.gson.internal.bind.JsonTreeReader$2 -> com.google.gson.internal.bind.JsonTreeReader$2:
    278:278:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    35:47:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    96:98:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    115:117:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    217:220:void close() -> close
    103:111:com.google.gson.stream.JsonWriter endArray() -> endArray
    122:130:com.google.gson.stream.JsonWriter endObject() -> endObject
    66:69:com.google.gson.JsonElement get() -> get
    134:143:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    159:159:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    73:73:com.google.gson.JsonElement peek() -> peek
    77:90:void put(com.google.gson.JsonElement) -> put
    148:150:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    164:164:com.google.gson.stream.JsonWriter value(boolean) -> value
    170:172:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    185:188:com.google.gson.stream.JsonWriter value(double) -> value
    193:193:com.google.gson.stream.JsonWriter value(long) -> value
    199:209:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    35:35:void <init>() -> <init>
    43:43:void close() -> close
    40:40:void flush() -> flush
    37:37:void write(char[],int,int) -> write
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    110:112:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:130:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    139:141:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    151:156:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    245:259:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    144:144:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    160:192:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    144:144:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    199:240:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
com.google.gson.internal.bind.NumberTypeAdapter -> com.google.gson.internal.bind.NumberTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    43:44:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:61:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    48:49:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    35:35:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    66:75:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    35:35:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    80:80:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.NumberTypeAdapter$1 -> com.google.gson.internal.bind.NumberTypeAdapter$1:
    49:49:void <init>(com.google.gson.internal.bind.NumberTypeAdapter) -> <init>
    52:52:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.NumberTypeAdapter$2 -> com.google.gson.internal.bind.NumberTypeAdapter$2:
    67:67:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    44:44:void <clinit>() -> <clinit>
    40:40:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy,com.google.gson.internal.bind.ObjectTypeAdapter$1) -> <init>
    49:51:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy) -> <init>
    67:70:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    55:55:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    112:164:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    93:105:java.lang.Object readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> readTerminal
    79:85:java.lang.Object tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> tryBeginNesting
    171:183:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    55:55:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:59:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    79:79:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    71:76:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory,java.util.List) -> <init>
    61:61:void access$000(java.lang.Object,java.lang.reflect.AccessibleObject) -> access$000
    134:136:void checkAccessible(java.lang.Object,java.lang.reflect.AccessibleObject) -> checkAccessible
    105:130:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    147:164:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean,boolean) -> createBoundField
    230:306:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class,boolean,boolean) -> getBoundFields
    85:99:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
    80:80:boolean includeField(java.lang.reflect.Field,boolean) -> includeField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    164:164:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.reflect.Method,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean,boolean) -> <init>
    201:206:void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[]) -> readIntoArray
    212:222:void readIntoField(com.google.gson.stream.JsonReader,java.lang.Object) -> readIntoField
    167:196:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    352:353:void <init>(java.util.Map) -> <init>
    376:400:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    359:371:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    318:322:void <init>(java.lang.String,java.lang.String,boolean,boolean) -> <init>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter:
    419:420:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    425:425:java.lang.Object createAccumulator() -> createAccumulator
    431:431:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter:
    441:441:void <clinit>() -> <clinit>
    448:472:void <init>(java.lang.Class,java.util.Map,boolean) -> <init>
    440:440:java.lang.Object createAccumulator() -> createAccumulator
    491:491:java.lang.Object[] createAccumulator() -> createAccumulator
    440:440:java.lang.Object finalize(java.lang.Object) -> finalize
    513:528:java.lang.Object finalize(java.lang.Object[]) -> finalize
    477:485:java.util.Map primitiveDefaults() -> primitiveDefaults
    440:440:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
    497:507:void readField(java.lang.Object[],com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter -> com.google.gson.internal.bind.SerializationDelegatingTypeAdapter:
    8:8:void <init>() -> <init>
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
    47:60:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,boolean) -> <init>
    94:97:com.google.gson.TypeAdapter delegate() -> delegate
    106:106:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    69:76:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    80:89:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1) -> <init>
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    32:35:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    96:97:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
    80:89:boolean isReflective(com.google.gson.TypeAdapter) -> isReflective
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    51:70:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    72:920:void <clinit>() -> <clinit>
    947:947:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    960:960:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    975:975:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    994:994:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    72:72:void <init>() -> <init>
    72:72:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    80:80:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    72:72:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    75:76:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    292:292:void <init>() -> <init>
    292:292:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    294:308:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> read
    292:292:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    313:317:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    323:323:void <init>() -> <init>
    323:323:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    326:333:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    323:323:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    339:341:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    346:346:void <init>() -> <init>
    346:346:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    349:353:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    346:346:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    358:363:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    368:368:void <init>() -> <init>
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    371:375:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    380:382:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    387:387:void <init>() -> <init>
    387:387:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    390:398:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    387:387:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    402:402:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    409:409:void <init>() -> <init>
    409:409:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    412:421:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    409:409:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    425:425:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    429:429:void <init>() -> <init>
    429:429:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    431:439:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    429:429:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    444:444:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    448:448:void <init>() -> <init>
    448:448:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    450:458:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    448:448:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    463:463:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    467:467:void <init>() -> <init>
    467:467:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    472:476:com.google.gson.internal.LazilyParsedNumber read(com.google.gson.stream.JsonReader) -> read
    467:467:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    480:480:void write(com.google.gson.stream.JsonWriter,com.google.gson.internal.LazilyParsedNumber) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    486:486:void <init>() -> <init>
    486:486:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    489:493:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    486:486:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    497:497:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    87:87:void <init>() -> <init>
    87:87:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    89:119:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    87:87:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    124:129:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    504:504:void <init>() -> <init>
    504:504:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    507:511:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    504:504:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    515:515:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    522:522:void <init>() -> <init>
    522:522:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    525:530:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    522:522:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    534:534:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    540:540:void <init>() -> <init>
    540:540:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    543:551:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    540:540:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    556:556:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    562:562:void <init>() -> <init>
    562:562:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    565:570:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    562:562:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    574:574:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    581:581:void <init>() -> <init>
    581:581:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    584:592:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    581:581:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    597:597:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    603:603:void <init>() -> <init>
    603:603:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    606:610:java.util.Currency read(com.google.gson.stream.JsonReader) -> read
    603:603:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    615:615:void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    620:620:void <init>() -> <init>
    620:620:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    630:659:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    620:620:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    665:681:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    688:688:void <init>() -> <init>
    688:688:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    691:714:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    688:688:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    719:719:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    725:725:void <init>() -> <init>
    725:725:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    763:817:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    745:758:com.google.gson.JsonElement readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> readTerminal
    731:737:com.google.gson.JsonElement tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> tryBeginNesting
    725:725:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    823:851:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    920:920:void <init>() -> <init>
    922:930:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    135:135:void <init>() -> <init>
    135:135:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    138:146:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    135:135:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    150:150:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    947:947:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    950:950:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    953:953:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    960:960:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    963:964:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    967:968:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$33:
    975:975:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    978:979:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    982:983:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$34:
    994:994:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    997:1001:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    1017:1017:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34$1 -> com.google.gson.internal.bind.TypeAdapters$34$1:
    1001:1001:void <init>(com.google.gson.internal.bind.TypeAdapters$34,java.lang.Class) -> <init>
    1007:1010:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1003:1003:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.bind.TypeAdapters$35:
    95:95:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    160:164:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    158:158:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    168:168:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    175:175:void <init>() -> <init>
    175:175:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    178:193:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    175:175:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    198:200:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    208:208:void <init>() -> <init>
    208:208:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    211:226:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    208:208:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    231:233:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    241:241:void <init>() -> <init>
    241:241:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    244:251:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    241:241:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    257:259:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    266:266:void <init>() -> <init>
    266:266:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    269:271:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> read
    266:266:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    275:275:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    281:281:void <init>() -> <init>
    281:281:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    283:283:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> read
    281:281:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    286:286:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    860:902:void <init>(java.lang.Class) -> <init>
    859:859:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    906:912:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    859:859:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    916:916:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1 -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1:
    869:869:void <init>(com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter,java.lang.Class) -> <init>
    869:869:java.lang.Object run() -> run
    871:880:java.lang.reflect.Field[] run() -> run
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
    34:34:void <clinit>() -> <clinit>
    293:293:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    350:354:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    130:281:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    306:323:int parseInt(java.lang.String,int,int) -> parseInt
com.google.gson.internal.reflect.ReflectionHelper -> com.google.gson.internal.reflect.ReflectionHelper:
    18:22:void <clinit>() -> <clinit>
    10:10:java.lang.RuntimeException access$300(java.lang.ReflectiveOperationException) -> access$300
    91:103:void appendExecutableParameters(java.lang.reflect.AccessibleObject,java.lang.StringBuilder) -> appendExecutableParameters
    83:86:java.lang.String constructorToString(java.lang.reflect.Constructor) -> constructorToString
    155:155:java.lang.RuntimeException createExceptionForRecordReflectionException(java.lang.ReflectiveOperationException) -> createExceptionForRecordReflectionException
    146:146:java.lang.RuntimeException createExceptionForUnexpectedIllegalAccess(java.lang.IllegalAccessException) -> createExceptionForUnexpectedIllegalAccess
    55:73:java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean) -> getAccessibleObjectDescription
    137:137:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    141:141:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    132:132:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    128:128:boolean isRecord(java.lang.Class) -> isRecord
    35:38:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    116:122:java.lang.String tryMakeAccessible(java.lang.reflect.Constructor) -> tryMakeAccessible
com.google.gson.internal.reflect.ReflectionHelper$RecordHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordHelper:
    166:166:void <init>() -> <init>
    166:166:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper:
    245:245:void <init>() -> <init>
    245:245:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    266:266:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    260:260:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    254:254:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper:
    176:176:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    182:188:void <init>() -> <init>
    235:237:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    217:226:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    203:210:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    194:196:boolean isRecord(java.lang.Class) -> isRecord
com.google.gson.internal.sql.SqlDateTypeAdapter -> com.google.gson.internal.sql.SqlDateTypeAdapter:
    40:40:void <clinit>() -> <clinit>
    39:39:void <init>(com.google.gson.internal.sql.SqlDateTypeAdapter$1) -> <init>
    48:50:void <init>() -> <init>
    39:39:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    55:67:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    39:39:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    74:81:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
com.google.gson.internal.sql.SqlDateTypeAdapter$1 -> com.google.gson.internal.sql.SqlDateTypeAdapter$1:
    40:40:void <init>() -> <init>
    43:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimeTypeAdapter -> com.google.gson.internal.sql.SqlTimeTypeAdapter:
    41:41:void <clinit>() -> <clinit>
    40:40:void <init>(com.google.gson.internal.sql.SqlTimeTypeAdapter$1) -> <init>
    48:50:void <init>() -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    54:65:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    71:78:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
com.google.gson.internal.sql.SqlTimeTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimestampTypeAdapter -> com.google.gson.internal.sql.SqlTimestampTypeAdapter:
    15:15:void <clinit>() -> <clinit>
    14:14:void <init>(com.google.gson.TypeAdapter,com.google.gson.internal.sql.SqlTimestampTypeAdapter$1) -> <init>
    29:30:void <init>(com.google.gson.TypeAdapter) -> <init>
    14:14:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    35:36:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    14:14:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    41:41:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimestampTypeAdapter$1:
    15:15:void <init>() -> <init>
    18:20:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTypesSupport -> com.google.gson.internal.sql.SqlTypesSupport:
    37:65:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTypesSupport$1 -> com.google.gson.internal.sql.SqlTypesSupport$1:
    45:45:void <init>(java.lang.Class) -> <init>
    45:45:java.util.Date deserialize(java.util.Date) -> deserialize
    47:47:java.sql.Date deserialize(java.util.Date) -> deserialize
com.google.gson.internal.sql.SqlTypesSupport$2 -> com.google.gson.internal.sql.SqlTypesSupport$2:
    50:50:void <init>(java.lang.Class) -> <init>
    50:50:java.util.Date deserialize(java.util.Date) -> deserialize
    52:52:java.sql.Timestamp deserialize(java.util.Date) -> deserialize
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    69:72:void <init>() -> <init>
    79:82:void <init>(java.lang.reflect.Type) -> <init>
    302:303:boolean equals(java.lang.Object) -> equals
    314:314:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    321:321:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    112:112:java.lang.Class getRawType() -> getRawType
    119:119:java.lang.reflect.Type getType() -> getType
    91:105:java.lang.reflect.Type getTypeTokenTypeArgument() -> getTypeTokenTypeArgument
    298:298:int hashCode() -> hashCode
    307:307:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    1683:1683:void <clinit>() -> <clinit>
    230:291:void <init>(java.io.Reader) -> <init>
    349:358:void beginArray() -> beginArray
    385:393:void beginObject() -> beginObject
    1462:1463:void checkLenient() -> checkLenient
    1228:1231:void close() -> close
    1665:1679:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    471:603:int doPeek() -> doPeek
    367:376:void endArray() -> endArray
    402:412:void endObject() -> endObject
    1338:1355:boolean fillBuffer(int) -> fillBuffer
    1518:1544:java.lang.String getPath(boolean) -> getPath
    1579:1579:java.lang.String getPath() -> getPath
    1561:1561:java.lang.String getPreviousPath() -> getPreviousPath
    420:422:boolean hasNext() -> hasNext
    341:341:boolean isLenient() -> isLenient
    761:761:boolean isLiteral(char) -> isLiteral
    1512:1514:java.lang.String locationString() -> locationString
    849:862:boolean nextBoolean() -> nextBoolean
    897:927:double nextDouble() -> nextDouble
    1175:1220:int nextInt() -> nextInt
    942:982:long nextLong() -> nextLong
    786:801:java.lang.String nextName() -> nextName
    1381:1455:int nextNonWhitespace(boolean) -> nextNonWhitespace
    873:881:void nextNull() -> nextNull
    998:1042:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    814:837:java.lang.String nextString() -> nextString
    1057:1102:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    431:465:com.google.gson.stream.JsonToken peek() -> peek
    608:647:int peekKeyword() -> peekKeyword
    652:747:int peekNumber() -> peekNumber
    1323:1329:void push(int) -> push
    1593:1648:char readEscapeCharacter() -> readEscapeCharacter
    334:334:void setLenient(boolean) -> setLenient
    1108:1130:void skipQuotedValue(char) -> skipQuotedValue
    1489:1498:boolean skipTo(java.lang.String) -> skipTo
    1473:1477:void skipToEndOfLine() -> skipToEndOfLine
    1137:1161:void skipUnquotedValue() -> skipUnquotedValue
    1252:1319:void skipValue() -> skipValue
    1657:1657:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1508:1508:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1683:1683:void <init>() -> <init>
    1685:1701:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    25:25:com.google.gson.stream.JsonToken[] $values() -> $values
    25:84:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:com.google.gson.stream.JsonToken[] values() -> values
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    139:170:void <clinit>() -> <clinit>
    176:207:void <init>(java.io.Writer) -> <init>
    663:670:void beforeName() -> beforeName
    680:707:void beforeValue() -> beforeValue
    291:292:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    311:312:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    341:353:com.google.gson.stream.JsonWriter close(int,int,char) -> close
    606:612:void close() -> close
    301:301:com.google.gson.stream.JsonWriter endArray() -> endArray
    321:321:com.google.gson.stream.JsonWriter endObject() -> endObject
    594:597:void flush() -> flush
    281:281:boolean getSerializeNulls() -> getSerializeNulls
    265:265:boolean isHtmlSafe() -> isHtmlSafe
    246:246:boolean isLenient() -> isLenient
    550:550:boolean isTrustedNumberType(java.lang.Class) -> isTrustedNumberType
    388:395:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    648:654:void newline() -> newline
    450:459:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    329:331:com.google.gson.stream.JsonWriter open(int,char) -> open
    368:371:int peek() -> peek
    358:361:void push(int) -> push
    378:378:void replaceTop(int) -> replaceTop
    257:257:void setHtmlSafe(boolean) -> setHtmlSafe
    219:224:void setIndent(java.lang.String) -> setIndent
    239:239:void setLenient(boolean) -> setLenient
    273:273:void setSerializeNulls(boolean) -> setSerializeNulls
    616:644:void string(java.lang.String) -> string
    415:419:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    469:471:com.google.gson.stream.JsonWriter value(boolean) -> value
    483:487:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    522:527:com.google.gson.stream.JsonWriter value(double) -> value
    537:539:com.google.gson.stream.JsonWriter value(long) -> value
    567:585:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    400:403:void writeDeferredName() -> writeDeferredName
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    29:29:void <init>(java.lang.String) -> <init>
com.google.protobuf.nano.CodedInputByteBufferNano -> com.google.protobuf.nano.CodedInputByteBufferNano:
    403:419:void <init>(byte[],int,int) -> <init>
    94:95:void checkLastTagWas(int) -> checkLastTagWas
    519:523:int getBytesUntilLimit() -> getBytesUntilLimit
    540:540:int getPosition() -> getPosition
    533:533:boolean isAtEnd() -> isAtEnd
    60:60:com.google.protobuf.nano.CodedInputByteBufferNano newInstance(byte[],int,int) -> newInstance
    510:511:void popLimit(int) -> popLimit
    478:487:int pushLimit(int) -> pushLimit
    184:184:boolean readBool() -> readBool
    231:241:byte[] readBytes() -> readBytes
    154:154:float readFloat() -> readFloat
    169:169:int readInt32() -> readInt32
    164:164:long readInt64() -> readInt64
    217:226:void readMessage(com.google.protobuf.nano.MessageNano) -> readMessage
    581:584:byte readRawByte() -> readRawByte
    595:612:byte[] readRawBytes(int) -> readRawBytes
    335:338:int readRawLittleEndian32() -> readRawLittleEndian32
    347:354:long readRawLittleEndian64() -> readRawLittleEndian64
    285:310:int readRawVarint32() -> readRawVarint32
    323:330:long readRawVarint64() -> readRawVarint64
    189:198:java.lang.String readString() -> readString
    71:79:int readTag() -> readTag
    247:247:int readUInt32() -> readUInt32
    159:159:long readUInt64() -> readUInt64
    493:500:void recomputeBufferSizeAfterLimit() -> recomputeBufferSizeAfterLimit
    564:571:void rewindToPosition(int) -> rewindToPosition
    106:128:boolean skipField(int) -> skipField
    138:139:void skipMessage() -> skipMessage
    624:638:void skipRawBytes(int) -> skipRawBytes
com.google.protobuf.nano.CodedOutputByteBufferNano -> com.google.protobuf.nano.CodedOutputByteBufferNano:
    56:59:void <init>(byte[],int,int) -> <init>
    737:738:void checkNoSpaceLeft() -> checkNoSpaceLeft
    430:430:int computeBoolSize(int,boolean) -> computeBoolSize
    466:466:int computeBytesSize(int,byte[]) -> computeBytesSize
    660:660:int computeBytesSizeNoTag(byte[]) -> computeBytesSizeNoTag
    379:379:int computeFloatSize(int,float) -> computeFloatSize
    403:403:int computeInt32Size(int,int) -> computeInt32Size
    593:593:int computeInt32SizeNoTag(int) -> computeInt32SizeNoTag
    395:395:int computeInt64Size(int,long) -> computeInt64Size
    584:584:int computeInt64SizeNoTag(long) -> computeInt64SizeNoTag
    457:457:int computeMessageSize(int,com.google.protobuf.nano.MessageNano) -> computeMessageSize
    651:652:int computeMessageSizeNoTag(com.google.protobuf.nano.MessageNano) -> computeMessageSizeNoTag
    439:439:int computeStringSize(int,java.lang.String) -> computeStringSize
    630:634:int computeStringSizeNoTag(java.lang.String) -> computeStringSizeNoTag
    798:798:int computeTagSize(int) -> computeTagSize
    483:483:int computeUInt32Size(int,int) -> computeUInt32Size
    676:676:int computeUInt32SizeNoTag(int) -> computeUInt32SizeNoTag
    387:387:int computeUInt64Size(int,long) -> computeUInt64Size
    576:576:int computeUInt64SizeNoTag(long) -> computeUInt64SizeNoTag
    81:81:com.google.protobuf.nano.CodedOutputByteBufferNano newInstance(byte[],int,int) -> newInstance
    726:726:int spaceLeft() -> spaceLeft
    138:139:void writeBool(int,boolean) -> writeBool
    294:294:void writeBoolNoTag(boolean) -> writeBoolNoTag
    167:168:void writeBytes(int,byte[]) -> writeBytes
    320:321:void writeBytesNoTag(byte[]) -> writeBytesNoTag
    96:97:void writeFloat(int,float) -> writeFloat
    259:259:void writeFloatNoTag(float) -> writeFloatNoTag
    117:118:void writeInt32(int,int) -> writeInt32
    275:278:void writeInt32NoTag(int) -> writeInt32NoTag
    110:111:void writeInt64(int,long) -> writeInt64
    269:269:void writeInt64NoTag(long) -> writeInt64NoTag
    160:161:void writeMessage(int,com.google.protobuf.nano.MessageNano) -> writeMessage
    314:315:void writeMessageNoTag(com.google.protobuf.nano.MessageNano) -> writeMessageNoTag
    759:764:void writeRawByte(byte) -> writeRawByte
    769:769:void writeRawByte(int) -> writeRawByte
    774:774:void writeRawBytes(byte[]) -> writeRawBytes
    780:786:void writeRawBytes(byte[],int,int) -> writeRawBytes
    859:862:void writeRawLittleEndian32(int) -> writeRawLittleEndian32
    808:811:void writeRawVarint32(int) -> writeRawVarint32
    834:837:void writeRawVarint64(long) -> writeRawVarint64
    145:146:void writeString(int,java.lang.String) -> writeString
    302:304:void writeStringNoTag(java.lang.String) -> writeStringNoTag
    793:793:void writeTag(int,int) -> writeTag
    182:183:void writeUInt32(int,int) -> writeUInt32
    332:332:void writeUInt32NoTag(int) -> writeUInt32NoTag
    103:104:void writeUInt64(int,long) -> writeUInt64
    264:264:void writeUInt64NoTag(long) -> writeUInt64NoTag
com.google.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException -> com.google.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException:
    752:752:void <init>(int,int) -> <init>
com.google.protobuf.nano.InternalNano -> com.google.protobuf.nano.InternalNano:
    221:239:boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
    312:315:int hashCode(java.lang.Object[]) -> hashCode
com.google.protobuf.nano.InvalidProtocolBufferNanoException -> com.google.protobuf.nano.InvalidProtocolBufferNanoException:
    45:45:void <init>(java.lang.String) -> <init>
    73:73:com.google.protobuf.nano.InvalidProtocolBufferNanoException invalidEndTag() -> invalidEndTag
    68:68:com.google.protobuf.nano.InvalidProtocolBufferNanoException invalidTag() -> invalidTag
    78:78:com.google.protobuf.nano.InvalidProtocolBufferNanoException invalidWireType() -> invalidWireType
    63:63:com.google.protobuf.nano.InvalidProtocolBufferNanoException malformedVarint() -> malformedVarint
    57:57:com.google.protobuf.nano.InvalidProtocolBufferNanoException negativeSize() -> negativeSize
    83:83:com.google.protobuf.nano.InvalidProtocolBufferNanoException recursionLimitExceeded() -> recursionLimitExceeded
    49:49:com.google.protobuf.nano.InvalidProtocolBufferNanoException truncatedMessage() -> truncatedMessage
com.google.protobuf.nano.MessageNano -> com.google.protobuf.nano.MessageNano:
    40:41:void <init>() -> <init>
    51:55:int getCachedSize() -> getCachedSize
    65:65:int getSerializedSize() -> getSerializedSize
    118:118:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.MessageNano,byte[]) -> mergeFrom
    128:136:com.google.protobuf.nano.MessageNano mergeFrom(com.google.protobuf.nano.MessageNano,byte[],int,int) -> mergeFrom
    86:87:byte[] toByteArray(com.google.protobuf.nano.MessageNano) -> toByteArray
    102:107:void toByteArray(com.google.protobuf.nano.MessageNano,byte[],int,int) -> toByteArray
    149:149:java.lang.String toString() -> toString
com.google.protobuf.nano.MessageNanoPrinter -> com.google.protobuf.nano.MessageNanoPrinter:
    200:215:void appendQuotedBytes(byte[],java.lang.StringBuffer) -> appendQuotedBytes
    153:164:java.lang.String deCamelCaseify(java.lang.String) -> deCamelCaseify
    182:192:java.lang.String escapeString(java.lang.String) -> escapeString
    63:69:java.lang.String print(com.google.protobuf.nano.MessageNano) -> print
    92:145:void print(java.lang.String,java.lang.Class,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer) -> print
    171:175:java.lang.String sanitizeString(java.lang.String) -> sanitizeString
com.google.protobuf.nano.WireFormatNano -> com.google.protobuf.nano.WireFormatNano:
    84:100:void <clinit>() -> <clinit>
    161:171:int getRepeatedFieldArrayLength(com.google.protobuf.nano.CodedInputByteBufferNano,int) -> getRepeatedFieldArrayLength
    113:113:boolean parseUnknownField(com.google.protobuf.nano.CodedInputByteBufferNano,int) -> parseUnknownField
com.stfalcon.imageviewer.StfalconImageViewer -> com.stfalcon.imageviewer.StfalconImageViewer:
    43:46:void <init>(android.content.Context,com.stfalcon.imageviewer.viewer.builder.BuilderData) -> <init>
    62:65:void show(boolean) -> show
com.stfalcon.imageviewer.StfalconImageViewer$Builder -> com.stfalcon.imageviewer.StfalconImageViewer$Builder:
    130:132:void <init>(android.content.Context,java.util.List,com.stfalcon.imageviewer.loader.ImageLoader) -> <init>
    257:257:com.stfalcon.imageviewer.StfalconImageViewer$Builder allowZooming(boolean) -> allowZooming
    308:308:com.stfalcon.imageviewer.StfalconImageViewer build() -> build
    316:316:com.stfalcon.imageviewer.StfalconImageViewer show() -> show
    326:327:com.stfalcon.imageviewer.StfalconImageViewer show(boolean) -> show
    247:247:com.stfalcon.imageviewer.StfalconImageViewer$Builder withHiddenStatusBar(boolean) -> withHiddenStatusBar
    277:277:com.stfalcon.imageviewer.StfalconImageViewer$Builder withTransitionFrom(android.widget.ImageView) -> withTransitionFrom
com.stfalcon.imageviewer.common.extensions.ImageViewKt -> com.stfalcon.imageviewer.common.extensions.ImageViewKt:
# {"id":"sourceFile","fileName":"ImageView.kt"}
    23:25:void copyBitmapFrom(android.widget.ImageView,android.widget.ImageView) -> copyBitmapFrom
com.stfalcon.imageviewer.common.extensions.PhotoViewKt -> com.stfalcon.imageviewer.common.extensions.PhotoViewKt:
# {"id":"sourceFile","fileName":"PhotoView.kt"}
    22:22:void resetScale(com.github.chrisbanes.photoview.PhotoView,boolean) -> resetScale
com.stfalcon.imageviewer.common.extensions.TransitionKt -> com.stfalcon.imageviewer.common.extensions.TransitionKt:
# {"id":"sourceFile","fileName":"Transition.kt"}
    27:28:androidx.transition.Transition addListener(androidx.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener
    26:26:androidx.transition.Transition addListener$default(androidx.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener$default
com.stfalcon.imageviewer.common.extensions.TransitionKt$addListener$1 -> com.stfalcon.imageviewer.common.extensions.TransitionKt$addListener$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    28:28:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    42:42:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    30:30:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    38:38:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    34:34:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    46:46:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
com.stfalcon.imageviewer.common.extensions.ViewKt -> com.stfalcon.imageviewer.common.extensions.ViewKt:
# {"id":"sourceFile","fileName":"View.kt"}
    93:98:void animateAlpha(android.view.View,java.lang.Float,java.lang.Float,long) -> animateAlpha
    68:73:void applyMargin(android.view.View,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> applyMargin
    66:66:void applyMargin$default(android.view.View,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,int,java.lang.Object) -> applyMargin$default
    31:31:android.graphics.Rect getGlobalVisibleRect(android.view.View) -> getGlobalVisibleRect
    34:34:android.graphics.Rect getHitRect(android.view.View) -> getHitRect
    28:28:android.graphics.Rect getLocalVisibleRect(android.view.View) -> getLocalVisibleRect
    37:37:boolean isRectVisible(android.view.View) -> isRectVisible
    40:40:boolean isVisible(android.view.View) -> isVisible
    51:51:void makeGone(android.view.View) -> makeGone
    47:47:void makeInvisible(android.view.View) -> makeInvisible
    86:87:void makeViewMatchParent(android.view.View) -> makeViewMatchParent
    43:43:void makeVisible(android.view.View) -> makeVisible
    80:82:void requestNewSize(android.view.View,int,int) -> requestNewSize
    102:119:void switchVisibilityWithAnimation(android.view.View) -> switchVisibilityWithAnimation
com.stfalcon.imageviewer.common.extensions.ViewKt$switchVisibilityWithAnimation$$inlined$apply$lambda$1 -> com.stfalcon.imageviewer.common.extensions.ViewKt$switchVisibilityWithAnimation$$inlined$apply$lambda$1:
# {"id":"sourceFile","fileName":"View.kt"}
    110:110:void <init>(android.view.View,boolean) -> <init>
    112:112:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.stfalcon.imageviewer.common.extensions.ViewPagerKt -> com.stfalcon.imageviewer.common.extensions.ViewPagerKt:
# {"id":"sourceFile","fileName":"ViewPager.kt"}
    25:37:androidx.viewpager.widget.ViewPager$OnPageChangeListener addOnPageChangeListener(androidx.viewpager.widget.ViewPager,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addOnPageChangeListener
    24:24:androidx.viewpager.widget.ViewPager$OnPageChangeListener addOnPageChangeListener$default(androidx.viewpager.widget.ViewPager,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addOnPageChangeListener$default
com.stfalcon.imageviewer.common.extensions.ViewPagerKt$addOnPageChangeListener$1 -> com.stfalcon.imageviewer.common.extensions.ViewPagerKt$addOnPageChangeListener$1:
# {"id":"sourceFile","fileName":"ViewPager.kt"}
    25:25:void <init>(kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    35:35:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    27:27:void onPageScrolled(int,float,int) -> onPageScrolled
    31:31:void onPageSelected(int) -> onPageSelected
com.stfalcon.imageviewer.common.extensions.ViewPropertyAnimatorKt -> com.stfalcon.imageviewer.common.extensions.ViewPropertyAnimatorKt:
# {"id":"sourceFile","fileName":"ViewPropertyAnimator.kt"}
    26:27:android.view.ViewPropertyAnimator setAnimatorListener(android.view.ViewPropertyAnimator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> setAnimatorListener
    25:25:android.view.ViewPropertyAnimator setAnimatorListener$default(android.view.ViewPropertyAnimator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> setAnimatorListener$default
com.stfalcon.imageviewer.common.extensions.ViewPropertyAnimatorKt$setAnimatorListener$1 -> com.stfalcon.imageviewer.common.extensions.ViewPropertyAnimatorKt$setAnimatorListener$1:
# {"id":"sourceFile","fileName":"ViewPropertyAnimator.kt"}
    27:27:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    30:30:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    34:34:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.stfalcon.imageviewer.common.gestures.detector.SimpleOnGestureListener -> com.stfalcon.imageviewer.common.gestures.detector.SimpleOnGestureListener:
# {"id":"sourceFile","fileName":"SimpleOnGestureListener.kt"}
    25:25:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    31:31:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    28:28:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection -> com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection:
# {"id":"sourceFile","fileName":"SwipeDirection.kt"}
    19:19:void <init>(java.lang.String,int) -> <init>
com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection$Companion -> com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection$Companion:
# {"id":"sourceFile","fileName":"SwipeDirection.kt"}
    26:26:void <init>() -> <init>
    26:26:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    29:34:com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection fromAngle(double) -> fromAngle
com.stfalcon.imageviewer.common.gestures.direction.SwipeDirectionDetector -> com.stfalcon.imageviewer.common.gestures.direction.SwipeDirectionDetector:
# {"id":"sourceFile","fileName":"SwipeDirectionDetector.kt"}
    23:28:void <init>(android.content.Context,kotlin.jvm.functions.Function1) -> <init>
    81:81:double getAngle(float,float,float,float) -> getAngle
    65:66:com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection getDirection(float,float,float,float) -> getDirection
    86:88:float getEventDistance(android.view.MotionEvent) -> getEventDistance
    34:49:void handleTouchEvent(android.view.MotionEvent) -> handleTouchEvent
com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler -> com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler:
# {"id":"sourceFile","fileName":"SwipeToDismissHandler.kt"}
    26:37:void <init>(android.view.View,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function0) -> <init>
    26:26:kotlin.jvm.functions.Function0 access$getOnDismiss$p(com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler) -> access$getOnDismiss$p
    26:26:kotlin.jvm.functions.Function2 access$getOnSwipeViewMove$p(com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler) -> access$getOnSwipeViewMove$p
    26:26:android.view.View access$getSwipeView$p(com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler) -> access$getSwipeView$p
    26:26:int access$getTranslationLimit$p(com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler) -> access$getTranslationLimit$p
    91:104:void animateTranslation(float) -> animateTranslation
    73:73:void initiateDismissToBottom$imageviewer_release() -> initiateDismissToBottom$imageviewer_release
    43:62:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    78:86:void onTrackingEnd(int) -> onTrackingEnd
com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler$Companion -> com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler$Companion:
# {"id":"sourceFile","fileName":"SwipeToDismissHandler.kt"}
    33:33:void <init>() -> <init>
    33:33:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler$animateTranslation$1 -> com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler$animateTranslation$1:
# {"id":"sourceFile","fileName":"SwipeToDismissHandler.kt"}
    95:95:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler$animateTranslation$2 -> com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler$animateTranslation$2:
# {"id":"sourceFile","fileName":"SwipeToDismissHandler.kt"}
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    97:102:void invoke(android.animation.Animator) -> invoke
com.stfalcon.imageviewer.common.pager.MultiTouchViewPager -> com.stfalcon.imageviewer.common.pager.MultiTouchViewPager:
# {"id":"sourceFile","fileName":"MultiTouchViewPager.kt"}
    29:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:26:void access$onPageScrollStateChanged(com.stfalcon.imageviewer.common.pager.MultiTouchViewPager,int) -> access$onPageScrollStateChanged
    54:60:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    31:31:void <init>(android.content.Context,android.util.AttributeSet) -> isIdle$imageviewer_release
    31:31:boolean isIdle$imageviewer_release():31 -> isIdle$imageviewer_release
    38:40:void onAttachedToWindow() -> onAttachedToWindow
    44:45:void onDetachedFromWindow() -> onDetachedFromWindow
    65:69:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    86:86:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    79:79:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    49:50:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
com.stfalcon.imageviewer.common.pager.MultiTouchViewPager$onAttachedToWindow$1 -> com.stfalcon.imageviewer.common.pager.MultiTouchViewPager$onAttachedToWindow$1:
# {"id":"sourceFile","fileName":"MultiTouchViewPager.kt"}
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    40:40:void invoke(int) -> invoke
com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter -> com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter:
# {"id":"sourceFile","fileName":"RecyclingPagerAdapter.kt"}
    15:15:void <clinit>() -> <clinit>
    12:24:void <init>() -> <init>
    27:28:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    75:77:java.util.List getAttachedViewHolders() -> getAttachedViewHolders
    23:26:void com.stfalcon.imageviewer.common.extensions.SparseArrayKt.forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> getAttachedViewHolders
    23:26:java.util.List getAttachedViewHolders():77 -> getAttachedViewHolders
    78:152:java.util.List getAttachedViewHolders() -> getAttachedViewHolders
    25:25:void com.stfalcon.imageviewer.common.extensions.SparseArrayKt.forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> getAttachedViewHolders
    25:25:java.util.List getAttachedViewHolders():77 -> getAttachedViewHolders
    32:32:int getCount() -> getCount
    38:49:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    54:54:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    64:69:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    57:60:android.os.Parcelable saveState() -> saveState
com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$Companion -> com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$Companion:
# {"id":"sourceFile","fileName":"RecyclingPagerAdapter.kt"}
    14:14:void <init>() -> <init>
    14:14:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$RecycleCache -> com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$RecycleCache:
# {"id":"sourceFile","fileName":"RecyclingPagerAdapter.kt"}
    88:92:void <init>(com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter) -> <init>
    92:92:void <init>(com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter) -> getCaches$imageviewer_release
    92:92:java.util.List getCaches$imageviewer_release():92 -> getCaches$imageviewer_release
    98:106:com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder getFreeViewHolder$imageviewer_release(android.view.ViewGroup,int) -> getFreeViewHolder$imageviewer_release
com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder -> com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"RecyclingPagerAdapter.kt"}
    113:113:void <clinit>() -> <clinit>
    110:110:void <init>(android.view.View) -> <init>
    120:122:void attach$imageviewer_release(android.view.ViewGroup,int) -> attach$imageviewer_release
    126:127:void detach$imageviewer_release(android.view.ViewGroup) -> detach$imageviewer_release
    110:110:void <init>(android.view.View) -> getItemView$imageviewer_release
    110:110:android.view.View getItemView$imageviewer_release():110 -> getItemView$imageviewer_release
    116:116:void setPosition$imageviewer_release(int) -> getPosition$imageviewer_release
    116:116:int getPosition$imageviewer_release():116 -> getPosition$imageviewer_release
    141:142:android.util.SparseArray getStateFromParcelable(android.os.Parcelable) -> getStateFromParcelable
    117:117:void setAttached$imageviewer_release(boolean) -> isAttached$imageviewer_release
    117:117:boolean isAttached$imageviewer_release():117 -> isAttached$imageviewer_release
    131:131:void onRestoreInstanceState$imageviewer_release(android.os.Parcelable) -> onRestoreInstanceState$imageviewer_release
    135:137:android.os.Parcelable onSaveInstanceState$imageviewer_release() -> onSaveInstanceState$imageviewer_release
    116:116:void setPosition$imageviewer_release(int) -> setPosition$imageviewer_release
com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder$Companion -> com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder$Companion:
# {"id":"sourceFile","fileName":"RecyclingPagerAdapter.kt"}
    112:112:void <init>() -> <init>
    112:112:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter -> com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter:
# {"id":"sourceFile","fileName":"ImagesPagerAdapter.kt"}
    32:35:void <init>(android.content.Context,java.util.List,com.stfalcon.imageviewer.loader.ImageLoader,boolean) -> <init>
    27:27:void access$setImages$p(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter,java.util.List) -> access$getImageLoader$p
    27:27:com.stfalcon.imageviewer.loader.ImageLoader access$getImageLoader$p(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter):27 -> access$getImageLoader$p
    27:27:void access$setImages$p(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter,java.util.List) -> access$getImages$p
    27:27:java.util.List access$getImages$p(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter):27 -> access$getImages$p
    51:51:int getItemCount$imageviewer_release() -> getItemCount$imageviewer_release
    38:78:boolean isScaled(int) -> isScaled
    27:27:void access$setImages$p(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter,java.util.List) -> onBindViewHolder$imageviewer_release
    27:27:void onBindViewHolder$imageviewer_release(com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder,int):27 -> onBindViewHolder$imageviewer_release
    49:49:void onBindViewHolder$imageviewer_release(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter$ViewHolder,int) -> onBindViewHolder$imageviewer_release
    27:27:void access$setImages$p(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter,java.util.List) -> onCreateViewHolder$imageviewer_release
    27:27:com.stfalcon.imageviewer.common.pager.RecyclingPagerAdapter$ViewHolder onCreateViewHolder$imageviewer_release(android.view.ViewGroup,int):27 -> onCreateViewHolder$imageviewer_release
    41:46:com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter$ViewHolder onCreateViewHolder$imageviewer_release(android.view.ViewGroup,int) -> onCreateViewHolder$imageviewer_release
    59:80:kotlin.Unit resetScale$imageviewer_release(int) -> resetScale$imageviewer_release
com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter$ViewHolder -> com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"ImagesPagerAdapter.kt"}
    61:67:void <init>(com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter,android.view.View) -> <init>
    70:71:void bind(int) -> bind
    65:65:boolean isScaled$imageviewer_release() -> isScaled$imageviewer_release
    74:74:void resetScale() -> resetScale
com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter$onCreateViewHolder$photoView$1$1 -> com.stfalcon.imageviewer.viewer.adapter.ImagesPagerAdapter$onCreateViewHolder$photoView$1$1:
# {"id":"sourceFile","fileName":"ImagesPagerAdapter.kt"}
    43:43:void onDrag(float,float) -> onDrag
com.stfalcon.imageviewer.viewer.builder.BuilderData -> com.stfalcon.imageviewer.viewer.builder.BuilderData:
# {"id":"sourceFile","fileName":"BuilderData.kt"}
    26:39:void <init>(java.util.List,com.stfalcon.imageviewer.loader.ImageLoader) -> <init>
    30:30:int getBackgroundColor() -> getBackgroundColor
    36:36:int[] getContainerPaddingPixels() -> getContainerPaddingPixels
    32:32:com.stfalcon.imageviewer.listeners.OnImageChangeListener getImageChangeListener() -> getImageChangeListener
    28:28:com.stfalcon.imageviewer.loader.ImageLoader getImageLoader() -> getImageLoader
    35:35:int getImageMarginPixels() -> getImageMarginPixels
    27:27:java.util.List getImages() -> getImages
    33:33:com.stfalcon.imageviewer.listeners.OnDismissListener getOnDismissListener() -> getOnDismissListener
    34:34:android.view.View getOverlayView() -> getOverlayView
    37:37:boolean getShouldStatusBarHide() -> getShouldStatusBarHide
    31:31:int getStartPosition() -> getStartPosition
    40:40:android.widget.ImageView getTransitionView() -> getTransitionView
    39:39:boolean isSwipeToDismissAllowed() -> isSwipeToDismissAllowed
    38:38:boolean isZoomingAllowed() -> isZoomingAllowed
    37:37:void setShouldStatusBarHide(boolean) -> setShouldStatusBarHide
    40:40:void setTransitionView(android.widget.ImageView) -> setTransitionView
    38:38:void setZoomingAllowed(boolean) -> setZoomingAllowed
com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog -> com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog:
# {"id":"sourceFile","fileName":"ImageViewerDialog.kt"}
    27:27:void access$setAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,boolean) -> <init>
    27:27:void <init>(android.content.Context,com.stfalcon.imageviewer.viewer.builder.BuilderData):27 -> <init>
    33:51:void <init>(android.content.Context,com.stfalcon.imageviewer.viewer.builder.BuilderData) -> <init>
    27:27:void access$setAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,boolean) -> access$getAnimateOpen$p
    27:27:boolean access$getAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog):27 -> access$getAnimateOpen$p
    27:27:void access$setAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,boolean) -> access$getBuilderData$p
    27:27:com.stfalcon.imageviewer.viewer.builder.BuilderData access$getBuilderData$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog):27 -> access$getBuilderData$p
    27:27:void access$setAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,boolean) -> access$getDialog$p
    27:27:androidx.appcompat.app.AlertDialog access$getDialog$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog):27 -> access$getDialog$p
    27:27:void access$setAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,boolean) -> access$getViewerView$p
    27:27:com.stfalcon.imageviewer.viewer.view.ImageViewerView access$getViewerView$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog):27 -> access$getViewerView$p
    27:27:void access$setAnimateOpen$p(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,boolean) -> access$onDialogKeyEvent
    27:27:boolean access$onDialogKeyEvent(com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog,int,android.view.KeyEvent):27 -> access$onDialogKeyEvent
    37:40:int getDialogStyle() -> getDialogStyle
    87:92:boolean onDialogKeyEvent(int,android.view.KeyEvent) -> onDialogKeyEvent
    100:112:void setupViewerView() -> setupViewerView
    56:57:void show(boolean) -> show
com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$$special$$inlined$apply$lambda$1 -> com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$$special$$inlined$apply$lambda$1:
# {"id":"sourceFile","fileName":"ImageViewerDialog.kt"}
    50:50:void onShow(android.content.DialogInterface) -> onShow
com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$$special$$inlined$apply$lambda$2 -> com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$$special$$inlined$apply$lambda$2:
# {"id":"sourceFile","fileName":"ImageViewerDialog.kt"}
    51:51:void onDismiss(android.content.DialogInterface) -> onDismiss
com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$1 -> com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$1:
# {"id":"sourceFile","fileName":"ImageViewerDialog.kt"}
    47:47:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$setupViewerView$$inlined$apply$lambda$1 -> com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$setupViewerView$$inlined$apply$lambda$1:
# {"id":"sourceFile","fileName":"ImageViewerDialog.kt"}
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
    111:111:void invoke(int) -> invoke
com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$setupViewerView$$inlined$apply$lambda$2 -> com.stfalcon.imageviewer.viewer.dialog.ImageViewerDialog$setupViewerView$$inlined$apply$lambda$2:
# {"id":"sourceFile","fileName":"ImageViewerDialog.kt"}
    27:27:java.lang.Object invoke() -> invoke
    112:112:void invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView -> com.stfalcon.imageviewer.viewer.view.ImageViewerView:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    55:55:void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    56:147:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$animateClose
    52:52:void access$animateClose(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$animateClose
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$getBackgroundView$p
    52:52:android.view.View access$getBackgroundView$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$getBackgroundView$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$getExternalTransitionImageView$p
    52:52:android.widget.ImageView access$getExternalTransitionImageView$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$getExternalTransitionImageView$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$getImagesPager$p
    52:52:com.stfalcon.imageviewer.common.pager.MultiTouchViewPager access$getImagesPager$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$getImagesPager$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$getShouldDismissToBottom$p
    52:52:boolean access$getShouldDismissToBottom$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$getShouldDismissToBottom$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$handleSingleTap
    52:52:void access$handleSingleTap(com.stfalcon.imageviewer.viewer.view.ImageViewerView,android.view.MotionEvent,boolean):52 -> access$handleSingleTap
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$handleSwipeViewMove
    52:52:void access$handleSwipeViewMove(com.stfalcon.imageviewer.viewer.view.ImageViewerView,float,int):52 -> access$handleSwipeViewMove
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$isAtStartPosition$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$isOverlayWasClicked$p
    52:52:boolean access$isOverlayWasClicked$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$isOverlayWasClicked$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$prepareViewsForViewer
    52:52:void access$prepareViewsForViewer(com.stfalcon.imageviewer.viewer.view.ImageViewerView):52 -> access$prepareViewsForViewer
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$setSwipeDirection$p
    52:52:void access$setSwipeDirection$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView,com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection):52 -> access$setSwipeDirection$p
    52:52:boolean access$isAtStartPosition$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView) -> access$setWasDoubleTapped$p
    52:52:void access$setWasDoubleTapped$p(com.stfalcon.imageviewer.viewer.view.ImageViewerView,boolean):52 -> access$setWasDoubleTapped$p
    241:250:void animateClose() -> animateClose
    231:237:void animateOpen() -> animateOpen
    328:328:float calculateTranslationAlpha(float,int) -> calculateTranslationAlpha
    204:207:void close$imageviewer_release() -> close$imageviewer_release
    334:341:androidx.core.view.GestureDetectorCompat createGestureDetector() -> createGestureDetector
    348:348:android.view.ScaleGestureDetector createScaleGestureDetector() -> createScaleGestureDetector
    331:331:com.stfalcon.imageviewer.common.gestures.direction.SwipeDirectionDetector createSwipeDirectionDetector() -> createSwipeDirectionDetector
    351:355:com.stfalcon.imageviewer.common.gestures.dismiss.SwipeToDismissHandler createSwipeToDismissHandler() -> createSwipeToDismissHandler
    358:361:com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator createTransitionImageAnimator(android.widget.ImageView) -> createTransitionImageAnimator
    324:324:boolean dispatchOverlayTouch(android.view.MotionEvent) -> dispatchOverlayTouch
    151:173:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    73:73:void <init>(android.content.Context,android.util.AttributeSet,int) -> getContainerPadding$imageviewer_release
    73:73:int[] getContainerPadding$imageviewer_release():73 -> getContainerPadding$imageviewer_release
    62:62:int getCurrentPosition$imageviewer_release() -> getCurrentPosition$imageviewer_release
    76:76:int getImagesMargin$imageviewer_release() -> getImagesMargin$imageviewer_release
    67:67:void setOnDismiss$imageviewer_release(kotlin.jvm.functions.Function0) -> getOnDismiss$imageviewer_release
    67:67:kotlin.jvm.functions.Function0 getOnDismiss$imageviewer_release():67 -> getOnDismiss$imageviewer_release
    68:68:void setOnPageChange$imageviewer_release(kotlin.jvm.functions.Function1) -> getOnPageChange$imageviewer_release
    68:68:kotlin.jvm.functions.Function1 getOnPageChange$imageviewer_release():68 -> getOnPageChange$imageviewer_release
    81:81:android.view.View getOverlayView$imageviewer_release() -> getOverlayView$imageviewer_release
    121:121:boolean getShouldDismissToBottom() -> getShouldDismissToBottom
    294:299:void handleEventActionDown(android.view.MotionEvent) -> handleEventActionDown
    303:306:void handleEventActionUp(android.view.MotionEvent) -> handleEventActionUp
    310:312:void handleSingleTap(android.view.MotionEvent,boolean) -> handleSingleTap
    317:319:void handleSwipeViewMove(float,int) -> handleSwipeViewMove
    265:274:boolean handleTouchIfNotScaled(android.view.MotionEvent) -> handleTouchIfNotScaled
    281:290:void handleUpDownEvent(android.view.MotionEvent) -> handleUpDownEvent
    124:124:boolean isAtStartPosition() -> isAtStartPosition
    71:71:boolean isScaled$imageviewer_release() -> isScaled$imageviewer_release
    189:200:void open$imageviewer_release(android.widget.ImageView,boolean) -> open$imageviewer_release
    254:255:void prepareViewsForTransition() -> prepareViewsForTransition
    259:261:void prepareViewsForViewer() -> prepareViewsForViewer
    227:227:void resetScale$imageviewer_release() -> resetScale$imageviewer_release
    177:177:void setBackgroundColor(int) -> setBackgroundColor
    73:73:void <init>(android.content.Context,android.util.AttributeSet,int) -> setContainerPadding$imageviewer_release
    73:73:void setContainerPadding$imageviewer_release(int[]):73 -> setContainerPadding$imageviewer_release
    64:64:void setCurrentPosition$imageviewer_release(int) -> setCurrentPosition$imageviewer_release
    181:185:void setImages$imageviewer_release(java.util.List,int,com.stfalcon.imageviewer.loader.ImageLoader) -> setImages$imageviewer_release
    78:78:void setImagesMargin$imageviewer_release(int) -> setImagesMargin$imageviewer_release
    67:67:void setOnDismiss$imageviewer_release(kotlin.jvm.functions.Function0) -> setOnDismiss$imageviewer_release
    68:68:void setOnPageChange$imageviewer_release(kotlin.jvm.functions.Function1) -> setOnPageChange$imageviewer_release
    83:84:void setOverlayView$imageviewer_release(android.view.View) -> setOverlayView$imageviewer_release
    114:115:void setStartPosition(int) -> setStartPosition
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> setSwipeToDismissAllowed$imageviewer_release
    59:59:void setSwipeToDismissAllowed$imageviewer_release(boolean):59 -> setSwipeToDismissAllowed$imageviewer_release
    58:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> setZoomingAllowed$imageviewer_release
    58:58:void setZoomingAllowed$imageviewer_release(boolean):58 -> setZoomingAllowed$imageviewer_release
com.stfalcon.imageviewer.viewer.view.ImageViewerView$1 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$1:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object) -> invoke
    139:142:void invoke(int) -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateClose$1 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateClose$1:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object) -> invoke
    247:248:void invoke(long) -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateClose$2 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateClose$2:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke() -> invoke
    250:250:void invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateOpen$1 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateOpen$1:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object) -> invoke
    234:235:void invoke(long) -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateOpen$2 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$animateOpen$2:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke() -> invoke
    237:237:void invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$createGestureDetector$1 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$createGestureDetector$1:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object) -> invoke
    336:337:boolean invoke(android.view.MotionEvent) -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$createGestureDetector$2 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$createGestureDetector$2:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object) -> invoke
    342:342:boolean invoke(android.view.MotionEvent) -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeDirectionDetector$1 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeDirectionDetector$1:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object) -> invoke
    331:331:void invoke(com.stfalcon.imageviewer.common.gestures.direction.SwipeDirection) -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeToDismissHandler$1 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeToDismissHandler$1:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke() -> invoke
    353:353:boolean invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeToDismissHandler$2 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeToDismissHandler$2:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke() -> invoke
    354:354:void invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeToDismissHandler$3 -> com.stfalcon.imageviewer.viewer.view.ImageViewerView$createSwipeToDismissHandler$3:
# {"id":"sourceFile","fileName":"ImageViewerView.kt"}
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    355:355:void invoke(float,int) -> invoke
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator:
# {"id":"sourceFile","fileName":"TransitionImageAnimator.kt"}
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> <init>
    29:29:void <init>(android.widget.ImageView,android.widget.ImageView,android.widget.FrameLayout):29 -> <init>
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$createTransition
    29:29:androidx.transition.Transition access$createTransition(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0):29 -> access$createTransition
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$getExternalImage$p
    29:29:android.widget.ImageView access$getExternalImage$p(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator):29 -> access$getExternalImage$p
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$getInternalImage$p
    29:29:android.widget.ImageView access$getInternalImage$p(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator):29 -> access$getInternalImage$p
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$getInternalImageContainer$p
    29:29:android.widget.FrameLayout access$getInternalImageContainer$p(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator):29 -> access$getInternalImageContainer$p
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$getInternalRoot$p
    29:29:android.view.ViewGroup access$getInternalRoot$p(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator):29 -> access$getInternalRoot$p
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$handleCloseTransitionEnd
    29:29:void access$handleCloseTransitionEnd(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator,kotlin.jvm.functions.Function0) -> access$isClosing$p
    29:29:boolean access$isClosing$p(com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator):29 -> access$isClosing$p
    68:73:void animateClose$imageviewer_release(boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> animateClose$imageviewer_release
    55:59:void animateOpen$imageviewer_release(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> animateOpen$imageviewer_release
    148:151:androidx.transition.Transition createTransition(kotlin.jvm.functions.Function0) -> createTransition
    106:113:void doCloseTransition(kotlin.jvm.functions.Function0) -> doCloseTransition
    78:81:void doOpenTransition(int[],kotlin.jvm.functions.Function0) -> doOpenTransition
    55:55:void com.stfalcon.imageviewer.common.extensions.ViewKt.postApply(android.view.View,kotlin.jvm.functions.Function1) -> doOpenTransition
    55:55:void doOpenTransition(int[],kotlin.jvm.functions.Function0):81 -> doOpenTransition
    48:48:android.view.ViewGroup getInternalRoot() -> getInternalRoot
    45:45:long getTransitionDuration() -> getTransitionDuration
    134:136:void handleCloseTransitionEnd(kotlin.jvm.functions.Function0) -> handleCloseTransitionEnd
    40:40:void setAnimating$imageviewer_release(boolean) -> isAnimating$imageviewer_release
    40:40:boolean isAnimating$imageviewer_release():40 -> isAnimating$imageviewer_release
    117:129:void prepareTransitionLayout() -> prepareTransitionLayout
    140:144:void resetRootTranslation() -> resetRootTranslation
    40:40:void setAnimating$imageviewer_release(boolean) -> setAnimating$imageviewer_release
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$Companion -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$Companion:
# {"id":"sourceFile","fileName":"TransitionImageAnimator.kt"}
    35:35:void <init>() -> <init>
    35:35:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$createTransition$1 -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$createTransition$1:
# {"id":"sourceFile","fileName":"TransitionImageAnimator.kt"}
    29:29:java.lang.Object invoke(java.lang.Object) -> invoke
    151:151:void invoke(androidx.transition.Transition) -> invoke
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doCloseTransition$1 -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doCloseTransition$1:
# {"id":"sourceFile","fileName":"TransitionImageAnimator.kt"}
    29:29:java.lang.Object invoke() -> invoke
    110:110:void invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doOpenTransition$$inlined$postApply$1 -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doOpenTransition$$inlined$postApply$1:
# {"id":"sourceFile","fileName":"View.kt"}
    55:55:void com.stfalcon.imageviewer.common.extensions.ViewKt$postApply$1.run() -> run
    55:55:void run():55 -> run
    124:124:void run() -> run
    59:59:void com.stfalcon.imageviewer.common.extensions.ViewKt.postDelayed(android.view.View,long,kotlin.jvm.functions.Function1) -> run
    59:59:void run():125 -> run
    127:143:void run() -> run
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doOpenTransition$$inlined$postApply$1$lambda$1 -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doOpenTransition$$inlined$postApply$1$lambda$1:
# {"id":"sourceFile","fileName":"View.kt"}
    59:59:void com.stfalcon.imageviewer.common.extensions.ViewKt$postDelayed$1.run() -> run
    59:59:void run():59 -> run
    124:124:void run() -> run
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doOpenTransition$$inlined$postApply$1$lambda$2 -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$doOpenTransition$$inlined$postApply$1$lambda$2:
# {"id":"sourceFile","fileName":"TransitionImageAnimator.kt"}
    29:29:java.lang.Object invoke() -> invoke
    86:88:void invoke() -> invoke
com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$handleCloseTransitionEnd$1 -> com.stfalcon.imageviewer.viewer.view.TransitionImageAnimator$handleCloseTransitionEnd$1:
# {"id":"sourceFile","fileName":"TransitionImageAnimator.kt"}
    135:135:void run() -> run
io.heckel.ntfy.app.Application -> io.heckel.ntfy.app.Application:
# {"id":"sourceFile","fileName":"Application.kt"}
    7:8:void <init>() -> <init>
    8:8:io.heckel.ntfy.db.Repository getRepository() -> getRepository
io.heckel.ntfy.app.Application$repository$2 -> io.heckel.ntfy.app.Application$repository$2:
# {"id":"sourceFile","fileName":"Application.kt"}
    8:8:java.lang.Object invoke() -> invoke
    9:11:io.heckel.ntfy.db.Repository invoke() -> invoke
io.heckel.ntfy.backup.Action -> io.heckel.ntfy.backup.Action:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    399:411:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.Map,java.lang.Integer,java.lang.String) -> <init>
    401:401:java.lang.String getAction() -> getAction
    407:407:java.lang.String getBody() -> getBody
    403:403:java.lang.Boolean getClear() -> getClear
    411:411:java.lang.String getError() -> getError
    409:409:java.util.Map getExtras() -> getExtras
    406:406:java.util.Map getHeaders() -> getHeaders
    400:400:java.lang.String getId() -> getId
    408:408:java.lang.String getIntent() -> getIntent
    402:402:java.lang.String getLabel() -> getLabel
    405:405:java.lang.String getMethod() -> getMethod
    410:410:java.lang.Integer getProgress() -> getProgress
    404:404:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.backup.Attachment -> io.heckel.ntfy.backup.Attachment:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    414:421:void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,int) -> <init>
    420:420:java.lang.String getContentUri() -> getContentUri
    418:418:java.lang.Long getExpires() -> getExpires
    415:415:java.lang.String getName() -> getName
    421:421:int getProgress() -> getProgress
    417:417:java.lang.Long getSize() -> getSize
    416:416:java.lang.String getType() -> getType
    419:419:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.backup.BackupFile -> io.heckel.ntfy.backup.BackupFile:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    344:350:void <init>(java.lang.String,int,io.heckel.ntfy.backup.Settings,java.util.List,java.util.List,java.util.List) -> <init>
    345:345:java.lang.String getMagic() -> getMagic
    349:349:java.util.List getNotifications() -> getNotifications
    347:347:io.heckel.ntfy.backup.Settings getSettings() -> getSettings
    348:348:java.util.List getSubscriptions() -> getSubscriptions
    350:350:java.util.List getUsers() -> getUsers
io.heckel.ntfy.backup.Backuper -> io.heckel.ntfy.backup.Backuper:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> <init>
    17:17:void <init>(android.content.Context):17 -> <init>
    18:22:void <init>(android.content.Context) -> <init>
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$applyBackupFile
    17:17:java.lang.Object access$applyBackupFile(io.heckel.ntfy.backup.Backuper,io.heckel.ntfy.backup.BackupFile,kotlin.coroutines.Continuation):17 -> access$applyBackupFile
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$applyNotifications
    17:17:java.lang.Object access$applyNotifications(io.heckel.ntfy.backup.Backuper,java.util.List,kotlin.coroutines.Continuation):17 -> access$applyNotifications
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$applySubscriptions
    17:17:java.lang.Object access$applySubscriptions(io.heckel.ntfy.backup.Backuper,java.util.List,kotlin.coroutines.Continuation):17 -> access$applySubscriptions
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$applyUsers
    17:17:java.lang.Object access$applyUsers(io.heckel.ntfy.backup.Backuper,java.util.List,kotlin.coroutines.Continuation):17 -> access$applyUsers
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$createBackupFile
    17:17:java.lang.Object access$createBackupFile(io.heckel.ntfy.backup.Backuper,boolean,boolean,boolean,kotlin.coroutines.Continuation):17 -> access$createBackupFile
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$createNotificationList
    17:17:java.lang.Object access$createNotificationList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation):17 -> access$createNotificationList
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$createSubscriptionList
    17:17:java.lang.Object access$createSubscriptionList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation):17 -> access$createSubscriptionList
    17:17:java.lang.Object access$createUserList(io.heckel.ntfy.backup.Backuper,kotlin.coroutines.Continuation) -> access$createUserList
    45:53:java.lang.Object applyBackupFile(io.heckel.ntfy.backup.BackupFile,kotlin.coroutines.Continuation) -> applyBackupFile
    133:200:java.lang.Object applyNotifications(java.util.List,kotlin.coroutines.Continuation) -> applyNotifications
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> applyNotifications
    1851:1851:java.lang.Object applyNotifications(java.util.List,kotlin.coroutines.Continuation):137 -> applyNotifications
    139:140:java.lang.Object applyNotifications(java.util.List,kotlin.coroutines.Continuation) -> applyNotifications
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> applyNotifications
    1549:1549:java.lang.Object applyNotifications(java.util.List,kotlin.coroutines.Continuation):140 -> applyNotifications
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> applyNotifications
    1620:1621:java.lang.Object applyNotifications(java.util.List,kotlin.coroutines.Continuation):140 -> applyNotifications
    141:200:java.lang.Object applyNotifications(java.util.List,kotlin.coroutines.Continuation) -> applyNotifications
    59:87:void applySettings(io.heckel.ntfy.backup.Settings) -> applySettings
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> applySettings
    1851:1851:void applySettings(io.heckel.ntfy.backup.Settings):87 -> applySettings
    87:87:void applySettings(io.heckel.ntfy.backup.Settings) -> applySettings
    91:131:java.lang.Object applySubscriptions(java.util.List,kotlin.coroutines.Continuation) -> applySubscriptions
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> applySubscriptions
    1851:1851:java.lang.Object applySubscriptions(java.util.List,kotlin.coroutines.Continuation):96 -> applySubscriptions
    99:131:java.lang.Object applySubscriptions(java.util.List,kotlin.coroutines.Continuation) -> applySubscriptions
    202:217:java.lang.Object applyUsers(java.util.List,kotlin.coroutines.Continuation) -> applyUsers
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> applyUsers
    1851:1851:java.lang.Object applyUsers(java.util.List,kotlin.coroutines.Continuation):206 -> applyUsers
    208:217:java.lang.Object applyUsers(java.util.List,kotlin.coroutines.Continuation) -> applyUsers
    24:24:java.lang.Object backup$default(io.heckel.ntfy.backup.Backuper,android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation,int,java.lang.Object) -> backup
    24:24:java.lang.Object backup(android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation):24 -> backup
    30:30:java.lang.Object backup(android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation) -> backup
    24:24:java.lang.Object backup$default(io.heckel.ntfy.backup.Backuper,android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation,int,java.lang.Object) -> backup
    24:24:java.lang.Object backup(android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation):24 -> backup
    25:29:java.lang.Object backup(android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation) -> backup
    24:24:java.lang.Object backup$default(io.heckel.ntfy.backup.Backuper,android.net.Uri,boolean,boolean,boolean,kotlin.coroutines.Continuation,int,java.lang.Object) -> backup$default
    219:226:java.lang.Object createBackupFile(boolean,boolean,boolean,kotlin.coroutines.Continuation) -> createBackupFile
    266:267:java.lang.Object createNotificationList(kotlin.coroutines.Continuation) -> createNotificationList
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> createNotificationList
    1549:1549:java.lang.Object createNotificationList(kotlin.coroutines.Continuation):267 -> createNotificationList
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> createNotificationList
    1620:1621:java.lang.Object createNotificationList(kotlin.coroutines.Continuation):267 -> createNotificationList
    268:269:java.lang.Object createNotificationList(kotlin.coroutines.Continuation) -> createNotificationList
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> createNotificationList
    1549:1549:java.lang.Object createNotificationList(kotlin.coroutines.Continuation):269 -> createNotificationList
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> createNotificationList
    1620:1621:java.lang.Object createNotificationList(kotlin.coroutines.Continuation):269 -> createNotificationList
    270:322:java.lang.Object createNotificationList(kotlin.coroutines.Continuation) -> createNotificationList
    231:241:io.heckel.ntfy.backup.Settings createSettings() -> createSettings
    245:246:java.lang.Object createSubscriptionList(kotlin.coroutines.Continuation) -> createSubscriptionList
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> createSubscriptionList
    1549:1549:java.lang.Object createSubscriptionList(kotlin.coroutines.Continuation):246 -> createSubscriptionList
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> createSubscriptionList
    1620:1621:java.lang.Object createSubscriptionList(kotlin.coroutines.Continuation):246 -> createSubscriptionList
    247:261:java.lang.Object createSubscriptionList(kotlin.coroutines.Continuation) -> createSubscriptionList
    327:328:java.lang.Object createUserList(kotlin.coroutines.Continuation) -> createUserList
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> createUserList
    1549:1549:java.lang.Object createUserList(kotlin.coroutines.Continuation):328 -> createUserList
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> createUserList
    1620:1621:java.lang.Object createUserList(kotlin.coroutines.Continuation):328 -> createUserList
    329:332:java.lang.Object createUserList(kotlin.coroutines.Continuation) -> createUserList
    32:38:java.lang.Object restore(android.net.Uri,kotlin.coroutines.Continuation) -> restore
    41:42:java.lang.String settingsAsString() -> settingsAsString
io.heckel.ntfy.backup.Backuper$Companion -> io.heckel.ntfy.backup.Backuper$Companion:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    337:337:void <init>() -> <init>
io.heckel.ntfy.backup.Backuper$applyBackupFile$1 -> io.heckel.ntfy.backup.Backuper$applyBackupFile$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$applyNotifications$1 -> io.heckel.ntfy.backup.Backuper$applyNotifications$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$applySubscriptions$1 -> io.heckel.ntfy.backup.Backuper$applySubscriptions$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$applyUsers$1 -> io.heckel.ntfy.backup.Backuper$applyUsers$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$backup$1 -> io.heckel.ntfy.backup.Backuper$backup$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$createBackupFile$1 -> io.heckel.ntfy.backup.Backuper$createBackupFile$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$createNotificationList$1 -> io.heckel.ntfy.backup.Backuper$createNotificationList$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$createSubscriptionList$1 -> io.heckel.ntfy.backup.Backuper$createSubscriptionList$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$createUserList$1 -> io.heckel.ntfy.backup.Backuper$createUserList$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Backuper$restore$1 -> io.heckel.ntfy.backup.Backuper$restore$1:
# {"id":"sourceFile","fileName":"Backuper.kt"}
io.heckel.ntfy.backup.Icon -> io.heckel.ntfy.backup.Icon:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    424:426:void <init>(java.lang.String,java.lang.String) -> <init>
    426:426:java.lang.String getContentUri() -> getContentUri
    425:425:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.backup.InvalidBackupFileException -> io.heckel.ntfy.backup.InvalidBackupFileException:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    435:435:void <init>() -> <init>
io.heckel.ntfy.backup.Notification -> io.heckel.ntfy.backup.Notification:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    383:396:void <init>(java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,io.heckel.ntfy.backup.Icon,java.util.List,io.heckel.ntfy.backup.Attachment,boolean) -> <init>
    394:394:java.util.List getActions() -> getActions
    395:395:io.heckel.ntfy.backup.Attachment getAttachment() -> getAttachment
    392:392:java.lang.String getClick() -> getClick
    396:396:boolean getDeleted() -> getDeleted
    389:389:java.lang.String getEncoding() -> getEncoding
    393:393:io.heckel.ntfy.backup.Icon getIcon() -> getIcon
    384:384:java.lang.String getId() -> getId
    388:388:java.lang.String getMessage() -> getMessage
    390:390:int getPriority() -> getPriority
    385:385:long getSubscriptionId() -> getSubscriptionId
    391:391:java.lang.String getTags() -> getTags
    386:386:long getTimestamp() -> getTimestamp
    387:387:java.lang.String getTitle() -> getTitle
io.heckel.ntfy.backup.Notification$$ExternalSyntheticBackport0 -> io.heckel.ntfy.backup.Notification$$ExternalSyntheticBackport0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int io.heckel.ntfy.backup.Notification$$InternalSyntheticBackport$2$6f5265d9f4a1b0346f68c8095488f9848b46744a642a503a92fc2c8b02b7e5a2$0.m(long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.backup.Settings -> io.heckel.ntfy.backup.Settings:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    353:363:void <init>(java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Long,java.util.List) -> <init>
    356:356:java.lang.Long getAutoDeleteSeconds() -> getAutoDeleteSeconds
    355:355:java.lang.Long getAutoDownloadMaxSize() -> getAutoDownloadMaxSize
    359:359:java.lang.Boolean getBroadcastEnabled() -> getBroadcastEnabled
    358:358:java.lang.String getConnectionProtocol() -> getConnectionProtocol
    357:357:java.lang.Integer getDarkMode() -> getDarkMode
    361:361:java.lang.String getDefaultBaseUrl() -> getDefaultBaseUrl
    363:363:java.util.List getLastSharedTopics() -> getLastSharedTopics
    354:354:java.lang.Integer getMinPriority() -> getMinPriority
    362:362:java.lang.Long getMutedUntil() -> getMutedUntil
    360:360:java.lang.Boolean getRecordLogs() -> getRecordLogs
io.heckel.ntfy.backup.Subscription -> io.heckel.ntfy.backup.Subscription:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    366:380:void <init>(long,java.lang.String,java.lang.String,boolean,boolean,long,java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    374:374:java.lang.Long getAutoDelete() -> getAutoDelete
    368:368:java.lang.String getBaseUrl() -> getBaseUrl
    371:371:boolean getDedicatedChannels() -> getDedicatedChannels
    380:380:java.lang.String getDisplayName() -> getDisplayName
    377:377:java.lang.String getIcon() -> getIcon
    367:367:long getId() -> getId
    375:375:java.lang.Integer getInsistent() -> getInsistent
    370:370:boolean getInstant() -> getInstant
    376:376:java.lang.String getLastNotificationId() -> getLastNotificationId
    373:373:java.lang.Integer getMinPriority() -> getMinPriority
    372:372:long getMutedUntil() -> getMutedUntil
    369:369:java.lang.String getTopic() -> getTopic
    378:378:java.lang.String getUpAppId() -> getUpAppId
    379:379:java.lang.String getUpConnectorToken() -> getUpConnectorToken
io.heckel.ntfy.backup.User -> io.heckel.ntfy.backup.User:
# {"id":"sourceFile","fileName":"Backuper.kt"}
    429:432:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    430:430:java.lang.String getBaseUrl() -> getBaseUrl
    432:432:java.lang.String getPassword() -> getPassword
    431:431:java.lang.String getUsername() -> getUsername
io.heckel.ntfy.db.Action -> io.heckel.ntfy.db.Action:
# {"id":"sourceFile","fileName":"Database.kt"}
    142:155:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.Map,java.lang.Integer,java.lang.String) -> <init>
    145:145:java.lang.String getAction() -> getAction
    151:151:java.lang.String getBody() -> getBody
    147:147:java.lang.Boolean getClear() -> getClear
    155:155:java.lang.String getError() -> getError
    153:153:java.util.Map getExtras() -> getExtras
    150:150:java.util.Map getHeaders() -> getHeaders
    144:144:java.lang.String getId() -> getId
    152:152:java.lang.String getIntent() -> getIntent
    146:146:java.lang.String getLabel() -> getLabel
    149:149:java.lang.String getMethod() -> getMethod
    154:154:java.lang.Integer getProgress() -> getProgress
    148:148:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.db.Attachment -> io.heckel.ntfy.db.Attachment:
# {"id":"sourceFile","fileName":"Database.kt"}
    113:121:void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,int) -> <init>
    124:124:void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.String) -> <init>
    120:120:java.lang.String getContentUri() -> getContentUri
    118:118:java.lang.Long getExpires() -> getExpires
    115:115:java.lang.String getName() -> getName
    121:121:int getProgress() -> getProgress
    117:117:java.lang.Long getSize() -> getSize
    116:116:java.lang.String getType() -> getType
    119:119:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.db.ConnectionState -> io.heckel.ntfy.db.ConnectionState:
# {"id":"sourceFile","fileName":"Database.kt"}
    72:72:void <clinit>() -> <clinit>
    71:71:void <init>(java.lang.String,int) -> <init>
io.heckel.ntfy.db.Converters -> io.heckel.ntfy.db.Converters:
# {"id":"sourceFile","fileName":"Database.kt"}
    162:163:void <init>() -> <init>
    173:173:java.lang.String fromActionList(java.util.List) -> fromActionList
    167:168:java.util.List toActionList(java.lang.String) -> toActionList
io.heckel.ntfy.db.Converters$toActionList$listType$1 -> io.heckel.ntfy.db.Converters$toActionList$listType$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    167:167:void <init>() -> <init>
io.heckel.ntfy.db.Database -> io.heckel.ntfy.db.Database:
# {"id":"sourceFile","fileName":"Database.kt"}
    234:326:void <clinit>() -> <clinit>
    201:201:void <init>() -> <init>
    199:199:io.heckel.ntfy.db.Database access$getInstance$cp() -> access$getInstance$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_10_11$1 access$getMIGRATION_10_11$cp() -> access$getMIGRATION_10_11$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_11_12$1 access$getMIGRATION_11_12$cp() -> access$getMIGRATION_11_12$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_12_13$1 access$getMIGRATION_12_13$cp() -> access$getMIGRATION_12_13$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_1_2$1 access$getMIGRATION_1_2$cp() -> access$getMIGRATION_1_2$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_2_3$1 access$getMIGRATION_2_3$cp() -> access$getMIGRATION_2_3$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_3_4$1 access$getMIGRATION_3_4$cp() -> access$getMIGRATION_3_4$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_4_5$1 access$getMIGRATION_4_5$cp() -> access$getMIGRATION_4_5$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_5_6$1 access$getMIGRATION_5_6$cp() -> access$getMIGRATION_5_6$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_6_7$1 access$getMIGRATION_6_7$cp() -> access$getMIGRATION_6_7$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_7_8$1 access$getMIGRATION_7_8$cp() -> access$getMIGRATION_7_8$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_8_9$1 access$getMIGRATION_8_9$cp() -> access$getMIGRATION_8_9$cp
    199:199:io.heckel.ntfy.db.Database$Companion$MIGRATION_9_10$1 access$getMIGRATION_9_10$cp() -> access$getMIGRATION_9_10$cp
    199:199:void access$setInstance$cp(io.heckel.ntfy.db.Database) -> access$setInstance$cp
io.heckel.ntfy.db.Database$Companion -> io.heckel.ntfy.db.Database$Companion:
# {"id":"sourceFile","fileName":"Database.kt"}
    207:207:void <init>() -> <init>
    212:229:io.heckel.ntfy.db.Database getInstance(android.content.Context) -> getInstance
io.heckel.ntfy.db.Database$Companion$MIGRATION_10_11$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_10_11$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    309:309:void <init>() -> <init>
    311:313:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_11_12$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_11_12$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    317:317:void <init>() -> <init>
    319:322:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_12_13$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_12_13$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    326:326:void <init>() -> <init>
    328:329:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_1_2$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_1_2$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    234:234:void <init>() -> <init>
    237:245:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_2_3$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_2_3$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    249:249:void <init>() -> <init>
    251:251:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_3_4$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_3_4$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    255:255:void <init>() -> <init>
    257:260:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_4_5$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_4_5$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    264:264:void <init>() -> <init>
    266:268:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_5_6$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_5_6$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    272:272:void <init>() -> <init>
    274:281:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_6_7$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_6_7$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    285:285:void <init>() -> <init>
    287:287:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_7_8$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_7_8$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    291:291:void <init>() -> <init>
    293:293:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_8_9$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_8_9$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    297:297:void <init>() -> <init>
    299:299:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database$Companion$MIGRATION_9_10$1 -> io.heckel.ntfy.db.Database$Companion$MIGRATION_9_10$1:
# {"id":"sourceFile","fileName":"Database.kt"}
    303:303:void <init>() -> <init>
    305:305:void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> migrate
io.heckel.ntfy.db.Database_Impl -> io.heckel.ntfy.db.Database_Impl:
    32:32:void <init>() -> <init>
    32:32:java.util.List access$000(io.heckel.ntfy.db.Database_Impl) -> access$000
    32:32:java.util.List access$100(io.heckel.ntfy.db.Database_Impl) -> access$100
    32:32:java.util.List access$1000(io.heckel.ntfy.db.Database_Impl) -> access$1000
    32:32:java.util.List access$200(io.heckel.ntfy.db.Database_Impl) -> access$200
    32:32:java.util.List access$300(io.heckel.ntfy.db.Database_Impl) -> access$300
    32:32:java.util.List access$400(io.heckel.ntfy.db.Database_Impl) -> access$400
    32:32:java.util.List access$500(io.heckel.ntfy.db.Database_Impl) -> access$500
    32:32:androidx.sqlite.db.SupportSQLiteDatabase access$602(io.heckel.ntfy.db.Database_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$602
    32:32:void access$700(io.heckel.ntfy.db.Database_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$700
    32:32:java.util.List access$800(io.heckel.ntfy.db.Database_Impl) -> access$800
    32:32:java.util.List access$900(io.heckel.ntfy.db.Database_Impl) -> access$900
    199:201:androidx.room.InvalidationTracker createInvalidationTracker() -> createInvalidationTracker
    43:193:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> createOpenHelper
    243:243:java.util.List getAutoMigrations(java.util.Map) -> getAutoMigrations
    236:236:java.util.Set getRequiredAutoMigrationSpecs() -> getRequiredAutoMigrationSpecs
    226:230:java.util.Map getRequiredTypeConverters() -> getRequiredTypeConverters
    290:298:io.heckel.ntfy.db.LogDao logDao() -> logDao
    262:270:io.heckel.ntfy.db.NotificationDao notificationDao() -> notificationDao
    248:256:io.heckel.ntfy.db.SubscriptionDao subscriptionDao() -> subscriptionDao
    276:284:io.heckel.ntfy.db.UserDao userDao() -> userDao
io.heckel.ntfy.db.Database_Impl$1 -> io.heckel.ntfy.db.Database_Impl$1:
    43:43:void <init>(io.heckel.ntfy.db.Database_Impl,int) -> <init>
    46:53:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> createAllTables
    58:64:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> dropAllTables
    71:73:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    80:84:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    91:91:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPreMigrate
    100:186:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> onValidateSchema
io.heckel.ntfy.db.Icon -> io.heckel.ntfy.db.Icon:
# {"id":"sourceFile","fileName":"Database.kt"}
    133:136:void <init>(java.lang.String,java.lang.String) -> <init>
    139:139:void <init>(java.lang.String) -> <init>
    136:136:java.lang.String getContentUri() -> getContentUri
    135:135:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.db.LogDao -> io.heckel.ntfy.db.LogDao:
# {"id":"sourceFile","fileName":"Database.kt"}
io.heckel.ntfy.db.LogDao_Impl -> io.heckel.ntfy.db.LogDao_Impl:
    35:72:void <init>(androidx.room.RoomDatabase) -> <init>
    26:26:androidx.room.RoomDatabase access$000(io.heckel.ntfy.db.LogDao_Impl) -> access$000
    26:26:androidx.room.EntityInsertionAdapter access$100(io.heckel.ntfy.db.LogDao_Impl) -> access$100
    26:26:androidx.room.SharedSQLiteStatement access$200(io.heckel.ntfy.db.LogDao_Impl) -> access$200
    121:130:void deleteAll() -> deleteAll
    136:180:java.util.List getAll() -> getAll
    184:184:java.util.List getRequiredConverters() -> getRequiredConverters
    83:83:java.lang.Object insert(io.heckel.ntfy.db.LogEntry,kotlin.coroutines.Continuation) -> insert
    100:100:java.lang.Object prune(int,kotlin.coroutines.Continuation) -> prune
io.heckel.ntfy.db.LogDao_Impl$1 -> io.heckel.ntfy.db.LogDao_Impl$1:
    37:37:void <init>(io.heckel.ntfy.db.LogDao_Impl,androidx.room.RoomDatabase) -> <init>
    37:37:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    45:61:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.LogEntry) -> bind
io.heckel.ntfy.db.LogDao_Impl$2 -> io.heckel.ntfy.db.LogDao_Impl$2:
    65:65:void <init>(io.heckel.ntfy.db.LogDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.LogDao_Impl$3 -> io.heckel.ntfy.db.LogDao_Impl$3:
    72:72:void <init>(io.heckel.ntfy.db.LogDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.LogDao_Impl$4 -> io.heckel.ntfy.db.LogDao_Impl$4:
    83:83:void <init>(io.heckel.ntfy.db.LogDao_Impl,io.heckel.ntfy.db.LogEntry) -> <init>
    83:83:java.lang.Object call() -> call
    86:93:kotlin.Unit call() -> call
io.heckel.ntfy.db.LogDao_Impl$5 -> io.heckel.ntfy.db.LogDao_Impl$5:
    100:100:void <init>(io.heckel.ntfy.db.LogDao_Impl,int) -> <init>
    100:100:java.lang.Object call() -> call
    103:114:kotlin.Unit call() -> call
io.heckel.ntfy.db.LogEntry -> io.heckel.ntfy.db.LogEntry:
# {"id":"sourceFile","fileName":"Database.kt"}
    186:193:void <init>(long,long,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    196:196:void <init>(long,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    193:193:java.lang.String getException() -> getException
    188:188:long getId() -> getId
    191:191:int getLevel() -> getLevel
    192:192:java.lang.String getMessage() -> getMessage
    190:190:java.lang.String getTag() -> getTag
    189:189:long getTimestamp() -> getTimestamp
io.heckel.ntfy.db.Notification -> io.heckel.ntfy.db.Notification:
# {"id":"sourceFile","fileName":"Database.kt"}
    95:110:void <init>(java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,io.heckel.ntfy.db.Icon,java.util.List,io.heckel.ntfy.db.Attachment,boolean) -> <init>
    108:108:java.util.List getActions() -> getActions
    109:109:io.heckel.ntfy.db.Attachment getAttachment() -> getAttachment
    106:106:java.lang.String getClick() -> getClick
    110:110:boolean getDeleted() -> getDeleted
    102:102:java.lang.String getEncoding() -> getEncoding
    107:107:io.heckel.ntfy.db.Icon getIcon() -> getIcon
    97:97:java.lang.String getId() -> getId
    101:101:java.lang.String getMessage() -> getMessage
    103:103:int getNotificationId() -> getNotificationId
    104:104:int getPriority() -> getPriority
    98:98:long getSubscriptionId() -> getSubscriptionId
    105:105:java.lang.String getTags() -> getTags
    99:99:long getTimestamp() -> getTimestamp
    100:100:java.lang.String getTitle() -> getTitle
io.heckel.ntfy.db.NotificationDao -> io.heckel.ntfy.db.NotificationDao:
# {"id":"sourceFile","fileName":"Database.kt"}
io.heckel.ntfy.db.NotificationDao_Impl -> io.heckel.ntfy.db.NotificationDao_Impl:
    34:331:void <init>(androidx.room.RoomDatabase) -> <init>
    29:29:io.heckel.ntfy.db.Converters access$000(io.heckel.ntfy.db.NotificationDao_Impl) -> access$000
    29:29:androidx.room.RoomDatabase access$100(io.heckel.ntfy.db.NotificationDao_Impl) -> access$100
    342:349:void add(io.heckel.ntfy.db.Notification) -> add
    386:397:void clearAllNotificationIds(long) -> clearAllNotificationIds
    366:381:void clearIconUri(java.lang.String) -> clearIconUri
    1053:1212:io.heckel.ntfy.db.Notification get(java.lang.String) -> get
    1216:1216:java.util.List getRequiredConverters() -> getRequiredConverters
    511:513:java.lang.Object list(kotlin.coroutines.Continuation) -> list
    1029:1047:java.util.List listActiveIconUris() -> listActiveIconUris
    870:1023:java.util.List listDeletedWithAttachments() -> listDeletedWithAttachments
    675:678:kotlinx.coroutines.flow.Flow listFlow(long) -> listFlow
    844:864:java.util.List listIds(long) -> listIds
    422:433:void markAllAsDeleted(long) -> markAllAsDeleted
    402:417:void markAsDeleted(java.lang.String) -> markAsDeleted
    438:451:void markAsDeletedIfOlderThan(long,long) -> markAsDeletedIfOlderThan
    494:505:void removeAll(long) -> removeAll
    476:489:void removeIfOlderThan(long,long) -> removeIfOlderThan
    456:471:void undelete(java.lang.String) -> undelete
    354:361:void update(io.heckel.ntfy.db.Notification) -> update
io.heckel.ntfy.db.NotificationDao_Impl$1 -> io.heckel.ntfy.db.NotificationDao_Impl$1:
    56:56:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
    56:56:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    64:162:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.Notification) -> bind
io.heckel.ntfy.db.NotificationDao_Impl$10 -> io.heckel.ntfy.db.NotificationDao_Impl$10:
    331:331:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$11 -> io.heckel.ntfy.db.NotificationDao_Impl$11:
    513:513:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    513:513:java.lang.Object call() -> call
    516:667:java.util.List call() -> call
io.heckel.ntfy.db.NotificationDao_Impl$12 -> io.heckel.ntfy.db.NotificationDao_Impl$12:
    678:678:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    678:678:java.lang.Object call() -> call
    681:831:java.util.List call() -> call
    836:836:void finalize() -> finalize
io.heckel.ntfy.db.NotificationDao_Impl$2 -> io.heckel.ntfy.db.NotificationDao_Impl$2:
    166:166:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
    166:166:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    174:279:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.Notification) -> bind
io.heckel.ntfy.db.NotificationDao_Impl$3 -> io.heckel.ntfy.db.NotificationDao_Impl$3:
    282:282:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$4 -> io.heckel.ntfy.db.NotificationDao_Impl$4:
    289:289:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$5 -> io.heckel.ntfy.db.NotificationDao_Impl$5:
    296:296:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$6 -> io.heckel.ntfy.db.NotificationDao_Impl$6:
    303:303:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$7 -> io.heckel.ntfy.db.NotificationDao_Impl$7:
    310:310:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$8 -> io.heckel.ntfy.db.NotificationDao_Impl$8:
    317:317:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.NotificationDao_Impl$9 -> io.heckel.ntfy.db.NotificationDao_Impl$9:
    324:324:void <init>(io.heckel.ntfy.db.NotificationDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.Repository -> io.heckel.ntfy.db.Repository:
# {"id":"sourceFile","fileName":"Repository.kt"}
    15:15:void access$setInstance$cp(io.heckel.ntfy.db.Repository) -> <init>
    15:15:void <init>(android.content.SharedPreferences,io.heckel.ntfy.db.Database):15 -> <init>
    16:21:void <init>(android.content.SharedPreferences,io.heckel.ntfy.db.Database) -> <init>
    24:24:java.util.concurrent.atomic.AtomicLong getDetailViewSubscriptionId() -> <init>
    24:24:void <init>(android.content.SharedPreferences,io.heckel.ntfy.db.Database):24 -> <init>
    25:25:android.media.MediaPlayer getMediaPlayer() -> <init>
    25:25:void <init>(android.content.SharedPreferences,io.heckel.ntfy.db.Database):25 -> <init>
    28:28:void <init>(android.content.SharedPreferences,io.heckel.ntfy.db.Database) -> <init>
    15:15:void access$setInstance$cp(io.heckel.ntfy.db.Repository) -> access$getInstance$cp
    15:15:io.heckel.ntfy.db.Repository access$getInstance$cp():15 -> access$getInstance$cp
    15:15:void access$setInstance$cp(io.heckel.ntfy.db.Repository) -> access$setInstance$cp
    15:15:void access$setInstance$cp(io.heckel.ntfy.db.Repository) -> access$toSubscriptionList
    15:15:java.util.List access$toSubscriptionList(io.heckel.ntfy.db.Repository,java.util.List):15 -> access$toSubscriptionList
    388:388:void addLastShareTopic(java.lang.String) -> addLastShareTopic
    819:819:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> addLastShareTopic
    819:819:void addLastShareTopic(java.lang.String):388 -> addLastShareTopic
    847:847:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> addLastShareTopic
    847:847:void addLastShareTopic(java.lang.String):388 -> addLastShareTopic
    388:391:void addLastShareTopic(java.lang.String) -> addLastShareTopic
    127:133:java.lang.Object addNotification(io.heckel.ntfy.db.Notification,kotlin.coroutines.Continuation) -> addNotification
    76:77:java.lang.Object addSubscription(io.heckel.ntfy.db.Subscription,kotlin.coroutines.Continuation) -> addSubscription
    173:173:java.lang.Object addUser(io.heckel.ntfy.db.User,kotlin.coroutines.Continuation) -> addUser
    371:376:boolean checkGlobalMutedUntil() -> checkGlobalMutedUntil
    112:112:void clearAllNotificationIds(long) -> clearAllNotificationIds
    104:104:void clearIconUri(java.lang.String) -> clearIconUri
    185:185:java.lang.Object deleteUser(java.lang.String,kotlin.coroutines.Continuation) -> deleteUser
    100:100:java.util.Set getActiveIconUris() -> getActiveIconUris
    250:250:long getAutoDeleteSeconds() -> getAutoDeleteSeconds
    235:240:long getAutoDownloadMaxSize() -> getAutoDownloadMaxSize
    209:209:int getAutoRestartWorkerVersion() -> getAutoRestartWorkerVersion
    316:316:long getBatteryOptimizationsRemindTime() -> getBatteryOptimizationsRemindTime
    286:286:boolean getBroadcastEnabled() -> getBroadcastEnabled
    282:282:java.lang.String getConnectionProtocol() -> getConnectionProtocol
    272:272:int getDarkMode() -> getDarkMode
    336:337:java.lang.String getDefaultBaseUrl() -> getDefaultBaseUrl
    199:199:int getDeleteWorkerVersion() -> getDeleteWorkerVersion
    96:96:java.util.List getDeletedNotificationsWithAttachments() -> getDeletedNotificationsWithAttachments
    24:24:java.util.concurrent.atomic.AtomicLong getDetailViewSubscriptionId() -> getDetailViewSubscriptionId
    361:361:long getGlobalMutedUntil() -> getGlobalMutedUntil
    296:296:boolean getInsistentMaxPriorityEnabled() -> getInsistentMaxPriorityEnabled
    383:384:java.util.List getLastShareTopics() -> getLastShareTopics
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getLastShareTopics
    766:766:java.util.List getLastShareTopics():384 -> getLastShareTopics
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getLastShareTopics
    857:857:java.util.List getLastShareTopics():384 -> getLastShareTopics
    384:384:java.util.List getLastShareTopics() -> getLastShareTopics
    25:25:android.media.MediaPlayer getMediaPlayer() -> getMediaPlayer
    231:231:int getMinPriority() -> getMinPriority
    116:116:io.heckel.ntfy.db.Notification getNotification(java.lang.String) -> getNotification
    92:92:java.lang.Object getNotifications(kotlin.coroutines.Continuation) -> getNotifications
    108:108:androidx.lifecycle.LiveData getNotificationsLiveData(long) -> getNotificationsLiveData
    189:189:int getPollWorkerVersion() -> getPollWorkerVersion
    306:306:boolean getRecordLogs() -> getRecordLogs
    465:465:io.heckel.ntfy.db.ConnectionState getState(long) -> getState
    58:58:io.heckel.ntfy.db.Subscription getSubscription(long) -> getSubscription
    64:64:java.lang.Object getSubscription(java.lang.String,java.lang.String,kotlin.coroutines.Continuation) -> getSubscription
    70:70:java.lang.Object getSubscriptionByConnectorToken(java.lang.String,kotlin.coroutines.Continuation) -> getSubscriptionByConnectorToken
    51:53:java.lang.Object getSubscriptionIdsWithInstantStatus(kotlin.coroutines.Continuation) -> getSubscriptionIdsWithInstantStatus
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getSubscriptionIdsWithInstantStatus
    1549:1549:java.lang.Object getSubscriptionIdsWithInstantStatus(kotlin.coroutines.Continuation):54 -> getSubscriptionIdsWithInstantStatus
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getSubscriptionIdsWithInstantStatus
    1620:1621:java.lang.Object getSubscriptionIdsWithInstantStatus(kotlin.coroutines.Continuation):54 -> getSubscriptionIdsWithInstantStatus
    54:54:java.lang.Object getSubscriptionIdsWithInstantStatus(kotlin.coroutines.Continuation) -> getSubscriptionIdsWithInstantStatus
    41:43:androidx.lifecycle.LiveData getSubscriptionIdsWithInstantStatusLiveData() -> getSubscriptionIdsWithInstantStatusLiveData
    39:39:androidx.lifecycle.LiveData androidx.lifecycle.TransformationsKt.map(androidx.lifecycle.LiveData,kotlin.jvm.functions.Function1) -> getSubscriptionIdsWithInstantStatusLiveData
    39:39:androidx.lifecycle.LiveData getSubscriptionIdsWithInstantStatusLiveData():44 -> getSubscriptionIdsWithInstantStatusLiveData
    47:48:java.lang.Object getSubscriptions(kotlin.coroutines.Continuation) -> getSubscriptions
    32:35:androidx.lifecycle.LiveData getSubscriptionsLiveData() -> getSubscriptionsLiveData
    181:181:java.lang.Object getUser(java.lang.String,kotlin.coroutines.Continuation) -> getUser
    165:165:java.lang.Object getUsers(kotlin.coroutines.Continuation) -> getUsers
    169:169:androidx.lifecycle.LiveData getUsersLiveData() -> getUsersLiveData
    326:326:long getWebSocketRemindTime() -> getWebSocketRemindTime
    356:357:boolean isGlobalMuted() -> isGlobalMuted
    149:149:void markAllAsDeleted(long) -> markAllAsDeleted
    145:145:void markAsDeleted(java.lang.String) -> markAsDeleted
    153:153:void markAsDeletedIfOlderThan(long,long) -> markAsDeletedIfOlderThan
    120:120:java.util.List onlyNewNotifications(long,java.util.List) -> onlyNewNotifications
    819:819:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onlyNewNotifications
    819:819:java.util.List onlyNewNotifications(long,java.util.List):121 -> onlyNewNotifications
    847:847:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onlyNewNotifications
    847:847:java.util.List onlyNewNotifications(long,java.util.List):121 -> onlyNewNotifications
    121:121:java.util.List onlyNewNotifications(long,java.util.List) -> onlyNewNotifications
    161:161:void removeAllNotifications(long) -> removeAllNotifications
    157:157:void removeNotificationsIfOlderThan(long,long) -> removeNotificationsIfOlderThan
    88:89:java.lang.Object removeSubscription(long,kotlin.coroutines.Continuation) -> removeSubscription
    254:256:void setAutoDeleteSeconds(long) -> setAutoDeleteSeconds
    244:246:void setAutoDownloadMaxSize(long) -> setAutoDownloadMaxSize
    213:215:void setAutoRestartWorkerVersion(int) -> setAutoRestartWorkerVersion
    320:322:void setBatteryOptimizationsRemindTime(long) -> setBatteryOptimizationsRemindTime
    290:292:void setBroadcastEnabled(boolean) -> setBroadcastEnabled
    276:278:void setConnectionProtocol(java.lang.String) -> setConnectionProtocol
    261:267:void setDarkMode(int) -> setDarkMode
    341:351:void setDefaultBaseUrl(java.lang.String) -> setDefaultBaseUrl
    203:205:void setDeleteWorkerVersion(int) -> setDeleteWorkerVersion
    365:367:void setGlobalMutedUntil(long) -> setGlobalMutedUntil
    300:302:void setInsistentMaxPriorityEnabled(boolean) -> setInsistentMaxPriorityEnabled
    220:226:void setMinPriority(int) -> setMinPriority
    193:195:void setPollWorkerVersion(int) -> setPollWorkerVersion
    310:312:void setRecordLogsEnabled(boolean) -> setRecordLogsEnabled
    330:332:void setWebSocketRemindTime(long) -> setWebSocketRemindTime
    424:442:io.heckel.ntfy.db.Subscription toSubscription(io.heckel.ntfy.db.SubscriptionWithMetadata) -> toSubscription
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> toSubscriptionList
    1549:1549:java.util.List toSubscriptionList(java.util.List):395 -> toSubscriptionList
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> toSubscriptionList
    1620:1621:java.util.List toSubscriptionList(java.util.List):395 -> toSubscriptionList
    396:414:java.util.List toSubscriptionList(java.util.List) -> toSubscriptionList
    141:141:void undeleteNotification(java.lang.String) -> undeleteNotification
    137:137:void updateNotification(io.heckel.ntfy.db.Notification) -> updateNotification
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> updateState
    1851:1851:void updateState(java.util.Collection,io.heckel.ntfy.db.ConnectionState):448 -> updateState
    449:460:void updateState(java.util.Collection,io.heckel.ntfy.db.ConnectionState) -> updateState
    82:83:java.lang.Object updateSubscription(io.heckel.ntfy.db.Subscription,kotlin.coroutines.Continuation) -> updateSubscription
    177:177:java.lang.Object updateUser(io.heckel.ntfy.db.User,kotlin.coroutines.Continuation) -> updateUser
io.heckel.ntfy.db.Repository$Companion -> io.heckel.ntfy.db.Repository$Companion:
# {"id":"sourceFile","fileName":"Repository.kt"}
    468:468:void <init>() -> <init>
    528:530:io.heckel.ntfy.db.Repository getInstance(android.content.Context) -> getInstance
    534:536:io.heckel.ntfy.db.Repository getInstance(android.content.SharedPreferences,io.heckel.ntfy.db.Database) -> getInstance
io.heckel.ntfy.db.Repository$getSubscriptionIdsWithInstantStatus$1 -> io.heckel.ntfy.db.Repository$getSubscriptionIdsWithInstantStatus$1:
# {"id":"sourceFile","fileName":"Repository.kt"}
io.heckel.ntfy.db.Repository$getSubscriptionIdsWithInstantStatusLiveData$$inlined$map$1 -> io.heckel.ntfy.db.Repository$getSubscriptionIdsWithInstantStatusLiveData$$inlined$map$1:
# {"id":"sourceFile","fileName":"Transformations.kt"}
    39:39:java.lang.Object androidx.lifecycle.TransformationsKt$map$1.apply(java.lang.Object) -> apply
    39:39:java.lang.Object apply(java.lang.Object):39 -> apply
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> apply
    1549:1549:java.lang.Object apply(java.lang.Object):44 -> apply
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> apply
    1620:1621:java.lang.Object apply(java.lang.Object):44 -> apply
    44:44:androidx.lifecycle.LiveData io.heckel.ntfy.db.Repository.getSubscriptionIdsWithInstantStatusLiveData() -> apply
    44:44:java.lang.Object apply(java.lang.Object):94 -> apply
io.heckel.ntfy.db.Repository$getSubscriptions$1 -> io.heckel.ntfy.db.Repository$getSubscriptions$1:
# {"id":"sourceFile","fileName":"Repository.kt"}
io.heckel.ntfy.db.Repository$getSubscriptionsLiveData$1 -> io.heckel.ntfy.db.Repository$getSubscriptionsLiveData$1:
# {"id":"sourceFile","fileName":"Repository.kt"}
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    36:36:java.util.List invoke(java.util.List,java.util.concurrent.ConcurrentHashMap) -> invoke
io.heckel.ntfy.db.RepositoryKt -> io.heckel.ntfy.db.RepositoryKt:
# {"id":"sourceFile","fileName":"Repository.kt"}
    void $r8$lambda$3PlQgaGxI4hsARHvb-e3p6dpFzE(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function2,androidx.lifecycle.LiveData,androidx.lifecycle.LiveData,java.lang.Object) -> $r8$lambda$3PlQgaGxI4hsARHvb-e3p6dpFzE
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$67aZ1hYGAjWBxgdRnB8qpEhCCdg(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function2,androidx.lifecycle.LiveData,androidx.lifecycle.LiveData,java.lang.Object) -> $r8$lambda$67aZ1hYGAjWBxgdRnB8qpEhCCdg
      # {"id":"com.android.tools.r8.synthesized"}
    548:552:androidx.lifecycle.LiveData combineWith(androidx.lifecycle.LiveData,androidx.lifecycle.LiveData,kotlin.jvm.functions.Function2) -> combineWith
    550:550:void combineWith$lambda-0(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function2,androidx.lifecycle.LiveData,androidx.lifecycle.LiveData,java.lang.Object) -> combineWith$lambda-0
    553:553:void combineWith$lambda-1(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function2,androidx.lifecycle.LiveData,androidx.lifecycle.LiveData,java.lang.Object) -> combineWith$lambda-1
io.heckel.ntfy.db.RepositoryKt$$ExternalSyntheticLambda0 -> io.heckel.ntfy.db.RepositoryKt$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.LiveData io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$0.f$2 -> f$2
    androidx.lifecycle.LiveData io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$0.f$3 -> f$3
    androidx.lifecycle.MediatorLiveData io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$0.f$0 -> f$0
    kotlin.jvm.functions.Function2 io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$0.f$1 -> f$1
    void io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$0.<init>(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function2,androidx.lifecycle.LiveData,androidx.lifecycle.LiveData) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$0.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.db.RepositoryKt$$ExternalSyntheticLambda1 -> io.heckel.ntfy.db.RepositoryKt$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.LiveData io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$1.f$2 -> f$2
    androidx.lifecycle.LiveData io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$1.f$3 -> f$3
    androidx.lifecycle.MediatorLiveData io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$1.f$0 -> f$0
    kotlin.jvm.functions.Function2 io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$1.f$1 -> f$1
    void io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$1.<init>(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function2,androidx.lifecycle.LiveData,androidx.lifecycle.LiveData) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.db.RepositoryKt$$InternalSyntheticLambda$1$cd412a144bf10fea531016f7677001c0172d4bd16119e89dcd54621a8aca412f$1.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.db.Subscription -> io.heckel.ntfy.db.Subscription:
# {"id":"sourceFile","fileName":"Database.kt"}
    12:31:void <init>(long,java.lang.String,java.lang.String,boolean,long,int,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int,long,io.heckel.ntfy.db.ConnectionState) -> <init>
    13:31:void <init>(long,java.lang.String,java.lang.String,boolean,long,int,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int,long,io.heckel.ntfy.db.ConnectionState,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    20:20:long getAutoDelete() -> getAutoDelete
    15:15:java.lang.String getBaseUrl() -> getBaseUrl
    27:27:boolean getDedicatedChannels() -> getDedicatedChannels
    26:26:java.lang.String getDisplayName() -> getDisplayName
    23:23:java.lang.String getIcon() -> getIcon
    14:14:long getId() -> getId
    21:21:int getInsistent() -> getInsistent
    17:17:boolean getInstant() -> getInstant
    30:30:long getLastActive() -> getLastActive
    22:22:java.lang.String getLastNotificationId() -> getLastNotificationId
    19:19:int getMinPriority() -> getMinPriority
    18:18:long getMutedUntil() -> getMutedUntil
    29:29:int getNewCount() -> getNewCount
    31:31:io.heckel.ntfy.db.ConnectionState getState() -> getState
    16:16:java.lang.String getTopic() -> getTopic
    28:28:int getTotalCount() -> getTotalCount
    24:24:java.lang.String getUpAppId() -> getUpAppId
    25:25:java.lang.String getUpConnectorToken() -> getUpConnectorToken
io.heckel.ntfy.db.SubscriptionDao -> io.heckel.ntfy.db.SubscriptionDao:
# {"id":"sourceFile","fileName":"Database.kt"}
io.heckel.ntfy.db.SubscriptionDao_Impl -> io.heckel.ntfy.db.SubscriptionDao_Impl:
    38:156:void <init>(androidx.room.RoomDatabase) -> <init>
    27:27:androidx.room.RoomDatabase access$000(io.heckel.ntfy.db.SubscriptionDao_Impl) -> access$000
    167:174:void add(io.heckel.ntfy.db.Subscription) -> add
    479:588:io.heckel.ntfy.db.SubscriptionWithMetadata get(java.lang.String,java.lang.String) -> get
    604:703:io.heckel.ntfy.db.SubscriptionWithMetadata get(long) -> get
    719:822:io.heckel.ntfy.db.SubscriptionWithMetadata getByConnectorToken(java.lang.String) -> getByConnectorToken
    826:826:java.util.List getRequiredConverters() -> getRequiredConverters
    361:363:java.lang.Object list(kotlin.coroutines.Continuation) -> list
    240:241:kotlinx.coroutines.flow.Flow listFlow() -> listFlow
    213:224:void remove(long) -> remove
    179:186:void update(io.heckel.ntfy.db.Subscription) -> update
    191:208:void updateLastNotificationId(long,java.lang.String) -> updateLastNotificationId
io.heckel.ntfy.db.SubscriptionDao_Impl$1 -> io.heckel.ntfy.db.SubscriptionDao_Impl$1:
    40:40:void <init>(io.heckel.ntfy.db.SubscriptionDao_Impl,androidx.room.RoomDatabase) -> <init>
    40:40:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    48:91:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.Subscription) -> bind
io.heckel.ntfy.db.SubscriptionDao_Impl$2 -> io.heckel.ntfy.db.SubscriptionDao_Impl$2:
    94:94:void <init>(io.heckel.ntfy.db.SubscriptionDao_Impl,androidx.room.RoomDatabase) -> <init>
    94:94:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    102:146:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.Subscription) -> bind
io.heckel.ntfy.db.SubscriptionDao_Impl$3 -> io.heckel.ntfy.db.SubscriptionDao_Impl$3:
    149:149:void <init>(io.heckel.ntfy.db.SubscriptionDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.SubscriptionDao_Impl$4 -> io.heckel.ntfy.db.SubscriptionDao_Impl$4:
    156:156:void <init>(io.heckel.ntfy.db.SubscriptionDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.SubscriptionDao_Impl$5 -> io.heckel.ntfy.db.SubscriptionDao_Impl$5:
    241:241:void <init>(io.heckel.ntfy.db.SubscriptionDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    241:241:java.lang.Object call() -> call
    244:338:java.util.List call() -> call
    343:343:void finalize() -> finalize
io.heckel.ntfy.db.SubscriptionDao_Impl$6 -> io.heckel.ntfy.db.SubscriptionDao_Impl$6:
    363:363:void <init>(io.heckel.ntfy.db.SubscriptionDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    363:363:java.lang.Object call() -> call
    366:461:java.util.List call() -> call
io.heckel.ntfy.db.SubscriptionWithMetadata -> io.heckel.ntfy.db.SubscriptionWithMetadata:
# {"id":"sourceFile","fileName":"Database.kt"}
    75:92:void <init>(long,java.lang.String,java.lang.String,boolean,long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int,long) -> <init>
    81:81:long getAutoDelete() -> getAutoDelete
    77:77:java.lang.String getBaseUrl() -> getBaseUrl
    89:89:boolean getDedicatedChannels() -> getDedicatedChannels
    88:88:java.lang.String getDisplayName() -> getDisplayName
    85:85:java.lang.String getIcon() -> getIcon
    76:76:long getId() -> getId
    83:83:int getInsistent() -> getInsistent
    79:79:boolean getInstant() -> getInstant
    92:92:long getLastActive() -> getLastActive
    84:84:java.lang.String getLastNotificationId() -> getLastNotificationId
    82:82:int getMinPriority() -> getMinPriority
    80:80:long getMutedUntil() -> getMutedUntil
    91:91:int getNewCount() -> getNewCount
    78:78:java.lang.String getTopic() -> getTopic
    90:90:int getTotalCount() -> getTotalCount
    86:86:java.lang.String getUpAppId() -> getUpAppId
    87:87:java.lang.String getUpConnectorToken() -> getUpConnectorToken
io.heckel.ntfy.db.User -> io.heckel.ntfy.db.User:
# {"id":"sourceFile","fileName":"Database.kt"}
    177:181:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    179:179:java.lang.String getBaseUrl() -> getBaseUrl
    181:181:java.lang.String getPassword() -> getPassword
    180:180:java.lang.String getUsername() -> getUsername
    183:183:java.lang.String toString() -> toString
io.heckel.ntfy.db.UserDao -> io.heckel.ntfy.db.UserDao:
# {"id":"sourceFile","fileName":"Database.kt"}
io.heckel.ntfy.db.UserDao_Impl -> io.heckel.ntfy.db.UserDao_Impl:
    38:95:void <init>(androidx.room.RoomDatabase) -> <init>
    29:29:androidx.room.RoomDatabase access$000(io.heckel.ntfy.db.UserDao_Impl) -> access$000
    29:29:androidx.room.EntityInsertionAdapter access$100(io.heckel.ntfy.db.UserDao_Impl) -> access$100
    29:29:androidx.room.EntityDeletionOrUpdateAdapter access$200(io.heckel.ntfy.db.UserDao_Impl) -> access$200
    29:29:androidx.room.SharedSQLiteStatement access$300(io.heckel.ntfy.db.UserDao_Impl) -> access$300
    140:140:java.lang.Object delete(java.lang.String,kotlin.coroutines.Continuation) -> delete
    261:269:java.lang.Object get(java.lang.String,kotlin.coroutines.Continuation) -> get
    311:311:java.util.List getRequiredConverters() -> getRequiredConverters
    106:106:java.lang.Object insert(io.heckel.ntfy.db.User,kotlin.coroutines.Continuation) -> insert
    166:168:java.lang.Object list(kotlin.coroutines.Continuation) -> list
    212:213:kotlinx.coroutines.flow.Flow listFlow() -> listFlow
    123:123:java.lang.Object update(io.heckel.ntfy.db.User,kotlin.coroutines.Continuation) -> update
io.heckel.ntfy.db.UserDao_Impl$1 -> io.heckel.ntfy.db.UserDao_Impl$1:
    40:40:void <init>(io.heckel.ntfy.db.UserDao_Impl,androidx.room.RoomDatabase) -> <init>
    40:40:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    48:61:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.User) -> bind
io.heckel.ntfy.db.UserDao_Impl$2 -> io.heckel.ntfy.db.UserDao_Impl$2:
    65:65:void <init>(io.heckel.ntfy.db.UserDao_Impl,androidx.room.RoomDatabase) -> <init>
    65:65:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    73:91:void bind(androidx.sqlite.db.SupportSQLiteStatement,io.heckel.ntfy.db.User) -> bind
io.heckel.ntfy.db.UserDao_Impl$3 -> io.heckel.ntfy.db.UserDao_Impl$3:
    95:95:void <init>(io.heckel.ntfy.db.UserDao_Impl,androidx.room.RoomDatabase) -> <init>
io.heckel.ntfy.db.UserDao_Impl$4 -> io.heckel.ntfy.db.UserDao_Impl$4:
    106:106:void <init>(io.heckel.ntfy.db.UserDao_Impl,io.heckel.ntfy.db.User) -> <init>
    106:106:java.lang.Object call() -> call
    109:116:kotlin.Unit call() -> call
io.heckel.ntfy.db.UserDao_Impl$5 -> io.heckel.ntfy.db.UserDao_Impl$5:
    123:123:void <init>(io.heckel.ntfy.db.UserDao_Impl,io.heckel.ntfy.db.User) -> <init>
    123:123:java.lang.Object call() -> call
    126:133:kotlin.Unit call() -> call
io.heckel.ntfy.db.UserDao_Impl$6 -> io.heckel.ntfy.db.UserDao_Impl$6:
    140:140:void <init>(io.heckel.ntfy.db.UserDao_Impl,java.lang.String) -> <init>
    140:140:java.lang.Object call() -> call
    143:158:kotlin.Unit call() -> call
io.heckel.ntfy.db.UserDao_Impl$7 -> io.heckel.ntfy.db.UserDao_Impl$7:
    168:168:void <init>(io.heckel.ntfy.db.UserDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    168:168:java.lang.Object call() -> call
    171:204:java.util.List call() -> call
io.heckel.ntfy.db.UserDao_Impl$8 -> io.heckel.ntfy.db.UserDao_Impl$8:
    213:213:void <init>(io.heckel.ntfy.db.UserDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    213:213:java.lang.Object call() -> call
    216:248:java.util.List call() -> call
    253:253:void finalize() -> finalize
io.heckel.ntfy.db.UserDao_Impl$9 -> io.heckel.ntfy.db.UserDao_Impl$9:
    269:269:void <init>(io.heckel.ntfy.db.UserDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    269:269:java.lang.Object call() -> call
    272:305:io.heckel.ntfy.db.User call() -> call
io.heckel.ntfy.firebase.FirebaseMessenger -> io.heckel.ntfy.firebase.FirebaseMessenger:
# {"id":"sourceFile","fileName":"FirebaseMessenger.kt"}
    3:3:void <init>() -> <init>
io.heckel.ntfy.firebase.FirebaseService -> io.heckel.ntfy.firebase.FirebaseService:
# {"id":"sourceFile","fileName":"FirebaseService.kt"}
    8:8:void <init>() -> <init>
io.heckel.ntfy.msg.ApiService -> io.heckel.ntfy.msg.ApiService:
# {"id":"sourceFile","fileName":"ApiService.kt"}
    172:172:void <clinit>() -> <clinit>
    16:16:java.lang.String access$getUSER_AGENT$cp() -> <init>
    16:16:void <init>():16 -> <init>
    17:32:void <init>() -> <init>
    16:16:java.lang.String access$getUSER_AGENT$cp() -> access$getParser$p
    16:16:io.heckel.ntfy.msg.NotificationParser access$getParser$p(io.heckel.ntfy.msg.ApiService):16 -> access$getParser$p
    16:16:java.lang.String access$getUSER_AGENT$cp() -> access$getUSER_AGENT$cp
    150:164:boolean checkAuth(java.lang.String,java.lang.String,io.heckel.ntfy.db.User) -> checkAuth
    89:99:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String) -> poll
    1603:1603:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> poll
    1603:1603:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String):99 -> poll
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> poll
    1851:1851:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String):99 -> poll
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> poll
    1611:1611:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String):99 -> poll
    100:100:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String) -> poll
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> poll
    1611:1611:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String):99 -> poll
    95:104:java.util.List poll(long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String) -> poll
    87:87:java.util.List poll$default(io.heckel.ntfy.msg.ApiService,long,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String,int,java.lang.Object) -> poll$default
    46:84:void publish(java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String,java.lang.String,int,java.util.List,java.lang.String,okhttp3.RequestBody,java.lang.String) -> publish
    34:41:void publish$default(io.heckel.ntfy.msg.ApiService,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,java.lang.String,java.lang.String,int,java.util.List,java.lang.String,okhttp3.RequestBody,java.lang.String,int,java.lang.Object) -> publish$default
    117:121:okhttp3.Call subscribe(java.lang.String,java.lang.String,java.lang.String,io.heckel.ntfy.db.User,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1) -> subscribe
io.heckel.ntfy.msg.ApiService$Companion -> io.heckel.ntfy.msg.ApiService$Companion:
# {"id":"sourceFile","fileName":"ApiService.kt"}
    171:171:void <init>() -> <init>
    172:172:java.lang.String getUSER_AGENT() -> getUSER_AGENT
    182:186:okhttp3.Request$Builder requestBuilder(java.lang.String,io.heckel.ntfy.db.User) -> requestBuilder
io.heckel.ntfy.msg.ApiService$EntityTooLargeException -> io.heckel.ntfy.msg.ApiService$EntityTooLargeException:
# {"id":"sourceFile","fileName":"ApiService.kt"}
    169:169:void <init>() -> <init>
io.heckel.ntfy.msg.ApiService$UnauthorizedException -> io.heckel.ntfy.msg.ApiService$UnauthorizedException:
# {"id":"sourceFile","fileName":"ApiService.kt"}
    168:168:void <init>(io.heckel.ntfy.db.User) -> <init>
    168:168:io.heckel.ntfy.db.User getUser() -> getUser
io.heckel.ntfy.msg.ApiService$subscribe$1 -> io.heckel.ntfy.msg.ApiService$subscribe$1:
# {"id":"sourceFile","fileName":"ApiService.kt"}
    121:121:void <init>(java.lang.String,io.heckel.ntfy.msg.ApiService,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1) -> <init>
    141:142:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    124:137:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
io.heckel.ntfy.msg.BroadcastService -> io.heckel.ntfy.msg.BroadcastService:
# {"id":"sourceFile","fileName":"BroadcastService.kt"}
    19:19:void <init>(android.content.Context) -> <init>
    21:44:void sendMessage(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification,boolean) -> sendMessage
    48:50:void sendUserAction(io.heckel.ntfy.db.Action) -> sendUserAction
    211:211:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> sendUserAction
    211:211:void sendUserAction(io.heckel.ntfy.db.Action):50 -> sendUserAction
    50:54:void sendUserAction(io.heckel.ntfy.db.Action) -> sendUserAction
io.heckel.ntfy.msg.BroadcastService$BroadcastReceiver -> io.heckel.ntfy.msg.BroadcastService$BroadcastReceiver:
# {"id":"sourceFile","fileName":"BroadcastService.kt"}
    61:61:void <init>() -> <init>
    110:115:java.lang.String getStringExtra(android.content.Intent,java.lang.String) -> getStringExtra
    63:65:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    70:85:void send(android.content.Context,android.content.Intent) -> send
io.heckel.ntfy.msg.BroadcastService$BroadcastReceiver$send$1 -> io.heckel.ntfy.msg.BroadcastService$BroadcastReceiver$send$1:
# {"id":"sourceFile","fileName":"BroadcastService.kt"}
    85:103:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.msg.BroadcastService$Companion -> io.heckel.ntfy.msg.BroadcastService$Companion:
# {"id":"sourceFile","fileName":"BroadcastService.kt"}
    121:121:void <init>() -> <init>
io.heckel.ntfy.msg.DownloadAttachmentWorker -> io.heckel.ntfy.msg.DownloadAttachmentWorker:
# {"id":"sourceFile","fileName":"DownloadAttachmentWorker.kt"}
    void $r8$lambda$utO-q2Otxz2QbC6s3q6NiRuAsKM(io.heckel.ntfy.msg.DownloadAttachmentWorker,java.lang.Exception) -> $r8$lambda$utO-q2Otxz2QbC6s3q6NiRuAsKM
      # {"id":"com.android.tools.r8.synthesized"}
    24:31:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    200:205:android.net.Uri createUri(io.heckel.ntfy.db.Notification) -> createUri
    39:52:androidx.work.ListenableWorker$Result doWork() -> doWork
    61:125:void downloadAttachment(boolean) -> downloadAttachment
    127:128:void downloadAttachment$lambda-2(io.heckel.ntfy.msg.DownloadAttachmentWorker,java.lang.Exception) -> downloadAttachment$lambda-2
    157:159:void failed(java.lang.Exception) -> failed
    192:195:java.lang.Long getDownloadLimit(boolean) -> getDownloadLimit
    163:167:void maybeDeleteFile() -> maybeDeleteFile
    56:57:void onStopped() -> onStopped
    172:176:void save(io.heckel.ntfy.db.Attachment) -> save
    180:185:boolean shouldAbortDownload() -> shouldAbortDownload
    134:150:io.heckel.ntfy.db.Attachment updateAttachmentFromResponse(okhttp3.Response) -> updateAttachmentFromResponse
io.heckel.ntfy.msg.DownloadAttachmentWorker$$ExternalSyntheticLambda0 -> io.heckel.ntfy.msg.DownloadAttachmentWorker$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.msg.DownloadAttachmentWorker io.heckel.ntfy.msg.DownloadAttachmentWorker$$InternalSyntheticLambda$0$baa4063e80819376466c66106bcb6c3c51652fce246c10442cfc4feb3095ccda$0.f$0 -> f$0
    java.lang.Exception io.heckel.ntfy.msg.DownloadAttachmentWorker$$InternalSyntheticLambda$0$baa4063e80819376466c66106bcb6c3c51652fce246c10442cfc4feb3095ccda$0.f$1 -> f$1
    void io.heckel.ntfy.msg.DownloadAttachmentWorker$$InternalSyntheticLambda$0$baa4063e80819376466c66106bcb6c3c51652fce246c10442cfc4feb3095ccda$0.<init>(io.heckel.ntfy.msg.DownloadAttachmentWorker,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.msg.DownloadAttachmentWorker$$InternalSyntheticLambda$0$baa4063e80819376466c66106bcb6c3c51652fce246c10442cfc4feb3095ccda$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.msg.DownloadAttachmentWorker$Companion -> io.heckel.ntfy.msg.DownloadAttachmentWorker$Companion:
# {"id":"sourceFile","fileName":"DownloadAttachmentWorker.kt"}
    208:208:void <init>() -> <init>
io.heckel.ntfy.msg.DownloadIconWorker -> io.heckel.ntfy.msg.DownloadIconWorker:
# {"id":"sourceFile","fileName":"DownloadIconWorker.kt"}
    20:27:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    145:150:java.io.File createIconFile(io.heckel.ntfy.db.Icon) -> createIconFile
    154:154:android.net.Uri createIconUri(java.io.File) -> createIconUri
    35:56:androidx.work.ListenableWorker$Result doWork() -> doWork
    65:104:void downloadIcon(java.io.File) -> downloadIcon
    109:110:void failed(java.lang.Exception) -> failed
    137:138:long getDownloadLimit() -> getDownloadLimit
    114:118:void maybeDeleteFile() -> maybeDeleteFile
    60:61:void onStopped() -> onStopped
    123:127:void save(io.heckel.ntfy.db.Icon) -> save
    131:132:boolean shouldAbortDownload(okhttp3.Response) -> shouldAbortDownload
io.heckel.ntfy.msg.DownloadIconWorker$Companion -> io.heckel.ntfy.msg.DownloadIconWorker$Companion:
# {"id":"sourceFile","fileName":"DownloadIconWorker.kt"}
    157:157:void <init>() -> <init>
io.heckel.ntfy.msg.DownloadManager -> io.heckel.ntfy.msg.DownloadManager:
# {"id":"sourceFile","fileName":"DownloadManager.kt"}
    16:16:void <init>() -> <init>
    76:79:void cancel(android.content.Context,java.lang.String) -> cancel
    23:26:void enqueue(android.content.Context,java.lang.String,boolean,io.heckel.ntfy.msg.DownloadType) -> enqueue
    31:37:void enqueueAttachment(android.content.Context,java.lang.String,boolean) -> enqueueAttachment
    31:35:androidx.work.Data androidx.work.DataKt.workDataOf(kotlin.Pair[]) -> enqueueAttachment
    31:35:void enqueueAttachment(android.content.Context,java.lang.String,boolean):35 -> enqueueAttachment
    35:40:void enqueueAttachment(android.content.Context,java.lang.String,boolean) -> enqueueAttachment
    56:61:void enqueueAttachmentAndIcon(android.content.Context,java.lang.String,boolean) -> enqueueAttachmentAndIcon
    31:35:androidx.work.Data androidx.work.DataKt.workDataOf(kotlin.Pair[]) -> enqueueAttachmentAndIcon
    31:35:void enqueueAttachmentAndIcon(android.content.Context,java.lang.String,boolean):59 -> enqueueAttachmentAndIcon
    59:66:void enqueueAttachmentAndIcon(android.content.Context,java.lang.String,boolean) -> enqueueAttachmentAndIcon
    31:35:androidx.work.Data androidx.work.DataKt.workDataOf(kotlin.Pair[]) -> enqueueAttachmentAndIcon
    31:35:void enqueueAttachmentAndIcon(android.content.Context,java.lang.String,boolean):65 -> enqueueAttachmentAndIcon
    65:72:void enqueueAttachmentAndIcon(android.content.Context,java.lang.String,boolean) -> enqueueAttachmentAndIcon
    44:49:void enqueueIcon(android.content.Context,java.lang.String) -> enqueueIcon
    31:35:androidx.work.Data androidx.work.DataKt.workDataOf(kotlin.Pair[]) -> enqueueIcon
    31:35:void enqueueIcon(android.content.Context,java.lang.String):48 -> enqueueIcon
    48:52:void enqueueIcon(android.content.Context,java.lang.String) -> enqueueIcon
io.heckel.ntfy.msg.DownloadManager$WhenMappings -> io.heckel.ntfy.msg.DownloadManager$WhenMappings:
# {"id":"sourceFile","fileName":"DownloadManager.kt"}
io.heckel.ntfy.msg.DownloadType -> io.heckel.ntfy.msg.DownloadType:
# {"id":"sourceFile","fileName":"DownloadManager.kt"}
    84:86:void <clinit>() -> <clinit>
    83:83:void <init>(java.lang.String,int) -> <init>
io.heckel.ntfy.msg.Message -> io.heckel.ntfy.msg.Message:
# {"id":"sourceFile","fileName":"Message.kt"}
    7:21:void <init>(java.lang.String,long,java.lang.String,java.lang.String,java.lang.Integer,java.util.List,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,io.heckel.ntfy.msg.MessageAttachment) -> <init>
    17:17:java.util.List getActions() -> getActions
    21:21:io.heckel.ntfy.msg.MessageAttachment getAttachment() -> getAttachment
    15:15:java.lang.String getClick() -> getClick
    20:20:java.lang.String getEncoding() -> getEncoding
    11:11:java.lang.String getEvent() -> getEvent
    16:16:java.lang.String getIcon() -> getIcon
    9:9:java.lang.String getId() -> getId
    19:19:java.lang.String getMessage() -> getMessage
    13:13:java.lang.Integer getPriority() -> getPriority
    14:14:java.util.List getTags() -> getTags
    10:10:long getTime() -> getTime
    18:18:java.lang.String getTitle() -> getTitle
    12:12:java.lang.String getTopic() -> getTopic
io.heckel.ntfy.msg.MessageAction -> io.heckel.ntfy.msg.MessageAction:
# {"id":"sourceFile","fileName":"Message.kt"}
    33:44:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.Map) -> <init>
    36:36:java.lang.String getAction() -> getAction
    42:42:java.lang.String getBody() -> getBody
    38:38:java.lang.Boolean getClear() -> getClear
    44:44:java.util.Map getExtras() -> getExtras
    41:41:java.util.Map getHeaders() -> getHeaders
    35:35:java.lang.String getId() -> getId
    43:43:java.lang.String getIntent() -> getIntent
    37:37:java.lang.String getLabel() -> getLabel
    40:40:java.lang.String getMethod() -> getMethod
    39:39:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.msg.MessageAttachment -> io.heckel.ntfy.msg.MessageAttachment:
# {"id":"sourceFile","fileName":"Message.kt"}
    24:30:void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.String) -> <init>
    29:29:java.lang.Long getExpires() -> getExpires
    26:26:java.lang.String getName() -> getName
    28:28:java.lang.Long getSize() -> getSize
    27:27:java.lang.String getType() -> getType
    30:30:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.msg.NotificationDispatcher -> io.heckel.ntfy.msg.NotificationDispatcher:
# {"id":"sourceFile","fileName":"NotificationDispatcher.kt"}
    21:21:io.heckel.ntfy.db.Repository getRepository() -> <init>
    21:21:void <init>(android.content.Context,io.heckel.ntfy.db.Repository):21 -> <init>
    22:24:void <init>(android.content.Context,io.heckel.ntfy.db.Repository) -> <init>
    31:73:void dispatch(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> dispatch
    126:129:boolean getMuted(io.heckel.ntfy.db.Subscription) -> getMuted
    27:27:void init() -> init
    115:118:boolean shouldBroadcast(io.heckel.ntfy.db.Subscription) -> shouldBroadcast
    122:122:boolean shouldDistribute(io.heckel.ntfy.db.Subscription) -> shouldDistribute
    78:93:boolean shouldDownloadAttachment(io.heckel.ntfy.db.Notification) -> shouldDownloadAttachment
    98:98:boolean shouldDownloadIcon(io.heckel.ntfy.db.Notification) -> shouldDownloadIcon
    102:110:boolean shouldNotify(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification,boolean) -> shouldNotify
io.heckel.ntfy.msg.NotificationDispatcher$Companion -> io.heckel.ntfy.msg.NotificationDispatcher$Companion:
# {"id":"sourceFile","fileName":"NotificationDispatcher.kt"}
    132:132:void <init>() -> <init>
io.heckel.ntfy.msg.NotificationParser -> io.heckel.ntfy.msg.NotificationParser:
# {"id":"sourceFile","fileName":"NotificationParser.kt"}
    13:14:void <init>() -> <init>
    17:18:io.heckel.ntfy.db.Notification parse(java.lang.String,long,int) -> parse
    22:36:io.heckel.ntfy.msg.NotificationParser$NotificationWithTopic parseWithTopic(java.lang.String,long,int) -> parseWithTopic
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> parseWithTopic
    1549:1549:io.heckel.ntfy.msg.NotificationParser$NotificationWithTopic parseWithTopic(java.lang.String,long,int):36 -> parseWithTopic
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> parseWithTopic
    1620:1621:io.heckel.ntfy.msg.NotificationParser$NotificationWithTopic parseWithTopic(java.lang.String,long,int):36 -> parseWithTopic
    37:70:io.heckel.ntfy.msg.NotificationParser$NotificationWithTopic parseWithTopic(java.lang.String,long,int) -> parseWithTopic
io.heckel.ntfy.msg.NotificationParser$NotificationWithTopic -> io.heckel.ntfy.msg.NotificationParser$NotificationWithTopic:
# {"id":"sourceFile","fileName":"NotificationParser.kt"}
    98:98:void <init>(java.lang.String,io.heckel.ntfy.db.Notification) -> <init>
    98:98:io.heckel.ntfy.db.Notification getNotification() -> getNotification
    98:98:java.lang.String getTopic() -> getTopic
io.heckel.ntfy.msg.NotificationService -> io.heckel.ntfy.msg.NotificationService:
# {"id":"sourceFile","fileName":"NotificationService.kt"}
    26:26:android.content.Context getContext() -> <init>
    26:26:void <init>(android.content.Context):26 -> <init>
    27:28:void <init>(android.content.Context) -> <init>
    316:323:void addHttpOrBroadcastUserAction(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Action) -> addHttpOrBroadcastUserAction
    302:311:void addViewUserActionWithClear(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Action) -> addViewUserActionWithClear
    285:292:void addViewUserActionWithoutClear(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Action) -> addViewUserActionWithoutClear
    48:50:void cancel(io.heckel.ntfy.db.Notification) -> cancel
    56:57:void cancel(int) -> cancel
    79:79:boolean channelsSupported() -> channelsSupported
    62:63:void createDefaultNotificationChannels() -> createDefaultNotificationChannels
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> createDefaultNotificationChannels
    1851:1851:void createDefaultNotificationChannels():63 -> createDefaultNotificationChannels
    63:63:void createDefaultNotificationChannels() -> createDefaultNotificationChannels
    67:69:void createSubscriptionNotificationChannels(io.heckel.ntfy.db.Subscription) -> createSubscriptionNotificationChannels
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> createSubscriptionNotificationChannels
    1851:1851:void createSubscriptionNotificationChannels(io.heckel.ntfy.db.Subscription):69 -> createSubscriptionNotificationChannels
    69:69:void createSubscriptionNotificationChannels(io.heckel.ntfy.db.Subscription) -> createSubscriptionNotificationChannels
    73:74:void deleteSubscriptionNotificationChannels(io.heckel.ntfy.db.Subscription) -> deleteSubscriptionNotificationChannels
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> deleteSubscriptionNotificationChannels
    1851:1851:void deleteSubscriptionNotificationChannels(io.heckel.ntfy.db.Subscription):74 -> deleteSubscriptionNotificationChannels
    74:75:void deleteSubscriptionNotificationChannels(io.heckel.ntfy.db.Subscription) -> deleteSubscriptionNotificationChannels
    361:371:android.app.PendingIntent detailActivityIntent(io.heckel.ntfy.db.Subscription) -> detailActivityIntent
    31:32:void display(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> display
    91:117:void displayInternal(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification,boolean) -> displayInternal
    90:90:void displayInternal$default(io.heckel.ntfy.msg.NotificationService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification,boolean,int,java.lang.Object) -> displayInternal$default
    171:187:java.lang.String formatMessageMaybeWithAttachmentInfos(io.heckel.ntfy.db.Notification) -> formatMessageMaybeWithAttachmentInfos
    467:472:android.net.Uri getInsistentSound(java.lang.String) -> getInsistentSound
    229:234:void maybeAddBrowseAction(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeAddBrowseAction
    250:256:void maybeAddCancelAction(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeAddCancelAction
    239:245:void maybeAddDownloadAction(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeAddDownloadAction
    214:224:void maybeAddOpenAction(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeAddOpenAction
    261:261:void maybeAddUserActions(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeAddUserActions
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maybeAddUserActions
    1851:1851:void maybeAddUserActions(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification):261 -> maybeAddUserActions
    262:274:void maybeAddUserActions(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeAddUserActions
    376:411:void maybeCreateNotificationChannel(java.lang.String,int) -> maybeCreateNotificationChannel
    422:423:void maybeCreateNotificationGroup(java.lang.String,java.lang.String) -> maybeCreateNotificationGroup
    416:417:void maybeDeleteNotificationChannel(java.lang.String,int) -> maybeDeleteNotificationChannel
    428:429:void maybeDeleteNotificationGroup(java.lang.String) -> maybeDeleteNotificationGroup
    448:462:void maybePlayInsistentSound(java.lang.String,boolean) -> maybePlayInsistentSound
    124:126:void maybeSetDeleteIntent(androidx.core.app.NotificationCompat$Builder,boolean) -> maybeSetDeleteIntent
    205:209:void maybeSetProgress(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Notification) -> maybeSetProgress
    133:136:void maybeSetSound(androidx.core.app.NotificationCompat$Builder,boolean,boolean) -> maybeSetSound
    191:199:void setClickAction(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> setClickAction
    141:166:void setStyleAndText(androidx.core.app.NotificationCompat$Builder,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> setStyleAndText
    83:83:java.lang.String subscriptionGroupId(io.heckel.ntfy.db.Subscription) -> subscriptionGroupId
    87:87:java.lang.String subscriptionGroupName(io.heckel.ntfy.db.Subscription) -> subscriptionGroupName
    435:439:java.lang.String toChannelId(java.lang.String,int) -> toChannelId
    36:43:void update(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> update
io.heckel.ntfy.msg.NotificationService$Companion -> io.heckel.ntfy.msg.NotificationService$Companion:
# {"id":"sourceFile","fileName":"NotificationService.kt"}
    517:517:void <init>() -> <init>
io.heckel.ntfy.msg.NotificationService$DeleteBroadcastReceiver -> io.heckel.ntfy.msg.NotificationService$DeleteBroadcastReceiver:
# {"id":"sourceFile","fileName":"NotificationService.kt"}
    352:352:void <init>() -> <init>
    354:356:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.heckel.ntfy.msg.NotificationService$UserActionBroadcastReceiver -> io.heckel.ntfy.msg.NotificationService$UserActionBroadcastReceiver:
# {"id":"sourceFile","fileName":"NotificationService.kt"}
    333:333:void <init>() -> <init>
    335:342:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.heckel.ntfy.msg.NotificationService$ViewActionWithClearActivity -> io.heckel.ntfy.msg.NotificationService$ViewActionWithClearActivity:
# {"id":"sourceFile","fileName":"NotificationService.kt"}
    483:483:void <init>() -> <init>
    485:513:void onCreate(android.os.Bundle) -> onCreate
io.heckel.ntfy.msg.UserActionManager -> io.heckel.ntfy.msg.UserActionManager:
# {"id":"sourceFile","fileName":"UserActionManager.kt"}
    16:16:void <init>() -> <init>
    21:27:void enqueue(android.content.Context,java.lang.String,java.lang.String) -> enqueue
    31:35:androidx.work.Data androidx.work.DataKt.workDataOf(kotlin.Pair[]) -> enqueue
    31:35:void enqueue(android.content.Context,java.lang.String,java.lang.String):25 -> enqueue
    25:30:void enqueue(android.content.Context,java.lang.String,java.lang.String) -> enqueue
io.heckel.ntfy.msg.UserActionWorker -> io.heckel.ntfy.msg.UserActionWorker:
# {"id":"sourceFile","fileName":"UserActionWorker.kt"}
    18:26:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    33:41:androidx.work.ListenableWorker$Result doWork() -> doWork
    223:223:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> doWork
    223:223:androidx.work.ListenableWorker$Result doWork():41 -> doWork
    41:57:androidx.work.ListenableWorker$Result doWork() -> doWork
    224:224:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> doWork
    224:224:androidx.work.ListenableWorker$Result doWork():41 -> doWork
    41:41:androidx.work.ListenableWorker$Result doWork() -> doWork
    61:63:void performBroadcastAction(io.heckel.ntfy.db.Action) -> performBroadcastAction
    68:78:void performHttpAction(io.heckel.ntfy.db.Action) -> performHttpAction
    211:211:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> performHttpAction
    211:211:void performHttpAction(io.heckel.ntfy.db.Action):78 -> performHttpAction
    78:89:void performHttpAction(io.heckel.ntfy.db.Action) -> performHttpAction
    94:96:void save(io.heckel.ntfy.db.Action) -> save
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> save
    1549:1549:void save(io.heckel.ntfy.db.Action):96 -> save
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> save
    1620:1621:void save(io.heckel.ntfy.db.Action):96 -> save
    96:104:void save(io.heckel.ntfy.db.Action) -> save
io.heckel.ntfy.msg.UserActionWorker$Companion -> io.heckel.ntfy.msg.UserActionWorker$Companion:
# {"id":"sourceFile","fileName":"UserActionWorker.kt"}
    108:108:void <init>() -> <init>
io.heckel.ntfy.service.Connection -> io.heckel.ntfy.service.Connection:
# {"id":"sourceFile","fileName":"Connection.kt"}
io.heckel.ntfy.service.ConnectionId -> io.heckel.ntfy.service.ConnectionId:
# {"id":"sourceFile","fileName":"Connection.kt"}
    9:11:void <init>(java.lang.String,java.util.Map) -> <init>
    10:10:java.lang.String getBaseUrl() -> getBaseUrl
    11:11:java.util.Map getTopicsToSubscriptionIds() -> getTopicsToSubscriptionIds
io.heckel.ntfy.service.JsonConnection -> io.heckel.ntfy.service.JsonConnection:
# {"id":"sourceFile","fileName":"JsonConnection.kt"}
    11:28:void <init>(io.heckel.ntfy.service.ConnectionId,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,io.heckel.ntfy.msg.ApiService,io.heckel.ntfy.db.User,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function0) -> <init>
    11:11:io.heckel.ntfy.msg.ApiService access$getApi$p(io.heckel.ntfy.service.JsonConnection) -> access$getApi$p
    11:11:java.lang.String access$getBaseUrl$p(io.heckel.ntfy.service.JsonConnection) -> access$getBaseUrl$p
    11:11:okhttp3.Call access$getCall$p(io.heckel.ntfy.service.JsonConnection) -> access$getCall$p
    11:11:kotlin.jvm.functions.Function2 access$getNotificationListener$p(io.heckel.ntfy.service.JsonConnection) -> access$getNotificationListener$p
    11:11:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.service.JsonConnection) -> access$getRepository$p
    11:11:kotlin.jvm.functions.Function0 access$getServiceActive$p(io.heckel.ntfy.service.JsonConnection) -> access$getServiceActive$p
    11:11:java.lang.String access$getSince$p(io.heckel.ntfy.service.JsonConnection) -> access$getSince$p
    11:11:kotlin.jvm.functions.Function2 access$getStateChangeListener$p(io.heckel.ntfy.service.JsonConnection) -> access$getStateChangeListener$p
    11:11:java.util.Collection access$getSubscriptionIds$p(io.heckel.ntfy.service.JsonConnection) -> access$getSubscriptionIds$p
    11:11:java.lang.String access$getTopicsStr$p(io.heckel.ntfy.service.JsonConnection) -> access$getTopicsStr$p
    11:11:java.util.Map access$getTopicsToSubscriptionIds$p(io.heckel.ntfy.service.JsonConnection) -> access$getTopicsToSubscriptionIds$p
    11:11:java.lang.String access$getUrl$p(io.heckel.ntfy.service.JsonConnection) -> access$getUrl$p
    11:11:io.heckel.ntfy.db.User access$getUser$p(io.heckel.ntfy.service.JsonConnection) -> access$getUser$p
    11:11:long access$nextRetryMillis(io.heckel.ntfy.service.JsonConnection,long,long) -> access$nextRetryMillis
    11:11:void access$setCall$p(io.heckel.ntfy.service.JsonConnection,okhttp3.Call) -> access$setCall$p
    11:11:void access$setSince$p(io.heckel.ntfy.service.JsonConnection,java.lang.String) -> access$setSince$p
    89:91:void close() -> close
    95:95:long nextRetryMillis(long,long) -> nextRetryMillis
    85:85:java.lang.String since() -> since
    33:33:void start() -> start
io.heckel.ntfy.service.JsonConnection$Companion -> io.heckel.ntfy.service.JsonConnection$Companion:
# {"id":"sourceFile","fileName":"JsonConnection.kt"}
    104:104:void <init>() -> <init>
io.heckel.ntfy.service.JsonConnection$start$1 -> io.heckel.ntfy.service.JsonConnection$start$1:
# {"id":"sourceFile","fileName":"JsonConnection.kt"}
    33:81:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.service.JsonConnection$start$1$fail$1 -> io.heckel.ntfy.service.JsonConnection$start$1$fail$1:
# {"id":"sourceFile","fileName":"JsonConnection.kt"}
    49:49:java.lang.Object invoke(java.lang.Object) -> invoke
    50:52:void invoke(java.lang.Exception) -> invoke
io.heckel.ntfy.service.JsonConnection$start$1$notify$1 -> io.heckel.ntfy.service.JsonConnection$start$1$notify$1:
# {"id":"sourceFile","fileName":"JsonConnection.kt"}
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    42:46:void invoke(java.lang.String,io.heckel.ntfy.db.Notification) -> invoke
io.heckel.ntfy.service.SubscriberService -> io.heckel.ntfy.service.SubscriberService:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> <init>
    65:65:void <init>():65 -> <init>
    68:68:io.heckel.ntfy.db.Repository getRepository() -> <init>
    68:68:void <init>():68 -> <init>
    69:69:io.heckel.ntfy.msg.NotificationDispatcher getDispatcher() -> <init>
    69:69:void <init>():69 -> <init>
    70:74:void <init>() -> <init>
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$getDispatcher
    65:65:io.heckel.ntfy.msg.NotificationDispatcher access$getDispatcher(io.heckel.ntfy.service.SubscriberService):65 -> access$getDispatcher
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$getRefreshMutex$p
    65:65:kotlinx.coroutines.sync.Mutex access$getRefreshMutex$p(io.heckel.ntfy.service.SubscriberService):65 -> access$getRefreshMutex$p
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$getRepository
    65:65:io.heckel.ntfy.db.Repository access$getRepository(io.heckel.ntfy.service.SubscriberService):65 -> access$getRepository
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$getWakeLock$p
    65:65:android.os.PowerManager$WakeLock access$getWakeLock$p(io.heckel.ntfy.service.SubscriberService):65 -> access$getWakeLock$p
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$isServiceStarted$p
    65:65:boolean access$isServiceStarted$p(io.heckel.ntfy.service.SubscriberService):65 -> access$isServiceStarted$p
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$onNotificationReceived
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$onStateChanged
    65:65:void access$onStateChanged(io.heckel.ntfy.service.SubscriberService,java.util.Collection,io.heckel.ntfy.db.ConnectionState):65 -> access$onStateChanged
    65:65:void access$onNotificationReceived(io.heckel.ntfy.service.SubscriberService,io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> access$reallyRefreshConnections
    65:65:java.lang.Object access$reallyRefreshConnections(io.heckel.ntfy.service.SubscriberService,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):65 -> access$reallyRefreshConnections
    307:320:android.app.Notification createNotification(java.lang.String,java.lang.String) -> createNotification
    280:287:android.app.NotificationManager createNotificationChannel() -> createNotificationChannel
    69:69:io.heckel.ntfy.msg.NotificationDispatcher getDispatcher() -> getDispatcher
    68:68:io.heckel.ntfy.db.Repository getRepository() -> getRepository
    92:106:void onCreate() -> onCreate
    110:113:void onDestroy() -> onDestroy
    262:266:void onNotificationReceived(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> onNotificationReceived
    77:86:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    256:256:void onStateChanged(java.util.Collection,io.heckel.ntfy.db.ConnectionState) -> onStateChanged
    329:335:void onTaskRemoved(android.content.Intent) -> onTaskRemoved
    174:253:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    766:766:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):177 -> reallyRefreshConnections
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    857:857:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):177 -> reallyRefreshConnections
    177:178:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    1477:1477:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1477:1477:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):180 -> reallyRefreshConnections
    1502:1503:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1502:1503:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):180 -> reallyRefreshConnections
    180:180:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> reallyRefreshConnections
    357:357:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):180 -> reallyRefreshConnections
    1504:1504:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1504:1504:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):180 -> reallyRefreshConnections
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> reallyRefreshConnections
    360:360:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):180 -> reallyRefreshConnections
    1504:1505:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1504:1505:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):180 -> reallyRefreshConnections
    125:125:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    125:125:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):181 -> reallyRefreshConnections
    152:152:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    152:152:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):181 -> reallyRefreshConnections
    181:181:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    1179:1180:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associate(java.lang.Iterable,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1179:1180:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):181 -> reallyRefreshConnections
    1253:1254:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1253:1254:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):181 -> reallyRefreshConnections
    181:186:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    125:125:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    125:125:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):187 -> reallyRefreshConnections
    152:152:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    152:152:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):187 -> reallyRefreshConnections
    187:199:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1851:1851:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):203 -> reallyRefreshConnections
    174:217:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> reallyRefreshConnections
    1851:1851:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):221 -> reallyRefreshConnections
    222:253:java.lang.Object reallyRefreshConnections(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> reallyRefreshConnections
    157:157:void refreshConnections() -> refreshConnections
    117:127:void startService() -> startService
    131:134:void stopService() -> stopService
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> stopService
    1851:1851:void stopService():134 -> stopService
    134:153:void stopService() -> stopService
io.heckel.ntfy.service.SubscriberService$Action -> io.heckel.ntfy.service.SubscriberService$Action:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    358:359:void <clinit>() -> <clinit>
    357:357:void <init>(java.lang.String,int) -> <init>
io.heckel.ntfy.service.SubscriberService$AutoRestartReceiver -> io.heckel.ntfy.service.SubscriberService$AutoRestartReceiver:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    350:350:void <init>() -> <init>
    352:353:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.heckel.ntfy.service.SubscriberService$BootStartReceiver -> io.heckel.ntfy.service.SubscriberService$BootStartReceiver:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    339:339:void <init>() -> <init>
    341:342:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.heckel.ntfy.service.SubscriberService$Companion -> io.heckel.ntfy.service.SubscriberService$Companion:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    367:367:void <init>() -> <init>
    388:390:io.heckel.ntfy.service.SubscriberService$ServiceState readServiceState(android.content.Context) -> readServiceState
    381:384:void saveServiceState(android.content.Context,io.heckel.ntfy.service.SubscriberService$ServiceState) -> saveServiceState
io.heckel.ntfy.service.SubscriberService$ServiceState -> io.heckel.ntfy.service.SubscriberService$ServiceState:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    363:364:void <clinit>() -> <clinit>
    362:362:void <init>(java.lang.String,int) -> <init>
io.heckel.ntfy.service.SubscriberService$dispatcher$2 -> io.heckel.ntfy.service.SubscriberService$dispatcher$2:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    69:69:io.heckel.ntfy.msg.NotificationDispatcher invoke() -> invoke
    69:69:java.lang.Object invoke() -> invoke
io.heckel.ntfy.service.SubscriberService$onNotificationReceived$1 -> io.heckel.ntfy.service.SubscriberService$onNotificationReceived$1:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    266:276:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$1 -> io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$1:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$1 -> io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$1:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    212:212:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    212:212:void invoke(java.util.Collection,io.heckel.ntfy.db.ConnectionState) -> invoke
io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$2 -> io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$2:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    212:212:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    212:212:void invoke(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> invoke
io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$3 -> io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$3:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    214:214:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    214:214:void invoke(java.util.Collection,io.heckel.ntfy.db.ConnectionState) -> invoke
io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$4 -> io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$connection$4:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    214:214:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    214:214:void invoke(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> invoke
io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$serviceActive$1 -> io.heckel.ntfy.service.SubscriberService$reallyRefreshConnections$2$serviceActive$1:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    208:208:java.lang.Boolean invoke() -> invoke
    208:208:java.lang.Object invoke() -> invoke
io.heckel.ntfy.service.SubscriberService$refreshConnections$1 -> io.heckel.ntfy.service.SubscriberService$refreshConnections$1:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    157:167:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.service.SubscriberService$repository$2 -> io.heckel.ntfy.service.SubscriberService$repository$2:
# {"id":"sourceFile","fileName":"SubscriberService.kt"}
    68:68:io.heckel.ntfy.db.Repository invoke() -> invoke
    68:68:java.lang.Object invoke() -> invoke
io.heckel.ntfy.service.SubscriberServiceManager -> io.heckel.ntfy.service.SubscriberServiceManager:
# {"id":"sourceFile","fileName":"SubscriberServiceManager.kt"}
    21:21:void <init>(android.content.Context) -> <init>
    23:26:void refresh() -> refresh
    30:31:void restart() -> restart
io.heckel.ntfy.service.SubscriberServiceManager$Companion -> io.heckel.ntfy.service.SubscriberServiceManager$Companion:
# {"id":"sourceFile","fileName":"SubscriberServiceManager.kt"}
    65:65:void <init>() -> <init>
    70:71:void refresh(android.content.Context) -> refresh
io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker -> io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker:
# {"id":"sourceFile","fileName":"SubscriberServiceManager.kt"}
    39:39:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    39:39:android.content.Context access$getContext$p(io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker) -> access$getContext$p
    40:61:java.lang.Object doWork(kotlin.coroutines.Continuation) -> doWork
io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker$doWork$1 -> io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker$doWork$1:
# {"id":"sourceFile","fileName":"SubscriberServiceManager.kt"}
io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker$doWork$2 -> io.heckel.ntfy.service.SubscriberServiceManager$ServiceStartWorker$doWork$2:
# {"id":"sourceFile","fileName":"SubscriberServiceManager.kt"}
    46:56:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    766:766:java.lang.Object invokeSuspend(java.lang.Object):49 -> invokeSuspend
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    857:857:java.lang.Object invokeSuspend(java.lang.Object):49 -> invokeSuspend
    49:58:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.service.WsConnection -> io.heckel.ntfy.service.WsConnection:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    void $r8$lambda$9VRGenYIxyycNjQEo8sjb6uTrkE(io.heckel.ntfy.service.WsConnection) -> $r8$lambda$9VRGenYIxyycNjQEo8sjb6uTrkE
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$KcUok60VOodv6PKqaHwFufNN6Ao(io.heckel.ntfy.service.WsConnection) -> $r8$lambda$KcUok60VOodv6PKqaHwFufNN6Ao
      # {"id":"com.android.tools.r8.synthesized"}
    198:199:void <clinit>() -> <clinit>
    33:64:void <init>(io.heckel.ntfy.service.ConnectionId,io.heckel.ntfy.db.Repository,io.heckel.ntfy.db.User,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,android.app.AlarmManager) -> <init>
    33:33:boolean access$getClosed$p(io.heckel.ntfy.service.WsConnection) -> access$getClosed$p
    33:33:int access$getErrorCount$p(io.heckel.ntfy.service.WsConnection) -> access$getErrorCount$p
    33:33:long access$getGlobalId$p(io.heckel.ntfy.service.WsConnection) -> access$getGlobalId$p
    33:33:java.util.concurrent.atomic.AtomicLong access$getListenerId$p(io.heckel.ntfy.service.WsConnection) -> access$getListenerId$p
    33:33:kotlin.jvm.functions.Function2 access$getNotificationListener$p(io.heckel.ntfy.service.WsConnection) -> access$getNotificationListener$p
    33:33:io.heckel.ntfy.msg.NotificationParser access$getParser$p(io.heckel.ntfy.service.WsConnection) -> access$getParser$p
    33:33:java.util.List access$getRETRY_SECONDS$cp() -> access$getRETRY_SECONDS$cp
    33:33:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.service.WsConnection) -> access$getRepository$p
    33:33:java.lang.String access$getShortUrl$p(io.heckel.ntfy.service.WsConnection) -> access$getShortUrl$p
    33:33:java.util.concurrent.atomic.AtomicReference access$getSince$p(io.heckel.ntfy.service.WsConnection) -> access$getSince$p
    33:33:kotlin.jvm.functions.Function2 access$getStateChangeListener$p(io.heckel.ntfy.service.WsConnection) -> access$getStateChangeListener$p
    33:33:java.util.Collection access$getSubscriptionIds$p(io.heckel.ntfy.service.WsConnection) -> access$getSubscriptionIds$p
    33:33:java.util.Map access$getTopicsToSubscriptionIds$p(io.heckel.ntfy.service.WsConnection) -> access$getTopicsToSubscriptionIds$p
    33:33:void access$setErrorCount$p(io.heckel.ntfy.service.WsConnection,int) -> access$setErrorCount$p
    33:33:void access$setState$p(io.heckel.ntfy.service.WsConnection,io.heckel.ntfy.service.WsConnection$State) -> access$setState$p
    88:97:void close() -> close
    106:121:void scheduleReconnect(int) -> scheduleReconnect
    115:115:void scheduleReconnect$lambda-0(io.heckel.ntfy.service.WsConnection) -> scheduleReconnect$lambda-0
    119:119:void scheduleReconnect$lambda-1(io.heckel.ntfy.service.WsConnection) -> scheduleReconnect$lambda-1
    101:101:java.lang.String since() -> since
    69:84:void start() -> start
io.heckel.ntfy.service.WsConnection$$ExternalSyntheticLambda0 -> io.heckel.ntfy.service.WsConnection$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.service.WsConnection io.heckel.ntfy.service.WsConnection$$InternalSyntheticLambda$0$5ba797d1d51e731a79cadd999210ecc731ba27ebf75e9f765a0705d16dd8323b$0.f$0 -> f$0
    void io.heckel.ntfy.service.WsConnection$$InternalSyntheticLambda$0$5ba797d1d51e731a79cadd999210ecc731ba27ebf75e9f765a0705d16dd8323b$0.<init>(io.heckel.ntfy.service.WsConnection) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.service.WsConnection$$InternalSyntheticLambda$0$5ba797d1d51e731a79cadd999210ecc731ba27ebf75e9f765a0705d16dd8323b$0.onAlarm() -> onAlarm
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.service.WsConnection$$ExternalSyntheticLambda1 -> io.heckel.ntfy.service.WsConnection$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.service.WsConnection io.heckel.ntfy.service.WsConnection$$InternalSyntheticLambda$0$5ba797d1d51e731a79cadd999210ecc731ba27ebf75e9f765a0705d16dd8323b$1.f$0 -> f$0
    void io.heckel.ntfy.service.WsConnection$$InternalSyntheticLambda$0$5ba797d1d51e731a79cadd999210ecc731ba27ebf75e9f765a0705d16dd8323b$1.<init>(io.heckel.ntfy.service.WsConnection) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.service.WsConnection$$InternalSyntheticLambda$0$5ba797d1d51e731a79cadd999210ecc731ba27ebf75e9f765a0705d16dd8323b$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.service.WsConnection$Companion -> io.heckel.ntfy.service.WsConnection$Companion:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    194:194:void <init>() -> <init>
io.heckel.ntfy.service.WsConnection$Listener -> io.heckel.ntfy.service.WsConnection$Listener:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    123:123:void <init>(io.heckel.ntfy.service.WsConnection,long) -> <init>
    123:123:long access$getId$p(io.heckel.ntfy.service.WsConnection$Listener) -> access$getId$p
    154:154:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    161:161:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    136:136:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    125:125:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
    180:186:void synchronize(java.lang.String,kotlin.jvm.functions.Function0) -> synchronize
io.heckel.ntfy.service.WsConnection$Listener$onClosed$1 -> io.heckel.ntfy.service.WsConnection$Listener$onClosed$1:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    154:154:java.lang.Object invoke() -> invoke
    155:156:void invoke() -> invoke
io.heckel.ntfy.service.WsConnection$Listener$onFailure$1 -> io.heckel.ntfy.service.WsConnection$Listener$onFailure$1:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    161:161:java.lang.Object invoke() -> invoke
    162:175:void invoke() -> invoke
io.heckel.ntfy.service.WsConnection$Listener$onMessage$1 -> io.heckel.ntfy.service.WsConnection$Listener$onMessage$1:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    136:136:java.lang.Object invoke() -> invoke
    137:149:void invoke() -> invoke
io.heckel.ntfy.service.WsConnection$Listener$onOpen$1 -> io.heckel.ntfy.service.WsConnection$Listener$onOpen$1:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    125:125:java.lang.Object invoke() -> invoke
    126:131:void invoke() -> invoke
io.heckel.ntfy.service.WsConnection$State -> io.heckel.ntfy.service.WsConnection$State:
# {"id":"sourceFile","fileName":"WsConnection.kt"}
    191:191:void <clinit>() -> <clinit>
    190:190:void <init>(java.lang.String,int) -> <init>
io.heckel.ntfy.ui.AddFragment -> io.heckel.ntfy.ui.AddFragment:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    void $r8$lambda$4C0Lq07tlgQX6DaOxCAPpIzKv9Q(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> $r8$lambda$4C0Lq07tlgQX6DaOxCAPpIzKv9Q
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$8Ey0mov9nl-4HKJXUfiv6JrXIqo(io.heckel.ntfy.ui.AddFragment,android.view.View) -> $r8$lambda$8Ey0mov9nl-4HKJXUfiv6JrXIqo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$F-tJ4UGpsFXAK6tW1IMzOSy1xZw(io.heckel.ntfy.ui.AddFragment,android.widget.CompoundButton,boolean) -> $r8$lambda$F-tJ4UGpsFXAK6tW1IMzOSy1xZw
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$VY3JEVh7IOWttT2cb63VngQ3t3c(android.content.DialogInterface,int) -> $r8$lambda$VY3JEVh7IOWttT2cb63VngQ3t3c
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$XkJxhb9oPkRbhz_lT2vEJWh3bBo(io.heckel.ntfy.ui.AddFragment,android.widget.CompoundButton,boolean) -> $r8$lambda$XkJxhb9oPkRbhz_lT2vEJWh3bBo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$b8ZRpOH4Ti2fqjh3KXW7PaGfULM(io.heckel.ntfy.ui.AddFragment) -> $r8$lambda$b8ZRpOH4Ti2fqjh3KXW7PaGfULM
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$cPox8wWAxmpxgPLNOxI7fpy_xx0(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> $r8$lambda$cPox8wWAxmpxgPLNOxI7fpy_xx0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$e_A63SuQzMwXU2rLd1GsqdLNTPs(io.heckel.ntfy.ui.AddFragment,android.app.AlertDialog,android.content.DialogInterface) -> $r8$lambda$e_A63SuQzMwXU2rLd1GsqdLNTPs
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$fV_L7tNyZ-J1CTTPoPVZAwvDWOM(io.heckel.ntfy.ui.AddFragment,android.view.View) -> $r8$lambda$fV_L7tNyZ-J1CTTPoPVZAwvDWOM
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$uWxpmkoDxTCdfl1qN2WHqOJb3RA(android.content.DialogInterface,int) -> $r8$lambda$uWxpmkoDxTCdfl1qN2WHqOJb3RA
      # {"id":"com.android.tools.r8.synthesized"}
    436:436:void <clinit>() -> <clinit>
    25:26:void <init>() -> <init>
    25:25:void access$dismissDialog(io.heckel.ntfy.ui.AddFragment) -> access$dismissDialog
    25:25:io.heckel.ntfy.msg.ApiService access$getApi$p(io.heckel.ntfy.ui.AddFragment) -> access$getApi$p
    25:25:java.lang.String access$getAppBaseUrl$p(io.heckel.ntfy.ui.AddFragment) -> access$getAppBaseUrl$p
    25:25:java.lang.String access$getBaseUrl(io.heckel.ntfy.ui.AddFragment) -> access$getBaseUrl
    25:25:java.util.List access$getDISALLOWED_TOPICS$cp() -> access$getDISALLOWED_TOPICS$cp
    25:25:java.lang.String access$getDefaultBaseUrl$p(io.heckel.ntfy.ui.AddFragment) -> access$getDefaultBaseUrl$p
    25:25:android.widget.Button access$getPositiveButton$p(io.heckel.ntfy.ui.AddFragment) -> access$getPositiveButton$p
    25:25:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.AddFragment) -> access$getRepository$p
    25:25:com.google.android.material.textfield.TextInputLayout access$getSubscribeBaseUrlLayout$p(io.heckel.ntfy.ui.AddFragment) -> access$getSubscribeBaseUrlLayout$p
    25:25:android.widget.AutoCompleteTextView access$getSubscribeBaseUrlText$p(io.heckel.ntfy.ui.AddFragment) -> access$getSubscribeBaseUrlText$p
    25:25:com.google.android.material.textfield.TextInputEditText access$getSubscribeTopicText$p(io.heckel.ntfy.ui.AddFragment) -> access$getSubscribeTopicText$p
    25:25:android.widget.CheckBox access$getSubscribeUseAnotherServerCheckbox$p(io.heckel.ntfy.ui.AddFragment) -> access$getSubscribeUseAnotherServerCheckbox$p
    25:25:void access$showErrorAndReenableLoginView(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> access$showErrorAndReenableLoginView
    25:25:void access$showErrorAndReenableSubscribeView(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> access$showErrorAndReenableSubscribeView
    25:25:void access$showLoginView(io.heckel.ntfy.ui.AddFragment,android.app.Activity) -> access$showLoginView
    25:25:void access$validateInputLoginView(io.heckel.ntfy.ui.AddFragment) -> access$validateInputLoginView
    25:25:void access$validateInputSubscribeView(io.heckel.ntfy.ui.AddFragment) -> access$validateInputSubscribeView
    202:206:void checkReadAndMaybeShowLogin(java.lang.String,java.lang.String) -> checkReadAndMaybeShowLogin
    354:356:void dismissDialog() -> dismissDialog
    357:361:void dismissDialog$lambda-9(io.heckel.ntfy.ui.AddFragment) -> dismissDialog$lambda-9
    414:419:void enableLoginView(boolean) -> enableLoginView
    399:403:void enableSubscribeView(boolean) -> enableSubscribeView
    366:369:java.lang.String getBaseUrl() -> getBaseUrl
    244:253:void loginAndMaybeDismiss(java.lang.String,java.lang.String) -> loginAndMaybeDismiss
    284:287:void negativeButtonClick() -> negativeButtonClick
    64:65:void onAttach(android.content.Context) -> onAttach
    69:188:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    162:185:void onCreateDialog$lambda-6(io.heckel.ntfy.ui.AddFragment,android.app.AlertDialog,android.content.DialogInterface) -> onCreateDialog$lambda-6
    165:165:void onCreateDialog$lambda-6$lambda-2(io.heckel.ntfy.ui.AddFragment,android.view.View) -> onCreateDialog$lambda-6$lambda-2
    169:169:void onCreateDialog$lambda-6$lambda-3(io.heckel.ntfy.ui.AddFragment,android.view.View) -> onCreateDialog$lambda-6$lambda-3
    177:177:void onCreateDialog$lambda-6$lambda-4(io.heckel.ntfy.ui.AddFragment,android.widget.CompoundButton,boolean) -> onCreateDialog$lambda-6$lambda-4
    180:180:void onCreateDialog$lambda-6$lambda-5(io.heckel.ntfy.ui.AddFragment,android.widget.CompoundButton,boolean) -> onCreateDialog$lambda-6$lambda-5
    192:197:void positiveButtonClick() -> positiveButtonClick
    424:431:void resetLoginView() -> resetLoginView
    407:410:void resetSubscribeView() -> resetSubscribeView
    273:274:void showErrorAndReenableLoginView(java.lang.String) -> showErrorAndReenableLoginView
    275:279:void showErrorAndReenableLoginView$lambda-8(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> showErrorAndReenableLoginView$lambda-8
    233:234:void showErrorAndReenableSubscribeView(java.lang.String) -> showErrorAndReenableSubscribeView
    235:239:void showErrorAndReenableSubscribeView$lambda-7(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> showErrorAndReenableSubscribeView$lambda-7
    386:394:void showLoginView(android.app.Activity) -> showLoginView
    374:381:void showSubscribeView() -> showSubscribeView
    342:349:void validateInputLoginView() -> validateInputLoginView
    292:322:void validateInputSubscribeView() -> validateInputSubscribeView
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$0 io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$0.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$1 io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$1.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$1.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$2.f$0 -> f$0
    android.app.AlertDialog io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$2.f$1 -> f$1
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$2.<init>(io.heckel.ntfy.ui.AddFragment,android.app.AlertDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$1$e2f66b68e35e6001ae9836c56672a7b5c1e31f32a989ad5131aeedf41a93f01d$2.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$0.f$0 -> f$0
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$0.<init>(io.heckel.ntfy.ui.AddFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$1.f$0 -> f$0
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$1.<init>(io.heckel.ntfy.ui.AddFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$3.f$0 -> f$0
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$3.<init>(io.heckel.ntfy.ui.AddFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$3.onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda6 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$2.f$0 -> f$0
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$2.<init>(io.heckel.ntfy.ui.AddFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$2$d97bc0a634370bf3954387bd478360a8b270426a42ad5a6b1ac06b40d9e56e8c$2.onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda7 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$4059afdc8221b07af6dc8b9c51fe06ecabcdf453205e49c33efb79b5973181f6$0.f$0 -> f$0
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$4059afdc8221b07af6dc8b9c51fe06ecabcdf453205e49c33efb79b5973181f6$0.<init>(io.heckel.ntfy.ui.AddFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$4059afdc8221b07af6dc8b9c51fe06ecabcdf453205e49c33efb79b5973181f6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda8 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$16652eb4d263b8e6b024f72b6e512ba07427ecf36354bcda8a6ee8159a44c83f$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$16652eb4d263b8e6b024f72b6e512ba07427ecf36354bcda8a6ee8159a44c83f$0.f$1 -> f$1
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$16652eb4d263b8e6b024f72b6e512ba07427ecf36354bcda8a6ee8159a44c83f$0.<init>(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$3$16652eb4d263b8e6b024f72b6e512ba07427ecf36354bcda8a6ee8159a44c83f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda9 -> io.heckel.ntfy.ui.AddFragment$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$4$0c02f3f5961ccbce82cc047da6b752ed748eada83ac44c219056ba2ccca502e8$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$4$0c02f3f5961ccbce82cc047da6b752ed748eada83ac44c219056ba2ccca502e8$0.f$1 -> f$1
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$4$0c02f3f5961ccbce82cc047da6b752ed748eada83ac44c219056ba2ccca502e8$0.<init>(io.heckel.ntfy.ui.AddFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$$InternalSyntheticLambda$4$0c02f3f5961ccbce82cc047da6b752ed748eada83ac44c219056ba2ccca502e8$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$Companion -> io.heckel.ntfy.ui.AddFragment$Companion:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    434:434:void <init>() -> <init>
io.heckel.ntfy.ui.AddFragment$SubscribeListener -> io.heckel.ntfy.ui.AddFragment$SubscribeListener:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1 -> io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    void $r8$lambda$RWGEC_toqH481SXyv1uT9U0BDvo(io.heckel.ntfy.ui.AddFragment,androidx.fragment.app.FragmentActivity) -> $r8$lambda$RWGEC_toqH481SXyv1uT9U0BDvo
      # {"id":"com.android.tools.r8.synthesized"}
    206:229:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    221:221:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.AddFragment,androidx.fragment.app.FragmentActivity) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1$$InternalSyntheticLambda$3$9803d75fa56d2d292f8c7391afc518ea4258fe313a71a504cd5382f8901aea6a$0.f$0 -> f$0
    androidx.fragment.app.FragmentActivity io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1$$InternalSyntheticLambda$3$9803d75fa56d2d292f8c7391afc518ea4258fe313a71a504cd5382f8901aea6a$0.f$1 -> f$1
    void io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1$$InternalSyntheticLambda$3$9803d75fa56d2d292f8c7391afc518ea4258fe313a71a504cd5382f8901aea6a$0.<init>(io.heckel.ntfy.ui.AddFragment,androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$checkReadAndMaybeShowLogin$1$$InternalSyntheticLambda$3$9803d75fa56d2d292f8c7391afc518ea4258fe313a71a504cd5382f8901aea6a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$loginAndMaybeDismiss$1 -> io.heckel.ntfy.ui.AddFragment$loginAndMaybeDismiss$1:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    253:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.AddFragment$onCreateDialog$1 -> io.heckel.ntfy.ui.AddFragment$onCreateDialog$1:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    void $r8$lambda$AP_QzDqpEe-zHw8S4i1mjuC-rHk(java.util.List,io.heckel.ntfy.ui.AddFragment) -> $r8$lambda$AP_QzDqpEe-zHw8S4i1mjuC-rHk
      # {"id":"com.android.tools.r8.synthesized"}
    123:137:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1477:1477:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1477:1477:java.lang.Object invokeSuspend(java.lang.Object):125 -> invokeSuspend
    1502:1503:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1502:1503:java.lang.Object invokeSuspend(java.lang.Object):125 -> invokeSuspend
    125:125:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> invokeSuspend
    357:357:java.lang.Object invokeSuspend(java.lang.Object):125 -> invokeSuspend
    1504:1504:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1504:1504:java.lang.Object invokeSuspend(java.lang.Object):125 -> invokeSuspend
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> invokeSuspend
    360:360:java.lang.Object invokeSuspend(java.lang.Object):125 -> invokeSuspend
    1504:1505:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1504:1505:java.lang.Object invokeSuspend(java.lang.Object):125 -> invokeSuspend
    125:125:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    125:125:java.lang.Object invokeSuspend(java.lang.Object):126 -> invokeSuspend
    152:152:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    152:152:java.lang.Object invokeSuspend(java.lang.Object):126 -> invokeSuspend
    126:127:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    819:819:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    819:819:java.lang.Object invokeSuspend(java.lang.Object):127 -> invokeSuspend
    847:847:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    847:847:java.lang.Object invokeSuspend(java.lang.Object):127 -> invokeSuspend
    127:129:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    819:819:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    819:819:java.lang.Object invokeSuspend(java.lang.Object):129 -> invokeSuspend
    847:847:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    847:847:java.lang.Object invokeSuspend(java.lang.Object):129 -> invokeSuspend
    129:137:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    135:135:void invokeSuspend$lambda-4(java.util.List,io.heckel.ntfy.ui.AddFragment) -> invokeSuspend$lambda-4
io.heckel.ntfy.ui.AddFragment$onCreateDialog$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.AddFragment$onCreateDialog$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List io.heckel.ntfy.ui.AddFragment$onCreateDialog$1$$InternalSyntheticLambda$2$04ee120302adf4af092ef8bf1966be2aab7cfcc73303dfcbb4f51155076e25f9$0.f$0 -> f$0
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$onCreateDialog$1$$InternalSyntheticLambda$2$04ee120302adf4af092ef8bf1966be2aab7cfcc73303dfcbb4f51155076e25f9$0.f$1 -> f$1
    void io.heckel.ntfy.ui.AddFragment$onCreateDialog$1$$InternalSyntheticLambda$2$04ee120302adf4af092ef8bf1966be2aab7cfcc73303dfcbb4f51155076e25f9$0.<init>(java.util.List,io.heckel.ntfy.ui.AddFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$onCreateDialog$1$$InternalSyntheticLambda$2$04ee120302adf4af092ef8bf1966be2aab7cfcc73303dfcbb4f51155076e25f9$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.AddFragment$onCreateDialog$2$subscribeTextWatcher$1 -> io.heckel.ntfy.ui.AddFragment$onCreateDialog$2$subscribeTextWatcher$1:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    171:171:java.lang.Object invoke(java.lang.Object) -> invoke
    172:172:void invoke(android.text.Editable) -> invoke
io.heckel.ntfy.ui.AddFragment$onCreateDialog$loginTextWatcher$1 -> io.heckel.ntfy.ui.AddFragment$onCreateDialog$loginTextWatcher$1:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    140:140:java.lang.Object invoke(java.lang.Object) -> invoke
    141:141:void invoke(android.text.Editable) -> invoke
io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2 -> io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2:
# {"id":"sourceFile","fileName":"AddFragment.kt"}
    void $r8$lambda$EkfXcWFUZjEBthUmhoyfUI8x6jM(io.heckel.ntfy.db.Subscription,java.lang.String,io.heckel.ntfy.ui.AddFragment,java.lang.String) -> $r8$lambda$EkfXcWFUZjEBthUmhoyfUI8x6jM
      # {"id":"com.android.tools.r8.synthesized"}
    322:338:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    329:334:void invokeSuspend$lambda-1$lambda-0(io.heckel.ntfy.db.Subscription,java.lang.String,io.heckel.ntfy.ui.AddFragment,java.lang.String) -> invokeSuspend$lambda-1$lambda-0
io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.db.Subscription io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$InternalSyntheticLambda$3$0f7fa21f92150276c13f1452f17c418ae054c81cdafca38e5f69dbfa10336e3a$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$InternalSyntheticLambda$3$0f7fa21f92150276c13f1452f17c418ae054c81cdafca38e5f69dbfa10336e3a$0.f$3 -> f$3
    java.lang.String io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$InternalSyntheticLambda$3$0f7fa21f92150276c13f1452f17c418ae054c81cdafca38e5f69dbfa10336e3a$0.f$1 -> f$1
    io.heckel.ntfy.ui.AddFragment io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$InternalSyntheticLambda$3$0f7fa21f92150276c13f1452f17c418ae054c81cdafca38e5f69dbfa10336e3a$0.f$2 -> f$2
    void io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$InternalSyntheticLambda$3$0f7fa21f92150276c13f1452f17c418ae054c81cdafca38e5f69dbfa10336e3a$0.<init>(io.heckel.ntfy.db.Subscription,java.lang.String,io.heckel.ntfy.ui.AddFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.AddFragment$validateInputSubscribeView$2$$InternalSyntheticLambda$3$0f7fa21f92150276c13f1452f17c418ae054c81cdafca38e5f69dbfa10336e3a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.BaseUrlKt -> io.heckel.ntfy.ui.BaseUrlKt:
# {"id":"sourceFile","fileName":"BaseUrl.kt"}
    void $r8$lambda$MN5W3d57a1Av5zNM0tU8a62qHDA(kotlin.jvm.functions.Function0) -> $r8$lambda$MN5W3d57a1Av5zNM0tU8a62qHDA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$sJR0kefP11jfvLIB7r4uJCQhwGU(android.widget.AutoCompleteTextView,java.util.List,com.google.android.material.textfield.TextInputLayout,android.content.Context,android.view.View) -> $r8$lambda$sJR0kefP11jfvLIB7r4uJCQhwGU
      # {"id":"com.android.tools.r8.synthesized"}
    12:66:void initBaseUrlDropdown(java.util.List,android.widget.AutoCompleteTextView,com.google.android.material.textfield.TextInputLayout) -> initBaseUrlDropdown
    26:38:void initBaseUrlDropdown$lambda-0(android.widget.AutoCompleteTextView,java.util.List,com.google.android.material.textfield.TextInputLayout,android.content.Context,android.view.View) -> initBaseUrlDropdown$lambda-0
    41:41:void initBaseUrlDropdown$lambda-1(kotlin.jvm.functions.Function0) -> initBaseUrlDropdown$lambda-1
io.heckel.ntfy.ui.BaseUrlKt$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.BaseUrlKt$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$0.f$1 -> f$1
    com.google.android.material.textfield.TextInputLayout io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$0.f$2 -> f$2
    android.widget.AutoCompleteTextView io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$0.f$0 -> f$0
    android.content.Context io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$0.f$3 -> f$3
    void io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$0.<init>(android.widget.AutoCompleteTextView,java.util.List,com.google.android.material.textfield.TextInputLayout,android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.BaseUrlKt$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.BaseUrlKt$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function0 io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$1.f$0 -> f$0
    void io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$1.<init>(kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.BaseUrlKt$$InternalSyntheticLambda$2$ab9e995629cf5ffcc0e40bb40211f8fd89206894762fbff46ae967faf6e7ae7e$1.onDismiss() -> onDismiss
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.BaseUrlKt$initBaseUrlDropdown$3 -> io.heckel.ntfy.ui.BaseUrlKt$initBaseUrlDropdown$3:
# {"id":"sourceFile","fileName":"BaseUrl.kt"}
    42:42:void <init>(kotlin.jvm.functions.Function0) -> <init>
    44:44:void afterTextChanged(android.text.Editable) -> afterTextChanged
io.heckel.ntfy.ui.BaseUrlKt$initBaseUrlDropdown$toggleEndIcon$1 -> io.heckel.ntfy.ui.BaseUrlKt$initBaseUrlDropdown$toggleEndIcon$1:
# {"id":"sourceFile","fileName":"BaseUrl.kt"}
    13:13:java.lang.Object invoke() -> invoke
    14:22:void invoke() -> invoke
io.heckel.ntfy.ui.Colors -> io.heckel.ntfy.ui.Colors:
# {"id":"sourceFile","fileName":"Colors.kt"}
io.heckel.ntfy.ui.Colors$Companion -> io.heckel.ntfy.ui.Colors$Companion:
# {"id":"sourceFile","fileName":"Colors.kt"}
    9:9:void <init>() -> <init>
    21:21:int cardBackground(android.content.Context) -> cardBackground
    29:29:int cardBackgroundColor(android.content.Context) -> cardBackgroundColor
    25:25:int cardSelectedBackground(android.content.Context) -> cardSelectedBackground
    33:33:int cardSelectedBackgroundColor(android.content.Context) -> cardSelectedBackgroundColor
    45:45:int dangerText(android.content.Context) -> dangerText
    17:17:int itemSelectedBackground(android.content.Context) -> itemSelectedBackground
    13:13:int notificationIcon(android.content.Context) -> notificationIcon
    41:41:int statusBarActionMode(android.content.Context) -> statusBarActionMode
    37:37:int statusBarNormal(android.content.Context) -> statusBarNormal
io.heckel.ntfy.ui.DetailActivity -> io.heckel.ntfy.ui.DetailActivity:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$-A3lmXSHyuAbKCRVWgMsi73PR_4(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> $r8$lambda$-A3lmXSHyuAbKCRVWgMsi73PR_4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$3gmaXjkhmsN5we6M4tmUE4ReDoo(io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$3gmaXjkhmsN5we6M4tmUE4ReDoo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$8vVwXh1nK2Xmc20HVMkPBt18PRA(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> $r8$lambda$8vVwXh1nK2Xmc20HVMkPBt18PRA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$BUnm925ESNTn3FahCuy-Q3AZwGk(io.heckel.ntfy.ui.DetailActivity,java.lang.Exception) -> $r8$lambda$BUnm925ESNTn3FahCuy-Q3AZwGk
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$IFZ0I-I-4LaAGdp3R4C5ode1WwY(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface) -> $r8$lambda$IFZ0I-I-4LaAGdp3R4C5ode1WwY
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$KL_jWlcELiCP_ixx6A5IjhfAgDI(io.heckel.ntfy.ui.DetailActivity,android.view.View,java.util.List) -> $r8$lambda$KL_jWlcELiCP_ixx6A5IjhfAgDI
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$MrZjEdcylKn2B5PHT-_VwZ0mIM8(io.heckel.ntfy.ui.DetailActivity,java.util.Set) -> $r8$lambda$MrZjEdcylKn2B5PHT-_VwZ0mIM8
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Vp4GWWQpNm2JpdY6kVqVbhCJLbs(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> $r8$lambda$Vp4GWWQpNm2JpdY6kVqVbhCJLbs
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$XuGWl8CKRzB2qDE1iuw7Srycuss(io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$XuGWl8CKRzB2qDE1iuw7Srycuss
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ZXip9ezKA6WEzFjc1DlTXMge0EU(android.content.DialogInterface,int) -> $r8$lambda$ZXip9ezKA6WEzFjc1DlTXMge0EU
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$aDeCapm7Zvt8NPuQjkAqagJQuPs(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface) -> $r8$lambda$aDeCapm7Zvt8NPuQjkAqagJQuPs
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$f06uGl9a_UIDY8XjRXyAYNfTm8w(android.content.DialogInterface,int) -> $r8$lambda$f06uGl9a_UIDY8XjRXyAYNfTm8w
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$l-nG0AbtcEvHxPlG2vp9B9sLGIE(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> $r8$lambda$l-nG0AbtcEvHxPlG2vp9B9sLGIE
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$u26oU9jQTA27jIx59bQsdLuF1w0(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface) -> $r8$lambda$u26oU9jQTA27jIx59bQsdLuF1w0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$vsxXfLJjKwueKv_GPCF3NW_Iwuo(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> $r8$lambda$vsxXfLJjKwueKv_GPCF3NW_Iwuo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$wweON_wfxvQDTWiT8oRdAE03Fps(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> $r8$lambda$wweON_wfxvQDTWiT8oRdAE03Fps
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ysxWMSSH7bqYxQA5BPMyYglevCs(io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$ysxWMSSH7bqYxQA5BPMyYglevCs
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$zNzbW4F-rzkxCXFqDDl5vpsOugs(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification) -> $r8$lambda$zNzbW4F-rzkxCXFqDDl5vpsOugs
      # {"id":"com.android.tools.r8.synthesized"}
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> <init>
    44:44:void <init>():44 -> <init>
    45:45:io.heckel.ntfy.ui.DetailViewModel getViewModel() -> <init>
    45:45:void <init>():45 -> <init>
    83:87:kotlin.Lazy androidx.activity.ActivityViewModelLazyKt.viewModels$default(androidx.activity.ComponentActivity,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object) -> <init>
    83:87:void <init>():45 -> <init>
    45:45:io.heckel.ntfy.ui.DetailViewModel getViewModel() -> <init>
    45:45:void <init>():45 -> <init>
    48:48:io.heckel.ntfy.db.Repository getRepository() -> <init>
    48:48:void <init>():48 -> <init>
    49:58:void <init>() -> <init>
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$finishActionMode
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getAdapter$p
    44:44:io.heckel.ntfy.ui.DetailAdapter access$getAdapter$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getAdapter$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getApi$p
    44:44:io.heckel.ntfy.msg.ApiService access$getApi$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getApi$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getAppBaseUrl$p
    44:44:java.lang.String access$getAppBaseUrl$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getAppBaseUrl$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getMainList$p
    44:44:androidx.recyclerview.widget.RecyclerView access$getMainList$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getMainList$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getMainListContainer$p
    44:44:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$getMainListContainer$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getMainListContainer$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getMessenger$p
    44:44:io.heckel.ntfy.firebase.FirebaseMessenger access$getMessenger$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getMessenger$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getNotifier$p
    44:44:io.heckel.ntfy.msg.NotificationService access$getNotifier$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getNotifier$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getRepository
    44:44:io.heckel.ntfy.db.Repository access$getRepository(io.heckel.ntfy.ui.DetailActivity):44 -> access$getRepository
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getSubscriptionBaseUrl$p
    44:44:java.lang.String access$getSubscriptionBaseUrl$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getSubscriptionBaseUrl$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getSubscriptionDisplayName$p
    44:44:java.lang.String access$getSubscriptionDisplayName$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getSubscriptionDisplayName$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getSubscriptionId$p
    44:44:long access$getSubscriptionId$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getSubscriptionId$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getSubscriptionInstant$p
    44:44:boolean access$getSubscriptionInstant$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getSubscriptionInstant$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getSubscriptionMutedUntil$p
    44:44:long access$getSubscriptionMutedUntil$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getSubscriptionMutedUntil$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$getSubscriptionTopic$p
    44:44:java.lang.String access$getSubscriptionTopic$p(io.heckel.ntfy.ui.DetailActivity):44 -> access$getSubscriptionTopic$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$loadView
    44:44:void access$loadView(io.heckel.ntfy.ui.DetailActivity):44 -> access$loadView
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$onNotificationClick
    44:44:void access$onNotificationClick(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification):44 -> access$onNotificationClick
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$onNotificationLongClick
    44:44:void access$onNotificationLongClick(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification):44 -> access$onNotificationLongClick
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$setSubscriptionDisplayName$p
    44:44:void access$setSubscriptionDisplayName$p(io.heckel.ntfy.ui.DetailActivity,java.lang.String):44 -> access$setSubscriptionDisplayName$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$setSubscriptionInstant$p
    44:44:void access$setSubscriptionInstant$p(io.heckel.ntfy.ui.DetailActivity,boolean):44 -> access$setSubscriptionInstant$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$setSubscriptionMutedUntil$p
    44:44:void access$setSubscriptionMutedUntil$p(io.heckel.ntfy.ui.DetailActivity,long):44 -> access$setSubscriptionMutedUntil$p
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$showHideInstantMenuItems
    44:44:void access$showHideInstantMenuItems(io.heckel.ntfy.ui.DetailActivity,boolean):44 -> access$showHideInstantMenuItems
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$showHideMutedUntilMenuItems
    44:44:void access$showHideMutedUntilMenuItems(io.heckel.ntfy.ui.DetailActivity,long):44 -> access$showHideMutedUntilMenuItems
    44:44:void access$finishActionMode(io.heckel.ntfy.ui.DetailActivity) -> access$updateTitle
    44:44:void access$updateTitle(io.heckel.ntfy.ui.DetailActivity,java.lang.String):44 -> access$updateTitle
    743:749:void beginActionMode(io.heckel.ntfy.db.Notification) -> beginActionMode
    647:647:void copyToClipboard(io.heckel.ntfy.db.Notification) -> copyToClipboard
    648:648:void copyToClipboard$lambda-16(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification) -> copyToClipboard$lambda-16
    758:765:void endActionModeAndRedraw() -> endActionModeAndRedraw
    753:754:void finishActionMode() -> finishActionMode
    48:48:io.heckel.ntfy.db.Repository getRepository() -> getRepository
    45:45:io.heckel.ntfy.ui.DetailViewModel getViewModel() -> getViewModel
    659:663:void handleActionModeClick(io.heckel.ntfy.db.Notification) -> handleActionModeClick
    167:191:void loadView() -> loadView
    192:192:void loadView$lambda-0(io.heckel.ntfy.ui.DetailActivity) -> loadView
    192:192:void loadView():192 -> loadView
    193:263:void loadView() -> loadView
    192:192:void loadView$lambda-0(io.heckel.ntfy.ui.DetailActivity) -> loadView$lambda-0
    207:217:void loadView$lambda-2(io.heckel.ntfy.ui.DetailActivity,android.view.View,java.util.List) -> loadView$lambda-2
    255:255:void loadView$lambda-3(io.heckel.ntfy.ui.DetailActivity,java.util.Set) -> loadView$lambda-3
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maybeCancelNotificationPopups
    766:766:void maybeCancelNotificationPopups(java.util.List):301 -> maybeCancelNotificationPopups
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> maybeCancelNotificationPopups
    857:857:void maybeCancelNotificationPopups(java.util.List):301 -> maybeCancelNotificationPopups
    301:303:void maybeCancelNotificationPopups(java.util.List) -> maybeCancelNotificationPopups
    94:105:void maybeSubscribeAndLoadView(android.net.Uri) -> maybeSubscribeAndLoadView
    681:687:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    569:574:void onClearClick() -> onClearClick
    579:579:void onClearClick$lambda-10(android.content.DialogInterface,int) -> onClearClick
    579:579:void onClearClick():579 -> onClearClick
    580:586:void onClearClick() -> onClearClick
    583:584:void onClearClick$lambda-11(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface) -> onClearClick$lambda-11
    575:575:void onClearClick$lambda-9(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> onClearClick$lambda-9
    459:462:void onCopyUrlClick() -> onCopyUrlClick
    463:468:void onCopyUrlClick$lambda-5(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> onCopyUrlClick$lambda-5
    72:89:void onCreate(android.os.Bundle) -> onCreate
    668:671:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    313:322:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    601:606:void onDeleteClick() -> onDeleteClick
    617:617:void onDeleteClick$lambda-13(android.content.DialogInterface,int) -> onDeleteClick
    617:617:void onDeleteClick():617 -> onDeleteClick
    618:624:void onDeleteClick() -> onDeleteClick
    607:615:void onDeleteClick$lambda-12(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> onDeleteClick$lambda-12
    621:622:void onDeleteClick$lambda-14(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface) -> onDeleteClick$lambda-14
    739:739:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    504:506:void onInstantEnableClick(boolean) -> onInstantEnableClick
    695:697:void onMultiCopyClick() -> onMultiCopyClick
    717:735:void onMultiDeleteClick() -> onMultiDeleteClick
    723:723:void onMultiDeleteClick$lambda-18(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> onMultiDeleteClick$lambda-18
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onMultiDeleteClick$lambda-18
    1549:1549:void onMultiDeleteClick$lambda-18(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int):723 -> onMultiDeleteClick$lambda-18
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onMultiDeleteClick$lambda-18
    1620:1621:void onMultiDeleteClick$lambda-18(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int):723 -> onMultiDeleteClick$lambda-18
    723:724:void onMultiDeleteClick$lambda-18(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> onMultiDeleteClick$lambda-18
    727:727:void onMultiDeleteClick$lambda-19(io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface,int) -> onMultiDeleteClick$lambda-19
    732:733:void onMultiDeleteClick$lambda-20(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity,android.content.DialogInterface) -> onMultiDeleteClick$lambda-20
    428:433:void onMutedUntilClick(boolean) -> onMutedUntilClick
    628:642:void onNotificationClick(io.heckel.ntfy.db.Notification) -> onNotificationClick
    637:638:void onNotificationClick$lambda-15(io.heckel.ntfy.ui.DetailActivity,java.lang.Exception) -> onNotificationClick$lambda-15
    653:654:void onNotificationLongClick(io.heckel.ntfy.db.Notification) -> onNotificationLongClick
    438:438:void onNotificationMutedUntilChanged(long) -> onNotificationMutedUntilChanged
    347:388:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    289:297:void onPause() -> onPause
    270:276:void onResume() -> onResume
    590:597:void onSettingsClick() -> onSettingsClick
    393:395:void onTestClick() -> onTestClick
    473:475:void refresh() -> refresh
    524:528:void showHideInstantMenuItems(boolean) -> showHideInstantMenuItems
    529:538:void showHideInstantMenuItems$lambda-6(io.heckel.ntfy.ui.DetailActivity) -> showHideInstantMenuItems$lambda-6
    544:548:void showHideMutedUntilMenuItems(long) -> showHideMutedUntilMenuItems
    549:557:void showHideMutedUntilMenuItems$lambda-7(io.heckel.ntfy.ui.DetailActivity) -> showHideMutedUntilMenuItems$lambda-7
    330:330:void startNotificationMutedChecker() -> startNotificationMutedChecker
    563:563:void updateTitle(java.lang.String) -> updateTitle
    564:564:void updateTitle$lambda-8(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> updateTitle$lambda-8
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$0.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$1.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$1.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda10 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$1.f$0 -> f$0
    android.view.View io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$1.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$1.<init>(io.heckel.ntfy.ui.DetailActivity,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$1.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda11 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$0.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$0.onRefresh() -> onRefresh
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda12 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$390f14a6b6bc3b1b2e8f32f592a09874192c567a0052c96da712071bc3c51e2a$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$390f14a6b6bc3b1b2e8f32f592a09874192c567a0052c96da712071bc3c51e2a$0.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$390f14a6b6bc3b1b2e8f32f592a09874192c567a0052c96da712071bc3c51e2a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda13 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$6f7049a1ea2b25853ab72bf8fd6aebd55cb6eeeb2f694c24a3617717be694124$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$6f7049a1ea2b25853ab72bf8fd6aebd55cb6eeeb2f694c24a3617717be694124$0.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$6f7049a1ea2b25853ab72bf8fd6aebd55cb6eeeb2f694c24a3617717be694124$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda14 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$2$fe8b205ba88425be2e55e0b8366e33ac034482950085f271a03b2d1c0578f09f$0.f$1 -> f$1
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$2$fe8b205ba88425be2e55e0b8366e33ac034482950085f271a03b2d1c0578f09f$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$2$fe8b205ba88425be2e55e0b8366e33ac034482950085f271a03b2d1c0578f09f$0.<init>(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$2$fe8b205ba88425be2e55e0b8366e33ac034482950085f271a03b2d1c0578f09f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda15 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$1$88c8d753de64285227ca87b11e66f01c20e2489f752fc6fba5ffb0cca4db103c$0.f$0 -> f$0
    java.lang.Exception io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$1$88c8d753de64285227ca87b11e66f01c20e2489f752fc6fba5ffb0cca4db103c$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$1$88c8d753de64285227ca87b11e66f01c20e2489f752fc6fba5ffb0cca4db103c$0.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$1$88c8d753de64285227ca87b11e66f01c20e2489f752fc6fba5ffb0cca4db103c$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda16 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda16:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$b98e5cfbeeb78058a9422f6aabf7864d368e7a6ae22e9d1f021dd37fe9856e44$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$b98e5cfbeeb78058a9422f6aabf7864d368e7a6ae22e9d1f021dd37fe9856e44$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$b98e5cfbeeb78058a9422f6aabf7864d368e7a6ae22e9d1f021dd37fe9856e44$0.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$b98e5cfbeeb78058a9422f6aabf7864d368e7a6ae22e9d1f021dd37fe9856e44$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda17 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda17:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$939ef7a09dc7c3fe17747199a41e9fd7cadc0d8165fe0cbf48c915daf7ad7f5c$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$939ef7a09dc7c3fe17747199a41e9fd7cadc0d8165fe0cbf48c915daf7ad7f5c$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$939ef7a09dc7c3fe17747199a41e9fd7cadc0d8165fe0cbf48c915daf7ad7f5c$0.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$939ef7a09dc7c3fe17747199a41e9fd7cadc0d8165fe0cbf48c915daf7ad7f5c$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$0.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$0.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$1 io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$1.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$1.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$1 io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$1.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$1.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda6 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$2.f$0 -> f$0
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$2.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$2.<init>(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$77a80aba5cf3fd53d5a472d2de0b6e84cce0bf06c26a5a3155a5d6f38999440c$2.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda7 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$2.f$0 -> f$0
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$2.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$2.<init>(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$a6abcf255b6178a7b9db32a4a744ce780d1b5adfb06cdac7419f37a5011cce5a$2.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda8 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$2.f$0 -> f$0
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$2.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$2.<init>(android.app.AlertDialog,io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$2d2a42eb88f5984125a7dbece00f8059e8758ca63c562eb4e9d4bfe991fae227$2.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda9 -> io.heckel.ntfy.ui.DetailActivity$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$2.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$2.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$$InternalSyntheticLambda$0$c14653ee8dcc69f9ad3958e545ad7a58a61fde7f617954b4a5409411ba79e20b$2.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$Companion -> io.heckel.ntfy.ui.DetailActivity$Companion:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    768:768:void <init>() -> <init>
io.heckel.ntfy.ui.DetailActivity$loadView$3 -> io.heckel.ntfy.ui.DetailActivity$loadView$3:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    244:244:void <init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
    247:248:void onItemRangeInserted(int,int) -> onItemRangeInserted
io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1 -> io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$eEvw8-hmcAjy0dvoYCfWiX0jao4(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification,android.view.View) -> $r8$lambda$eEvw8-hmcAjy0dvoYCfWiX0jao4
      # {"id":"com.android.tools.r8.synthesized"}
    222:222:void <init>(io.heckel.ntfy.ui.DetailActivity,int) -> <init>
    227:237:void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSwiped
    233:233:void onSwiped$lambda-0(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification,android.view.View) -> onSwiped$lambda-0
io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$$InternalSyntheticLambda$1$ba02c195b3aa84a89cd98f6f6eb7834b7bf0e992bdb51b2b9e9d8f29a194a306$0.f$1 -> f$1
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$$InternalSyntheticLambda$1$ba02c195b3aa84a89cd98f6f6eb7834b7bf0e992bdb51b2b9e9d8f29a194a306$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$$InternalSyntheticLambda$1$ba02c195b3aa84a89cd98f6f6eb7834b7bf0e992bdb51b2b9e9d8f29a194a306$0.<init>(io.heckel.ntfy.ui.DetailActivity,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$$InternalSyntheticLambda$1$ba02c195b3aa84a89cd98f6f6eb7834b7bf0e992bdb51b2b9e9d8f29a194a306$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$onSwiped$1 -> io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$onSwiped$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    228:230:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$onSwiped$2$1 -> io.heckel.ntfy.ui.DetailActivity$loadView$itemTouchCallback$1$onSwiped$2$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    233:235:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$loadView$onNotificationClick$1 -> io.heckel.ntfy.ui.DetailActivity$loadView$onNotificationClick$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    197:197:java.lang.Object invoke(java.lang.Object) -> invoke
    197:197:void invoke(io.heckel.ntfy.db.Notification) -> invoke
io.heckel.ntfy.ui.DetailActivity$loadView$onNotificationLongClick$1 -> io.heckel.ntfy.ui.DetailActivity$loadView$onNotificationLongClick$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    198:198:java.lang.Object invoke(java.lang.Object) -> invoke
    198:198:void invoke(io.heckel.ntfy.db.Notification) -> invoke
io.heckel.ntfy.ui.DetailActivity$maybeCancelNotificationPopups$1 -> io.heckel.ntfy.ui.DetailActivity$maybeCancelNotificationPopups$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    303:304:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):304 -> invokeSuspend
    305:308:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1 -> io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$-492JNooVwHwrsLINa6bv3vxFpA(io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$-492JNooVwHwrsLINa6bv3vxFpA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$IIsbSdMqAGWxcfzGHvj-d_yspx0(io.heckel.ntfy.ui.DetailActivity,java.lang.String,java.lang.String) -> $r8$lambda$IIsbSdMqAGWxcfzGHvj-d_yspx0
      # {"id":"com.android.tools.r8.synthesized"}
    105:162:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):140 -> invokeSuspend
    140:162:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    146:147:void invokeSuspend$lambda-1(io.heckel.ntfy.ui.DetailActivity,java.lang.String,java.lang.String) -> invokeSuspend$lambda-1
    160:160:void invokeSuspend$lambda-2(io.heckel.ntfy.ui.DetailActivity) -> invokeSuspend$lambda-2
io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$1.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$1.<init>(io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$0.f$2 -> f$2
    java.lang.String io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$0.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.String,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$maybeSubscribeAndLoadView$1$$InternalSyntheticLambda$0$9e19293911b449a22200d0569c977a695f72974b95f447d84aeb58ace3a6f218$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$onClearClick$dialog$1$1 -> io.heckel.ntfy.ui.DetailActivity$onClearClick$dialog$1$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    575:577:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$onDeleteClick$dialog$1$1 -> io.heckel.ntfy.ui.DetailActivity$onDeleteClick$dialog$1$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    608:614:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1 -> io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$VTfFpTJ1VjiNeQq5vq1fI--ZAWk(boolean,io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$VTfFpTJ1VjiNeQq5vq1fI--ZAWk
      # {"id":"com.android.tools.r8.synthesized"}
    506:520:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    513:517:void invokeSuspend$lambda-1(boolean,io.heckel.ntfy.ui.DetailActivity) -> invokeSuspend$lambda-1
io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1$$InternalSyntheticLambda$0$c930855ed4af185e765da88ae70fb7c2e5eb3045ce1fa802ebe91f3de7f86cfc$0.f$1 -> f$1
    boolean io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1$$InternalSyntheticLambda$0$c930855ed4af185e765da88ae70fb7c2e5eb3045ce1fa802ebe91f3de7f86cfc$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1$$InternalSyntheticLambda$0$c930855ed4af185e765da88ae70fb7c2e5eb3045ce1fa802ebe91f3de7f86cfc$0.<init>(boolean,io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$onInstantEnableClick$1$$InternalSyntheticLambda$0$c930855ed4af185e765da88ae70fb7c2e5eb3045ce1fa802ebe91f3de7f86cfc$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1 -> io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$Y6_jpHI3PDIfedHpm31dyiDnsrs(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> $r8$lambda$Y6_jpHI3PDIfedHpm31dyiDnsrs
      # {"id":"com.android.tools.r8.synthesized"}
    697:713:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    705:711:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$$InternalSyntheticLambda$0$57a82c6ff01896de0bafcf18b024bca9113aae1077d76f1605cccedfcebf96df$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$$InternalSyntheticLambda$0$57a82c6ff01896de0bafcf18b024bca9113aae1077d76f1605cccedfcebf96df$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$$InternalSyntheticLambda$0$57a82c6ff01896de0bafcf18b024bca9113aae1077d76f1605cccedfcebf96df$0.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$$InternalSyntheticLambda$0$57a82c6ff01896de0bafcf18b024bca9113aae1077d76f1605cccedfcebf96df$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$content$1 -> io.heckel.ntfy.ui.DetailActivity$onMultiCopyClick$1$content$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    698:698:java.lang.Object invoke(java.lang.Object) -> invoke
    699:701:java.lang.CharSequence invoke(java.lang.String) -> invoke
io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1 -> io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$Dj1w1mO_rhELXlzcj4VLHZc3dL4(long,io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$Dj1w1mO_rhELXlzcj4VLHZc3dL4
      # {"id":"com.android.tools.r8.synthesized"}
    438:455:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    447:451:void invokeSuspend$lambda-1(long,io.heckel.ntfy.ui.DetailActivity) -> invokeSuspend$lambda-1
io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1$$InternalSyntheticLambda$0$eb0f7d5c128a9b24262ce3ffbb2646ef63891df2e7db8562b1b8d025708ad163$0.f$1 -> f$1
    long io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1$$InternalSyntheticLambda$0$eb0f7d5c128a9b24262ce3ffbb2646ef63891df2e7db8562b1b8d025708ad163$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1$$InternalSyntheticLambda$0$eb0f7d5c128a9b24262ce3ffbb2646ef63891df2e7db8562b1b8d025708ad163$0.<init>(long,io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$onNotificationMutedUntilChanged$1$$InternalSyntheticLambda$0$eb0f7d5c128a9b24262ce3ffbb2646ef63891df2e7db8562b1b8d025708ad163$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$onPause$1 -> io.heckel.ntfy.ui.DetailActivity$onPause$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    291:295:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$onResume$1 -> io.heckel.ntfy.ui.DetailActivity$onResume$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    276:285:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$onTestClick$1 -> io.heckel.ntfy.ui.DetailActivity$onTestClick$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$R_VGSIrXW79Vpujux2-ChDKtVZM(java.lang.Exception,io.heckel.ntfy.ui.DetailActivity) -> $r8$lambda$R_VGSIrXW79Vpujux2-ChDKtVZM
      # {"id":"com.android.tools.r8.synthesized"}
    395:423:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    409:420:void invokeSuspend$lambda-0(java.lang.Exception,io.heckel.ntfy.ui.DetailActivity) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.DetailActivity$onTestClick$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$onTestClick$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$onTestClick$1$$InternalSyntheticLambda$0$8a818219caee1c1f30403186ad5f99c98eadc9c3e08d95652b2fcd99bf35078d$0.f$1 -> f$1
    java.lang.Exception io.heckel.ntfy.ui.DetailActivity$onTestClick$1$$InternalSyntheticLambda$0$8a818219caee1c1f30403186ad5f99c98eadc9c3e08d95652b2fcd99bf35078d$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailActivity$onTestClick$1$$InternalSyntheticLambda$0$8a818219caee1c1f30403186ad5f99c98eadc9c3e08d95652b2fcd99bf35078d$0.<init>(java.lang.Exception,io.heckel.ntfy.ui.DetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$onTestClick$1$$InternalSyntheticLambda$0$8a818219caee1c1f30403186ad5f99c98eadc9c3e08d95652b2fcd99bf35078d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$refresh$1 -> io.heckel.ntfy.ui.DetailActivity$refresh$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    void $r8$lambda$eW-oAX_O0TIaGk73ZNpfmOJynlA(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> $r8$lambda$eW-oAX_O0TIaGk73ZNpfmOJynlA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$vRajH-MEhs-pGZyXxwpgGiNiFhI(io.heckel.ntfy.ui.DetailActivity,java.lang.Exception) -> $r8$lambda$vRajH-MEhs-pGZyXxwpgGiNiFhI
      # {"id":"com.android.tools.r8.synthesized"}
    475:500:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):486 -> invokeSuspend
    486:500:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    488:489:void invokeSuspend$lambda-1(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> invokeSuspend$lambda-1
    495:497:void invokeSuspend$lambda-2(io.heckel.ntfy.ui.DetailActivity,java.lang.Exception) -> invokeSuspend$lambda-2
io.heckel.ntfy.ui.DetailActivity$refresh$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailActivity$refresh$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$1.f$0 -> f$0
    java.lang.Exception io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$1.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$1.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$refresh$1$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.DetailActivity$refresh$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailActivity io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$0.<init>(io.heckel.ntfy.ui.DetailActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailActivity$refresh$1$$InternalSyntheticLambda$1$dc4dfbe3f45ea7a29f0158658476976fb97809b1642c2a727a53b7c63d08739e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailActivity$repository$2 -> io.heckel.ntfy.ui.DetailActivity$repository$2:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    48:48:io.heckel.ntfy.db.Repository invoke() -> invoke
    48:48:java.lang.Object invoke() -> invoke
io.heckel.ntfy.ui.DetailActivity$special$$inlined$viewModels$default$2 -> io.heckel.ntfy.ui.DetailActivity$special$$inlined$viewModels$default$2:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    85:85:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$3.invoke() -> invoke
    85:85:androidx.lifecycle.ViewModelStore invoke():85 -> invoke
    85:85:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$3.invoke() -> invoke
    85:85:java.lang.Object invoke():85 -> invoke
io.heckel.ntfy.ui.DetailActivity$special$$inlined$viewModels$default$3 -> io.heckel.ntfy.ui.DetailActivity$special$$inlined$viewModels$default$3:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    87:87:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$4.invoke() -> invoke
    87:87:androidx.lifecycle.viewmodel.CreationExtras invoke():87 -> invoke
    87:87:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$4.invoke() -> invoke
    87:87:java.lang.Object invoke():87 -> invoke
io.heckel.ntfy.ui.DetailActivity$startNotificationMutedChecker$1 -> io.heckel.ntfy.ui.DetailActivity$startNotificationMutedChecker$1:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    330:343:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailActivity$viewModel$2 -> io.heckel.ntfy.ui.DetailActivity$viewModel$2:
# {"id":"sourceFile","fileName":"DetailActivity.kt"}
    45:45:java.lang.Object invoke() -> invoke
    46:46:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
io.heckel.ntfy.ui.DetailAdapter -> io.heckel.ntfy.ui.DetailAdapter:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    42:42:void <init>(android.app.Activity,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    41:41:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> <init>
    41:41:void <init>(android.app.Activity,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):41 -> <init>
    43:43:java.util.Set getSelected() -> <init>
    43:43:void <init>(android.app.Activity,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):43 -> <init>
    58:58:io.heckel.ntfy.db.Notification get(int) -> get
    43:43:java.util.Set getSelected() -> getSelected
    41:41:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    54:54:void onBindViewHolder(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,int) -> onBindViewHolder
    41:41:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onCreateViewHolder
    41:41:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):41 -> onCreateViewHolder
    47:49:io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    62:69:void toggleSelection(java.lang.String) -> toggleSelection
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> toggleSelection
    1549:1549:void toggleSelection(java.lang.String):69 -> toggleSelection
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> toggleSelection
    1620:1621:void toggleSelection(java.lang.String):69 -> toggleSelection
    69:71:void toggleSelection(java.lang.String) -> toggleSelection
io.heckel.ntfy.ui.DetailAdapter$Companion -> io.heckel.ntfy.ui.DetailAdapter$Companion:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    546:546:void <init>() -> <init>
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    boolean $r8$lambda$1zl6ZZHR5w4dzcPDLnaQ6BaRAQM(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> $r8$lambda$1zl6ZZHR5w4dzcPDLnaQ6BaRAQM
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$4DRGBl20cpiRIo8JwtupteUW0vs(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> $r8$lambda$4DRGBl20cpiRIo8JwtupteUW0vs
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$6UIfCGqQA0i61bNjBduaOSXR9N4(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> $r8$lambda$6UIfCGqQA0i61bNjBduaOSXR9N4
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$7HZuFa5KRIFZM_9kBlGjFhti96I(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> $r8$lambda$7HZuFa5KRIFZM_9kBlGjFhti96I
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$AcxDspb74JFJHUAXTi9piHp2-PY(kotlin.jvm.functions.Function2,android.widget.ImageView,android.graphics.Bitmap) -> $r8$lambda$AcxDspb74JFJHUAXTi9piHp2-PY
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$BHaceNJXW8qMi5RQksGbfo9gBGc(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> $r8$lambda$BHaceNJXW8qMi5RQksGbfo9gBGc
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$CFMYpJ_NCH6MfZg0hIkBKM0AwDE(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> $r8$lambda$CFMYpJ_NCH6MfZg0hIkBKM0AwDE
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$EGF9SaIv-muMzAKeShBmZyKtDMU(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> $r8$lambda$EGF9SaIv-muMzAKeShBmZyKtDMU
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$FqUbZyleuVkQsj0LfmKub_kDlyU(kotlin.jvm.functions.Function0,android.view.View) -> $r8$lambda$FqUbZyleuVkQsj0LfmKub_kDlyU
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$GncmZi9VZ_6fes8gkPBkYvP6_A4(android.content.Context,android.graphics.Bitmap,io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.view.View) -> $r8$lambda$GncmZi9VZ_6fes8gkPBkYvP6_A4
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$WbV4bEyFES8h3RAo8539yQnCl1g(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> $r8$lambda$WbV4bEyFES8h3RAo8539yQnCl1g
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$XuUXur4AvcV7R76P-2DyzPTVxXE(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> $r8$lambda$XuUXur4AvcV7R76P-2DyzPTVxXE
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$crDMJamL4lNrTNrG9PgK71MjH88(android.widget.PopupMenu,android.view.View) -> $r8$lambda$crDMJamL4lNrTNrG9PgK71MjH88
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ekAo8WMht2ZknxNF957fnILRuT8(android.widget.PopupMenu,android.view.View) -> $r8$lambda$ekAo8WMht2ZknxNF957fnILRuT8
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$kCZEuFgM9qVcZJJBO5oNqETKmaw(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> $r8$lambda$kCZEuFgM9qVcZJJBO5oNqETKmaw
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$lG_T8IX57vUo4WZjC2X_rnMcpik(android.content.Context,android.view.View) -> $r8$lambda$lG_T8IX57vUo4WZjC2X_rnMcpik
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$skjgY5NtZVixOn3ed200mJ54CFQ(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> $r8$lambda$skjgY5NtZVixOn3ed200mJ54CFQ
      # {"id":"com.android.tools.r8.synthesized"}
    77:77:void <init>(android.app.Activity,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,android.view.View,java.util.Set,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    76:76:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder) -> <init>
    76:76:void <init>(android.app.Activity,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,android.view.View,java.util.Set,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):76 -> <init>
    79:94:void <init>(android.app.Activity,kotlinx.coroutines.CoroutineScope,io.heckel.ntfy.db.Repository,android.view.View,java.util.Set,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    76:76:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder) -> access$getRepository$p
    76:76:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder) -> access$runAction
    76:76:boolean access$runAction(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Action):76 -> access$runAction
    231:232:void addButtonToCard(android.view.View) -> addButtonToCard
    97:115:void bind(io.heckel.ntfy.db.Notification) -> bind
    116:116:void bind$lambda-2(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> bind
    116:116:void bind(io.heckel.ntfy.db.Notification):116 -> bind
    117:117:boolean bind$lambda-3(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> bind
    117:117:void bind(io.heckel.ntfy.db.Notification):117 -> bind
    118:143:void bind(io.heckel.ntfy.db.Notification) -> bind
    109:110:void bind$lambda-0(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> bind$lambda-0
    113:113:boolean bind$lambda-1(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> bind$lambda-1
    116:116:void bind$lambda-2(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> bind$lambda-2
    117:117:boolean bind$lambda-3(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification,android.view.View) -> bind$lambda-3
    479:479:boolean cancelDownload(android.content.Context,io.heckel.ntfy.db.Notification) -> cancelDownload
    494:494:boolean copyContents(android.content.Context,io.heckel.ntfy.db.Notification) -> copyContents
    484:489:boolean copyUrl(android.content.Context,io.heckel.ntfy.db.Attachment) -> copyUrl
    237:239:android.view.View createCardButton(android.content.Context,java.lang.String,kotlin.jvm.functions.Function0) -> createCardButton
    240:240:void createCardButton$lambda-6(kotlin.jvm.functions.Function0,android.view.View) -> createCardButton
    240:240:android.view.View createCardButton(android.content.Context,java.lang.String,kotlin.jvm.functions.Function0):240 -> createCardButton
    240:240:void createCardButton$lambda-6(kotlin.jvm.functions.Function0,android.view.View) -> createCardButton$lambda-6
    447:463:boolean deleteFile(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment) -> deleteFile
    469:474:boolean downloadFile(android.content.Context,io.heckel.ntfy.db.Notification) -> downloadFile
    308:348:java.lang.String formatAttachmentDetails(android.content.Context,io.heckel.ntfy.db.Attachment,io.heckel.ntfy.util.FileInfo) -> formatAttachmentDetails
    265:279:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo) -> maybeCreateMenuPopup
    281:281:boolean maybeCreateMenuPopup$lambda-9(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup
    281:281:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):281 -> maybeCreateMenuPopup
    282:282:boolean maybeCreateMenuPopup$lambda-10(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup
    282:282:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):282 -> maybeCreateMenuPopup
    283:283:boolean maybeCreateMenuPopup$lambda-11(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup
    283:283:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):283 -> maybeCreateMenuPopup
    284:284:boolean maybeCreateMenuPopup$lambda-12(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup
    284:284:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):284 -> maybeCreateMenuPopup
    285:285:boolean maybeCreateMenuPopup$lambda-13(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> maybeCreateMenuPopup
    285:285:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):285 -> maybeCreateMenuPopup
    286:286:boolean maybeCreateMenuPopup$lambda-14(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> maybeCreateMenuPopup
    286:286:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):286 -> maybeCreateMenuPopup
    289:289:boolean maybeCreateMenuPopup$lambda-15(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> maybeCreateMenuPopup
    289:289:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):289 -> maybeCreateMenuPopup
    291:300:android.widget.PopupMenu maybeCreateMenuPopup(android.content.Context,android.view.View,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo) -> maybeCreateMenuPopup
    282:282:boolean maybeCreateMenuPopup$lambda-10(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-10
    283:283:boolean maybeCreateMenuPopup$lambda-11(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-11
    284:284:boolean maybeCreateMenuPopup$lambda-12(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-12
    285:285:boolean maybeCreateMenuPopup$lambda-13(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-13
    286:286:boolean maybeCreateMenuPopup$lambda-14(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-14
    289:289:boolean maybeCreateMenuPopup$lambda-15(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-15
    281:281:boolean maybeCreateMenuPopup$lambda-9(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment,android.view.MenuItem) -> maybeCreateMenuPopup$lambda-9
    209:219:void maybeRenderActions(android.content.Context,io.heckel.ntfy.db.Notification) -> maybeRenderActions
    171:180:void maybeRenderAttachment(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo) -> maybeRenderAttachment
    246:251:void maybeRenderAttachmentBox(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment,io.heckel.ntfy.util.FileInfo,android.graphics.Bitmap) -> maybeRenderAttachmentBox
    253:253:void maybeRenderAttachmentBox$lambda-7(android.widget.PopupMenu,android.view.View) -> maybeRenderAttachmentBox
    253:253:void maybeRenderAttachmentBox(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment,io.heckel.ntfy.util.FileInfo,android.graphics.Bitmap):253 -> maybeRenderAttachmentBox
    255:261:void maybeRenderAttachmentBox(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment,io.heckel.ntfy.util.FileInfo,android.graphics.Bitmap) -> maybeRenderAttachmentBox
    253:253:void maybeRenderAttachmentBox$lambda-7(android.widget.PopupMenu,android.view.View) -> maybeRenderAttachmentBox$lambda-7
    257:258:void maybeRenderAttachmentBox$lambda-8(android.content.Context,android.view.View) -> maybeRenderAttachmentBox$lambda-8
    356:371:void maybeRenderAttachmentImage(android.content.Context,android.graphics.Bitmap) -> maybeRenderAttachmentImage
    362:367:void maybeRenderAttachmentImage$lambda-17(android.content.Context,android.graphics.Bitmap,io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.view.View) -> maybeRenderAttachmentImage$lambda-17
    363:363:void maybeRenderAttachmentImage$lambda-17(android.content.Context,android.graphics.Bitmap,io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.view.View) -> maybeRenderAttachmentImage$lambda-17$lambda-16
    363:363:void maybeRenderAttachmentImage$lambda-17$lambda-16(kotlin.jvm.functions.Function2,android.widget.ImageView,android.graphics.Bitmap):363 -> maybeRenderAttachmentImage$lambda-17$lambda-16
    184:194:void maybeRenderIcon(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo) -> maybeRenderIcon
    199:199:void maybeRenderMenu(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo) -> maybeRenderMenu
    201:201:void maybeRenderMenu$lambda-4(android.widget.PopupMenu,android.view.View) -> maybeRenderMenu
    201:201:void maybeRenderMenu(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo):201 -> maybeRenderMenu
    202:204:void maybeRenderMenu(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.util.FileInfo) -> maybeRenderMenu
    201:201:void maybeRenderMenu$lambda-4(android.widget.PopupMenu,android.view.View) -> maybeRenderMenu$lambda-4
    376:396:boolean openFile(android.content.Context,io.heckel.ntfy.db.Attachment) -> openFile
    532:532:boolean previewableImage(io.heckel.ntfy.util.FileInfo) -> previewableImage
    147:165:void renderPriority(android.content.Context,io.heckel.ntfy.db.Notification) -> renderPriority
    225:225:void resetCardButtons() -> resetCardButtons
    1291:1291:void kotlin.sequences.SequencesKt___SequencesKt.forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> resetCardButtons
    1291:1291:void resetCardButtons():225 -> resetCardButtons
    225:227:void resetCardButtons() -> resetCardButtons
    499:501:boolean runAction(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Action) -> runAction
    523:528:void runOtherUserAction(android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Action) -> runOtherUserAction
    508:518:void runViewAction(android.content.Context,io.heckel.ntfy.db.Action) -> runViewAction
    402:440:boolean saveFile(android.content.Context,io.heckel.ntfy.db.Attachment) -> saveFile
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$1.f$1 -> f$1
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$1.f$0 -> f$0
    io.heckel.ntfy.db.Attachment io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$1.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$1.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$1.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$0.f$1 -> f$1
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$0.f$0 -> f$0
    io.heckel.ntfy.db.Attachment io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$0.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$0.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$0.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda10 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.PopupMenu io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$9f6acd4adec2a66b6da74b01a4372dd278284ad7c4e3043df89c3cac66a3be1f$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$9f6acd4adec2a66b6da74b01a4372dd278284ad7c4e3043df89c3cac66a3be1f$0.<init>(android.widget.PopupMenu) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$9f6acd4adec2a66b6da74b01a4372dd278284ad7c4e3043df89c3cac66a3be1f$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda11 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$2.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$2.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$2.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda12 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$0.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$0.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda13 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function0 io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$63412ccb42a59c07e0c90763507ccaf969b64925d2049197b74eebf71979fd7e$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$63412ccb42a59c07e0c90763507ccaf969b64925d2049197b74eebf71979fd7e$0.<init>(kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$63412ccb42a59c07e0c90763507ccaf969b64925d2049197b74eebf71979fd7e$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda14 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$3.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$3.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$3.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$3.onLongClick(android.view.View) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda15 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$1.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$1.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$1.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$1$309ea9a367aa12e096cc78e55ae90d6573b10faf870ea263e92de9dc7fb2174b$1.onLongClick(android.view.View) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda16 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda16:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function2 io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$44428cedb61308261a9e0da2bd8865ec860f81ea0149da8a323349c1699385ad$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$44428cedb61308261a9e0da2bd8865ec860f81ea0149da8a323349c1699385ad$0.<init>(kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$44428cedb61308261a9e0da2bd8865ec860f81ea0149da8a323349c1699385ad$0.loadImage(android.widget.ImageView,java.lang.Object) -> loadImage
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$3.f$1 -> f$1
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$3.f$0 -> f$0
    io.heckel.ntfy.db.Attachment io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$3.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$3.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Attachment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$3.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$5.f$1 -> f$1
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$5.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$5.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$5.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$5.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$6.f$1 -> f$1
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$6.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$6.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$6.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$6.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$4.f$1 -> f$1
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$4.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$4.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$4.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$4.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda6 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$2.f$1 -> f$1
    io.heckel.ntfy.db.Attachment io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$2.f$3 -> f$3
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$2.f$0 -> f$0
    io.heckel.ntfy.db.Notification io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$2.f$2 -> f$2
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$2.<init>(io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder,android.content.Context,io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Attachment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$3$50bb1382385637c8aeb24cd769ced4ac75f807ca9d877a9fb02fd879521fbbd7$2.onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda7 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$9f6acd4adec2a66b6da74b01a4372dd278284ad7c4e3043df89c3cac66a3be1f$1.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$9f6acd4adec2a66b6da74b01a4372dd278284ad7c4e3043df89c3cac66a3be1f$1.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$9f6acd4adec2a66b6da74b01a4372dd278284ad7c4e3043df89c3cac66a3be1f$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda8 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$114790181be86eb791a83306a0fba1ee10f6ef9e112c66cdcc1b50b3ec448050$0.f$0 -> f$0
    io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$114790181be86eb791a83306a0fba1ee10f6ef9e112c66cdcc1b50b3ec448050$0.f$2 -> f$2
    android.graphics.Bitmap io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$114790181be86eb791a83306a0fba1ee10f6ef9e112c66cdcc1b50b3ec448050$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$114790181be86eb791a83306a0fba1ee10f6ef9e112c66cdcc1b50b3ec448050$0.<init>(android.content.Context,android.graphics.Bitmap,io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$114790181be86eb791a83306a0fba1ee10f6ef9e112c66cdcc1b50b3ec448050$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda9 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.PopupMenu io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$f920773e304b589b7540522eab13144b01aeb10f81308da6daab964cae831822$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$f920773e304b589b7540522eab13144b01aeb10f81308da6daab964cae831822$0.<init>(android.widget.PopupMenu) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$$InternalSyntheticLambda$2$f920773e304b589b7540522eab13144b01aeb10f81308da6daab964cae831822$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$deleteFile$1 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$deleteFile$1:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    456:458:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$maybeRenderActions$actionButton$1 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$maybeRenderActions$actionButton$1:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    215:215:java.lang.Boolean invoke() -> invoke
    215:215:java.lang.Object invoke() -> invoke
io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$maybeRenderAttachmentImage$1$loadImage$1 -> io.heckel.ntfy.ui.DetailAdapter$DetailViewHolder$maybeRenderAttachmentImage$1$loadImage$1:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    362:362:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    362:362:void invoke(android.widget.ImageView,android.graphics.Bitmap) -> invoke
io.heckel.ntfy.ui.DetailAdapter$TopicDiffCallback -> io.heckel.ntfy.ui.DetailAdapter$TopicDiffCallback:
# {"id":"sourceFile","fileName":"DetailAdapter.kt"}
    536:536:void <init>() -> <init>
    536:536:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    542:542:boolean areContentsTheSame(io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Notification) -> areContentsTheSame
    536:536:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    538:538:boolean areItemsTheSame(io.heckel.ntfy.db.Notification,io.heckel.ntfy.db.Notification) -> areItemsTheSame
io.heckel.ntfy.ui.DetailSettingsActivity -> io.heckel.ntfy.ui.DetailSettingsActivity:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    37:37:void <init>() -> <init>
    45:71:void onCreate(android.os.Bundle) -> onCreate
    75:75:boolean onSupportNavigateUp() -> onSupportNavigateUp
io.heckel.ntfy.ui.DetailSettingsActivity$Companion -> io.heckel.ntfy.ui.DetailSettingsActivity$Companion:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    512:512:void <init>() -> <init>
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    java.lang.CharSequence $r8$lambda$4FEXoD515iv3QoCt3E4a5Q5V4zc(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> $r8$lambda$4FEXoD515iv3QoCt3E4a5Q5V4zc
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$A-0eezKF3h7TKgU7JHG9fi5flpI(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.Preference) -> $r8$lambda$A-0eezKF3h7TKgU7JHG9fi5flpI
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$AKlc7HZ21hs4BwymdACBvLACfaE(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.Preference) -> $r8$lambda$AKlc7HZ21hs4BwymdACBvLACfaE
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$DHNdlevAMsMuY-C5g3Mg1JUIxh0(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$DHNdlevAMsMuY-C5g3Mg1JUIxh0
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$L-zVJoPl1VD8Sp0Ggl2Wg4t4hC8(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> $r8$lambda$L-zVJoPl1VD8Sp0Ggl2Wg4t4hC8
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$LzsCVcaUpP65ussKMNRxLzKLAdE(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,java.lang.String,androidx.preference.Preference) -> $r8$lambda$LzsCVcaUpP65ussKMNRxLzKLAdE
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$MS85a5dyNKcy42PXukiY1yiNtqw(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$MS85a5dyNKcy42PXukiY1yiNtqw
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$R5PrzcJ54nhDM6LJz3qdJZXCbIc(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,android.net.Uri) -> $r8$lambda$R5PrzcJ54nhDM6LJz3qdJZXCbIc
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$Ub_nBqGA_hk80kYbjaHnz0v3fhs(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$Ub_nBqGA_hk80kYbjaHnz0v3fhs
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$_7vYj996dvmNS1ZjF5k5EoEBOR8(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.Preference) -> $r8$lambda$_7vYj996dvmNS1ZjF5k5EoEBOR8
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$pQe76k8fT3kZEGH4yile5BNB9QE(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$pQe76k8fT3kZEGH4yile5BNB9QE
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$yvZ6oh9lmm9cSKeNSL5UmN-U4q4(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.EditTextPreference) -> $r8$lambda$yvZ6oh9lmm9cSKeNSL5UmN-U4q4
      # {"id":"com.android.tools.r8.synthesized"}
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    79:79:void <init>():79 -> <init>
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$createUri
    79:79:android.net.Uri access$createUri(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$createUri
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getIconRemovePref$p
    79:79:androidx.preference.Preference access$getIconRemovePref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$getIconRemovePref$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getIconSetPref$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getNotificationService$p
    79:79:io.heckel.ntfy.msg.NotificationService access$getNotificationService$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$getNotificationService$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getOpenChannelsPref$p
    79:79:androidx.preference.Preference access$getOpenChannelsPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$getOpenChannelsPref$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getRepository$p
    79:79:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$getRepository$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getResolver$p
    79:79:android.content.ContentResolver access$getResolver$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$getResolver$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$getSubscription$p
    79:79:io.heckel.ntfy.db.Subscription access$getSubscription$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$getSubscription$p
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$loadView
    79:79:void access$loadView(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment):79 -> access$loadView
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$save
    79:79:void access$save(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,io.heckel.ntfy.db.Subscription,boolean):79 -> access$save
    79:79:androidx.preference.Preference access$getIconSetPref$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> access$setSubscription$p
    79:79:void access$setSubscription$p(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,io.heckel.ntfy.db.Subscription):79 -> access$setSubscription$p
    426:426:androidx.activity.result.ActivityResultLauncher createIconPickLauncher() -> createIconPickLauncher
    430:430:void createIconPickLauncher$lambda-11(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,android.net.Uri) -> createIconPickLauncher$lambda-11
    474:479:android.net.Uri createUri() -> createUri
    487:489:void deleteIcon(java.lang.String) -> deleteIcon
    277:290:void loadAutoDeletePref() -> loadAutoDeletePref
    291:305:java.lang.CharSequence loadAutoDeletePref$lambda-5(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> loadAutoDeletePref$lambda-5
    161:179:void loadDedicatedChannelsPrefs() -> loadDedicatedChannelsPrefs
    180:183:java.lang.CharSequence loadDedicatedChannelsPrefs$lambda-1(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> loadDedicatedChannelsPrefs$lambda-1
    372:395:void loadDisplayNamePref() -> loadDisplayNamePref
    396:402:java.lang.CharSequence loadDisplayNamePref$lambda-9(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.EditTextPreference) -> loadDisplayNamePref$lambda-9
    348:364:void loadIconRemovePref() -> loadIconRemovePref
    28:28:android.graphics.drawable.BitmapDrawable androidx.core.graphics.drawable.BitmapDrawableKt.toDrawable(android.graphics.Bitmap,android.content.res.Resources) -> loadIconRemovePref
    28:28:void loadIconRemovePref():364 -> loadIconRemovePref
    364:366:void loadIconRemovePref() -> loadIconRemovePref
    353:356:boolean loadIconRemovePref$lambda-8(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.Preference) -> loadIconRemovePref$lambda-8
    337:341:void loadIconSetPref() -> loadIconSetPref
    342:342:boolean loadIconSetPref$lambda-7(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.Preference) -> loadIconSetPref$lambda-7
    310:323:void loadInsistentMaxPriorityPref() -> loadInsistentMaxPriorityPref
    324:332:java.lang.CharSequence loadInsistentMaxPriorityPref$lambda-6(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> loadInsistentMaxPriorityPref$lambda-6
    138:151:void loadInstantPref() -> loadInstantPref
    152:155:java.lang.CharSequence loadInstantPref$lambda-0(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> loadInstantPref$lambda-0
    245:258:void loadMinPriorityPref() -> loadMinPriorityPref
    259:272:java.lang.CharSequence loadMinPriorityPref$lambda-4(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> loadMinPriorityPref$lambda-4
    203:232:void loadMutedUntilPref() -> loadMutedUntilPref
    233:238:java.lang.CharSequence loadMutedUntilPref$lambda-3(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> loadMutedUntilPref$lambda-3
    189:193:void loadOpenChannelsPrefs() -> loadOpenChannelsPrefs
    194:197:boolean loadOpenChannelsPrefs$lambda-2(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,androidx.preference.Preference) -> loadOpenChannelsPrefs$lambda-2
    409:413:void loadTopicUrlPref() -> loadTopicUrlPref
    414:420:boolean loadTopicUrlPref$lambda-10(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,java.lang.String,androidx.preference.Preference) -> loadTopicUrlPref$lambda-10
    116:134:void loadView() -> loadView
    505:505:java.lang.String maybeAppendGlobal(java.lang.String,boolean) -> maybeAppendGlobal
    92:105:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    494:495:void save(io.heckel.ntfy.db.Subscription,boolean) -> save
    493:493:void save$default(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,io.heckel.ntfy.db.Subscription,boolean,int,java.lang.Object) -> save$default
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$25410598521bbd9bec419304d804cb90399392123cceaaac72b6a37f8b8ba934$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$25410598521bbd9bec419304d804cb90399392123cceaaac72b6a37f8b8ba934$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$25410598521bbd9bec419304d804cb90399392123cceaaac72b6a37f8b8ba934$0.onActivityResult(java.lang.Object) -> onActivityResult
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$1795ed2fe3830550ceddba0b1a241b86e627af72d987579573701962e9334b6b$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$1795ed2fe3830550ceddba0b1a241b86e627af72d987579573701962e9334b6b$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$1795ed2fe3830550ceddba0b1a241b86e627af72d987579573701962e9334b6b$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda10 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$12bdb226d4fa3a9ce17e6b098412e6be0ee53aff7b668d5a9211e1ec974f913a$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$12bdb226d4fa3a9ce17e6b098412e6be0ee53aff7b668d5a9211e1ec974f913a$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$12bdb226d4fa3a9ce17e6b098412e6be0ee53aff7b668d5a9211e1ec974f913a$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda11 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$69563954bd8c222f7890fd5e1fefca020a39170dfdeb11442626b705f55c5d97$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$69563954bd8c222f7890fd5e1fefca020a39170dfdeb11442626b705f55c5d97$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$69563954bd8c222f7890fd5e1fefca020a39170dfdeb11442626b705f55c5d97$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$4e503053a8b98815a1078bb9259786543742433c37cde5d33cd284290c8d0cdb$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$4e503053a8b98815a1078bb9259786543742433c37cde5d33cd284290c8d0cdb$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$4e503053a8b98815a1078bb9259786543742433c37cde5d33cd284290c8d0cdb$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$513a4d9d13d1519f2619c7a4a45394c5fb8dd59a99621e1215ef1b1e69984a1b$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$513a4d9d13d1519f2619c7a4a45394c5fb8dd59a99621e1215ef1b1e69984a1b$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$513a4d9d13d1519f2619c7a4a45394c5fb8dd59a99621e1215ef1b1e69984a1b$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$66fbbe55a968811aa92ab20885867e4bc11bf9b6f096063e9a34c806c1955518$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$66fbbe55a968811aa92ab20885867e4bc11bf9b6f096063e9a34c806c1955518$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$66fbbe55a968811aa92ab20885867e4bc11bf9b6f096063e9a34c806c1955518$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$66fbbe55a968811aa92ab20885867e4bc11bf9b6f096063e9a34c806c1955518$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$e5bf3b3fd30b16b9e9bbed62245d3bc20247df3bf2d113ac75c798ff32a74638$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$e5bf3b3fd30b16b9e9bbed62245d3bc20247df3bf2d113ac75c798ff32a74638$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$e5bf3b3fd30b16b9e9bbed62245d3bc20247df3bf2d113ac75c798ff32a74638$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda6 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$50287b97a9ad8d91bdc7fb500612ba81d09878b3c6838ac2512b6630eb5088d3$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$50287b97a9ad8d91bdc7fb500612ba81d09878b3c6838ac2512b6630eb5088d3$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$50287b97a9ad8d91bdc7fb500612ba81d09878b3c6838ac2512b6630eb5088d3$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda7 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$84f5c48bb68206f067ce668152b1284cea815fe2da3a40bb65da188e624d242b$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$84f5c48bb68206f067ce668152b1284cea815fe2da3a40bb65da188e624d242b$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$84f5c48bb68206f067ce668152b1284cea815fe2da3a40bb65da188e624d242b$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda8 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$ea7adf74f6077b9b5980b5f8d85bef601f8480a4181bf6fbabcf114932f83e97$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$ea7adf74f6077b9b5980b5f8d85bef601f8480a4181bf6fbabcf114932f83e97$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$ea7adf74f6077b9b5980b5f8d85bef601f8480a4181bf6fbabcf114932f83e97$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda9 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$f7f5982fb3246ffa8ec800adc928c640f18784ee44f045a149236b8536ad3dd2$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$f7f5982fb3246ffa8ec800adc928c640f18784ee44f045a149236b8536ad3dd2$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$$InternalSyntheticLambda$1$f7f5982fb3246ffa8ec800adc928c640f18784ee44f045a149236b8536ad3dd2$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    void $r8$lambda$8LTQ-XZ4ZOQTZ1lvm0Sx5m9wkF4(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,java.lang.Exception) -> $r8$lambda$8LTQ-XZ4ZOQTZ1lvm0Sx5m9wkF4
      # {"id":"com.android.tools.r8.synthesized"}
    430:457:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    28:28:android.graphics.drawable.BitmapDrawable androidx.core.graphics.drawable.BitmapDrawableKt.toDrawable(android.graphics.Bitmap,android.content.res.Resources) -> invokeSuspend
    28:28:java.lang.Object invokeSuspend(java.lang.Object):457 -> invokeSuspend
    436:469:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    466:466:void invokeSuspend$lambda-1(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,java.lang.Exception) -> invokeSuspend$lambda-1
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1$$InternalSyntheticLambda$1$f636013bc8c37b47e9ac66c36b88735493aee98b92f7b4c99f1cb4b1289858db$0.f$0 -> f$0
    java.lang.Exception io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1$$InternalSyntheticLambda$1$f636013bc8c37b47e9ac66c36b88735493aee98b92f7b4c99f1cb4b1289858db$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1$$InternalSyntheticLambda$1$f636013bc8c37b47e9ac66c36b88735493aee98b92f7b4c99f1cb4b1289858db$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$createIconPickLauncher$1$1$$InternalSyntheticLambda$1$f636013bc8c37b47e9ac66c36b88735493aee98b92f7b4c99f1cb4b1289858db$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadAutoDeletePref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadAutoDeletePref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    281:281:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    287:287:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    283:284:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDedicatedChannelsPrefs$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDedicatedChannelsPrefs$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    165:165:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    176:176:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    167:173:void putBoolean(java.lang.String,boolean) -> putBoolean
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    void $r8$lambda$vNZH9_l70R_PBz7aIh7oPTFQddk(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,io.heckel.ntfy.db.Subscription) -> $r8$lambda$vNZH9_l70R_PBz7aIh7oPTFQddk
      # {"id":"com.android.tools.r8.synthesized"}
    377:377:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    392:392:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    379:388:void putString(java.lang.String,java.lang.String) -> putString
    384:384:void putString$lambda-0(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,io.heckel.ntfy.db.Subscription) -> putString$lambda-0
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1$$InternalSyntheticLambda$2$3d0127eb28f26cf69def1c6aa712c3d7ba5ecf6bc0c81937fe76de57d038fbfc$0.f$0 -> f$0
    io.heckel.ntfy.db.Subscription io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1$$InternalSyntheticLambda$2$3d0127eb28f26cf69def1c6aa712c3d7ba5ecf6bc0c81937fe76de57d038fbfc$0.f$1 -> f$1
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1$$InternalSyntheticLambda$2$3d0127eb28f26cf69def1c6aa712c3d7ba5ecf6bc0c81937fe76de57d038fbfc$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment,io.heckel.ntfy.db.Subscription) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadDisplayNamePref$1$$InternalSyntheticLambda$2$3d0127eb28f26cf69def1c6aa712c3d7ba5ecf6bc0c81937fe76de57d038fbfc$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadIconRemovePref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadIconRemovePref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    351:351:void <init>() -> <init>
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadIconSetPref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadIconSetPref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    340:340:void <init>() -> <init>
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadInsistentMaxPriorityPref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadInsistentMaxPriorityPref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    314:314:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    320:320:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    316:317:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadInstantPref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadInstantPref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    143:143:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    148:148:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    145:145:void putBoolean(java.lang.String,boolean) -> putBoolean
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadMinPriorityPref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadMinPriorityPref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    249:249:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    255:255:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    251:252:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadMutedUntilPref$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadMutedUntilPref$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    207:207:void <init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
    229:229:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    209:224:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadOpenChannelsPrefs$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$loadOpenChannelsPrefs$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    192:192:void <init>() -> <init>
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    105:112:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    void $r8$lambda$44JcYGjEC5pEMRngAHB10VevxUY(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> $r8$lambda$44JcYGjEC5pEMRngAHB10VevxUY
      # {"id":"com.android.tools.r8.synthesized"}
    106:111:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    109:109:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1$$InternalSyntheticLambda$0$ce20a5c8ae0892a73326f5bfbe0ee7f65a92e6208c1d9de65b9d0ed3d1fa6201$0.f$0 -> f$0
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1$$InternalSyntheticLambda$0$ce20a5c8ae0892a73326f5bfbe0ee7f65a92e6208c1d9de65b9d0ed3d1fa6201$0.<init>(io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$onCreatePreferences$1$1$$InternalSyntheticLambda$0$ce20a5c8ae0892a73326f5bfbe0ee7f65a92e6208c1d9de65b9d0ed3d1fa6201$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$save$1 -> io.heckel.ntfy.ui.DetailSettingsActivity$SettingsFragment$save$1:
# {"id":"sourceFile","fileName":"DetailSettingsActivity.kt"}
    495:500:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailViewModel -> io.heckel.ntfy.ui.DetailViewModel:
# {"id":"sourceFile","fileName":"DetailViewModel.kt"}
    12:12:void <init>(io.heckel.ntfy.db.Repository) -> <init>
    12:12:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.DetailViewModel) -> access$getRepository$p
    14:14:androidx.lifecycle.LiveData list(long) -> list
    17:17:kotlinx.coroutines.Job markAsDeleted(java.lang.String) -> markAsDeleted
io.heckel.ntfy.ui.DetailViewModel$markAsDeleted$1 -> io.heckel.ntfy.ui.DetailViewModel$markAsDeleted$1:
# {"id":"sourceFile","fileName":"DetailViewModel.kt"}
    17:19:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.DetailViewModelFactory -> io.heckel.ntfy.ui.DetailViewModelFactory:
# {"id":"sourceFile","fileName":"DetailViewModel.kt"}
    22:22:void <init>(io.heckel.ntfy.db.Repository) -> <init>
    androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    27:28:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
io.heckel.ntfy.ui.MainActivity -> io.heckel.ntfy.ui.MainActivity:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    void $r8$lambda$2vKe7Yls-IKeRWFaKQEh_MynvqI(io.heckel.ntfy.ui.MainActivity,android.view.View,java.util.List) -> $r8$lambda$2vKe7Yls-IKeRWFaKQEh_MynvqI
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$4dV73tB7oZGkRIcwWEJ3nRogS2g(io.heckel.ntfy.ui.MainActivity,long) -> $r8$lambda$4dV73tB7oZGkRIcwWEJ3nRogS2g
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$5ae5r5CdQ3EHU6CRQW4NKrTInhg(io.heckel.ntfy.ui.MainActivity,android.view.View) -> $r8$lambda$5ae5r5CdQ3EHU6CRQW4NKrTInhg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$78nIVgbxOIgBkppgsiCZoqO9nB0(io.heckel.ntfy.ui.MainActivity) -> $r8$lambda$78nIVgbxOIgBkppgsiCZoqO9nB0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$7Kb8EFP0_BzDyMPDMoA2BJNrzGg(io.heckel.ntfy.ui.MainActivity,java.util.Set) -> $r8$lambda$7Kb8EFP0_BzDyMPDMoA2BJNrzGg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$EcOaSn_FKSAZL5OXMZuYRN0IJ8w(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int) -> $r8$lambda$EcOaSn_FKSAZL5OXMZuYRN0IJ8w
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$FA6eXcwT7LZxL1Br01VOywfnH7Y(io.heckel.ntfy.ui.MainActivity,long) -> $r8$lambda$FA6eXcwT7LZxL1Br01VOywfnH7Y
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$K-5qf24F382y4A3f3W-leTaCF9w(io.heckel.ntfy.ui.MainActivity,android.view.View) -> $r8$lambda$K-5qf24F382y4A3f3W-leTaCF9w
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$K_BckCNv9y_wwNt9jCfmbj_XySg(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> $r8$lambda$K_BckCNv9y_wwNt9jCfmbj_XySg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$LcYAX3RSo7Msh9NfvZm2ARYBYFo(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> $r8$lambda$LcYAX3RSo7Msh9NfvZm2ARYBYFo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$LkV595oiSLAbi_PIW980i5fdSi0(java.util.List) -> $r8$lambda$LkV595oiSLAbi_PIW980i5fdSi0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$QRDeW4AjHLXWku_NMo8aUUqX5KY(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> $r8$lambda$QRDeW4AjHLXWku_NMo8aUUqX5KY
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Qp3vLogVjfsphYQca6kXKkpSCus(io.heckel.ntfy.ui.MainActivity,android.view.View,android.view.View) -> $r8$lambda$Qp3vLogVjfsphYQca6kXKkpSCus
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$W7f1gl4NRiuoMBZMTzExyJytYHU(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> $r8$lambda$W7f1gl4NRiuoMBZMTzExyJytYHU
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$bDXmsXncGHYtLQRY9VAIPXKb4G4(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int) -> $r8$lambda$bDXmsXncGHYtLQRY9VAIPXKb4G4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$qlwi_G6vIs4rCTm7QKQe1uRmf9U(android.app.AlertDialog,io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface) -> $r8$lambda$qlwi_G6vIs4rCTm7QKQe1uRmf9U
      # {"id":"com.android.tools.r8.synthesized"}
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> <init>
    54:54:void <init>():54 -> <init>
    55:55:io.heckel.ntfy.ui.SubscriptionsViewModel getViewModel() -> <init>
    55:55:void <init>():55 -> <init>
    83:87:kotlin.Lazy androidx.activity.ActivityViewModelLazyKt.viewModels$default(androidx.activity.ComponentActivity,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object) -> <init>
    83:87:void <init>():55 -> <init>
    55:55:io.heckel.ntfy.ui.SubscriptionsViewModel getViewModel() -> <init>
    55:55:void <init>():55 -> <init>
    58:58:io.heckel.ntfy.db.Repository getRepository() -> <init>
    58:58:void <init>():58 -> <init>
    59:60:void <init>() -> <init>
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$getApi$p
    54:54:io.heckel.ntfy.msg.ApiService access$getApi$p(io.heckel.ntfy.ui.MainActivity):54 -> access$getApi$p
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$getDispatcher$p
    54:54:io.heckel.ntfy.msg.NotificationDispatcher access$getDispatcher$p(io.heckel.ntfy.ui.MainActivity):54 -> access$getDispatcher$p
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$getFab$p
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$getMainListContainer$p
    54:54:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$getMainListContainer$p(io.heckel.ntfy.ui.MainActivity):54 -> access$getMainListContainer$p
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$getRepository
    54:54:io.heckel.ntfy.db.Repository access$getRepository(io.heckel.ntfy.ui.MainActivity):54 -> access$getRepository
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$onSubscriptionItemClick
    54:54:void access$onSubscriptionItemClick(io.heckel.ntfy.ui.MainActivity,io.heckel.ntfy.db.Subscription):54 -> access$onSubscriptionItemClick
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$onSubscriptionItemLongClick
    54:54:void access$onSubscriptionItemLongClick(io.heckel.ntfy.ui.MainActivity,io.heckel.ntfy.db.Subscription):54 -> access$onSubscriptionItemLongClick
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$redrawList
    54:54:void access$redrawList(io.heckel.ntfy.ui.MainActivity):54 -> access$redrawList
    54:54:com.google.android.material.floatingactionbutton.FloatingActionButton access$getFab$p(io.heckel.ntfy.ui.MainActivity) -> access$showHideNotificationMenuItems
    54:54:void access$showHideNotificationMenuItems(io.heckel.ntfy.ui.MainActivity):54 -> access$showHideNotificationMenuItems
    635:653:void beginActionMode(io.heckel.ntfy.db.Subscription) -> beginActionMode
    318:318:void checkSubscriptionsMuted(long) -> checkSubscriptionsMuted
    317:317:void checkSubscriptionsMuted$default(io.heckel.ntfy.ui.MainActivity,long,int,java.lang.Object) -> checkSubscriptionsMuted$default
    662:682:void endActionModeAndRedraw() -> endActionModeAndRedraw
    657:658:void finishActionMode() -> finishActionMode
    58:58:io.heckel.ntfy.db.Repository getRepository() -> getRepository
    55:55:io.heckel.ntfy.ui.SubscriptionsViewModel getViewModel() -> getViewModel
    577:581:void handleActionModeClick(io.heckel.ntfy.db.Subscription) -> handleActionModeClick
    221:222:void maybeRequestNotificationPermission() -> maybeRequestNotificationPermission
    599:601:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    76:97:void onCreate(android.os.Bundle) -> onCreate
    98:98:void onCreate$lambda-1(io.heckel.ntfy.ui.MainActivity) -> onCreate
    98:98:void onCreate(android.os.Bundle):98 -> onCreate
    99:146:void onCreate(android.os.Bundle) -> onCreate
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreate
    1851:1851:void onCreate(android.os.Bundle):146 -> onCreate
    147:214:void onCreate(android.os.Bundle) -> onCreate
    93:93:void onCreate$lambda-0(io.heckel.ntfy.ui.MainActivity,android.view.View) -> onCreate$lambda-0
    98:98:void onCreate$lambda-1(io.heckel.ntfy.ui.MainActivity) -> onCreate$lambda-1
    155:155:void onCreate$lambda-10(io.heckel.ntfy.ui.MainActivity,java.util.Set) -> onCreate$lambda-10
    164:165:void onCreate$lambda-11(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> onCreate$lambda-11
    168:169:void onCreate$lambda-12(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> onCreate$lambda-12
    172:174:void onCreate$lambda-13(io.heckel.ntfy.ui.MainActivity,android.view.View) -> onCreate$lambda-13
    186:187:void onCreate$lambda-14(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> onCreate$lambda-14
    190:191:void onCreate$lambda-15(android.view.View,io.heckel.ntfy.ui.MainActivity,android.view.View) -> onCreate$lambda-15
    194:196:void onCreate$lambda-16(io.heckel.ntfy.ui.MainActivity,android.view.View,android.view.View) -> onCreate$lambda-16
    113:119:void onCreate$lambda-4(io.heckel.ntfy.ui.MainActivity,android.view.View,java.util.List) -> onCreate$lambda-4
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreate$lambda-4
    1851:1851:void onCreate$lambda-4(io.heckel.ntfy.ui.MainActivity,android.view.View,java.util.List):123 -> onCreate$lambda-4
    124:130:void onCreate$lambda-4(io.heckel.ntfy.ui.MainActivity,android.view.View,java.util.List) -> onCreate$lambda-4
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreate$lambda-7
    1851:1851:void onCreate$lambda-7(java.util.List):137 -> onCreate$lambda-7
    138:140:void onCreate$lambda-7(java.util.List) -> onCreate$lambda-7
    586:589:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    310:313:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    631:631:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    609:627:void onMultiDeleteClick() -> onMultiDeleteClick
    615:615:void onMultiDeleteClick$lambda-22(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int) -> onMultiDeleteClick$lambda-22
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onMultiDeleteClick$lambda-22
    1549:1549:void onMultiDeleteClick$lambda-22(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int):615 -> onMultiDeleteClick$lambda-22
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onMultiDeleteClick$lambda-22
    1620:1621:void onMultiDeleteClick$lambda-22(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int):615 -> onMultiDeleteClick$lambda-22
    615:616:void onMultiDeleteClick$lambda-22(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int) -> onMultiDeleteClick$lambda-22
    619:619:void onMultiDeleteClick$lambda-23(io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface,int) -> onMultiDeleteClick$lambda-23
    624:625:void onMultiDeleteClick$lambda-24(android.app.AlertDialog,io.heckel.ntfy.ui.MainActivity,android.content.DialogInterface) -> onMultiDeleteClick$lambda-24
    424:426:void onNotificationMutedUntilChanged(long) -> onNotificationMutedUntilChanged
    427:433:void onNotificationMutedUntilChanged$lambda-20(io.heckel.ntfy.ui.MainActivity,long) -> onNotificationMutedUntilChanged$lambda-20
    414:419:void onNotificationSettingsClick(boolean) -> onNotificationSettingsClick
    371:408:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    227:229:void onResume() -> onResume
    445:492:void onSubscribe(java.lang.String,java.lang.String,boolean) -> onSubscribe
    440:441:void onSubscribeButtonClick() -> onSubscribeButtonClick
    496:501:void onSubscriptionItemClick(io.heckel.ntfy.db.Subscription) -> onSubscriptionItemClick
    506:507:void onSubscriptionItemLongClick(io.heckel.ntfy.db.Subscription) -> onSubscriptionItemLongClick
    686:689:void redrawList() -> redrawList
    512:512:void refreshAllSubscriptions() -> refreshAllSubscriptions
    274:283:void schedulePeriodicDeleteWorker() -> schedulePeriodicDeleteWorker
    33:33:androidx.work.PeriodicWorkRequest$Builder androidx.work.PeriodicWorkRequestKt.PeriodicWorkRequestBuilder(long,java.util.concurrent.TimeUnit) -> schedulePeriodicDeleteWorker
    33:33:void schedulePeriodicDeleteWorker():283 -> schedulePeriodicDeleteWorker
    284:288:void schedulePeriodicDeleteWorker() -> schedulePeriodicDeleteWorker
    252:264:void schedulePeriodicPollWorker() -> schedulePeriodicPollWorker
    33:33:androidx.work.PeriodicWorkRequest$Builder androidx.work.PeriodicWorkRequestKt.PeriodicWorkRequestBuilder(long,java.util.concurrent.TimeUnit) -> schedulePeriodicPollWorker
    33:33:void schedulePeriodicPollWorker():264 -> schedulePeriodicPollWorker
    265:270:void schedulePeriodicPollWorker() -> schedulePeriodicPollWorker
    292:301:void schedulePeriodicServiceRestartWorker() -> schedulePeriodicServiceRestartWorker
    33:33:androidx.work.PeriodicWorkRequest$Builder androidx.work.PeriodicWorkRequestKt.PeriodicWorkRequestBuilder(long,java.util.concurrent.TimeUnit) -> schedulePeriodicServiceRestartWorker
    33:33:void schedulePeriodicServiceRestartWorker():301 -> schedulePeriodicServiceRestartWorker
    302:306:void schedulePeriodicServiceRestartWorker() -> schedulePeriodicServiceRestartWorker
    1770:1772:int kotlin.collections.CollectionsKt___CollectionsKt.count(java.lang.Iterable,kotlin.jvm.functions.Function1) -> showHideBatteryBanner
    1770:1772:void showHideBatteryBanner(java.util.List):233 -> showHideBatteryBanner
    233:239:void showHideBatteryBanner(java.util.List) -> showHideBatteryBanner
    347:351:void showHideNotificationMenuItems() -> showHideNotificationMenuItems
    353:365:void showHideNotificationMenuItems$lambda-19(io.heckel.ntfy.ui.MainActivity,long) -> showHideNotificationMenuItems$lambda-19
    1770:1772:int kotlin.collections.CollectionsKt___CollectionsKt.count(java.lang.Iterable,kotlin.jvm.functions.Function1) -> showHideWebSocketBanner
    1770:1772:void showHideWebSocketBanner(java.util.List):243 -> showHideWebSocketBanner
    243:248:void showHideWebSocketBanner(java.util.List) -> showHideWebSocketBanner
    565:572:void startDetailSettingsView(io.heckel.ntfy.db.Subscription) -> startDetailSettingsView
    552:561:void startDetailView(io.heckel.ntfy.db.Subscription) -> startDetailView
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$0.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$0.<init>(io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$1.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$1.<init>(io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda10 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$4.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$4.<init>(io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$4.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda11 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$2.f$1 -> f$1
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$2.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$2.<init>(io.heckel.ntfy.ui.MainActivity,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$2.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda12 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$3 io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$3.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$3.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$3.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$3.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda13 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$1.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$1.<init>(io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$1.onRefresh() -> onRefresh
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda14 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$9e9f7d4d33a817e116395711ed2db0dd64bcbc31d92c0a82512573a801b48b9d$0.f$1 -> f$1
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$9e9f7d4d33a817e116395711ed2db0dd64bcbc31d92c0a82512573a801b48b9d$0.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$9e9f7d4d33a817e116395711ed2db0dd64bcbc31d92c0a82512573a801b48b9d$0.<init>(io.heckel.ntfy.ui.MainActivity,long) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$9e9f7d4d33a817e116395711ed2db0dd64bcbc31d92c0a82512573a801b48b9d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda15 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$f2e7231c0f0b5b00b786a05248ca5146e1db914ed799d67d696b725372194098$0.f$1 -> f$1
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$f2e7231c0f0b5b00b786a05248ca5146e1db914ed799d67d696b725372194098$0.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$f2e7231c0f0b5b00b786a05248ca5146e1db914ed799d67d696b725372194098$0.<init>(io.heckel.ntfy.ui.MainActivity,long) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$f2e7231c0f0b5b00b786a05248ca5146e1db914ed799d67d696b725372194098$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$2.f$0 -> f$0
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$2.f$1 -> f$1
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$2.<init>(android.app.AlertDialog,io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$5e8c64c01c40dfd78905ccdc502f71e0f0248b0f70fa8e3fe3434c9900436d87$2.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$9.f$0 -> f$0
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$9.f$1 -> f$1
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$9.<init>(android.view.View,io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$9.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$6.f$0 -> f$0
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$6.f$1 -> f$1
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$6.<init>(android.view.View,io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$6.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$5.f$0 -> f$0
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$5.f$1 -> f$1
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$5.<init>(android.view.View,io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$5.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda6 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$8.f$0 -> f$0
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$8.f$1 -> f$1
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$8.<init>(android.view.View,io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$8.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda7 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$7.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$7.<init>(io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$7.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda8 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$0.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$0.<init>(io.heckel.ntfy.ui.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda9 -> io.heckel.ntfy.ui.MainActivity$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$10.f$1 -> f$1
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$10.f$0 -> f$0
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$10.<init>(io.heckel.ntfy.ui.MainActivity,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$$InternalSyntheticLambda$0$8d967fac06ff1f7abb920c46a1d84b8afc31c5c4a9018c0828193f6721ffc800$10.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$Companion -> io.heckel.ntfy.ui.MainActivity$Companion:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    692:692:void <init>() -> <init>
io.heckel.ntfy.ui.MainActivity$beginActionMode$1 -> io.heckel.ntfy.ui.MainActivity$beginActionMode$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    644:644:void <init>(io.heckel.ntfy.ui.MainActivity) -> <init>
    646:646:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
io.heckel.ntfy.ui.MainActivity$checkSubscriptionsMuted$1 -> io.heckel.ntfy.ui.MainActivity$checkSubscriptionsMuted$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    318:343:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):331 -> invokeSuspend
    332:343:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.MainActivity$endActionModeAndRedraw$1 -> io.heckel.ntfy.ui.MainActivity$endActionModeAndRedraw$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    673:673:void <init>(io.heckel.ntfy.ui.MainActivity) -> <init>
    675:675:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
io.heckel.ntfy.ui.MainActivity$onCreate$onSubscriptionClick$1 -> io.heckel.ntfy.ui.MainActivity$onCreate$onSubscriptionClick$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    103:103:java.lang.Object invoke(java.lang.Object) -> invoke
    103:103:void invoke(io.heckel.ntfy.db.Subscription) -> invoke
io.heckel.ntfy.ui.MainActivity$onCreate$onSubscriptionLongClick$1 -> io.heckel.ntfy.ui.MainActivity$onCreate$onSubscriptionLongClick$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    104:104:java.lang.Object invoke(java.lang.Object) -> invoke
    104:104:void invoke(io.heckel.ntfy.db.Subscription) -> invoke
io.heckel.ntfy.ui.MainActivity$onSubscribe$1 -> io.heckel.ntfy.ui.MainActivity$onSubscribe$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    476:489:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):480 -> invokeSuspend
    481:489:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1 -> io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    void $r8$lambda$bOkAVW_KFiVJY1x1kfaDFqqoh00(io.heckel.ntfy.ui.MainActivity,java.lang.String) -> $r8$lambda$bOkAVW_KFiVJY1x1kfaDFqqoh00
      # {"id":"com.android.tools.r8.synthesized"}
    512:548:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):517 -> invokeSuspend
    512:522:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):523 -> invokeSuspend
    524:548:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    544:545:void invokeSuspend$lambda-2(io.heckel.ntfy.ui.MainActivity,java.lang.String) -> invokeSuspend$lambda-2
io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.MainActivity io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1$$InternalSyntheticLambda$1$105f91c51af76ff95bf742fd695676c0e03925e40a1447aa8715e05eff47a67d$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1$$InternalSyntheticLambda$1$105f91c51af76ff95bf742fd695676c0e03925e40a1447aa8715e05eff47a67d$0.f$1 -> f$1
    void io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1$$InternalSyntheticLambda$1$105f91c51af76ff95bf742fd695676c0e03925e40a1447aa8715e05eff47a67d$0.<init>(io.heckel.ntfy.ui.MainActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainActivity$refreshAllSubscriptions$1$$InternalSyntheticLambda$1$105f91c51af76ff95bf742fd695676c0e03925e40a1447aa8715e05eff47a67d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainActivity$repository$2 -> io.heckel.ntfy.ui.MainActivity$repository$2:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    58:58:io.heckel.ntfy.db.Repository invoke() -> invoke
    58:58:java.lang.Object invoke() -> invoke
io.heckel.ntfy.ui.MainActivity$special$$inlined$viewModels$default$2 -> io.heckel.ntfy.ui.MainActivity$special$$inlined$viewModels$default$2:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    85:85:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$3.invoke() -> invoke
    85:85:androidx.lifecycle.ViewModelStore invoke():85 -> invoke
    85:85:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$3.invoke() -> invoke
    85:85:java.lang.Object invoke():85 -> invoke
io.heckel.ntfy.ui.MainActivity$special$$inlined$viewModels$default$3 -> io.heckel.ntfy.ui.MainActivity$special$$inlined$viewModels$default$3:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    87:87:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$4.invoke() -> invoke
    87:87:androidx.lifecycle.viewmodel.CreationExtras invoke():87 -> invoke
    87:87:java.lang.Object androidx.activity.ActivityViewModelLazyKt$viewModels$4.invoke() -> invoke
    87:87:java.lang.Object invoke():87 -> invoke
io.heckel.ntfy.ui.MainActivity$viewModel$2 -> io.heckel.ntfy.ui.MainActivity$viewModel$2:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    55:55:java.lang.Object invoke() -> invoke
    56:56:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
io.heckel.ntfy.ui.MainAdapter -> io.heckel.ntfy.ui.MainAdapter:
# {"id":"sourceFile","fileName":"MainAdapter.kt"}
    24:24:void <init>(io.heckel.ntfy.db.Repository,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    23:23:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> <init>
    23:23:void <init>(io.heckel.ntfy.db.Repository,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):23 -> <init>
    25:25:java.util.Set getSelected() -> <init>
    25:25:void <init>(io.heckel.ntfy.db.Repository,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):25 -> <init>
    25:25:java.util.Set getSelected() -> getSelected
    23:23:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    36:37:void onBindViewHolder(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,int) -> onBindViewHolder
    23:23:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onCreateViewHolder
    23:23:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):23 -> onCreateViewHolder
    29:31:io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    41:48:void toggleSelection(long) -> toggleSelection
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> toggleSelection
    1549:1549:void toggleSelection(long):48 -> toggleSelection
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> toggleSelection
    1620:1621:void toggleSelection(long):48 -> toggleSelection
    48:50:void toggleSelection(long) -> toggleSelection
io.heckel.ntfy.ui.MainAdapter$Companion -> io.heckel.ntfy.ui.MainAdapter$Companion:
# {"id":"sourceFile","fileName":"MainAdapter.kt"}
    133:133:void <init>() -> <init>
io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder -> io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder:
# {"id":"sourceFile","fileName":"MainAdapter.kt"}
    boolean $r8$lambda$8xFB81MGtMK5Kxw364GQQW9T3x4(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,io.heckel.ntfy.db.Subscription,android.view.View) -> $r8$lambda$8xFB81MGtMK5Kxw364GQQW9T3x4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ho9sXPhDjB9dBtV4DlmZ5ExlaHQ(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,io.heckel.ntfy.db.Subscription,android.view.View) -> $r8$lambda$ho9sXPhDjB9dBtV4DlmZ5ExlaHQ
      # {"id":"com.android.tools.r8.synthesized"}
    55:66:void <init>(android.view.View,io.heckel.ntfy.db.Repository,java.util.Set,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    69:118:void bind(io.heckel.ntfy.db.Subscription) -> bind
    113:113:void bind$lambda-0(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,io.heckel.ntfy.db.Subscription,android.view.View) -> bind$lambda-0
    114:114:boolean bind$lambda-1(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,io.heckel.ntfy.db.Subscription,android.view.View) -> bind$lambda-1
io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.db.Subscription io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$0.f$1 -> f$1
    io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$0.f$0 -> f$0
    void io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$0.<init>(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,io.heckel.ntfy.db.Subscription) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.db.Subscription io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$1.f$1 -> f$1
    io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$1.f$0 -> f$0
    void io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$1.<init>(io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder,io.heckel.ntfy.db.Subscription) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.MainAdapter$SubscriptionViewHolder$$InternalSyntheticLambda$1$ac6593a953771ce3ea08b9c6fb6c35f42eb8591ad49da9f7b1b0536f633c71f0$1.onLongClick(android.view.View) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.MainAdapter$TopicDiffCallback -> io.heckel.ntfy.ui.MainAdapter$TopicDiffCallback:
# {"id":"sourceFile","fileName":"MainAdapter.kt"}
    123:123:void <init>() -> <init>
    123:123:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    129:129:boolean areContentsTheSame(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Subscription) -> areContentsTheSame
    123:123:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    125:125:boolean areItemsTheSame(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Subscription) -> areItemsTheSame
io.heckel.ntfy.ui.NotificationFragment -> io.heckel.ntfy.ui.NotificationFragment:
# {"id":"sourceFile","fileName":"NotificationFragment.kt"}
    void $r8$lambda$7xnpp7En-yZ9YhEh_Vj1fulEwc4(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> $r8$lambda$7xnpp7En-yZ9YhEh_Vj1fulEwc4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$AnLJNdKnt0hcMINBj3PK_Qclz2A(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> $r8$lambda$AnLJNdKnt0hcMINBj3PK_Qclz2A
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$D5G2nn1wXrGZGO7gLOWtNYNjq-E(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> $r8$lambda$D5G2nn1wXrGZGO7gLOWtNYNjq-E
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$PpOubvIOYRH5mJGT-04ZPal8f4E(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> $r8$lambda$PpOubvIOYRH5mJGT-04ZPal8f4E
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$TwL3Ah8_T3GUUo_QKuABvYl7wS4(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> $r8$lambda$TwL3Ah8_T3GUUo_QKuABvYl7wS4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$lQnOuTOe0kqv6Nw_Y1aYS6Xrims(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> $r8$lambda$lQnOuTOe0kqv6Nw_Y1aYS6Xrims
      # {"id":"com.android.tools.r8.synthesized"}
    17:17:void <init>() -> <init>
    18:18:io.heckel.ntfy.ui.NotificationFragment$NotificationSettingsListener getSettingsListener() -> getSettingsListener
    33:35:void onAttach(android.content.Context) -> onAttach
    87:87:void onClick(long) -> onClick
    83:83:void onClickMinutes(int) -> onClickMinutes
    40:79:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    51:51:void onCreateDialog$lambda-0(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> onCreateDialog$lambda-0
    54:54:void onCreateDialog$lambda-1(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> onCreateDialog$lambda-1
    57:57:void onCreateDialog$lambda-2(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> onCreateDialog$lambda-2
    60:60:void onCreateDialog$lambda-3(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> onCreateDialog$lambda-3
    65:71:void onCreateDialog$lambda-4(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> onCreateDialog$lambda-4
    75:75:void onCreateDialog$lambda-5(io.heckel.ntfy.ui.NotificationFragment,android.view.View) -> onCreateDialog$lambda-5
io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.NotificationFragment io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$0.f$0 -> f$0
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$0.<init>(io.heckel.ntfy.ui.NotificationFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.NotificationFragment io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$5.f$0 -> f$0
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$5.<init>(io.heckel.ntfy.ui.NotificationFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$5.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.NotificationFragment io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$2.f$0 -> f$0
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$2.<init>(io.heckel.ntfy.ui.NotificationFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.NotificationFragment io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$4.f$0 -> f$0
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$4.<init>(io.heckel.ntfy.ui.NotificationFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$4.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.NotificationFragment io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$3.f$0 -> f$0
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$3.<init>(io.heckel.ntfy.ui.NotificationFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$3.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.NotificationFragment$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.NotificationFragment io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$1.f$0 -> f$0
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$1.<init>(io.heckel.ntfy.ui.NotificationFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.NotificationFragment$$InternalSyntheticLambda$0$7fb71a3d6de43b07a62c9722b7cfd89eb33099d66af7be28cca73f6f5cca3140$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.NotificationFragment$Companion -> io.heckel.ntfy.ui.NotificationFragment$Companion:
# {"id":"sourceFile","fileName":"NotificationFragment.kt"}
    94:94:void <init>() -> <init>
io.heckel.ntfy.ui.NotificationFragment$NotificationSettingsListener -> io.heckel.ntfy.ui.NotificationFragment$NotificationSettingsListener:
# {"id":"sourceFile","fileName":"NotificationFragment.kt"}
io.heckel.ntfy.ui.NotificationFragment$onClick$1 -> io.heckel.ntfy.ui.NotificationFragment$onClick$1:
# {"id":"sourceFile","fileName":"NotificationFragment.kt"}
    87:91:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.SettingsActivity -> io.heckel.ntfy.ui.SettingsActivity:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$YLoBoQw-DO35blCJvB5rdIa82eg(io.heckel.ntfy.ui.SettingsActivity) -> $r8$lambda$YLoBoQw-DO35blCJvB5rdIa82eg
      # {"id":"com.android.tools.r8.synthesized"}
    49:49:void <init>() -> <init>
    49:49:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.SettingsActivity) -> access$getRepository$p
    49:49:io.heckel.ntfy.service.SubscriberServiceManager access$getServiceManager$p(io.heckel.ntfy.ui.SettingsActivity) -> access$getServiceManager$p
    49:49:io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment access$getUserSettingsFragment$p(io.heckel.ntfy.ui.SettingsActivity) -> access$getUserSettingsFragment$p
    759:759:void onAddUser(androidx.fragment.app.DialogFragment,io.heckel.ntfy.db.User) -> onAddUser
    58:83:void onCreate(android.os.Bundle) -> onCreate
    77:78:void onCreate$lambda-0(io.heckel.ntfy.ui.SettingsActivity) -> onCreate$lambda-0
    778:778:void onDeleteUser(androidx.fragment.app.DialogFragment,java.lang.String) -> onDeleteUser
    104:117:boolean onPreferenceStartFragment(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference) -> onPreferenceStartFragment
    750:753:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    87:89:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    93:96:boolean onSupportNavigateUp() -> onSupportNavigateUp
    768:768:void onUpdateUser(androidx.fragment.app.DialogFragment,io.heckel.ntfy.db.User) -> onUpdateUser
    788:789:void setAutoDownload() -> setAutoDownload
io.heckel.ntfy.ui.SettingsActivity$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity io.heckel.ntfy.ui.SettingsActivity$$InternalSyntheticLambda$0$69e09fbf4f80fc430ba10cc5dcfa44194af74e2099b74899fb2484949d61007a$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$$InternalSyntheticLambda$0$69e09fbf4f80fc430ba10cc5dcfa44194af74e2099b74899fb2484949d61007a$0.<init>(io.heckel.ntfy.ui.SettingsActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$$InternalSyntheticLambda$0$69e09fbf4f80fc430ba10cc5dcfa44194af74e2099b74899fb2484949d61007a$0.onBackStackChanged() -> onBackStackChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$Companion -> io.heckel.ntfy.ui.SettingsActivity$Companion:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    792:792:void <init>() -> <init>
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    boolean $r8$lambda$-huILBAWmF0IjyDmzIRCgxRGMQ0(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String,androidx.preference.Preference) -> $r8$lambda$-huILBAWmF0IjyDmzIRCgxRGMQ0
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$5RvAZ6-F5RTRBN2nTTIcfoaQ0Zw(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$5RvAZ6-F5RTRBN2nTTIcfoaQ0Zw
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$5todJNXgiVNgzMrBu7gHroIVI4I(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$5todJNXgiVNgzMrBu7gHroIVI4I
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$A1I9fUyb7eDclWCO7RH2iQKYCbE(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,kotlin.jvm.internal.Ref$ObjectRef,io.heckel.ntfy.backup.Backuper,android.net.Uri) -> $r8$lambda$A1I9fUyb7eDclWCO7RH2iQKYCbE
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$Clod4LKtuvR9AuCDTazKp7t19-0(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$Clod4LKtuvR9AuCDTazKp7t19-0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$KK-Z0q1c7sydrREB_mfHPSm8EPc(android.widget.EditText) -> $r8$lambda$KK-Z0q1c7sydrREB_mfHPSm8EPc
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$KdYO62THJ6i95gp-91TVNUNKIvo(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference,java.lang.Object) -> $r8$lambda$KdYO62THJ6i95gp-91TVNUNKIvo
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$O-dmhTrpFdCdVKYDVOn6i3YubKo(androidx.preference.Preference) -> $r8$lambda$O-dmhTrpFdCdVKYDVOn6i3YubKo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$QK0tKtlraNtdW09L313H5aQX-jQ(android.content.DialogInterface,int) -> $r8$lambda$QK0tKtlraNtdW09L313H5aQX-jQ
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$RA35k2aU6cjNciBvUPKNSRER0OM(kotlin.jvm.internal.Ref$ObjectRef,androidx.activity.result.ActivityResultLauncher,androidx.preference.Preference,java.lang.Object) -> $r8$lambda$RA35k2aU6cjNciBvUPKNSRER0OM
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$WFgKtfOcbacG1tp7Fffv0srSfy0(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> $r8$lambda$WFgKtfOcbacG1tp7Fffv0srSfy0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Y-w28EPqBLYTKUOMR2jG1AOcnXc(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,io.heckel.ntfy.backup.Backuper,android.net.Uri) -> $r8$lambda$Y-w28EPqBLYTKUOMR2jG1AOcnXc
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$YOQAo8eaZSX8Px3NFLEBXQE2oqo(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$YOQAo8eaZSX8Px3NFLEBXQE2oqo
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$YXGJj_uQZ0_jNIxsge0NiqxinFA(androidx.activity.result.ActivityResultLauncher,androidx.preference.Preference) -> $r8$lambda$YXGJj_uQZ0_jNIxsge0NiqxinFA
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$_8Caj6I-p8EU7sHX-UGD4BI7O00(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference,java.lang.Object) -> $r8$lambda$_8Caj6I-p8EU7sHX-UGD4BI7O00
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$i34ENtuVmZKQzis1drtxLilvnvI(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> $r8$lambda$i34ENtuVmZKQzis1drtxLilvnvI
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$mbIDjHtXl3dodHyF79lQxGN65Aw(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$mbIDjHtXl3dodHyF79lQxGN65Aw
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$sxJvorTtyXTQLgOSrCEG_aUn0EM(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> $r8$lambda$sxJvorTtyXTQLgOSrCEG_aUn0EM
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$vzlCtij67E1fs3t5gPWP_eMdSrM(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> $r8$lambda$vzlCtij67E1fs3t5gPWP_eMdSrM
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$wL9FBBvqFNdSxQUWtcIdY5EqI-s(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference,java.lang.Object) -> $r8$lambda$wL9FBBvqFNdSxQUWtcIdY5EqI-s
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence $r8$lambda$wRQIc80Mj7OY1rymyvy9vUz70LY(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String,androidx.preference.EditTextPreference) -> $r8$lambda$wRQIc80Mj7OY1rymyvy9vUz70LY
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$xWt_ysEbndhimTiuGZWzuYVthRI(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference) -> $r8$lambda$xWt_ysEbndhimTiuGZWzuYVthRI
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$zj3AAsGsgkIh084AW_a70viGWak(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference) -> $r8$lambda$zj3AAsGsgkIh084AW_a70viGWak
      # {"id":"com.android.tools.r8.synthesized"}
    122:122:void access$showScrubDialog(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String) -> <init>
    122:122:void <init>():122 -> <init>
    125:125:void <init>() -> <init>
    122:122:void access$showScrubDialog(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String) -> access$getRepository$p
    122:122:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment):122 -> access$getRepository$p
    122:122:void access$showScrubDialog(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String) -> access$restartService
    122:122:void access$restartService(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment):122 -> access$restartService
    122:122:void access$showScrubDialog(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String) -> access$showScrubDialog
    559:559:void copyLogsToClipboard(boolean) -> copyLogsToClipboard
    650:650:void deleteLogs() -> deleteLogs
    128:533:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    169:174:java.lang.CharSequence onCreatePreferences$lambda-0(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> onCreatePreferences$lambda-0
    193:198:java.lang.CharSequence onCreatePreferences$lambda-1(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> onCreatePreferences$lambda-1
    340:343:java.lang.CharSequence onCreatePreferences$lambda-10(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String,androidx.preference.EditTextPreference) -> onCreatePreferences$lambda-10
    360:363:java.lang.CharSequence onCreatePreferences$lambda-11(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> onCreatePreferences$lambda-11
    374:377:boolean onCreatePreferences$lambda-12(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference,java.lang.Object) -> onCreatePreferences$lambda-12
    388:388:boolean onCreatePreferences$lambda-13(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda-13
    408:411:java.lang.CharSequence onCreatePreferences$lambda-14(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> onCreatePreferences$lambda-14
    415:415:boolean onCreatePreferences$lambda-15(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference,java.lang.Object) -> onCreatePreferences$lambda-15
    438:438:void onCreatePreferences$lambda-16(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,kotlin.jvm.internal.Ref$ObjectRef,io.heckel.ntfy.backup.Backuper,android.net.Uri) -> onCreatePreferences$lambda-16
    458:465:boolean onCreatePreferences$lambda-17(kotlin.jvm.internal.Ref$ObjectRef,androidx.activity.result.ActivityResultLauncher,androidx.preference.Preference,java.lang.Object) -> onCreatePreferences$lambda-17
    479:479:void onCreatePreferences$lambda-19(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,io.heckel.ntfy.backup.Backuper,android.net.Uri) -> onCreatePreferences$lambda-19
    216:219:java.lang.CharSequence onCreatePreferences$lambda-2(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.SwitchPreference) -> onCreatePreferences$lambda-2
    503:503:boolean onCreatePreferences$lambda-20(androidx.activity.result.ActivityResultLauncher,androidx.preference.Preference) -> onCreatePreferences$lambda-20
    522:524:java.lang.CharSequence onCreatePreferences$lambda-21(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> onCreatePreferences$lambda-21
    534:540:boolean onCreatePreferences$lambda-22(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String,androidx.preference.Preference) -> onCreatePreferences$lambda-22
    229:231:boolean onCreatePreferences$lambda-4(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda-4
    251:254:java.lang.CharSequence onCreatePreferences$lambda-5(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> onCreatePreferences$lambda-5
    259:261:boolean onCreatePreferences$lambda-6(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.Preference,java.lang.Object) -> onCreatePreferences$lambda-6
    283:290:java.lang.CharSequence onCreatePreferences$lambda-7(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> onCreatePreferences$lambda-7
    310:314:java.lang.CharSequence onCreatePreferences$lambda-8(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference) -> onCreatePreferences$lambda-8
    333:333:void onCreatePreferences$lambda-9(android.widget.EditText) -> onCreatePreferences$lambda-9
    555:555:void restartService() -> restartService
    546:551:void setAutoDownload() -> setAutoDownload
    634:635:void showScrubDialog(java.lang.String) -> showScrubDialog
    125:125:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> showScrubDialog
    125:125:void showScrubDialog(java.lang.String):636 -> showScrubDialog
    152:152:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> showScrubDialog
    152:152:void showScrubDialog(java.lang.String):636 -> showScrubDialog
    635:643:void showScrubDialog(java.lang.String) -> showScrubDialog
    644:644:void showScrubDialog$lambda-24(android.content.DialogInterface,int) -> showScrubDialog
    644:644:void showScrubDialog(java.lang.String):644 -> showScrubDialog
    645:646:void showScrubDialog(java.lang.String) -> showScrubDialog
    578:578:void uploadLogsToNopaste(boolean) -> uploadLogsToNopaste
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$2$5d9cd5dc3fdbe6730517b3a76ce3a3997ebda0c13303b96095445a5a59a89365$0 io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$2$5d9cd5dc3fdbe6730517b3a76ce3a3997ebda0c13303b96095445a5a59a89365$0.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$2$5d9cd5dc3fdbe6730517b3a76ce3a3997ebda0c13303b96095445a5a59a89365$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$2$5d9cd5dc3fdbe6730517b3a76ce3a3997ebda0c13303b96095445a5a59a89365$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$2$5d9cd5dc3fdbe6730517b3a76ce3a3997ebda0c13303b96095445a5a59a89365$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.backup.Backuper io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$18.f$1 -> f$1
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$18.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$18.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,io.heckel.ntfy.backup.Backuper) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$18.onActivityResult(java.lang.Object) -> onActivityResult
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda10 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$3.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$3.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$3.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda11 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$21.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$21.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$21.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$21.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda12 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$17 io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$17.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$17.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$17.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$17.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda13 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$1.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$1.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$1.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda14 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$0.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$0.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda15 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$7.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$7.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$7.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda16 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda16:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$4.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$4.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$4.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda17 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda17:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$20.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$20.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$20.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda18 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda18:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$6.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$6.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$6.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda19 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda19:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$10.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$10.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$10.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.internal.Ref$ObjectRef io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$15.f$1 -> f$1
    io.heckel.ntfy.backup.Backuper io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$15.f$2 -> f$2
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$15.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$15.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,kotlin.jvm.internal.Ref$ObjectRef,io.heckel.ntfy.backup.Backuper) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$15.onActivityResult(java.lang.Object) -> onActivityResult
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda20 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda20:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$13.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$13.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$13.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda21 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda21:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$2.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$2.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$2.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda22 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda22:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$9.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$9.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$9.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$9.provideSummary(androidx.preference.Preference) -> provideSummary
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$8 io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$8.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$8.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$8.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$8.onBindEditText(android.widget.EditText) -> onBindEditText
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda4 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$11.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$11.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$11.onPreferenceChange(androidx.preference.Preference,java.lang.Object) -> onPreferenceChange
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda5 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$14.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$14.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$14.onPreferenceChange(androidx.preference.Preference,java.lang.Object) -> onPreferenceChange
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda6 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$5.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$5.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$5.onPreferenceChange(androidx.preference.Preference,java.lang.Object) -> onPreferenceChange
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda7 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.result.ActivityResultLauncher io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$16.f$1 -> f$1
    kotlin.jvm.internal.Ref$ObjectRef io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$16.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$16.<init>(kotlin.jvm.internal.Ref$ObjectRef,androidx.activity.result.ActivityResultLauncher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$16.onPreferenceChange(androidx.preference.Preference,java.lang.Object) -> onPreferenceChange
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda8 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.result.ActivityResultLauncher io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$19.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$19.<init>(androidx.activity.result.ActivityResultLauncher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$19.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda9 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$12.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$12.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$$InternalSyntheticLambda$0$b43b9888e752546cf96d31e0ae4613ad5e0813a6b06eaa6343b168818f9854b1$12.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$NopasteResponse -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$NopasteResponse:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    661:662:void <init>(java.lang.String) -> <init>
    662:662:java.lang.String getUrl() -> getUrl
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$6wyMJY2cJ98Z7t1H-YYB-blkxak(android.content.Context,java.lang.String,boolean,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> $r8$lambda$6wyMJY2cJ98Z7t1H-YYB-blkxak
      # {"id":"com.android.tools.r8.synthesized"}
    559:574:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    563:571:void invokeSuspend$lambda-0(android.content.Context,java.lang.String,boolean,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$InternalSyntheticLambda$1$7c522f1f8affbd2e90589c668870e16fd5129ba428057e714a5d840e92886183$0.f$0 -> f$0
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$InternalSyntheticLambda$1$7c522f1f8affbd2e90589c668870e16fd5129ba428057e714a5d840e92886183$0.f$3 -> f$3
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$InternalSyntheticLambda$1$7c522f1f8affbd2e90589c668870e16fd5129ba428057e714a5d840e92886183$0.f$2 -> f$2
    java.lang.String io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$InternalSyntheticLambda$1$7c522f1f8affbd2e90589c668870e16fd5129ba428057e714a5d840e92886183$0.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$InternalSyntheticLambda$1$7c522f1f8affbd2e90589c668870e16fd5129ba428057e714a5d840e92886183$0.<init>(android.content.Context,java.lang.String,boolean,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$copyLogsToClipboard$1$$InternalSyntheticLambda$1$7c522f1f8affbd2e90589c668870e16fd5129ba428057e714a5d840e92886183$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$5rj8JtQ-1hpmbwRLuu3nR7VBnbI(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> $r8$lambda$5rj8JtQ-1hpmbwRLuu3nR7VBnbI
      # {"id":"com.android.tools.r8.synthesized"}
    650:658:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    655:656:void invokeSuspend$lambda-0(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1$$InternalSyntheticLambda$1$25618201b2fe3aabf86af55c5e8a1deb30fe10027ce8f7918c3c987aee000299$0.f$0 -> f$0
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1$$InternalSyntheticLambda$1$25618201b2fe3aabf86af55c5e8a1deb30fe10027ce8f7918c3c987aee000299$0.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1$$InternalSyntheticLambda$1$25618201b2fe3aabf86af55c5e8a1deb30fe10027ce8f7918c3c987aee000299$0.<init>(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$deleteLogs$1$$InternalSyntheticLambda$1$25618201b2fe3aabf86af55c5e8a1deb30fe10027ce8f7918c3c987aee000299$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    143:143:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    165:165:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    145:160:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$12 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$12:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    273:273:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    279:279:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    275:276:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$14 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$14:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    298:298:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    306:306:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    300:302:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$16 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$16:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    323:323:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    329:329:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    326:326:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$17$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$17$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    333:333:java.lang.Object invoke(java.lang.Object) -> invoke
    334:336:void invoke(android.text.Editable) -> invoke
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$19 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$19:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    351:351:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    356:356:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    353:353:void putBoolean(java.lang.String,boolean) -> putBoolean
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$21 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$21:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    371:371:void <init>() -> <init>
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$23 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$23:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    386:386:void <init>() -> <init>
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$25 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$25:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    396:396:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,androidx.preference.ListPreference,androidx.preference.Preference) -> <init>
    404:404:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    398:401:void putBoolean(java.lang.String,boolean) -> putBoolean
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$27$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$27$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    415:425:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):416 -> invokeSuspend
    415:420:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):420 -> invokeSuspend
    421:425:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$28 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$28:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    456:456:void <init>() -> <init>
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$3 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$3:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    183:183:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    189:189:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    185:186:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$32 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$32:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    511:511:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    518:518:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    513:515:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$5 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$5:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    207:207:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    212:212:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    209:209:void putBoolean(java.lang.String,boolean) -> putBoolean
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$7 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$7:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    227:227:void <init>() -> <init>
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$9 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$9:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    241:241:void <init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
    247:247:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    243:244:void putString(java.lang.String,java.lang.String) -> putString
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$Io5QRik_EQFeAw9TvEOH17p91CI(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> $r8$lambda$Io5QRik_EQFeAw9TvEOH17p91CI
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Xdl_1h_0N83_IlNHZmArc0h6Qgk(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> $r8$lambda$Xdl_1h_0N83_IlNHZmArc0h6Qgk
      # {"id":"com.android.tools.r8.synthesized"}
    438:454:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    446:446:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> invokeSuspend$lambda-0
    451:451:void invokeSuspend$lambda-1(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> invokeSuspend$lambda-1
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$0.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Exception io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$1.f$1 -> f$1
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$1.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$1.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$backupResultLauncher$1$1$$InternalSyntheticLambda$1$e2f5126ac3e16f1ffa241c420b95e6648b06114581fd8d5ac1f3f48981a7f3d2$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$O1TFqdd2KpzxfcOl6RfmDuIOWw4(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,int) -> $r8$lambda$O1TFqdd2KpzxfcOl6RfmDuIOWw4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$nem6coHmJSIhvtxDyC-JJryx3rY(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> $r8$lambda$nem6coHmJSIhvtxDyC-JJryx3rY
      # {"id":"com.android.tools.r8.synthesized"}
    479:497:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    484:488:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,int) -> invokeSuspend$lambda-0
    494:494:void invokeSuspend$lambda-1(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> invokeSuspend$lambda-1
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$0.f$1 -> f$1
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$0.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Exception io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$1.f$1 -> f$1
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$1.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$1.<init>(io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$onCreatePreferences$restoreResultLauncher$1$1$$InternalSyntheticLambda$1$dafa6533a0757e323df013671db1f31f15dcc42228532504fadac0e68fcb8124$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$8QKpTHmxMHEcQkAY-xu0XCwE3mw(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$NopasteResponse,boolean,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> $r8$lambda$8QKpTHmxMHEcQkAY-xu0XCwE3mw
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$EFgThcIG5kpv74d0jdzfn1sMcoc(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> $r8$lambda$EFgThcIG5kpv74d0jdzfn1sMcoc
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$okO_A3u-eRYrEAwSDm3RhGkxqag(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> $r8$lambda$okO_A3u-eRYrEAwSDm3RhGkxqag
      # {"id":"com.android.tools.r8.synthesized"}
    578:630:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    585:586:void invokeSuspend$lambda-0(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> invokeSuspend$lambda-0
    610:618:void invokeSuspend$lambda-2$lambda-1(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$NopasteResponse,boolean,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> invokeSuspend$lambda-2$lambda-1
    626:627:void invokeSuspend$lambda-3(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> invokeSuspend$lambda-3
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$1.f$0 -> f$0
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$1.f$3 -> f$3
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$NopasteResponse io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$1.f$1 -> f$1
    boolean io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$1.f$2 -> f$2
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$1.<init>(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$NopasteResponse,boolean,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$0.f$0 -> f$0
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$0.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$0.<init>(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$2.f$0 -> f$0
    java.lang.Exception io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$2.f$2 -> f$2
    io.heckel.ntfy.ui.SettingsActivity$SettingsFragment io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$2.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$2.<init>(android.content.Context,io.heckel.ntfy.ui.SettingsActivity$SettingsFragment,java.lang.Exception) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$SettingsFragment$uploadLogsToNopaste$1$$InternalSyntheticLambda$1$d1b73240d2e40489f8ff1802192a4d42f53fad5c17f026879da75ef43eb8d066$2.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment -> io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    boolean $r8$lambda$i-HlokTcyFuSdsc4ZzD-UnltKNE(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.ArrayList,androidx.preference.Preference) -> $r8$lambda$i-HlokTcyFuSdsc4ZzD-UnltKNE
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$zAowJ1HOl29mxxEd0X7qckFDpzQ(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$UserWithMetadata,java.util.ArrayList,androidx.preference.Preference) -> $r8$lambda$zAowJ1HOl29mxxEd0X7qckFDpzQ
      # {"id":"com.android.tools.r8.synthesized"}
    665:665:void access$addUserPreferences(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.Map) -> <init>
    665:665:void <init>():665 -> <init>
    665:665:void access$addUserPreferences(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.Map) -> access$addUserPreferences
    665:665:void access$addUserPreferences(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.Map) -> access$getRepository$p
    665:665:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment):665 -> access$getRepository$p
    698:698:void addUserPreferences(java.util.Map) -> addUserPreferences
    211:211:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> addUserPreferences
    211:211:void addUserPreferences(java.util.Map):699 -> addUserPreferences
    700:705:void addUserPreferences(java.util.Map) -> addUserPreferences
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> addUserPreferences
    1851:1851:void addUserPreferences(java.util.Map):707 -> addUserPreferences
    708:745:void addUserPreferences(java.util.Map) -> addUserPreferences
    718:721:boolean addUserPreferences$lambda-3$lambda-2$lambda-1(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$UserWithMetadata,java.util.ArrayList,androidx.preference.Preference) -> addUserPreferences$lambda-3$lambda-2$lambda-1
    738:741:boolean addUserPreferences$lambda-5(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.ArrayList,androidx.preference.Preference) -> addUserPreferences$lambda-5
    669:671:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    680:681:void reload() -> reload
io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$0.f$0 -> f$0
    java.util.ArrayList io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$0.f$2 -> f$2
    io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$UserWithMetadata io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$0.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$0.<init>(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$UserWithMetadata,java.util.ArrayList) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$1.f$0 -> f$0
    java.util.ArrayList io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$1.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$1.<init>(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.ArrayList) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$$InternalSyntheticLambda$1$72126a7dd7bba178b56c2aa7abfb9f58966ffd28959563394fb75bdef4054363$1.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$UserWithMetadata -> io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$UserWithMetadata:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    674:676:void <init>(io.heckel.ntfy.db.User,java.util.List) -> <init>
    676:676:java.util.List getTopics() -> getTopics
    675:675:io.heckel.ntfy.db.User getUser() -> getUser
io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1 -> io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$i7l3Xyv0klt1s5uJRa8ytF7Fw7A(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.Map) -> $r8$lambda$i7l3Xyv0klt1s5uJRa8ytF7Fw7A
      # {"id":"com.android.tools.r8.synthesized"}
    681:694:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1477:1477:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1477:1477:java.lang.Object invokeSuspend(java.lang.Object):683 -> invokeSuspend
    1502:1503:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1502:1503:java.lang.Object invokeSuspend(java.lang.Object):683 -> invokeSuspend
    683:683:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> invokeSuspend
    357:357:java.lang.Object invokeSuspend(java.lang.Object):683 -> invokeSuspend
    1504:1504:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1504:1504:java.lang.Object invokeSuspend(java.lang.Object):683 -> invokeSuspend
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> invokeSuspend
    360:360:java.lang.Object invokeSuspend(java.lang.Object):683 -> invokeSuspend
    1504:1505:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1504:1505:java.lang.Object invokeSuspend(java.lang.Object):683 -> invokeSuspend
    438:438:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    438:438:java.lang.Object invokeSuspend(java.lang.Object):684 -> invokeSuspend
    388:388:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    388:388:java.lang.Object invokeSuspend(java.lang.Object):684 -> invokeSuspend
    1238:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> invokeSuspend
    1238:1239:java.lang.Object invokeSuspend(java.lang.Object):684 -> invokeSuspend
    388:388:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    388:388:java.lang.Object invokeSuspend(java.lang.Object):684 -> invokeSuspend
    684:684:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1549:1549:java.lang.Object invokeSuspend(java.lang.Object):684 -> invokeSuspend
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    1620:1621:java.lang.Object invokeSuspend(java.lang.Object):684 -> invokeSuspend
    681:685:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1549:1549:java.lang.Object invokeSuspend(java.lang.Object):686 -> invokeSuspend
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    1620:1621:java.lang.Object invokeSuspend(java.lang.Object):686 -> invokeSuspend
    687:688:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1477:1477:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1477:1477:java.lang.Object invokeSuspend(java.lang.Object):690 -> invokeSuspend
    1502:1503:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1502:1503:java.lang.Object invokeSuspend(java.lang.Object):690 -> invokeSuspend
    690:690:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> invokeSuspend
    357:357:java.lang.Object invokeSuspend(java.lang.Object):690 -> invokeSuspend
    1504:1504:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1504:1504:java.lang.Object invokeSuspend(java.lang.Object):690 -> invokeSuspend
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> invokeSuspend
    360:360:java.lang.Object invokeSuspend(java.lang.Object):690 -> invokeSuspend
    1504:1505:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> invokeSuspend
    1504:1505:java.lang.Object invokeSuspend(java.lang.Object):690 -> invokeSuspend
    691:694:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    692:692:void invokeSuspend$lambda-5(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.Map) -> invokeSuspend$lambda-5
io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1$$InternalSyntheticLambda$0$633d9f93b7a7fca483c92d2a97237143daa6db93525e20f0fb802864671b950f$0.f$0 -> f$0
    java.util.Map io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1$$InternalSyntheticLambda$0$633d9f93b7a7fca483c92d2a97237143daa6db93525e20f0fb802864671b950f$0.f$1 -> f$1
    void io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1$$InternalSyntheticLambda$0$633d9f93b7a7fca483c92d2a97237143daa6db93525e20f0fb802864671b950f$0.<init>(io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment,java.util.Map) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$UserSettingsFragment$reload$1$$InternalSyntheticLambda$0$633d9f93b7a7fca483c92d2a97237143daa6db93525e20f0fb802864671b950f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$onAddUser$1 -> io.heckel.ntfy.ui.SettingsActivity$onAddUser$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$BHpjNZjZbj98ZqlL5QEon6AaFuE(io.heckel.ntfy.ui.SettingsActivity) -> $r8$lambda$BHpjNZjZbj98ZqlL5QEon6AaFuE
      # {"id":"com.android.tools.r8.synthesized"}
    759:764:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    762:762:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.SettingsActivity) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.SettingsActivity$onAddUser$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$onAddUser$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity io.heckel.ntfy.ui.SettingsActivity$onAddUser$1$$InternalSyntheticLambda$3$02b8478192a35f4dae94e5be0677d8378dd66932c4f6a2f309733763d0ab332d$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$onAddUser$1$$InternalSyntheticLambda$3$02b8478192a35f4dae94e5be0677d8378dd66932c4f6a2f309733763d0ab332d$0.<init>(io.heckel.ntfy.ui.SettingsActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$onAddUser$1$$InternalSyntheticLambda$3$02b8478192a35f4dae94e5be0677d8378dd66932c4f6a2f309733763d0ab332d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1 -> io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$bwE8HxPgwKMIjf8Bn-tlpgho13c(io.heckel.ntfy.ui.SettingsActivity) -> $r8$lambda$bwE8HxPgwKMIjf8Bn-tlpgho13c
      # {"id":"com.android.tools.r8.synthesized"}
    778:784:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    782:782:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.SettingsActivity) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1$$InternalSyntheticLambda$3$9ffb5c8628dbbfb4883384773766e94749bb0c015994030838fab1399d40e37c$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1$$InternalSyntheticLambda$3$9ffb5c8628dbbfb4883384773766e94749bb0c015994030838fab1399d40e37c$0.<init>(io.heckel.ntfy.ui.SettingsActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$onDeleteUser$1$$InternalSyntheticLambda$3$9ffb5c8628dbbfb4883384773766e94749bb0c015994030838fab1399d40e37c$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1 -> io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    void $r8$lambda$puAwDwycVdaGbwqdkhQvlpn4GD0(io.heckel.ntfy.ui.SettingsActivity) -> $r8$lambda$puAwDwycVdaGbwqdkhQvlpn4GD0
      # {"id":"com.android.tools.r8.synthesized"}
    768:774:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    772:772:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.SettingsActivity) -> invokeSuspend$lambda-0
io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.SettingsActivity io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1$$InternalSyntheticLambda$3$16100426c5c029d88ada56c6124531d88b9fde6e0ca08c4a2a7e13ca136b85b7$0.f$0 -> f$0
    void io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1$$InternalSyntheticLambda$3$16100426c5c029d88ada56c6124531d88b9fde6e0ca08c4a2a7e13ca136b85b7$0.<init>(io.heckel.ntfy.ui.SettingsActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.SettingsActivity$onUpdateUser$1$$InternalSyntheticLambda$3$16100426c5c029d88ada56c6124531d88b9fde6e0ca08c4a2a7e13ca136b85b7$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.ShareActivity -> io.heckel.ntfy.ui.ShareActivity:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    void $r8$lambda$mqEFX3D-0Vs94WoK7DEQIk2uu_0(io.heckel.ntfy.ui.ShareActivity,android.widget.CompoundButton,boolean) -> $r8$lambda$mqEFX3D-0Vs94WoK7DEQIk2uu_0
      # {"id":"com.android.tools.r8.synthesized"}
    22:24:void <init>() -> <init>
    22:22:io.heckel.ntfy.msg.ApiService access$getApi$p(io.heckel.ntfy.ui.ShareActivity) -> access$getApi$p
    22:22:java.lang.String access$getAppBaseUrl$p(io.heckel.ntfy.ui.ShareActivity) -> access$getAppBaseUrl$p
    22:22:com.google.android.material.textfield.TextInputLayout access$getBaseUrlLayout$p(io.heckel.ntfy.ui.ShareActivity) -> access$getBaseUrlLayout$p
    22:22:android.widget.AutoCompleteTextView access$getBaseUrlText$p(io.heckel.ntfy.ui.ShareActivity) -> access$getBaseUrlText$p
    22:22:java.lang.String access$getDefaultBaseUrl$p(io.heckel.ntfy.ui.ShareActivity) -> access$getDefaultBaseUrl$p
    22:22:android.widget.ImageView access$getErrorImage$p(io.heckel.ntfy.ui.ShareActivity) -> access$getErrorImage$p
    22:22:android.widget.TextView access$getErrorText$p(io.heckel.ntfy.ui.ShareActivity) -> access$getErrorText$p
    22:22:android.net.Uri access$getFileUri$p(io.heckel.ntfy.ui.ShareActivity) -> access$getFileUri$p
    22:22:android.widget.ProgressBar access$getProgress$p(io.heckel.ntfy.ui.ShareActivity) -> access$getProgress$p
    22:22:io.heckel.ntfy.db.Repository access$getRepository(io.heckel.ntfy.ui.ShareActivity) -> access$getRepository
    22:22:androidx.recyclerview.widget.RecyclerView access$getSuggestedTopicsList$p(io.heckel.ntfy.ui.ShareActivity) -> access$getSuggestedTopicsList$p
    22:22:android.widget.TextView access$getTopicText$p(io.heckel.ntfy.ui.ShareActivity) -> access$getTopicText$p
    22:22:android.widget.CheckBox access$getUseAnotherServerCheckbox$p(io.heckel.ntfy.ui.ShareActivity) -> access$getUseAnotherServerCheckbox$p
    22:22:void access$validateInput(io.heckel.ntfy.ui.ShareActivity) -> access$validateInput
    332:335:java.lang.String getBaseUrl() -> getBaseUrl
    23:23:io.heckel.ntfy.db.Repository getRepository() -> getRepository
    207:225:void handleSendFile(android.content.Intent) -> handleSendFile
    188:202:void handleSendImage(android.content.Intent) -> handleSendImage
    181:184:void handleSendText(android.content.Intent) -> handleSendText
    51:176:void onCreate(android.os.Bundle) -> onCreate
    107:108:void onCreate$lambda-0(io.heckel.ntfy.ui.ShareActivity,android.widget.CompoundButton,boolean) -> onCreate$lambda-0
    235:238:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    243:248:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    260:269:void onShareClick() -> onShareClick
    230:230:boolean onSupportNavigateUp() -> onSupportNavigateUp
    253:256:void show(boolean,boolean,boolean) -> show
    252:252:void show$default(io.heckel.ntfy.ui.ShareActivity,boolean,boolean,boolean,int,java.lang.Object) -> show$default
    319:328:void validateInput() -> validateInput
io.heckel.ntfy.ui.ShareActivity$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.ShareActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.ShareActivity io.heckel.ntfy.ui.ShareActivity$$InternalSyntheticLambda$0$c6248996eab0f9482058721eed8901a06bca44a57b0d5c97dddc78726ab69899$0.f$0 -> f$0
    void io.heckel.ntfy.ui.ShareActivity$$InternalSyntheticLambda$0$c6248996eab0f9482058721eed8901a06bca44a57b0d5c97dddc78726ab69899$0.<init>(io.heckel.ntfy.ui.ShareActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.ShareActivity$$InternalSyntheticLambda$0$c6248996eab0f9482058721eed8901a06bca44a57b0d5c97dddc78726ab69899$0.onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.ShareActivity$Companion -> io.heckel.ntfy.ui.ShareActivity$Companion:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    357:357:void <init>() -> <init>
io.heckel.ntfy.ui.ShareActivity$TopicAdapter -> io.heckel.ntfy.ui.ShareActivity$TopicAdapter:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    void $r8$lambda$PSDszbtyefqAyr0MkSBFPL4JDWo(io.heckel.ntfy.ui.ShareActivity$TopicAdapter,int,android.view.View) -> $r8$lambda$PSDszbtyefqAyr0MkSBFPL4JDWo
      # {"id":"com.android.tools.r8.synthesized"}
    339:339:void <init>(java.util.List,kotlin.jvm.functions.Function1) -> <init>
    350:350:int getItemCount() -> getItemCount
    339:339:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    346:347:void onBindViewHolder(io.heckel.ntfy.ui.ShareActivity$TopicAdapter$ViewHolder,int) -> onBindViewHolder
    347:347:void onBindViewHolder$lambda-0(io.heckel.ntfy.ui.ShareActivity$TopicAdapter,int,android.view.View) -> onBindViewHolder$lambda-0
    339:339:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    341:342:io.heckel.ntfy.ui.ShareActivity$TopicAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
io.heckel.ntfy.ui.ShareActivity$TopicAdapter$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.ShareActivity$TopicAdapter$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.ShareActivity$TopicAdapter io.heckel.ntfy.ui.ShareActivity$TopicAdapter$$InternalSyntheticLambda$2$b04c9bd97e19fb6ff860a966cbb76b151b1242dfa0cf381f2e05d4ceadb1a1e3$0.f$0 -> f$0
    int io.heckel.ntfy.ui.ShareActivity$TopicAdapter$$InternalSyntheticLambda$2$b04c9bd97e19fb6ff860a966cbb76b151b1242dfa0cf381f2e05d4ceadb1a1e3$0.f$1 -> f$1
    void io.heckel.ntfy.ui.ShareActivity$TopicAdapter$$InternalSyntheticLambda$2$b04c9bd97e19fb6ff860a966cbb76b151b1242dfa0cf381f2e05d4ceadb1a1e3$0.<init>(io.heckel.ntfy.ui.ShareActivity$TopicAdapter,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.ShareActivity$TopicAdapter$$InternalSyntheticLambda$2$b04c9bd97e19fb6ff860a966cbb76b151b1242dfa0cf381f2e05d4ceadb1a1e3$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.ShareActivity$TopicAdapter$ViewHolder -> io.heckel.ntfy.ui.ShareActivity$TopicAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    352:353:void <init>(android.view.View) -> <init>
    353:353:android.widget.TextView getTopicName() -> getTopicName
    352:352:android.view.View getView() -> getView
io.heckel.ntfy.ui.ShareActivity$onCreate$2 -> io.heckel.ntfy.ui.ShareActivity$onCreate$2:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    void $r8$lambda$DgMXqpttFAm8Z0QstDj45jDC2AI(java.util.List,io.heckel.ntfy.ui.ShareActivity,java.util.List) -> $r8$lambda$DgMXqpttFAm8Z0QstDj45jDC2AI
      # {"id":"com.android.tools.r8.synthesized"}
    112:165:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1549:1549:java.lang.Object invokeSuspend(java.lang.Object):117 -> invokeSuspend
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    1620:1621:java.lang.Object invokeSuspend(java.lang.Object):117 -> invokeSuspend
    117:120:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1603:1603:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1603:1603:java.lang.Object invokeSuspend(java.lang.Object):122 -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):122 -> invokeSuspend
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    1611:1611:java.lang.Object invokeSuspend(java.lang.Object):122 -> invokeSuspend
    123:123:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    1611:1611:java.lang.Object invokeSuspend(java.lang.Object):122 -> invokeSuspend
    126:128:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    819:819:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    819:819:java.lang.Object invokeSuspend(java.lang.Object):128 -> invokeSuspend
    847:847:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    847:847:java.lang.Object invokeSuspend(java.lang.Object):128 -> invokeSuspend
    128:130:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    819:819:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    819:819:java.lang.Object invokeSuspend(java.lang.Object):130 -> invokeSuspend
    847:847:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    847:847:java.lang.Object invokeSuspend(java.lang.Object):130 -> invokeSuspend
    130:165:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    151:163:void invokeSuspend$lambda-4(java.util.List,io.heckel.ntfy.ui.ShareActivity,java.util.List) -> invokeSuspend$lambda-4
io.heckel.ntfy.ui.ShareActivity$onCreate$2$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.ShareActivity$onCreate$2$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.ShareActivity io.heckel.ntfy.ui.ShareActivity$onCreate$2$$InternalSyntheticLambda$1$e4514f695560b3f4c5fa279d59d9317972de1204cc5f15ac3fea2d219f55f354$0.f$1 -> f$1
    java.util.List io.heckel.ntfy.ui.ShareActivity$onCreate$2$$InternalSyntheticLambda$1$e4514f695560b3f4c5fa279d59d9317972de1204cc5f15ac3fea2d219f55f354$0.f$2 -> f$2
    java.util.List io.heckel.ntfy.ui.ShareActivity$onCreate$2$$InternalSyntheticLambda$1$e4514f695560b3f4c5fa279d59d9317972de1204cc5f15ac3fea2d219f55f354$0.f$0 -> f$0
    void io.heckel.ntfy.ui.ShareActivity$onCreate$2$$InternalSyntheticLambda$1$e4514f695560b3f4c5fa279d59d9317972de1204cc5f15ac3fea2d219f55f354$0.<init>(java.util.List,io.heckel.ntfy.ui.ShareActivity,java.util.List) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.ShareActivity$onCreate$2$$InternalSyntheticLambda$1$e4514f695560b3f4c5fa279d59d9317972de1204cc5f15ac3fea2d219f55f354$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.ShareActivity$onCreate$2$1 -> io.heckel.ntfy.ui.ShareActivity$onCreate$2$1:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    132:132:java.lang.Object invoke(java.lang.Object) -> invoke
    134:144:void invoke(java.lang.String) -> invoke
io.heckel.ntfy.ui.ShareActivity$onCreate$textWatcher$1 -> io.heckel.ntfy.ui.ShareActivity$onCreate$textWatcher$1:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    90:90:void <init>(io.heckel.ntfy.ui.ShareActivity) -> <init>
    92:92:void afterTextChanged(android.text.Editable) -> afterTextChanged
io.heckel.ntfy.ui.ShareActivity$onShareClick$1 -> io.heckel.ntfy.ui.ShareActivity$onShareClick$1:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    void $r8$lambda$jlmUt04iUR5AxDbkaHiVuZ-RzQM(io.heckel.ntfy.ui.ShareActivity,java.lang.String,java.lang.String) -> $r8$lambda$jlmUt04iUR5AxDbkaHiVuZ-RzQM
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$n0kfQLNUvyzxVXwdIp0r2oYuPYM(io.heckel.ntfy.ui.ShareActivity,java.lang.String) -> $r8$lambda$n0kfQLNUvyzxVXwdIp0r2oYuPYM
      # {"id":"com.android.tools.r8.synthesized"}
    269:315:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    288:294:void invokeSuspend$lambda-0(io.heckel.ntfy.ui.ShareActivity,java.lang.String,java.lang.String) -> invokeSuspend$lambda-0
    309:312:void invokeSuspend$lambda-1(io.heckel.ntfy.ui.ShareActivity,java.lang.String) -> invokeSuspend$lambda-1
io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.ShareActivity io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$1.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$1.f$1 -> f$1
    void io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$1.<init>(io.heckel.ntfy.ui.ShareActivity,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.ShareActivity io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$0.f$0 -> f$0
    java.lang.String io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$0.f$2 -> f$2
    java.lang.String io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$0.f$1 -> f$1
    void io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$0.<init>(io.heckel.ntfy.ui.ShareActivity,java.lang.String,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.ShareActivity$onShareClick$1$$InternalSyntheticLambda$0$b45512eb8192e13013764741584c30181e8f3f3a767847c72516ffb794b551f9$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.ShareActivity$repository$2 -> io.heckel.ntfy.ui.ShareActivity$repository$2:
# {"id":"sourceFile","fileName":"ShareActivity.kt"}
    23:23:io.heckel.ntfy.db.Repository invoke() -> invoke
    23:23:java.lang.Object invoke() -> invoke
io.heckel.ntfy.ui.SubscriptionsViewModel -> io.heckel.ntfy.ui.SubscriptionsViewModel:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    14:14:void <init>(io.heckel.ntfy.db.Repository) -> <init>
    14:14:io.heckel.ntfy.db.Repository access$getRepository$p(io.heckel.ntfy.ui.SubscriptionsViewModel) -> access$getRepository$p
    23:23:kotlinx.coroutines.Job add(io.heckel.ntfy.db.Subscription) -> add
    16:16:androidx.lifecycle.LiveData list() -> list
    20:20:androidx.lifecycle.LiveData listIdsWithInstantStatus() -> listIdsWithInstantStatus
    27:27:kotlinx.coroutines.Job remove(android.content.Context,long) -> remove
io.heckel.ntfy.ui.SubscriptionsViewModel$add$1 -> io.heckel.ntfy.ui.SubscriptionsViewModel$add$1:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    23:25:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.SubscriptionsViewModel$remove$1 -> io.heckel.ntfy.ui.SubscriptionsViewModel$remove$1:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    27:43:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.ui.SubscriptionsViewModelFactory -> io.heckel.ntfy.ui.SubscriptionsViewModelFactory:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    50:50:void <init>(io.heckel.ntfy.db.Repository) -> <init>
    androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    55:56:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
io.heckel.ntfy.ui.UserFragment -> io.heckel.ntfy.ui.UserFragment:
# {"id":"sourceFile","fileName":"UserFragment.kt"}
    void $r8$lambda$22lipv9LP7yCTDNZ1vUIvpBjwOc(android.content.DialogInterface,int) -> $r8$lambda$22lipv9LP7yCTDNZ1vUIvpBjwOc
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$9tkdtSBrVjnX9lMe__vH5ueDvBg(io.heckel.ntfy.ui.UserFragment,android.content.DialogInterface,int) -> $r8$lambda$9tkdtSBrVjnX9lMe__vH5ueDvBg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$cyXZr-QPpfYdy1KSXZE_ROrkDZM(io.heckel.ntfy.ui.UserFragment,android.app.AlertDialog,android.content.DialogInterface) -> $r8$lambda$cyXZr-QPpfYdy1KSXZE_ROrkDZM
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$qIzJ-Ki-1_ZU6-dv0Rrk2yCEwhs(io.heckel.ntfy.ui.UserFragment,android.content.DialogInterface,int) -> $r8$lambda$qIzJ-Ki-1_ZU6-dv0Rrk2yCEwhs
      # {"id":"com.android.tools.r8.synthesized"}
    19:19:void <init>() -> <init>
    19:19:void access$validateInput(io.heckel.ntfy.ui.UserFragment) -> access$validateInput
    36:37:void onAttach(android.content.Context) -> onAttach
    42:129:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    81:81:void onCreateDialog$lambda-0(io.heckel.ntfy.ui.UserFragment,android.content.DialogInterface,int) -> onCreateDialog$lambda-0
    88:89:void onCreateDialog$lambda-2(io.heckel.ntfy.ui.UserFragment,android.content.DialogInterface,int) -> onCreateDialog$lambda-2
    95:123:void onCreateDialog$lambda-3(io.heckel.ntfy.ui.UserFragment,android.app.AlertDialog,android.content.DialogInterface) -> onCreateDialog$lambda-3
    133:146:void saveClicked() -> saveClicked
    151:159:void validateInput() -> validateInput
io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda0 -> io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.UserFragment io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$2.f$0 -> f$0
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$2.<init>(io.heckel.ntfy.ui.UserFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$2.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda1 -> io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.UserFragment io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$0.f$0 -> f$0
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$0.<init>(io.heckel.ntfy.ui.UserFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda2 -> io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$1 io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$1.INSTANCE -> INSTANCE
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$1.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda3 -> io.heckel.ntfy.ui.UserFragment$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$3.f$1 -> f$1
    io.heckel.ntfy.ui.UserFragment io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$3.f$0 -> f$0
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$3.<init>(io.heckel.ntfy.ui.UserFragment,android.app.AlertDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.ui.UserFragment$$InternalSyntheticLambda$2$f2f31aedcda9912251a4f46be56c4f736a2c219c4f053470a6998e9027a9c6a1$3.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.ui.UserFragment$Companion -> io.heckel.ntfy.ui.UserFragment$Companion:
# {"id":"sourceFile","fileName":"UserFragment.kt"}
    163:163:void <init>() -> <init>
    171:179:io.heckel.ntfy.ui.UserFragment newInstance(io.heckel.ntfy.db.User,java.util.ArrayList) -> newInstance
io.heckel.ntfy.ui.UserFragment$UserDialogListener -> io.heckel.ntfy.ui.UserFragment$UserDialogListener:
# {"id":"sourceFile","fileName":"UserFragment.kt"}
io.heckel.ntfy.ui.UserFragment$onCreateDialog$2$textWatcher$1 -> io.heckel.ntfy.ui.UserFragment$onCreateDialog$2$textWatcher$1:
# {"id":"sourceFile","fileName":"UserFragment.kt"}
    105:105:java.lang.Object invoke(java.lang.Object) -> invoke
    106:106:void invoke(android.text.Editable) -> invoke
io.heckel.ntfy.up.BroadcastReceiver -> io.heckel.ntfy.up.BroadcastReceiver:
# {"id":"sourceFile","fileName":"BroadcastReceiver.kt"}
    140:140:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    22:22:kotlinx.coroutines.sync.Mutex access$getMutex$cp() -> access$getMutex$cp
    27:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    35:46:void register(android.content.Context,android.content.Intent) -> register
    108:113:void unregister(android.content.Context,android.content.Intent) -> unregister
io.heckel.ntfy.up.BroadcastReceiver$Companion -> io.heckel.ntfy.up.BroadcastReceiver$Companion:
# {"id":"sourceFile","fileName":"BroadcastReceiver.kt"}
    135:135:void <init>() -> <init>
    140:140:kotlinx.coroutines.sync.Mutex getMutex() -> getMutex
io.heckel.ntfy.up.BroadcastReceiver$register$1 -> io.heckel.ntfy.up.BroadcastReceiver$register$1:
# {"id":"sourceFile","fileName":"BroadcastReceiver.kt"}
    46:104:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object invokeSuspend(java.lang.Object):50 -> invokeSuspend
    46:61:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object invokeSuspend(java.lang.Object):50 -> invokeSuspend
    65:103:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object invokeSuspend(java.lang.Object):50 -> invokeSuspend
io.heckel.ntfy.up.BroadcastReceiver$unregister$1 -> io.heckel.ntfy.up.BroadcastReceiver$unregister$1:
# {"id":"sourceFile","fileName":"BroadcastReceiver.kt"}
    113:132:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object invokeSuspend(java.lang.Object):117 -> invokeSuspend
    113:121:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object invokeSuspend(java.lang.Object):117 -> invokeSuspend
    125:131:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object invokeSuspend(java.lang.Object):117 -> invokeSuspend
io.heckel.ntfy.up.Distributor -> io.heckel.ntfy.up.Distributor:
# {"id":"sourceFile","fileName":"Distributor.kt"}
    11:11:void <init>(android.content.Context) -> <init>
    24:30:void sendEndpoint(java.lang.String,java.lang.String,java.lang.String) -> sendEndpoint
    13:20:void sendMessage(java.lang.String,java.lang.String,byte[]) -> sendMessage
    43:51:void sendRegistrationFailed(java.lang.String,java.lang.String,java.lang.String) -> sendRegistrationFailed
    34:39:void sendUnregistered(java.lang.String,java.lang.String) -> sendUnregistered
io.heckel.ntfy.up.Distributor$Companion -> io.heckel.ntfy.up.Distributor$Companion:
# {"id":"sourceFile","fileName":"Distributor.kt"}
    54:54:void <init>() -> <init>
io.heckel.ntfy.util.AfterChangedTextWatcher -> io.heckel.ntfy.util.AfterChangedTextWatcher:
# {"id":"sourceFile","fileName":"Util.kt"}
    453:453:void <init>(kotlin.jvm.functions.Function1) -> <init>
    455:455:void afterTextChanged(android.text.Editable) -> afterTextChanged
io.heckel.ntfy.util.ConstantsKt -> io.heckel.ntfy.util.ConstantsKt:
# {"id":"sourceFile","fileName":"Constants.kt"}
    11:11:void <clinit>() -> <clinit>
    11:11:java.util.List getALL_PRIORITIES() -> getALL_PRIORITIES
io.heckel.ntfy.util.ContentUriRequestBody -> io.heckel.ntfy.util.ContentUriRequestBody:
# {"id":"sourceFile","fileName":"Util.kt"}
    377:380:void <init>(android.content.ContentResolver,android.net.Uri,long) -> <init>
    382:382:long contentLength() -> contentLength
    385:386:okhttp3.MediaType contentType() -> contentType
    389:391:void writeTo(okio.BufferedSink) -> writeTo
io.heckel.ntfy.util.Emoji -> io.heckel.ntfy.util.Emoji:
    17:22:void <init>(java.util.List,byte[]) -> <init>
    27:27:java.util.List getAliases() -> getAliases
    31:31:java.lang.String getUnicode() -> getUnicode
io.heckel.ntfy.util.EmojiLoader -> io.heckel.ntfy.util.EmojiLoader:
    23:23:void <init>() -> <init>
    53:59:io.heckel.ntfy.util.Emoji buildEmojiFromJSON(org.json.JSONObject) -> buildEmojiFromJSON
    39:47:java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    63:65:java.util.List jsonArrayToStringList(org.json.JSONArray) -> jsonArrayToStringList
    25:30:java.util.List loadEmojis(java.io.InputStream) -> loadEmojis
io.heckel.ntfy.util.EmojiManager -> io.heckel.ntfy.util.EmojiManager:
    16:29:void <clinit>() -> <clinit>
    34:37:io.heckel.ntfy.util.Emoji getForAlias(java.lang.String) -> getForAlias
    41:44:java.lang.String trimAlias(java.lang.String) -> trimAlias
io.heckel.ntfy.util.FileInfo -> io.heckel.ntfy.util.FileInfo:
# {"id":"sourceFile","fileName":"Util.kt"}
    270:272:void <init>(java.lang.String,long) -> <init>
    271:271:java.lang.String getFilename() -> getFilename
    272:272:long getSize() -> getSize
io.heckel.ntfy.util.Log -> io.heckel.ntfy.util.Log:
# {"id":"sourceFile","fileName":"Log.kt"}
    140:143:void <clinit>() -> <clinit>
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> <init>
    18:18:void <init>(io.heckel.ntfy.db.LogDao):18 -> <init>
    19:22:void <init>(io.heckel.ntfy.db.LogDao) -> <init>
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$deleteAll
    18:18:void access$deleteAll(io.heckel.ntfy.util.Log):18 -> access$deleteAll
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$getCount$p
    18:18:java.util.concurrent.atomic.AtomicInteger access$getCount$p(io.heckel.ntfy.util.Log):18 -> access$getCount$p
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$getInstance$cp
    18:18:io.heckel.ntfy.util.Log access$getInstance$cp():18 -> access$getInstance$cp
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$getLogsDao$p
    18:18:io.heckel.ntfy.db.LogDao access$getLogsDao$p(io.heckel.ntfy.util.Log):18 -> access$getLogsDao$p
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$getRecord$p
    18:18:java.util.concurrent.atomic.AtomicBoolean access$getRecord$p(io.heckel.ntfy.util.Log):18 -> access$getRecord$p
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$getScrubTerms$p
    18:18:java.util.Map access$getScrubTerms$p(io.heckel.ntfy.util.Log):18 -> access$getScrubTerms$p
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$log
    18:18:void access$log(io.heckel.ntfy.util.Log,int,java.lang.String,java.lang.String,java.lang.Throwable):18 -> access$log
    18:18:void access$setInstance$cp(io.heckel.ntfy.util.Log) -> access$setInstance$cp
    68:79:void addScrubTerm(java.lang.String,io.heckel.ntfy.util.Log$TermType) -> addScrubTerm
    124:124:void deleteAll() -> deleteAll
    103:103:java.lang.String formatEntries(java.util.List) -> formatEntries
    37:45:java.lang.String getFormatted(android.content.Context,boolean) -> getFormatted
    25:26:void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    51:64:java.lang.String prependDeviceInfo(java.lang.String,java.lang.String,boolean) -> prependDeviceInfo
    96:96:java.lang.String scrub(java.lang.String) -> scrub
    211:211:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> scrub
    211:211:java.lang.String scrub(java.lang.String):96 -> scrub
    96:97:java.lang.String scrub(java.lang.String) -> scrub
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> scrubEntries
    1549:1549:java.util.List scrubEntries(java.util.List):86 -> scrubEntries
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> scrubEntries
    1620:1621:java.util.List scrubEntries(java.util.List):86 -> scrubEntries
    87:89:java.util.List scrubEntries(java.util.List) -> scrubEntries
io.heckel.ntfy.util.Log$Companion -> io.heckel.ntfy.util.Log$Companion:
# {"id":"sourceFile","fileName":"Log.kt"}
    136:136:void <init>() -> <init>
    194:194:void addScrubTerm(java.lang.String,io.heckel.ntfy.util.Log$TermType) -> addScrubTerm
    193:193:void addScrubTerm$default(io.heckel.ntfy.util.Log$Companion,java.lang.String,io.heckel.ntfy.util.Log$TermType,int,java.lang.Object) -> addScrubTerm$default
    148:149:void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    147:147:void d$default(io.heckel.ntfy.util.Log$Companion,java.lang.String,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> d$default
    189:190:void deleteAll() -> deleteAll
    163:164:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    178:178:java.lang.String getFormatted(android.content.Context,boolean) -> getFormatted
    207:208:io.heckel.ntfy.util.Log getInstance() -> getInstance
    174:174:boolean getRecord() -> getRecord
    182:182:java.util.Map getScrubTerms() -> getScrubTerms
    511:511:java.util.Map kotlin.collections.MapsKt__MapsKt.filter(java.util.Map,kotlin.jvm.functions.Function1) -> getScrubTerms
    511:511:java.util.Map getScrubTerms():183 -> getScrubTerms
    496:496:java.util.Map kotlin.collections.MapsKt__MapsKt.filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> getScrubTerms
    496:496:java.util.Map getScrubTerms():183 -> getScrubTerms
    183:183:java.util.Map getScrubTerms() -> getScrubTerms
    498:498:java.util.Map kotlin.collections.MapsKt__MapsKt.filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> getScrubTerms
    498:498:java.util.Map getScrubTerms():183 -> getScrubTerms
    125:125:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> getScrubTerms
    125:125:java.util.Map getScrubTerms():184 -> getScrubTerms
    152:152:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> getScrubTerms
    152:152:java.util.Map getScrubTerms():184 -> getScrubTerms
    184:185:java.util.Map getScrubTerms() -> getScrubTerms
    198:203:void init(android.content.Context) -> init
    168:170:void setRecord(boolean) -> setRecord
    158:159:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    157:157:void w$default(io.heckel.ntfy.util.Log$Companion,java.lang.String,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> w$default
io.heckel.ntfy.util.Log$ReplaceTerm -> io.heckel.ntfy.util.Log$ReplaceTerm:
# {"id":"sourceFile","fileName":"Log.kt"}
    131:133:void <init>(io.heckel.ntfy.util.Log$TermType,java.lang.String) -> <init>
    133:133:java.lang.String getReplaceTerm() -> getReplaceTerm
    132:132:io.heckel.ntfy.util.Log$TermType getTermType() -> getTermType
io.heckel.ntfy.util.Log$TermType -> io.heckel.ntfy.util.Log$TermType:
# {"id":"sourceFile","fileName":"Log.kt"}
    128:128:void <clinit>() -> <clinit>
    127:127:void <init>(java.lang.String,int) -> <init>
io.heckel.ntfy.util.Log$WhenMappings -> io.heckel.ntfy.util.Log$WhenMappings:
# {"id":"sourceFile","fileName":"Log.kt"}
io.heckel.ntfy.util.Log$formatEntries$1 -> io.heckel.ntfy.util.Log$formatEntries$1:
# {"id":"sourceFile","fileName":"Log.kt"}
    103:103:java.lang.Object invoke(java.lang.Object) -> invoke
    104:119:java.lang.CharSequence invoke(io.heckel.ntfy.db.LogEntry) -> invoke
io.heckel.ntfy.util.Log$log$1 -> io.heckel.ntfy.util.Log$log$1:
# {"id":"sourceFile","fileName":"Log.kt"}
    26:33:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.util.UtilKt -> io.heckel.ntfy.util.UtilKt:
# {"id":"sourceFile","fileName":"Util.kt"}
    void $r8$lambda$fUnDa2KDjUro5zZw8aJ-bHd1eoc(android.view.Window,android.animation.ValueAnimator) -> $r8$lambda$fUnDa2KDjUro5zZw8aJ-bHd1eoc
      # {"id":"com.android.tools.r8.synthesized"}
    342:342:boolean canOpenAttachment(io.heckel.ntfy.db.Attachment) -> canOpenAttachment
    485:491:void copyToClipboard(android.content.Context,io.heckel.ntfy.db.Notification) -> copyToClipboard
    501:504:void dangerButton(android.widget.Button,android.content.Context) -> dangerButton
    174:181:byte[] decodeBytesMessage(io.heckel.ntfy.db.Notification) -> decodeBytesMessage
    163:169:java.lang.String decodeMessage(io.heckel.ntfy.db.Notification) -> decodeMessage
    68:68:java.lang.String displayName(io.heckel.ntfy.db.Subscription) -> displayName
    466:471:java.io.File ensureSafeNewFile(java.io.File,java.lang.String) -> ensureSafeNewFile
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> ensureSafeNewFile
    1851:1851:java.io.File ensureSafeNewFile(java.io.File,java.lang.String):471 -> ensureSafeNewFile
    472:481:java.io.File ensureSafeNewFile(java.io.File,java.lang.String) -> ensureSafeNewFile
    277:282:void fadeStatusBarColor(android.view.Window,int,int) -> fadeStatusBarColor
    279:280:void fadeStatusBarColor$lambda-5(android.view.Window,android.animation.ValueAnimator) -> fadeStatusBarColor$lambda-5
    230:231:java.lang.String fileName(android.content.Context,java.lang.String,java.lang.String) -> fileName
    239:257:io.heckel.ntfy.util.FileInfo fileStat(android.content.Context,android.net.Uri) -> fileStat
    207:211:java.lang.String formatActionLabel(io.heckel.ntfy.db.Action) -> formatActionLabel
    305:318:java.lang.String formatBytes(long,int) -> formatBytes
    304:304:java.lang.String formatBytes$default(long,int,int,java.lang.Object) -> formatBytes$default
    97:98:java.lang.String formatDateShort(long) -> formatDateShort
    149:156:java.lang.String formatMessage(io.heckel.ntfy.db.Notification) -> formatMessage
    190:193:java.lang.String formatTitle(io.heckel.ntfy.db.Subscription,io.heckel.ntfy.db.Notification) -> formatTitle
    198:202:java.lang.String formatTitle(io.heckel.ntfy.db.Notification) -> formatTitle
    414:415:void hideRipple(android.view.View) -> hideRipple
    365:369:boolean isDarkThemeOn(android.content.Context) -> isDarkThemeOn
    350:353:boolean isIgnoringBatteryOptimizations(android.content.Context) -> isIgnoringBatteryOptimizations
    117:117:java.lang.String joinTags(java.util.List) -> joinTags
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> joinTagsMap
    1559:1559:java.lang.String joinTagsMap(java.util.List):121 -> joinTagsMap
    1591:1592:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> joinTagsMap
    1591:1592:java.lang.String joinTagsMap(java.util.List):121 -> joinTagsMap
    121:121:java.lang.String joinTagsMap(java.util.List) -> joinTagsMap
    398:402:void makeEndIconSmaller(android.view.View,android.content.res.Resources) -> makeEndIconSmaller
    216:216:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification) -> maybeAppendActionErrors
    1603:1603:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maybeAppendActionErrors
    1603:1603:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification):218 -> maybeAppendActionErrors
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maybeAppendActionErrors
    1851:1851:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification):218 -> maybeAppendActionErrors
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> maybeAppendActionErrors
    1611:1611:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification):218 -> maybeAppendActionErrors
    218:218:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification) -> maybeAppendActionErrors
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> maybeAppendActionErrors
    1611:1611:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification):218 -> maybeAppendActionErrors
    219:223:java.lang.String maybeAppendActionErrors(java.lang.String,io.heckel.ntfy.db.Notification) -> maybeAppendActionErrors
    264:264:io.heckel.ntfy.util.FileInfo maybeFileStat(android.content.Context,java.lang.String) -> maybeFileStat
    82:82:kotlin.Pair maybeSplitTopicUrl(java.lang.String) -> maybeSplitTopicUrl
    322:328:int mimeTypeToIconResource(java.lang.String) -> mimeTypeToIconResource
    287:289:java.lang.String randomString(int) -> randomString
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> randomString
    1549:1549:java.lang.String randomString(int):289 -> randomString
    1620:1620:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> randomString
    1620:1620:java.lang.String randomString(int):289 -> randomString
    289:289:java.lang.String randomString(int) -> randomString
    296:296:long randomSubscriptionId() -> randomSubscriptionId
    429:437:android.graphics.Bitmap readBitmapFromUri(android.net.Uri,android.content.Context) -> readBitmapFromUri
    441:441:android.graphics.Bitmap readBitmapFromUri(java.lang.String,android.content.Context) -> readBitmapFromUri
    446:446:android.graphics.Bitmap readBitmapFromUriOrNull(java.lang.String,android.content.Context) -> readBitmapFromUriOrNull
    421:422:void ripple(android.view.View,kotlinx.coroutines.CoroutineScope) -> ripple
    495:497:java.lang.String sha256(java.lang.String) -> sha256
    12969:12969:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> sha256
    12969:12969:java.lang.String sha256(java.lang.String):497 -> sha256
    497:497:java.lang.String sha256(java.lang.String) -> sha256
    72:73:java.lang.String shortUrl(java.lang.String) -> shortUrl
    407:408:void showRipple(android.view.View) -> showRipple
    125:128:java.util.List splitTags(java.lang.String) -> splitTags
    76:77:kotlin.Pair splitTopicUrl(java.lang.String) -> splitTopicUrl
    64:64:java.lang.String subscriptionTopicShortUrl(io.heckel.ntfy.db.Subscription) -> subscriptionTopicShortUrl
    336:336:boolean supportedImage(java.lang.String) -> supportedImage
    360:360:boolean systemDarkThemeOn(android.content.Context) -> systemDarkThemeOn
    137:137:java.lang.String toEmoji(java.lang.String) -> toEmoji
    1603:1603:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> toEmojis
    1603:1603:java.util.List toEmojis(java.util.List):133 -> toEmojis
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> toEmojis
    1851:1851:java.util.List toEmojis(java.util.List):133 -> toEmojis
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> toEmojis
    1611:1611:java.util.List toEmojis(java.util.List):133 -> toEmojis
    133:133:java.util.List toEmojis(java.util.List) -> toEmojis
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> toEmojis
    1611:1611:java.util.List toEmojis(java.util.List):133 -> toEmojis
    102:102:int toPriority(java.lang.Integer) -> toPriority
    107:112:java.lang.String toPriorityString(android.content.Context,int) -> toPriorityString
    61:61:java.lang.String topicShortUrl(java.lang.String,java.lang.String) -> topicShortUrl
    55:55:java.lang.String topicUrl(java.lang.String,java.lang.String) -> topicUrl
    59:59:java.lang.String topicUrlAuth(java.lang.String,java.lang.String) -> topicUrlAuth
    57:57:java.lang.String topicUrlJson(java.lang.String,java.lang.String,java.lang.String) -> topicUrlJson
    60:60:java.lang.String topicUrlJsonPoll(java.lang.String,java.lang.String,java.lang.String) -> topicUrlJsonPoll
    56:56:java.lang.String topicUrlUp(java.lang.String,java.lang.String) -> topicUrlUp
    58:58:java.lang.String topicUrlWs(java.lang.String,java.lang.String,java.lang.String) -> topicUrlWs
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> unmatchedTags
    766:766:java.util.List unmatchedTags(java.util.List):141 -> unmatchedTags
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> unmatchedTags
    857:857:java.util.List unmatchedTags(java.util.List):141 -> unmatchedTags
    141:141:java.util.List unmatchedTags(java.util.List) -> unmatchedTags
    89:89:boolean validTopic(java.lang.String) -> validTopic
    93:93:boolean validUrl(java.lang.String) -> validUrl
io.heckel.ntfy.util.UtilKt$$ExternalSyntheticLambda0 -> io.heckel.ntfy.util.UtilKt$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.Window io.heckel.ntfy.util.UtilKt$$InternalSyntheticLambda$0$05d5e645c34bc872865149cf79ead5ec2c91e344282f8a75cfee3d9de5a97754$0.f$0 -> f$0
    void io.heckel.ntfy.util.UtilKt$$InternalSyntheticLambda$0$05d5e645c34bc872865149cf79ead5ec2c91e344282f8a75cfee3d9de5a97754$0.<init>(android.view.Window) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void io.heckel.ntfy.util.UtilKt$$InternalSyntheticLambda$0$05d5e645c34bc872865149cf79ead5ec2c91e344282f8a75cfee3d9de5a97754$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
io.heckel.ntfy.util.UtilKt$ripple$1 -> io.heckel.ntfy.util.UtilKt$ripple$1:
# {"id":"sourceFile","fileName":"Util.kt"}
    422:425:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.work.DeleteWorker -> io.heckel.ntfy.work.DeleteWorker:
# {"id":"sourceFile","fileName":"DeleteWorker.kt"}
    22:22:java.lang.Object access$deleteExpiredNotifications(io.heckel.ntfy.work.DeleteWorker,kotlin.coroutines.Continuation) -> <init>
    22:22:void <init>(android.content.Context,androidx.work.WorkerParameters):22 -> <init>
    28:28:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    22:22:java.lang.Object access$deleteExpiredNotifications(io.heckel.ntfy.work.DeleteWorker,kotlin.coroutines.Continuation) -> access$deleteExpiredAttachments
    22:22:void access$deleteExpiredAttachments(io.heckel.ntfy.work.DeleteWorker):22 -> access$deleteExpiredAttachments
    22:22:java.lang.Object access$deleteExpiredNotifications(io.heckel.ntfy.work.DeleteWorker,kotlin.coroutines.Continuation) -> access$deleteExpiredIcons
    22:22:void access$deleteExpiredIcons(io.heckel.ntfy.work.DeleteWorker):22 -> access$deleteExpiredIcons
    22:22:java.lang.Object access$deleteExpiredNotifications(io.heckel.ntfy.work.DeleteWorker,kotlin.coroutines.Continuation) -> access$deleteExpiredNotifications
    55:58:void deleteExpiredAttachments() -> deleteExpiredAttachments
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> deleteExpiredAttachments
    1851:1851:void deleteExpiredAttachments():59 -> deleteExpiredAttachments
    61:75:void deleteExpiredAttachments() -> deleteExpiredAttachments
    81:83:void deleteExpiredIcons() -> deleteExpiredIcons
    1603:1603:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    1603:1603:void deleteExpiredIcons():85 -> deleteExpiredIcons
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    1851:1851:void deleteExpiredIcons():85 -> deleteExpiredIcons
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    1611:1611:void deleteExpiredIcons():85 -> deleteExpiredIcons
    85:85:void deleteExpiredIcons() -> deleteExpiredIcons
    1611:1611:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    1611:1611:void deleteExpiredIcons():85 -> deleteExpiredIcons
    86:88:void deleteExpiredIcons() -> deleteExpiredIcons
    11335:11335:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(java.lang.Object[],kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    11335:11335:void deleteExpiredIcons():88 -> deleteExpiredIcons
    11670:11670:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    11670:11670:void deleteExpiredIcons():88 -> deleteExpiredIcons
    88:89:void deleteExpiredIcons() -> deleteExpiredIcons
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> deleteExpiredIcons
    1851:1851:void deleteExpiredIcons():90 -> deleteExpiredIcons
    92:101:void deleteExpiredIcons() -> deleteExpiredIcons
    106:132:java.lang.Object deleteExpiredNotifications(kotlin.coroutines.Continuation) -> deleteExpiredNotifications
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> deleteExpiredNotifications
    1851:1851:java.lang.Object deleteExpiredNotifications(kotlin.coroutines.Continuation):110 -> deleteExpiredNotifications
    111:132:java.lang.Object deleteExpiredNotifications(kotlin.coroutines.Continuation) -> deleteExpiredNotifications
    31:32:java.lang.Object doWork(kotlin.coroutines.Continuation) -> doWork
io.heckel.ntfy.work.DeleteWorker$Companion -> io.heckel.ntfy.work.DeleteWorker$Companion:
# {"id":"sourceFile","fileName":"DeleteWorker.kt"}
    134:134:void <init>() -> <init>
io.heckel.ntfy.work.DeleteWorker$deleteExpiredNotifications$1 -> io.heckel.ntfy.work.DeleteWorker$deleteExpiredNotifications$1:
# {"id":"sourceFile","fileName":"DeleteWorker.kt"}
io.heckel.ntfy.work.DeleteWorker$doWork$1 -> io.heckel.ntfy.work.DeleteWorker$doWork$1:
# {"id":"sourceFile","fileName":"DeleteWorker.kt"}
io.heckel.ntfy.work.DeleteWorker$doWork$2 -> io.heckel.ntfy.work.DeleteWorker$doWork$2:
# {"id":"sourceFile","fileName":"DeleteWorker.kt"}
    32:50:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
io.heckel.ntfy.work.PollWorker -> io.heckel.ntfy.work.PollWorker:
# {"id":"sourceFile","fileName":"PollWorker.kt"}
    15:21:void <init>(android.content.Context,androidx.work.WorkerParameters) -> <init>
    24:25:java.lang.Object doWork(kotlin.coroutines.Continuation) -> doWork
io.heckel.ntfy.work.PollWorker$Companion -> io.heckel.ntfy.work.PollWorker$Companion:
# {"id":"sourceFile","fileName":"PollWorker.kt"}
    67:67:void <init>() -> <init>
io.heckel.ntfy.work.PollWorker$doWork$1 -> io.heckel.ntfy.work.PollWorker$doWork$1:
# {"id":"sourceFile","fileName":"PollWorker.kt"}
io.heckel.ntfy.work.PollWorker$doWork$2 -> io.heckel.ntfy.work.PollWorker$doWork$2:
# {"id":"sourceFile","fileName":"PollWorker.kt"}
    25:63:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):40 -> invokeSuspend
    25:51:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1549:1549:java.lang.Object invokeSuspend(java.lang.Object):52 -> invokeSuspend
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invokeSuspend
    1620:1621:java.lang.Object invokeSuspend(java.lang.Object):52 -> invokeSuspend
    52:52:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    1851:1851:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invokeSuspend
    1851:1851:java.lang.Object invokeSuspend(java.lang.Object):53 -> invokeSuspend
    54:63:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.ExceptionsKt -> kotlin.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String stackTraceToString(java.lang.Throwable) -> stackTraceToString
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    71:71:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    56:60:java.lang.String stackTraceToString(java.lang.Throwable) -> stackTraceToString
kotlin.Function -> kotlin.Function:
# {"id":"sourceFile","fileName":"Function.kt"}
kotlin.KotlinNothingValueException -> kotlin.KotlinNothingValueException:
# {"id":"sourceFile","fileName":"ExceptionsH.kt"}
    118:118:void <init>() -> <init>
kotlin.Lazy -> kotlin.Lazy:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.LazyKt -> kotlin.LazyKt:
    kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
kotlin.LazyKt__LazyKt -> kotlin.LazyKt__LazyKt:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.NoWhenBranchMatchedException -> kotlin.NoWhenBranchMatchedException:
# {"id":"sourceFile","fileName":"NoWhenBranchMatchedException.kt"}
    9:9:void <init>() -> <init>
kotlin.Pair -> kotlin.Pair:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    34:34:java.lang.String toString() -> toString
kotlin.Result -> kotlin.Result:
# {"id":"sourceFile","fileName":"Result.kt"}
    64:64:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    38:38:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    32:32:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
# {"id":"sourceFile","fileName":"Result.kt"}
    85:85:void <init>() -> <init>
kotlin.Result$Failure -> kotlin.Result$Failure:
# {"id":"sourceFile","fileName":"Result.kt"}
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
    132:132:void throwOnFailure(java.lang.Object) -> throwOnFailure
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:76:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
kotlin.TuplesKt -> kotlin.TuplesKt:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
kotlin.TypeCastException -> kotlin.TypeCastException:
# {"id":"sourceFile","fileName":"TypeCastException.kt"}
    11:11:void <init>(java.lang.String) -> <init>
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    71:71:void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
    22:22:void <init>() -> <init>
kotlin.collections.AbstractCollection -> kotlin.collections.AbstractCollection:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    14:14:int size() -> <init>
    14:14:void <init>():14 -> <init>
    1743:1744:boolean kotlin.collections.CollectionsKt___CollectionsKt.any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> contains
    1743:1744:boolean contains(java.lang.Object):19 -> contains
    19:19:boolean contains(java.lang.Object) -> contains
    1722:1723:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1722:1723:boolean containsAll(java.util.Collection):22 -> containsAll
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    24:24:boolean isEmpty() -> isEmpty
    14:14:int size() -> size
    34:34:java.lang.Object[] toArray() -> toArray
    40:40:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    26:26:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection$toString$1 -> kotlin.collections.AbstractCollection$toString$1:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    27:27:java.lang.CharSequence invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractList -> kotlin.collections.AbstractList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    21:21:void <init>() -> <init>
    61:63:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    351:351:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> indexOf
    351:351:int indexOf(java.lang.Object):27 -> indexOf
    27:27:int indexOf(java.lang.Object) -> indexOf
    25:25:java.util.Iterator iterator() -> iterator
    378:380:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> lastIndexOf
    378:380:int lastIndexOf(java.lang.Object):29 -> lastIndexOf
    29:29:int lastIndexOf(java.lang.Object) -> lastIndexOf
    381:381:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> lastIndexOf
    381:381:int lastIndexOf(java.lang.Object):29 -> lastIndexOf
    31:31:java.util.ListIterator listIterator() -> listIterator
    33:33:java.util.ListIterator listIterator(int) -> listIterator
    35:35:java.util.List subList(int,int) -> subList
kotlin.collections.AbstractList$Companion -> kotlin.collections.AbstractList$Companion:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    105:105:void <init>() -> <init>
    129:132:void checkBoundsIndexes$kotlin_stdlib(int,int,int) -> checkBoundsIndexes$kotlin_stdlib
    108:108:void checkElementIndex$kotlin_stdlib(int,int) -> checkElementIndex$kotlin_stdlib
    114:114:void checkPositionIndex$kotlin_stdlib(int,int) -> checkPositionIndex$kotlin_stdlib
    120:123:void checkRangeIndexes$kotlin_stdlib(int,int,int) -> checkRangeIndexes$kotlin_stdlib
    145:150:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection) -> orderedEquals$kotlin_stdlib
    138:139:int orderedHashCode$kotlin_stdlib(java.util.Collection) -> orderedHashCode$kotlin_stdlib
kotlin.collections.AbstractList$IteratorImpl -> kotlin.collections.AbstractList$IteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    71:71:void <init>(kotlin.collections.AbstractList) -> <init>
    73:73:int getIndex() -> getIndex
    75:75:boolean hasNext() -> hasNext
    78:79:java.lang.Object next() -> next
    73:73:void setIndex(int) -> setIndex
kotlin.collections.AbstractList$ListIteratorImpl -> kotlin.collections.AbstractList$ListIteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    86:90:void <init>(kotlin.collections.AbstractList,int) -> <init>
    93:93:boolean hasPrevious() -> hasPrevious
    95:95:int nextIndex() -> nextIndex
    98:99:java.lang.Object previous() -> previous
    102:102:int previousIndex() -> previousIndex
kotlin.collections.AbstractList$SubList -> kotlin.collections.AbstractList$SubList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    37:42:void <init>(kotlin.collections.AbstractList,int,int) -> <init>
    46:48:java.lang.Object get(int) -> get
    51:51:int getSize() -> getSize
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
# {"id":"sourceFile","fileName":"Collections.kt"}
    57:57:int size() -> <init>
    57:57:void <init>(java.lang.Object[],boolean):57 -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    1722:1723:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1722:1723:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    58:58:int getSize() -> getSize
    59:59:boolean isEmpty() -> isEmpty
    62:62:java.util.Iterator iterator() -> iterator
    57:57:int size() -> size
    64:64:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArraysKt -> kotlin.collections.ArraysKt:
    java.util.List asList(java.lang.Object[]) -> asList
      # {"id":"com.android.tools.r8.synthesized"}
    byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
      # {"id":"com.android.tools.r8.synthesized"}
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
      # {"id":"com.android.tools.r8.synthesized"}
    int getLastIndex(java.lang.Object[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    char single(char[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toList(java.lang.Object[]) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toMutableList(java.lang.Object[]) -> toMutableList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
    49:49:void copyOfRangeToIndexCheck(int,int) -> copyOfRangeToIndexCheck
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    133:133:java.util.List asList(java.lang.Object[]) -> asList
    1247:1247:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
    1270:1270:byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
    1246:1246:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
    1269:1269:byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
    1843:1844:byte[] copyOfRange(byte[],int,int) -> copyOfRange
    1914:1914:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
    1913:1913:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
    2400:2400:void sort(java.lang.Object[]) -> sort
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    4198:4198:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    4207:4207:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    8054:8054:int getLastIndex(java.lang.Object[]) -> getLastIndex
    1508:1515:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    2897:2900:char single(char[]) -> single
    3070:3070:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
    9945:9948:java.util.List toList(java.lang.Object[]) -> toList
    10044:10044:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.BrittleContainsOptimizationKt -> kotlin.collections.BrittleContainsOptimizationKt:
# {"id":"sourceFile","fileName":"BrittleContainsOptimization.kt"}
    29:33:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable) -> convertToSetForSetOperationWith
    123:123:boolean kotlin.collections.CollectionsKt__CollectionsJVMKt.brittleContainsOptimizationEnabled() -> convertToSetForSetOperationWith
    123:123:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable):35 -> convertToSetForSetOperationWith
    35:35:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable) -> convertToSetForSetOperationWith
    123:123:boolean kotlin.collections.CollectionsKt__CollectionsJVMKt.brittleContainsOptimizationEnabled() -> safeToConvertToSet
    123:123:boolean safeToConvertToSet(java.util.Collection):16 -> safeToConvertToSet
    16:16:boolean safeToConvertToSet(java.util.Collection) -> safeToConvertToSet
kotlin.collections.CollectionSystemProperties -> kotlin.collections.CollectionSystemProperties:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    128:128:void <clinit>() -> <clinit>
    125:125:void <init>() -> <init>
kotlin.collections.CollectionsKt -> kotlin.collections.CollectionsKt:
    boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
      # {"id":"com.android.tools.r8.synthesized"}
    int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    boolean contains(java.lang.Iterable,java.lang.Object) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List distinct(java.lang.Iterable) -> distinct
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List dropLast(java.util.List,int) -> dropLast
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List emptyList() -> emptyList
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object first(java.util.List) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    int getLastIndex(java.util.List) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object getOrNull(java.util.List,int) -> getOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object last(java.util.List) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List listOf(java.lang.Object) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List listOf(java.lang.Object[]) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Comparable minOrNull(java.lang.Iterable) -> minOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List minus(java.lang.Iterable,java.lang.Iterable) -> minus
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List plus(java.util.Collection,java.lang.Object) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List reversed(java.lang.Iterable) -> reversed
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List shuffled(java.lang.Iterable) -> shuffled
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object single(java.lang.Iterable) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    void sort(java.util.List) -> sort
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List sorted(java.lang.Iterable) -> sorted
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Set subtract(java.lang.Iterable,java.lang.Iterable) -> subtract
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List take(java.lang.Iterable,int) -> take
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List takeLast(java.util.List,int) -> takeLast
      # {"id":"com.android.tools.r8.synthesized"}
    void throwCountOverflow() -> throwCountOverflow
      # {"id":"com.android.tools.r8.synthesized"}
    void throwIndexOverflow() -> throwIndexOverflow
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toList(java.lang.Iterable) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toMutableList(java.util.Collection) -> toMutableList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Set toSet(java.lang.Iterable) -> toSet
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    88:92:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    20:20:java.util.List listOf(java.lang.Object) -> listOf
    67:67:java.util.List shuffled(java.lang.Iterable) -> shuffled
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    55:55:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    314:322:int binarySearch(java.util.List,java.lang.Comparable,int,int) -> binarySearch
    313:313:int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
    71:71:java.util.List emptyList() -> emptyList
    223:223:int getLastIndex(java.util.List) -> getLastIndex
    77:77:java.util.List listOf(java.lang.Object[]) -> listOf
    126:126:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
    107:107:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
    291:293:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
    445:447:void rangeCheck$CollectionsKt__CollectionsKt(int,int,int) -> rangeCheck$CollectionsKt__CollectionsKt
    467:467:void throwCountOverflow() -> throwCountOverflow
    463:463:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
    31:31:void sort(java.util.List) -> sort
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
    116:120:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    141:141:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
    148:148:boolean removeAll(java.util.Collection,java.lang.Iterable) -> removeAll
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
    43:43:void reverse(java.util.List) -> reverse
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    3533:3533:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
    74:76:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    1642:1642:java.util.List distinct(java.lang.Iterable) -> distinct
    721:722:java.util.List dropLast(java.util.List,int) -> dropLast
    197:202:java.lang.Object first(java.lang.Iterable) -> first
    213:215:java.lang.Object first(java.util.List) -> first
    306:306:java.lang.Object getOrNull(java.util.List,int) -> getOrNull
    313:317:int indexOf(java.lang.Iterable,java.lang.Object) -> indexOf
    3494:3503:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    3493:3493:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    3516:3516:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    3515:3515:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    417:419:java.lang.Object last(java.util.List) -> last
    2560:2565:java.lang.Comparable minOrNull(java.lang.Iterable) -> minOrNull
    3163:3165:java.util.List minus(java.lang.Iterable,java.lang.Iterable) -> minus
    819:819:java.util.List filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minus
    819:819:java.util.List minus(java.lang.Iterable,java.lang.Iterable):3166 -> minus
    847:847:java.util.Collection filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> minus
    847:847:java.util.List minus(java.lang.Iterable,java.lang.Iterable):3166 -> minus
    3166:3166:java.util.List minus(java.lang.Iterable,java.lang.Iterable) -> minus
    3226:3228:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
    3268:3275:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
    977:979:java.util.List reversed(java.lang.Iterable) -> reversed
    590:597:java.lang.Object single(java.lang.Iterable) -> single
    607:610:java.lang.Object single(java.util.List) -> single
    1029:1030:java.util.List sorted(java.lang.Iterable) -> sorted
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> sorted
    38:38:java.util.List sorted(java.lang.Iterable):1032 -> sorted
    1032:1034:java.util.List sorted(java.lang.Iterable) -> sorted
    1684:1685:java.util.Set subtract(java.lang.Iterable,java.lang.Iterable) -> subtract
    890:903:java.util.List take(java.lang.Iterable,int) -> take
    914:925:java.util.List takeLast(java.util.List,int) -> takeLast
    1295:1296:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    1305:1305:java.util.HashSet toHashSet(java.lang.Iterable) -> toHashSet
    1312:1319:java.util.List toList(java.lang.Iterable) -> toList
    1326:1328:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1335:1335:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1696:1697:java.util.Set toMutableSet(java.lang.Iterable) -> toMutableSet
    1344:1351:java.util.Set toSet(java.lang.Iterable) -> toSet
    3442:3446:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3442:3446:java.util.List zip(java.lang.Iterable,java.lang.Iterable):3431 -> zip
    3431:3431:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.lang.Iterable):21 -> <init>
    3533:3533:kotlin.sequences.Sequence kotlin.collections.CollectionsKt___CollectionsKt.asSequence(java.lang.Iterable) -> iterator
    3533:3533:java.util.Iterator iterator():681 -> iterator
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    15:15:void <init>() -> <init>
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    24:24:void <init>() -> <init>
    24:24:boolean contains(java.lang.Object) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    24:24:int indexOf(java.lang.Object) -> indexOf
    40:40:java.util.Iterator iterator() -> iterator
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    24:24:int size() -> size
    49:49:java.util.List subList(int,int) -> subList
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
# {"id":"sourceFile","fileName":"Maps.kt"}
    14:14:void <init>() -> <init>
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    14:14:java.lang.Object get(java.lang.Object) -> get
    27:27:java.util.Set getEntries() -> getEntries
    28:28:java.util.Set getKeys() -> getKeys
    29:29:java.util.Collection getValues() -> getValues
    14:14:java.util.Set keySet() -> keySet
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    14:14:void <init>() -> <init>
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    26:26:java.util.Iterator iterator() -> iterator
    14:14:int size() -> size
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
kotlin.collections.MapsKt -> kotlin.collections.MapsKt:
    java.util.Map emptyMap() -> emptyMap
      # {"id":"com.android.tools.r8.synthesized"}
    int mapCapacity(int) -> mapCapacity
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Map toMap(java.lang.Iterable) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Map toMap(java.util.Map) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Map toMutableMap(java.util.Map) -> toMutableMap
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    27:27:java.util.Map mapOf(kotlin.Pair) -> mapOf
    140:140:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
# {"id":"sourceFile","fileName":"Maps.kt"}
    40:40:java.util.Map emptyMap() -> emptyMap
    784:786:java.util.Map optimizeReadOnlyMap(java.util.Map) -> optimizeReadOnlyMap
    415:416:void putAll(java.util.Map,java.lang.Iterable) -> putAll
    546:553:java.util.Map toMap(java.lang.Iterable) -> toMap
    560:560:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> toMap
    600:603:java.util.Map toMap(java.util.Map) -> toMap
    612:612:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
kotlin.collections.MapsKt___MapsJvmKt -> kotlin.collections.MapsKt___MapsJvmKt:
# {"id":"sourceFile","fileName":"_MapsJvm.kt"}
kotlin.collections.MapsKt___MapsKt -> kotlin.collections.MapsKt___MapsKt:
# {"id":"sourceFile","fileName":"_Maps.kt"}
kotlin.collections.SetsKt -> kotlin.collections.SetsKt:
    java.util.Set emptySet() -> emptySet
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
# {"id":"sourceFile","fileName":"SetsJVM.kt"}
    18:18:java.util.Set setOf(java.lang.Object) -> setOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
# {"id":"sourceFile","fileName":"Sets.kt"}
    36:36:java.util.Set emptySet() -> emptySet
    173:175:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
kotlin.collections.SetsKt___SetsKt -> kotlin.collections.SetsKt___SetsKt:
# {"id":"sourceFile","fileName":"_Sets.kt"}
kotlin.comparisons.ComparisonsKt -> kotlin.comparisons.ComparisonsKt:
    int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Comparator naturalOrder() -> naturalOrder
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt -> kotlin.comparisons.ComparisonsKt__ComparisonsKt:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    78:78:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
    280:280:java.util.Comparator naturalOrder() -> naturalOrder
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt -> kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt:
# {"id":"sourceFile","fileName":"_ComparisonsJvm.kt"}
kotlin.comparisons.ComparisonsKt___ComparisonsKt -> kotlin.comparisons.ComparisonsKt___ComparisonsKt:
# {"id":"sourceFile","fileName":"_Comparisons.kt"}
kotlin.comparisons.NaturalOrderComparator -> kotlin.comparisons.NaturalOrderComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    309:309:void <init>() -> <init>
    309:309:int compare(java.lang.Object,java.lang.Object) -> compare
    310:310:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    312:312:java.util.Comparator reversed() -> reversed
kotlin.comparisons.ReverseOrderComparator -> kotlin.comparisons.ReverseOrderComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    315:315:void <init>() -> <init>
    315:315:int compare(java.lang.Object,java.lang.Object) -> compare
    316:316:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    318:318:java.util.Comparator reversed() -> reversed
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    14:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.AbstractCoroutineContextKey -> kotlin.coroutines.AbstractCoroutineContextKey:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    46:52:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1) -> <init>
    55:55:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key) -> isSubKey$kotlin_stdlib
    54:54:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element) -> tryCast$kotlin_stdlib
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> <init>
    111:111:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):111 -> <init>
    113:114:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    153:153:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    158:163:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    169:169:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    120:125:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    171:171:int hashCode() -> hashCode
    134:139:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    147:147:int size() -> size
    174:174:java.lang.String toString() -> toString
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    174:174:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    175:175:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.Continuation -> kotlin.coroutines.Continuation:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.ContinuationInterceptor -> kotlin.coroutines.ContinuationInterceptor:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    55:60:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    67:70:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    24:24:void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> kotlin.coroutines.ContinuationKt:
# {"id":"sourceFile","fileName":"Continuation.kt"}
    129:129:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutine
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    31:32:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    59:59:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    94:94:void <init>() -> <init>
kotlin.coroutines.intrinsics.CoroutineSingletons -> kotlin.coroutines.intrinsics.CoroutineSingletons:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    64:64:void <clinit>() -> <clinit>
    62:62:void <init>(java.lang.String,int) -> <init>
kotlin.coroutines.intrinsics.IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt:
    kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    122:124:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):126 -> createCoroutineUnintercepted
    143:143:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    168:168:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.<init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    168:168:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object):168 -> <init>
    172:172:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    172:172:java.lang.Object invokeSuspend(java.lang.Object):172 -> invokeSuspend
    179:179:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    179:179:java.lang.Object invokeSuspend(java.lang.Object):179 -> invokeSuspend
    180:180:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    180:180:java.lang.Object invokeSuspend(java.lang.Object):180 -> invokeSuspend
    182:182:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    182:182:java.lang.Object invokeSuspend(java.lang.Object):182 -> invokeSuspend
    174:174:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    174:174:java.lang.Object invokeSuspend(java.lang.Object):174 -> invokeSuspend
    175:175:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    175:175:java.lang.Object invokeSuspend(java.lang.Object):175 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    186:186:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.<init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    186:186:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object):186 -> <init>
    190:190:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
    197:197:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    197:197:java.lang.Object invokeSuspend(java.lang.Object):197 -> invokeSuspend
    198:198:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    198:198:java.lang.Object invokeSuspend(java.lang.Object):198 -> invokeSuspend
    200:200:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    200:200:java.lang.Object invokeSuspend(java.lang.Object):200 -> invokeSuspend
    192:192:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    192:192:java.lang.Object invokeSuspend(java.lang.Object):192 -> invokeSuspend
    193:193:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    193:193:java.lang.Object invokeSuspend(java.lang.Object):193 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    57:57:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> kotlin.coroutines.jvm.internal.BaseContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    14:18:void <init>(kotlin.coroutines.Continuation) -> <init>
    64:64:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    18:18:kotlin.coroutines.Continuation getCompletion() -> getCompletion
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    28:46:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.Boxing -> kotlin.coroutines.jvm.internal.Boxing:
# {"id":"sourceFile","fileName":"boxing.kt"}
    20:20:java.lang.Boolean boxBoolean(boolean) -> boxBoolean
    32:32:java.lang.Integer boxInt(int) -> boxInt
    36:36:java.lang.Long boxLong(long) -> boxLong
kotlin.coroutines.jvm.internal.CompletedContinuation -> kotlin.coroutines.jvm.internal.CompletedContinuation:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    124:124:void <init>() -> <init>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
kotlin.coroutines.jvm.internal.ContinuationImpl -> kotlin.coroutines.jvm.internal.ContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    100:101:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    102:102:void <init>(kotlin.coroutines.Continuation) -> <init>
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:113:kotlin.coroutines.Continuation intercepted() -> intercepted
    116:120:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> kotlin.coroutines.jvm.internal.CoroutineStackFrame:
# {"id":"sourceFile","fileName":"CoroutineStackFrame.kt"}
kotlin.coroutines.jvm.internal.DebugMetadata -> kotlin.coroutines.jvm.internal.DebugMetadata:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
kotlin.coroutines.jvm.internal.DebugMetadataKt -> kotlin.coroutines.jvm.internal.DebugMetadataKt:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    102:103:void checkDebugMetadataVersion(int,int) -> checkDebugMetadataVersion
    90:90:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getDebugMetadataAnnotation
    94:96:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getLabel
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getStackTraceElement
kotlin.coroutines.jvm.internal.DebugProbesKt -> kotlin.coroutines.jvm.internal.DebugProbesKt:
# {"id":"sourceFile","fileName":"DebugProbes.kt"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> kotlin.coroutines.jvm.internal.ModuleNameRetriever:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    61:61:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    76:84:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    66:72:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getModuleName
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    52:57:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> kotlin.coroutines.jvm.internal.RestrictedContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    83:86:void <init>(kotlin.coroutines.Continuation) -> <init>
    93:93:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda -> kotlin.coroutines.jvm.internal.RestrictedSuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    142:144:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    142:142:int getArity() -> getArity
    148:151:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.SuspendLambda -> kotlin.coroutines.jvm.internal.SuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    157:159:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    157:157:int getArity() -> getArity
    163:166:java.lang.String toString() -> toString
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    13:13:void <init>() -> <init>
    32:32:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    45:45:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.internal.PlatformImplementations$ReflectThrowable -> kotlin.internal.PlatformImplementations$ReflectThrowable:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    21:27:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    50:70:void <clinit>() -> <clinit>
    89:100:int getJavaVersion() -> getJavaVersion
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    46:48:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    10:10:int mod(int,int) -> mod
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    11:11:void <init>() -> <init>
    27:30:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    22:22:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    16:19:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    27:27:void <init>() -> <init>
    55:55:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    40:40:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    34:37:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
kotlin.io.ByteStreamsKt -> kotlin.io.ByteStreamsKt:
# {"id":"sourceFile","fileName":"IOStreams.kt"}
    105:110:long copyTo(java.io.InputStream,java.io.OutputStream,int) -> copyTo
    103:103:long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object) -> copyTo$default
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
# {"id":"sourceFile","fileName":"Closeable.kt"}
    57:62:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
kotlin.io.FilesKt -> kotlin.io.FilesKt:
    java.lang.String getExtension(java.io.File) -> getExtension
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String getNameWithoutExtension(java.io.File) -> getNameWithoutExtension
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.FilesKt__FilePathComponentsKt -> kotlin.io.FilesKt__FilePathComponentsKt:
# {"id":"sourceFile","fileName":"FilePathComponents.kt"}
kotlin.io.FilesKt__FileReadWriteKt -> kotlin.io.FilesKt__FileReadWriteKt:
# {"id":"sourceFile","fileName":"FileReadWrite.kt"}
kotlin.io.FilesKt__FileTreeWalkKt -> kotlin.io.FilesKt__FileTreeWalkKt:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
kotlin.io.FilesKt__UtilsKt -> kotlin.io.FilesKt__UtilsKt:
# {"id":"sourceFile","fileName":"Utils.kt"}
    92:92:java.lang.String getExtension(java.io.File) -> getExtension
    105:105:java.lang.String getNameWithoutExtension(java.io.File) -> getNameWithoutExtension
kotlin.jvm.JvmClassMappingKt -> kotlin.jvm.JvmClassMappingKt:
# {"id":"sourceFile","fileName":"JvmClassMapping.kt"}
    29:29:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> getJavaClass
    59:62:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> getJavaObjectType
kotlin.jvm.functions.Function0 -> kotlin.jvm.functions.Function0:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function10 -> kotlin.jvm.functions.Function10:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function11 -> kotlin.jvm.functions.Function11:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function12 -> kotlin.jvm.functions.Function12:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function13 -> kotlin.jvm.functions.Function13:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function14 -> kotlin.jvm.functions.Function14:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function15 -> kotlin.jvm.functions.Function15:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function16 -> kotlin.jvm.functions.Function16:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function17 -> kotlin.jvm.functions.Function17:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function18 -> kotlin.jvm.functions.Function18:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function19 -> kotlin.jvm.functions.Function19:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function20 -> kotlin.jvm.functions.Function20:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function21 -> kotlin.jvm.functions.Function21:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function22 -> kotlin.jvm.functions.Function22:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function3 -> kotlin.jvm.functions.Function3:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function4 -> kotlin.jvm.functions.Function4:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function5 -> kotlin.jvm.functions.Function5:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function6 -> kotlin.jvm.functions.Function6:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function7 -> kotlin.jvm.functions.Function7:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function8 -> kotlin.jvm.functions.Function8:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function9 -> kotlin.jvm.functions.Function9:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    8:8:void <init>(java.lang.Object[]) -> <init>
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.CallableReference:
    48:48:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    65:65:void <init>(java.lang.Object) -> <init>
    69:74:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean) -> <init>
    86:89:kotlin.reflect.KCallable compute() -> compute
    81:81:java.lang.Object getBoundReceiver() -> getBoundReceiver
    120:120:java.lang.String getName() -> getName
    111:111:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    132:132:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.CallableReference$NoReceiver:
    52:52:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> access$000
kotlin.jvm.internal.ClassBasedDeclarationContainer -> kotlin.jvm.internal.ClassBasedDeclarationContainer:
# {"id":"sourceFile","fileName":"ClassBasedDeclarationContainer.kt"}
kotlin.jvm.internal.ClassReference -> kotlin.jvm.internal.ClassReference:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    101:102:void <clinit>() -> <clinit>
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1559:1559:void <clinit>():107 -> <clinit>
    1591:1592:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1591:1592:void <clinit>():107 -> <clinit>
    107:155:void <clinit>() -> <clinit>
    1253:1254:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1253:1254:void <clinit>():155 -> <clinit>
    132:159:void <clinit>() -> <clinit>
    438:438:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    438:438:void <clinit>():163 -> <clinit>
    388:388:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    388:388:void <clinit>():163 -> <clinit>
    1238:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1238:1239:void <clinit>():163 -> <clinit>
    388:388:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    388:388:void <clinit>():163 -> <clinit>
    163:163:void <clinit>() -> <clinit>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> <init>
    10:10:void <init>(java.lang.Class):10 -> <init>
    91:91:boolean equals(java.lang.Object) -> equals
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> getJClass
    10:10:java.lang.Class getJClass():10 -> getJClass
    94:94:int hashCode() -> hashCode
    97:97:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> kotlin.jvm.internal.ClassReference$Companion:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    99:99:void <init>() -> <init>
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    30:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:34:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    43:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    22:22:java.lang.Object[] toArray(java.util.Collection) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    23:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.FunctionReference -> kotlin.jvm.internal.FunctionReference:
    45:45:void <init>(int,java.lang.Object) -> <init>
    50:52:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    69:69:kotlin.reflect.KCallable computeReflected() -> computeReflected
    105:116:boolean equals(java.lang.Object) -> equals
    57:57:int getArity() -> getArity
    123:123:int hashCode() -> hashCode
    128:134:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> kotlin.jvm.internal.FunctionReferenceImpl:
    24:24:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
    16:16:void <init>() -> <init>
    167:167:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    87:87:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> checkExpressionValueIsNotNull
    25:25:void checkNotNull(java.lang.Object) -> checkNotNull
    31:31:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    93:93:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    131:131:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    125:125:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> checkParameterIsNotNull
    144:155:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    251:251:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    255:266:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    20:20:java.lang.String stringPlus(java.lang.String,java.lang.Object) -> stringPlus
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    136:136:void throwParameterIsNullIAE(java.lang.String) -> throwParameterIsNullIAE
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.PackageReference -> kotlin.jvm.internal.PackageReference:
# {"id":"sourceFile","fileName":"PackageReference.kt"}
    10:13:void <init>(java.lang.Class,java.lang.String) -> <init>
    19:19:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.Class getJClass() -> getJClass
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference -> kotlin.jvm.internal.PropertyReference:
    15:15:void <init>() -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    49:57:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    69:74:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference0 -> kotlin.jvm.internal.PropertyReference0:
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    35:35:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.PropertyReference0Impl -> kotlin.jvm.internal.PropertyReference0Impl:
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.Ref$BooleanRef -> kotlin.jvm.internal.Ref$BooleanRef:
    85:85:void <init>() -> <init>
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$IntRef -> kotlin.jvm.internal.Ref$IntRef:
    40:40:void <init>() -> <init>
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$LongRef -> kotlin.jvm.internal.Ref$LongRef:
    49:49:void <init>() -> <init>
    54:54:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> kotlin.jvm.internal.Ref$ObjectRef:
    13:13:void <init>() -> <init>
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
    26:39:void <clinit>() -> <clinit>
    89:89:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    59:59:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    51:51:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class) -> getOrCreateKotlinPackage
    95:95:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    78:78:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    83:83:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
    14:14:void <init>() -> <init>
    30:30:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    26:26:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.StringCompanionObject -> kotlin.jvm.internal.StringCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    110:110:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> kotlin.jvm.internal.TypeIntrinsics:
    15:15:void <init>() -> <init>
    123:126:java.util.Collection asMutableCollection(java.lang.Object) -> asMutableCollection
    151:154:java.util.List asMutableList(java.lang.Object) -> asMutableList
    341:342:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> beforeCheckcastToFunctionOfArity
    138:141:java.util.Collection castToCollection(java.lang.Object) -> castToCollection
    166:169:java.util.List castToList(java.lang.Object) -> castToList
    258:327:int getFunctionArity(java.lang.Object) -> getFunctionArity
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> isFunctionOfArity
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    21:22:void throwCce(java.lang.Object,java.lang.String) -> throwCce
    26:26:void throwCce(java.lang.String) -> throwCce
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> throwCce
kotlin.jvm.internal.markers.KMappedMarker -> kotlin.jvm.internal.markers.KMappedMarker:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    35:35:void <init>() -> <init>
    39:39:int nextBits(int) -> nextBits
    44:44:boolean nextBoolean() -> nextBoolean
    41:41:int nextInt() -> nextInt
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    50:51:void <init>() -> <init>
    56:56:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    52:52:java.util.Random initialValue() -> initialValue
kotlin.random.Random -> kotlin.random.Random:
# {"id":"sourceFile","fileName":"Random.kt"}
    271:271:void <clinit>() -> <clinit>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> <init>
    19:19:void <init>():19 -> <init>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
    65:82:int nextInt(int,int) -> nextInt
kotlin.random.Random$Default -> kotlin.random.Random$Default:
# {"id":"sourceFile","fileName":"Random.kt"}
    270:270:void <init>() -> <init>
    281:281:int nextBits(int) -> nextBits
    290:290:boolean nextBoolean() -> nextBoolean
    282:282:int nextInt() -> nextInt
    284:284:int nextInt(int,int) -> nextInt
kotlin.random.RandomKt -> kotlin.random.RandomKt:
# {"id":"sourceFile","fileName":"Random.kt"}
    382:382:java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object) -> boundsErrorMessage
    378:378:void checkRangeBounds(int,int) -> checkRangeBounds
    372:372:int fastLog2(int) -> fastLog2
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformThreadLocalRandom.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
    15:15:int nextInt(int,int) -> nextInt
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    123:123:void <init>() -> <init>
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:52:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    68:68:void <clinit>() -> <clinit>
    44:44:void <init>(int,int) -> <init>
    44:44:kotlin.ranges.IntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    48:48:boolean contains(int) -> contains
    58:59:boolean equals(java.lang.Object) -> equals
    46:46:java.lang.Integer getEndInclusive() -> getEndInclusive
    45:45:java.lang.Integer getStart() -> getStart
    62:62:int hashCode() -> hashCode
    55:55:boolean isEmpty() -> isEmpty
    64:64:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    66:66:void <init>() -> <init>
    68:68:kotlin.ranges.IntRange getEMPTY() -> getEMPTY
kotlin.ranges.RangesKt -> kotlin.ranges.RangesKt:
    int coerceAtLeast(int,int) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    long coerceAtLeast(long,long) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    int coerceAtMost(int,int) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    long coerceAtMost(long,long) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    int coerceIn(int,int,int) -> coerceIn
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.ranges.IntProgression downTo(int,int) -> downTo
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.ranges.IntRange until(int,int) -> until
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    153:153:void checkStepIsPositive(boolean,java.lang.Number) -> checkStepIsPositive
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    1235:1235:int coerceIn(int,int,int) -> coerceIn
    650:650:kotlin.ranges.IntProgression downTo(int,int) -> downTo
    788:789:kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
    916:917:kotlin.ranges.IntRange until(int,int) -> until
kotlin.reflect.KCallable -> kotlin.reflect.KCallable:
# {"id":"sourceFile","fileName":"KCallable.kt"}
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.reflect.KDeclarationContainer -> kotlin.reflect.KDeclarationContainer:
# {"id":"sourceFile","fileName":"KDeclarationContainer.kt"}
kotlin.reflect.KFunction -> kotlin.reflect.KFunction:
# {"id":"sourceFile","fileName":"KFunction.kt"}
kotlin.reflect.KProperty -> kotlin.reflect.KProperty:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty0 -> kotlin.reflect.KProperty0:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:24:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropSequence -> kotlin.sequences.DropSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> <init>
    478:478:void <init>(kotlin.sequences.Sequence,int):478 -> <init>
    479:483:void <init>(kotlin.sequences.Sequence,int) -> <init>
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> access$getCount$p
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> access$getSequence$p
    478:478:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence):478 -> access$getSequence$p
    486:486:kotlin.sequences.Sequence drop(int) -> drop
    489:489:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropSequence$iterator$1 -> kotlin.sequences.DropSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    489:491:void <init>(kotlin.sequences.DropSequence) -> <init>
    495:497:void drop() -> drop
    507:508:boolean hasNext() -> hasNext
    502:503:java.lang.Object next() -> next
kotlin.sequences.DropTakeSequence -> kotlin.sequences.DropTakeSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
kotlin.sequences.Sequence -> kotlin.sequences.Sequence:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequenceBuilderIterator -> kotlin.sequences.SequenceBuilderIterator:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    102:102:void <init>() -> <init>
    153:156:java.lang.Throwable exceptionalState() -> exceptionalState
    186:186:kotlin.coroutines.CoroutineContext getContext() -> getContext
    110:127:boolean hasNext() -> hasNext
    132:145:java.lang.Object next() -> next
    150:150:java.lang.Object nextNotReady() -> nextNotReady
    181:182:void resumeWith(java.lang.Object) -> resumeWith
    106:106:void setNextStep(kotlin.coroutines.Continuation) -> setNextStep
    161:165:java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> yield
    170:175:java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequenceScope -> kotlin.sequences.SequenceScope:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    49:49:void <init>() -> <init>
    90:90:java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequencesKt -> kotlin.sequences.SequencesKt:
    java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toList(kotlin.sequences.Sequence) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    35:36:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> iterator
    25:25:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(kotlin.jvm.functions.Function2):21 -> <init>
    25:25:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequenceBuilderKt.sequence(kotlin.jvm.functions.Function2) -> iterator
    25:25:java.util.Iterator iterator():681 -> iterator
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    30:30:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    626:626:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.util.Iterator):21 -> <init>
    30:30:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequencesKt.asSequence(java.util.Iterator) -> iterator
    30:30:java.util.Iterator iterator():681 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2912:2912:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
    404:408:kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
    2881:2890:java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    2905:2905:java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    2904:2904:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    1052:1052:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
    787:788:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    808:808:java.util.List toList(kotlin.sequences.Sequence) -> toList
    817:817:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    16:16:void <init>(kotlin.sequences.Sequence):16 -> <init>
    2912:2912:java.lang.Iterable kotlin.sequences.SequencesKt___SequencesKt.asIterable(kotlin.sequences.Sequence) -> iterator
    2912:2912:java.util.Iterator iterator():71 -> iterator
kotlin.sequences.TransformingSequence -> kotlin.sequences.TransformingSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    205:206:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    205:205:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> access$getSequence$p
    205:205:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> access$getTransformer$p
    207:207:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> kotlin.sequences.TransformingSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    207:208:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    214:214:boolean hasNext() -> hasNext
    210:210:java.lang.Object next() -> next
kotlin.text.CharsKt -> kotlin.text.CharsKt:
    int checkRadix(int) -> checkRadix
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
    313:314:int checkRadix(int) -> checkRadix
    306:306:int digitOf(char,int) -> digitOf
    98:98:boolean isWhitespace(char) -> isWhitespace
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    237:240:boolean equals(char,char,boolean) -> equals
kotlin.text.Charsets -> kotlin.text.Charsets:
# {"id":"sourceFile","fileName":"Charsets.kt"}
    29:61:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    92:94:java.nio.charset.Charset UTF32_BE() -> UTF32_BE
    80:82:java.nio.charset.Charset UTF32_LE() -> UTF32_LE
kotlin.text.DelimitedRangesSequence -> kotlin.text.DelimitedRangesSequence:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1171:1175:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1171:1171:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> access$getGetNextMatch$p
    1171:1171:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> access$getInput$p
    1171:1171:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> access$getLimit$p
    1171:1171:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> access$getStartIndex$p
    1178:1178:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> kotlin.text.DelimitedRangesSequence$iterator$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1178:1181:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1186:1205:void calcNext() -> calcNext
    1222:1224:boolean hasNext() -> hasNext
    1178:1178:java.lang.Object next() -> next
    1210:1217:kotlin.ranges.IntRange next() -> next
kotlin.text.Regex -> kotlin.text.Regex:
# {"id":"sourceFile","fileName":"Regex.kt"}
    83:83:java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex) -> <init>
    83:83:void <init>(java.util.regex.Pattern):83 -> <init>
    85:85:void <init>(java.util.regex.Pattern) -> <init>
    89:89:void <init>(java.lang.String) -> <init>
    107:107:boolean matches(java.lang.CharSequence) -> matches
    179:179:java.lang.String replace(java.lang.CharSequence,java.lang.String) -> replace
    298:298:java.lang.String toString() -> toString
kotlin.text.Regex$Companion -> kotlin.text.Regex$Companion:
# {"id":"sourceFile","fileName":"Regex.kt"}
    317:317:void <init>() -> <init>
kotlin.text.StringsKt -> kotlin.text.StringsKt:
    void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String concatToString(char[]) -> concatToString
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String concatToString(char[],int,int) -> concatToString
      # {"id":"com.android.tools.r8.synthesized"}
    boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean equals(java.lang.String,java.lang.String,boolean) -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean isBlank(java.lang.CharSequence) -> isBlank
      # {"id":"com.android.tools.r8.synthesized"}
    int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List lines(java.lang.CharSequence) -> lines
      # {"id":"com.android.tools.r8.synthesized"}
    boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence) -> removeSurrounding
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String repeat(java.lang.CharSequence,int) -> repeat
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
      # {"id":"com.android.tools.r8.synthesized"}
    boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
      # {"id":"com.android.tools.r8.synthesized"}
    boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String take(java.lang.String,int) -> take
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence trim(java.lang.CharSequence) -> trim
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String trimIndent(java.lang.String) -> trimIndent
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
    85:88:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
    102:103:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String) -> getIndentFunction$StringsKt__IndentKt
    151:152:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> indentWidth$StringsKt__IndentKt
    151:152:int indentWidth$StringsKt__IndentKt(java.lang.String):99 -> indentWidth$StringsKt__IndentKt
    99:99:int indentWidth$StringsKt__IndentKt(java.lang.String) -> indentWidth$StringsKt__IndentKt
    69:69:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> replaceIndent
    766:766:java.lang.String replaceIndent(java.lang.String,java.lang.String):72 -> replaceIndent
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> replaceIndent
    857:857:java.lang.String replaceIndent(java.lang.String,java.lang.String):72 -> replaceIndent
    72:72:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> replaceIndent
    1549:1549:java.lang.String replaceIndent(java.lang.String,java.lang.String):73 -> replaceIndent
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> replaceIndent
    1620:1621:java.lang.String replaceIndent(java.lang.String,java.lang.String):73 -> replaceIndent
    71:76:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    111:111:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    111:111:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndent
    1569:1569:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1861:1861:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndent
    1861:1861:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndent
    1579:1579:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    113:113:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    76:76:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    116:116:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndent
    1579:1579:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    118:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    118:119:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    34:37:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    111:111:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    111:111:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1569:1569:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    1861:1861:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1861:1861:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1579:1579:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    113:113:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    151:152:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    151:152:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    38:42:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    116:116:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1579:1579:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    118:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    118:119:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):37 -> replaceIndentByMargin
    34:34:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    63:63:java.lang.String trimIndent(java.lang.String) -> trimIndent
    26:26:java.lang.String trimMargin(java.lang.String,java.lang.String) -> trimMargin
    25:25:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
kotlin.text.StringsKt__IndentKt$getIndentFunction$1 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$1:
# {"id":"sourceFile","fileName":"Indent.kt"}
    102:102:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$2:
# {"id":"sourceFile","fileName":"Indent.kt"}
    103:103:java.lang.Object invoke(java.lang.Object) -> invoke
    103:103:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
    57:57:java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
    67:124:java.lang.Integer toIntOrNull(java.lang.String,int) -> toIntOrNull
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    176:176:java.lang.String concatToString(char[]) -> concatToString
    192:193:java.lang.String concatToString(char[],int,int) -> concatToString
    440:442:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
    438:438:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
    57:59:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    1722:1723:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> isBlank
    1722:1723:boolean isBlank(java.lang.CharSequence):621 -> isBlank
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    654:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    652:652:boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
    795:809:java.lang.String repeat(java.lang.CharSequence,int) -> repeat
    70:72:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    1170:1170:void kotlin.text.StringsKt___StringsKt.forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    1170:1170:java.lang.String replace(java.lang.String,char,char,boolean):73 -> replace
    72:74:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    88:105:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    68:68:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
    86:86:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    418:420:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    429:431:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
    416:416:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
    427:427:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> access$findAnyOf
    1145:1148:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1159:1159:boolean contains(java.lang.CharSequence,char,boolean) -> contains
    1144:1144:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    1158:1158:boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
    868:871:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    867:867:boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> endsWith$default
    993:1002:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1003 -> findAnyOf$StringsKt__StringsKt
    1003:1008:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1009 -> findAnyOf$StringsKt__StringsKt
    1009:1011:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    373:373:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> getIndices
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    1087:1090:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    974:985:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1086:1086:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    933:939:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    12788:12788:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> indexOfAny
    12788:12788:int indexOfAny(java.lang.CharSequence,char[],int,boolean):940 -> indexOfAny
    940:940:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1132:1135:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> lastIndexOf
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    1131:1131:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    956:963:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12788:12788:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12788:12788:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    964:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    1394:1394:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence) -> lineSequence
    1401:1401:java.util.List lines(java.lang.CharSequence) -> lines
    1240:1242:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1263:1266:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1239:1239:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    1262:1262:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    821:826:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    604:605:java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
    626:627:java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
    650:651:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    668:668:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence) -> removeSurrounding
    1271:1271:void requireNonNegativeLimit(int) -> requireNonNegativeLimit
    1302:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> split
    1549:1549:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1620:1621:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1309:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1330:1334:java.util.List split(java.lang.CharSequence,char[],boolean,int) -> split
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> split
    1549:1549:java.util.List split(java.lang.CharSequence,char[],boolean,int):1334 -> split
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1620:1621:java.util.List split(java.lang.CharSequence,char[],boolean,int):1334 -> split
    1334:1334:java.util.List split(java.lang.CharSequence,char[],boolean,int) -> split
    1346:1364:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int) -> split$StringsKt__StringsKt
    1301:1301:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
    1329:1329:java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
    1288:1288:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> splitToSequence
    1287:1287:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    848:851:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    847:847:boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> startsWith$default
    423:423:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> substring
    457:458:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    456:456:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    484:485:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
    493:494:java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String) -> substringAfterLast
    483:483:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    492:492:java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    430:431:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    439:440:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    429:429:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    438:438:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    475:476:java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String) -> substringBeforeLast
    474:474:java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
    80:85:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    80:85:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1242:1242:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1243:1243:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:kotlin.Pair invoke(java.lang.CharSequence,int):1266 -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> kotlin.text.StringsKt__StringsKt$splitToSequence$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1288:1288:java.lang.Object invoke(java.lang.Object) -> invoke
    1288:1288:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
# {"id":"sourceFile","fileName":"_StringsJvm.kt"}
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    338:339:java.lang.String drop(java.lang.String,int) -> drop
    566:567:java.lang.String take(java.lang.String,int) -> take
kotlinx.coroutines.AbstractCoroutine -> kotlinx.coroutines.AbstractCoroutine:
# {"id":"sourceFile","fileName":"AbstractCoroutine.kt"}
    41:58:void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean) -> <init>
    105:105:void afterResume(java.lang.Object) -> afterResume
    86:86:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    58:58:kotlin.coroutines.CoroutineContext getContext() -> getContext
    63:63:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    108:108:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    65:65:boolean isActive() -> isActive
    112:113:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    90:93:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    100:102:void resumeWith(java.lang.Object) -> resumeWith
    126:126:void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2) -> start
kotlinx.coroutines.AbstractTimeSource -> kotlinx.coroutines.AbstractTimeSource:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.AbstractTimeSourceKt -> kotlinx.coroutines.AbstractTimeSourceKt:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.Active -> kotlinx.coroutines.Active:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    550:550:void <init>() -> <init>
kotlinx.coroutines.BeforeResumeCancelHandler -> kotlinx.coroutines.BeforeResumeCancelHandler:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    566:566:void <init>() -> <init>
kotlinx.coroutines.BlockingCoroutine -> kotlinx.coroutines.BlockingCoroutine:
# {"id":"sourceFile","fileName":"Builders.kt"}
    64:66:void <init>(kotlin.coroutines.CoroutineContext,java.lang.Thread,kotlinx.coroutines.EventLoop) -> <init>
    72:73:void afterCompletion(java.lang.Object) -> afterCompletion
    78:98:java.lang.Object joinBlocking() -> joinBlocking
kotlinx.coroutines.BlockingEventLoop -> kotlinx.coroutines.BlockingEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    22:23:void <init>(java.lang.Thread) -> <init>
    22:22:java.lang.Thread getThread() -> getThread
kotlinx.coroutines.BuildersKt -> kotlinx.coroutines.BuildersKt:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2) -> launch
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object) -> launch$default
    1:1:java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2) -> runBlocking
    1:1:java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object) -> runBlocking$default
    1:1:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
kotlinx.coroutines.BuildersKt__BuildersKt -> kotlinx.coroutines.BuildersKt__BuildersKt:
# {"id":"sourceFile","fileName":"Builders.kt"}
    42:59:java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2) -> runBlocking
    17:38:java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object) -> runBlocking$default
kotlinx.coroutines.BuildersKt__Builders_commonKt -> kotlinx.coroutines.BuildersKt__Builders_commonKt:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    52:56:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2) -> launch
    47:49:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object) -> launch$default
    150:163:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
    95:95:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> withContext
    95:95:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):165 -> withContext
    166:166:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> withContext
    99:99:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):165 -> withContext
    148:172:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
kotlinx.coroutines.CancelFutureOnCancel -> kotlinx.coroutines.CancelFutureOnCancel:
# {"id":"sourceFile","fileName":"Future.kt"}
    45:45:void <init>(java.util.concurrent.Future) -> <init>
    45:45:java.lang.Object invoke(java.lang.Object) -> invoke
    49:49:void invoke(java.lang.Throwable) -> invoke
    51:51:java.lang.String toString() -> toString
kotlinx.coroutines.CancelHandler -> kotlinx.coroutines.CancelHandler:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    558:558:void <init>() -> <init>
kotlinx.coroutines.CancelHandlerBase -> kotlinx.coroutines.CancelHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    15:15:void <init>() -> <init>
kotlinx.coroutines.CancellableContinuation -> kotlinx.coroutines.CancellableContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
kotlinx.coroutines.CancellableContinuation$DefaultImpls -> kotlinx.coroutines.CancellableContinuation$DefaultImpls:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    78:78:java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object) -> tryResume$default
kotlinx.coroutines.CancellableContinuationImpl -> kotlinx.coroutines.CancellableContinuationImpl:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    29:29:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    27:27:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> <init>
    27:27:void <init>(kotlin.coroutines.Continuation,int):27 -> <init>
    34:34:kotlin.coroutines.CoroutineContext getContext() -> <init>
    34:34:void <init>(kotlin.coroutines.Continuation,int):34 -> <init>
    62:73:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    482:482:java.lang.Void alreadyResumedError(java.lang.Object) -> alreadyResumedError
    215:215:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable) -> callCancelHandler
    200:202:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    200:202:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):215 -> callCancelHandler
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> callCancelHandler
    22:22:void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable):212 -> callCancelHandler
    200:202:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    200:202:void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable):212 -> callCancelHandler
    219:224:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable) -> callOnCancellation
    175:598:boolean cancel(java.lang.Throwable) -> cancel
    143:596:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    168:170:boolean cancelLater(java.lang.Throwable) -> cancelLater
    513:513:void completeResume(java.lang.Object) -> completeResume
    495:497:void detachChild$kotlinx_coroutines_core() -> detachChild$kotlinx_coroutines_core
    488:488:void detachChildIfNonResuable() -> detachChildIfNonResuable
    395:397:void dispatchResume(int) -> dispatchResume
    133:133:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    34:34:kotlin.coroutines.CoroutineContext getContext() -> getContext
    233:233:java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job) -> getContinuationCancellationCause
    27:27:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    536:536:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    257:298:java.lang.Object getResult() -> getResult
    58:58:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getResult
    58:58:java.lang.Object getResult():299 -> getResult
    289:302:java.lang.Object getResult() -> getResult
    58:58:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getResult
    58:58:java.lang.Object getResult():289 -> getResult
    77:77:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    86:88:java.lang.String getStateDebugRepresentation() -> getStateDebugRepresentation
    529:529:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    98:106:void initCancellability() -> initCancellability
    306:312:kotlinx.coroutines.DisposableHandle installParentHandle() -> installParentHandle
    334:630:void invokeOnCancellation(kotlin.jvm.functions.Function1) -> invokeOnCancellation
    81:81:boolean isCompleted() -> isCompleted
    110:110:boolean isReusable() -> isReusable
    392:392:kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1) -> makeCancelHandler
    388:388:void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object) -> multipleHandlersError
    189:192:void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable) -> parentCancelled$kotlinx_coroutines_core
    322:324:void releaseClaimedReusableContinuation() -> releaseClaimedReusableContinuation
    120:128:boolean resetStateReusable() -> resetStateReusable
    331:331:void resume(java.lang.Object,kotlin.jvm.functions.Function1) -> resume
    427:632:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1) -> resumeImpl
    420:420:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeImpl$default
    517:518:void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object) -> resumeUndispatched
    328:328:void resumeWith(java.lang.Object) -> resumeWith
    407:416:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object) -> resumedState
    137:137:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    540:540:java.lang.String toString() -> toString
    502:502:java.lang.Object tryResume(java.lang.Object,java.lang.Object) -> tryResume
    505:505:java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> tryResume
    248:623:boolean tryResume() -> tryResume
    462:634:kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> tryResumeImpl
    508:508:java.lang.Object tryResumeWithException(java.lang.Throwable) -> tryResumeWithException
    238:621:boolean trySuspend() -> trySuspend
kotlinx.coroutines.CancellableContinuationImplKt -> kotlinx.coroutines.CancellableContinuationImplKt:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    20:20:void <clinit>() -> <clinit>
kotlinx.coroutines.CancellableContinuationKt -> kotlinx.coroutines.CancellableContinuationKt:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    380:380:void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle) -> disposeOnCancellation
    340:358:kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation) -> getOrCreateCancellableContinuation
    366:366:void removeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> removeOnCancellation
kotlinx.coroutines.CancelledContinuation -> kotlinx.coroutines.CancelledContinuation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    63:64:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable,boolean) -> <init>
    65:65:boolean makeResumed() -> makeResumed
kotlinx.coroutines.ChildContinuation -> kotlinx.coroutines.ChildContinuation:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1471:1472:void <init>(kotlinx.coroutines.CancellableContinuationImpl) -> <init>
    1470:1470:java.lang.Object invoke(java.lang.Object) -> invoke
    1474:1474:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildHandle -> kotlinx.coroutines.ChildHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.ChildHandleNode -> kotlinx.coroutines.ChildHandleNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1462:1463:void <init>(kotlinx.coroutines.ChildJob) -> <init>
    1466:1466:boolean childCancelled(java.lang.Throwable) -> childCancelled
    1464:1464:kotlinx.coroutines.Job getParent() -> getParent
    1461:1461:java.lang.Object invoke(java.lang.Object) -> invoke
    1465:1465:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildJob -> kotlinx.coroutines.ChildJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.CompletableJob -> kotlinx.coroutines.CompletableJob:
# {"id":"sourceFile","fileName":"CompletableJob.kt"}
kotlinx.coroutines.CompletedContinuation -> kotlinx.coroutines.CompletedContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):579 -> <init>
    580:580:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable) -> <init>
    581:581:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    581:581:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):581 -> <init>
    582:582:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    582:582:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):582 -> <init>
    583:583:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    583:583:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):583 -> <init>
    584:584:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    584:584:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):584 -> <init>
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    586:586:boolean getCancelled() -> getCancelled
    589:590:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable) -> invokeHandlers
kotlinx.coroutines.CompletedExceptionally -> kotlinx.coroutines.CompletedExceptionally:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    42:46:void <init>(java.lang.Throwable,boolean) -> <init>
    42:42:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    47:47:boolean getHandled() -> getHandled
    48:48:boolean makeHandled() -> makeHandled
    49:49:java.lang.String toString() -> toString
kotlinx.coroutines.CompletedWithCancellation -> kotlinx.coroutines.CompletedWithCancellation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    31:33:void <init>(java.lang.Object,kotlin.jvm.functions.Function1) -> <init>
kotlinx.coroutines.CompletionHandlerBase -> kotlinx.coroutines.CompletionHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    9:9:void <init>() -> <init>
kotlinx.coroutines.CompletionHandlerException -> kotlinx.coroutines.CompletionHandlerException:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.CompletionStateKt -> kotlinx.coroutines.CompletionStateKt:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    26:29:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation) -> recoverResult
    14:16:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1) -> toState
    19:21:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> toState
    12:12:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> toState$default
kotlinx.coroutines.CopyableThreadContextElement -> kotlinx.coroutines.CopyableThreadContextElement:
# {"id":"sourceFile","fileName":"ThreadContextElement.kt"}
kotlinx.coroutines.CoroutineContextKt -> kotlinx.coroutines.CoroutineContextKt:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    54:88:kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean) -> foldCopies
    40:40:boolean hasCopyableElements(kotlin.coroutines.CoroutineContext) -> hasCopyableElements
    19:22:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext) -> newCoroutineContext
    35:36:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> newCoroutineContext
    148:151:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame) -> undispatchedCompletion
    125:141:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateUndispatchedCompletion
kotlinx.coroutines.CoroutineContextKt$foldCopies$1 -> kotlinx.coroutines.CoroutineContextKt$foldCopies$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    80:80:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    82:85:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 -> kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    63:63:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    64:76:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 -> kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    40:40:java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element) -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.CoroutineDispatcher -> kotlinx.coroutines.CoroutineDispatcher:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    32:32:void <init>() -> <init>
    31:31:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    140:140:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> interceptContinuation
    100:101:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int) -> limitedParallelism
    31:31:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    147:148:void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> releaseInterceptedContinuation
    166:166:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> kotlinx.coroutines.CoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    36:38:void <init>() -> <init>
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> kotlinx.coroutines.CoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    38:38:java.lang.Object invoke(java.lang.Object) -> invoke
    38:38:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineExceptionHandler -> kotlinx.coroutines.CoroutineExceptionHandler:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
kotlinx.coroutines.CoroutineExceptionHandler$Key -> kotlinx.coroutines.CoroutineExceptionHandler$Key:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    102:102:void <init>() -> <init>
kotlinx.coroutines.CoroutineExceptionHandlerImplKt -> kotlinx.coroutines.CoroutineExceptionHandlerImplKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    20:23:void <clinit>() -> <clinit>
    46:61:void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineExceptionImpl
kotlinx.coroutines.CoroutineExceptionHandlerKt -> kotlinx.coroutines.CoroutineExceptionHandlerKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    24:33:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineException
    38:38:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):39 -> handlerException
kotlinx.coroutines.CoroutineScope -> kotlinx.coroutines.CoroutineScope:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
kotlinx.coroutines.CoroutineScopeKt -> kotlinx.coroutines.CoroutineScopeKt:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
    277:277:kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext) -> CoroutineScope
    262:264:java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> coroutineScope
    137:137:boolean isActive(kotlinx.coroutines.CoroutineScope) -> isActive
kotlinx.coroutines.CoroutineStart -> kotlinx.coroutines.CoroutineStart:
# {"id":"sourceFile","fileName":"CoroutineStart.kt"}
    37:76:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    109:113:void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
    122:122:boolean isLazy() -> isLazy
kotlinx.coroutines.CoroutineStart$WhenMappings -> kotlinx.coroutines.CoroutineStart$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineStart.kt"}
kotlinx.coroutines.CoroutinesInternalError -> kotlinx.coroutines.CoroutinesInternalError:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    28:28:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.DebugStringsKt -> kotlinx.coroutines.DebugStringsKt:
# {"id":"sourceFile","fileName":"DebugStrings.kt"}
    21:21:java.lang.String getClassSimpleName(java.lang.Object) -> getClassSimpleName
    13:13:java.lang.String getHexAddress(java.lang.Object) -> getHexAddress
    16:18:java.lang.String toDebugString(kotlin.coroutines.Continuation) -> toDebugString
kotlinx.coroutines.DefaultExecutor -> kotlinx.coroutines.DefaultExecutor:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    32:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    177:181:void acknowledgeShutdownIfNeeded() -> acknowledgeShutdownIfNeeded
    135:138:java.lang.Thread createThreadSync() -> createThreadSync
    68:69:void enqueue(java.lang.Runnable) -> enqueue
    49:49:java.lang.Thread getThread() -> getThread
    60:60:boolean isShutDown() -> isShutDown
    63:63:boolean isShutdownRequested() -> isShutdownRequested
    154:157:boolean notifyStartup() -> notifyStartup
    74:74:void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> reschedule
    101:129:void run() -> run
    84:85:void shutdown() -> shutdown
    78:78:void shutdownError() -> shutdownError
kotlinx.coroutines.DefaultExecutorKt -> kotlinx.coroutines.DefaultExecutorKt:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    11:13:void <clinit>() -> <clinit>
    13:13:kotlinx.coroutines.Delay getDefaultDelay() -> getDefaultDelay
    17:24:kotlinx.coroutines.Delay initializeDefaultDelay() -> initializeDefaultDelay
kotlinx.coroutines.Delay -> kotlinx.coroutines.Delay:
# {"id":"sourceFile","fileName":"Delay.kt"}
kotlinx.coroutines.DelayKt -> kotlinx.coroutines.DelayKt:
# {"id":"sourceFile","fileName":"Delay.kt"}
    112:112:java.lang.Object delay(long,kotlin.coroutines.Continuation) -> delay
    315:321:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> delay
    315:321:java.lang.Object delay(long,kotlin.coroutines.Continuation):113 -> delay
    116:116:java.lang.Object delay(long,kotlin.coroutines.Continuation) -> delay
    314:324:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> delay
    314:324:java.lang.Object delay(long,kotlin.coroutines.Continuation):113 -> delay
    139:139:kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext) -> getDelay
kotlinx.coroutines.DiagnosticCoroutineContextException -> kotlinx.coroutines.DiagnosticCoroutineContextException:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    32:32:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    39:39:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    34:34:java.lang.String getLocalizedMessage() -> getLocalizedMessage
kotlinx.coroutines.DispatchedCoroutine -> kotlinx.coroutines.DispatchedCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    223:226:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    251:251:void afterCompletion(java.lang.Object) -> afterCompletion
    255:257:void afterResume(java.lang.Object) -> afterResume
    261:264:java.lang.Object getResult() -> getResult
    241:273:boolean tryResume() -> tryResume
    231:271:boolean trySuspend() -> trySuspend
kotlinx.coroutines.DispatchedTask -> kotlinx.coroutines.DispatchedTask:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    51:52:void <init>(int) -> <init>
    79:79:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handleFatalException
    75:75:void handleFatalException(java.lang.Throwable,java.lang.Throwable):140 -> handleFatalException
    144:146:void handleFatalException(java.lang.Throwable,java.lang.Throwable) -> handleFatalException
    83:88:void run() -> run
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    107:111:void run():88 -> run
    89:100:void run() -> run
    219:219:void kotlinx.coroutines.DispatchedTaskKt.resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable) -> run
    219:219:void run():101 -> run
    104:109:void run() -> run
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    118:119:void run():88 -> run
    114:115:void run() -> run
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    118:119:void run():88 -> run
    114:115:void run() -> run
kotlinx.coroutines.DispatchedTaskKt -> kotlinx.coroutines.DispatchedTaskKt:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    152:166:void dispatch(kotlinx.coroutines.DispatchedTask,int) -> dispatch
    173:177:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resume
    255:255:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    107:111:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resume
    256:257:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    118:119:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    178:178:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    183:186:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    199:199:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    199:199:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):189 -> resumeUnconfined
    190:190:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    204:213:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    204:213:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):189 -> resumeUnconfined
kotlinx.coroutines.DispatcherExecutor -> kotlinx.coroutines.DispatcherExecutor:
# {"id":"sourceFile","fileName":"Executors.kt"}
    111:111:void execute(java.lang.Runnable) -> execute
    112:112:java.lang.String toString() -> toString
kotlinx.coroutines.Dispatchers -> kotlinx.coroutines.Dispatchers:
# {"id":"sourceFile","fileName":"Dispatchers.kt"}
    32:134:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    32:32:kotlinx.coroutines.CoroutineDispatcher getDefault() -> getDefault
    134:134:kotlinx.coroutines.CoroutineDispatcher getIO() -> getIO
    57:57:kotlinx.coroutines.MainCoroutineDispatcher getMain() -> getMain
kotlinx.coroutines.DisposableHandle -> kotlinx.coroutines.DisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.DisposeOnCancel -> kotlinx.coroutines.DisposeOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    389:389:void <init>(kotlinx.coroutines.DisposableHandle) -> <init>
    389:389:java.lang.Object invoke(java.lang.Object) -> invoke
    390:390:void invoke(java.lang.Throwable) -> invoke
    391:391:java.lang.String toString() -> toString
kotlinx.coroutines.Empty -> kotlinx.coroutines.Empty:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1310:1310:void <init>(boolean) -> <init>
    1310:1310:boolean isActive() -> isActive
    1312:1312:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoop -> kotlinx.coroutines.EventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    23:23:void <init>() -> <init>
    109:114:void decrementUseCount(boolean) -> decrementUseCount
    108:108:void decrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object) -> decrementUseCount$default
    85:87:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask) -> dispatchUnconfined
    62:63:long getNextTime() -> getNextTime
    104:105:void incrementUseCount(boolean) -> incrementUseCount
    103:103:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object) -> incrementUseCount$default
    94:94:boolean isUnconfinedLoopActive() -> isUnconfinedLoopActive
    98:98:boolean isUnconfinedQueueEmpty() -> isUnconfinedQueueEmpty
    54:54:long processNextEvent() -> processNextEvent
    67:69:boolean processUnconfinedEvent() -> processUnconfinedEvent
kotlinx.coroutines.EventLoopImplBase -> kotlinx.coroutines.EventLoopImplBase:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    184:184:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> <init>
    184:184:void <init>():184 -> <init>
    186:191:void <init>() -> <init>
    184:184:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> access$isCompleted
    345:561:void closeQueue() -> closeQueue
    328:558:java.lang.Runnable dequeue() -> dequeue
    285:285:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    288:292:void enqueue(java.lang.Runnable) -> enqueue
    299:556:boolean enqueueImpl(java.lang.Runnable) -> enqueueImpl
    209:218:long getNextTime() -> getNextTime
    193:193:boolean isCompleted() -> isCompleted
    197:203:boolean isEmpty() -> isEmpty
    259:263:long processNextEvent() -> processNextEvent
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    20:20:long processNextEvent():268 -> processNextEvent
    52:53:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    52:53:long processNextEvent():268 -> processNextEvent
    269:270:long processNextEvent() -> processNextEvent
    53:54:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    53:54:long processNextEvent():268 -> processNextEvent
    268:268:long processNextEvent() -> processNextEvent
    53:53:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    53:53:long processNextEvent():268 -> processNextEvent
    277:282:long processNextEvent() -> processNextEvent
    392:402:void rescheduleAllDelayed() -> rescheduleAllDelayed
    386:387:void resetAll() -> resetAll
    366:369:void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> schedule
    376:381:int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> scheduleImpl
    235:240:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    194:194:void setCompleted(boolean) -> setCompleted
    373:373:boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> shouldUnpark
    223:231:void shutdown() -> shutdown
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask -> kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    490:493:void <init>(kotlinx.coroutines.EventLoopImplBase,long,kotlinx.coroutines.CancellableContinuation) -> <init>
    494:494:void run() -> run
    495:495:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoopImplBase$DelayedTask -> kotlinx.coroutines.EventLoopImplBase$DelayedTask:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    406:406:int compareTo(java.lang.Object) -> <init>
    406:406:void <init>(long):406 -> <init>
    411:411:void <init>(long) -> <init>
    422:422:void setIndex(int) -> <init>
    422:422:void <init>(long):422 -> <init>
    406:406:int compareTo(java.lang.Object) -> compareTo
    425:425:int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> compareTo
    480:485:void dispose() -> dispose
    416:416:kotlinx.coroutines.internal.ThreadSafeHeap getHeap() -> getHeap
    422:422:void setIndex(int) -> getIndex
    422:422:int getIndex():422 -> getIndex
    437:437:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):438 -> scheduleTask
    65:65:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    65:65:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):438 -> scheduleTask
    439:472:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    65:66:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    65:66:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):438 -> scheduleTask
    475:475:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    65:65:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    65:65:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):438 -> scheduleTask
    418:419:void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap) -> setHeap
    422:422:void setIndex(int) -> setIndex
    433:433:boolean timeToExecute(long) -> timeToExecute
    487:487:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    522:523:void <init>(long) -> <init>
kotlinx.coroutines.EventLoopImplPlatform -> kotlinx.coroutines.EventLoopImplPlatform:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    7:7:void <init>() -> <init>
    17:17:void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> reschedule
    11:13:void unpark() -> unpark
kotlinx.coroutines.EventLoopKt -> kotlinx.coroutines.EventLoopKt:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    25:25:kotlinx.coroutines.EventLoop createEventLoop() -> createEventLoop
kotlinx.coroutines.EventLoop_commonKt -> kotlinx.coroutines.EventLoop_commonKt:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    146:172:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p() -> access$getCLOSED_EMPTY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p() -> access$getDISPOSED_TASK$p
kotlinx.coroutines.ExceptionsKt -> kotlinx.coroutines.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    22:22:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable) -> CancellationException
kotlinx.coroutines.ExecutorCoroutineDispatcher -> kotlinx.coroutines.ExecutorCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Executors.kt"}
    20:20:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"Executors.kt"}
    23:25:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"Executors.kt"}
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    25:25:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl -> kotlinx.coroutines.ExecutorCoroutineDispatcherImpl:
# {"id":"sourceFile","fileName":"Executors.kt"}
    115:123:void <init>(java.util.concurrent.Executor) -> <init>
    169:169:void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException) -> cancelJobOnRejection
    173:173:void close() -> close
    128:132:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    177:177:boolean equals(java.lang.Object) -> equals
    115:115:java.util.concurrent.Executor getExecutor() -> getExecutor
    178:178:int hashCode() -> hashCode
    161:163:java.util.concurrent.ScheduledFuture scheduleBlock(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,kotlin.coroutines.CoroutineContext,long) -> scheduleBlock
    137:148:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    176:176:java.lang.String toString() -> toString
kotlinx.coroutines.ExecutorsKt -> kotlinx.coroutines.ExecutorsKt:
# {"id":"sourceFile","fileName":"Executors.kt"}
    100:100:kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor) -> from
kotlinx.coroutines.GlobalScope -> kotlinx.coroutines.GlobalScope:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
    215:215:void <init>() -> <init>
    221:221:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
kotlinx.coroutines.InactiveNodeList -> kotlinx.coroutines.InactiveNodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1381:1382:void <init>(kotlinx.coroutines.NodeList) -> <init>
    1382:1382:kotlinx.coroutines.NodeList getList() -> getList
    1385:1385:java.lang.String toString() -> toString
kotlinx.coroutines.Incomplete -> kotlinx.coroutines.Incomplete:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
kotlinx.coroutines.IncompleteStateBox -> kotlinx.coroutines.IncompleteStateBox:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1283:1283:void <init>(kotlinx.coroutines.Incomplete) -> <init>
kotlinx.coroutines.InvokeOnCancel -> kotlinx.coroutines.InvokeOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    570:571:void <init>(kotlin.jvm.functions.Function1) -> <init>
    569:569:java.lang.Object invoke(java.lang.Object) -> invoke
    573:573:void invoke(java.lang.Throwable) -> invoke
    575:575:java.lang.String toString() -> toString
kotlinx.coroutines.InvokeOnCancelling -> kotlinx.coroutines.InvokeOnCancelling:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1452:1455:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1451:1451:java.lang.Object invoke(java.lang.Object) -> invoke
    1457:1457:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.InvokeOnCompletion -> kotlinx.coroutines.InvokeOnCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1389:1390:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1388:1388:java.lang.Object invoke(java.lang.Object) -> invoke
    1391:1391:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.Job -> kotlinx.coroutines.Job:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.Job$DefaultImpls -> kotlinx.coroutines.Job$DefaultImpls:
# {"id":"sourceFile","fileName":"Job.kt"}
    183:183:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    112:112:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    112:112:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> get
    341:341:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> invokeOnCompletion$default
    112:112:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    112:112:kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.Job$Key -> kotlinx.coroutines.Job$Key:
# {"id":"sourceFile","fileName":"Job.kt"}
    116:116:void <init>() -> <init>
kotlinx.coroutines.JobCancellationException -> kotlinx.coroutines.JobCancellationException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    32:36:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job) -> <init>
    68:68:boolean equals(java.lang.Object) -> equals
    44:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    70:70:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
kotlinx.coroutines.JobCancellingNode -> kotlinx.coroutines.JobCancellingNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1449:1449:void <init>() -> <init>
kotlinx.coroutines.JobImpl -> kotlinx.coroutines.JobImpl:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1315:1328:void <init>(kotlinx.coroutines.Job) -> <init>
    1328:1328:boolean getHandlesException$kotlinx_coroutines_core() -> getHandlesException$kotlinx_coroutines_core
    1335:1338:boolean handlesException() -> handlesException
kotlinx.coroutines.JobKt -> kotlinx.coroutines.JobKt:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job) -> Job
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object) -> Job$default
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    1:1:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    1:1:void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future) -> cancelFutureOnCancellation
    1:1:void ensureActive(kotlin.coroutines.CoroutineContext) -> ensureActive
    1:1:void ensureActive(kotlinx.coroutines.Job) -> ensureActive
kotlinx.coroutines.JobKt__FutureKt -> kotlinx.coroutines.JobKt__FutureKt:
# {"id":"sourceFile","fileName":"Future.kt"}
    33:33:void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future) -> cancelFutureOnCancellation
kotlinx.coroutines.JobKt__JobKt -> kotlinx.coroutines.JobKt__JobKt:
# {"id":"sourceFile","fileName":"Job.kt"}
    379:379:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object) -> Job
    379:379:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):379 -> Job
    379:379:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object) -> Job$default
    549:549:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    548:548:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    571:571:void ensureActive(kotlinx.coroutines.Job) -> ensureActive
    589:589:void ensureActive(kotlin.coroutines.CoroutineContext) -> ensureActive
kotlinx.coroutines.JobNode -> kotlinx.coroutines.JobNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1350:1350:void <init>() -> <init>
    1357:1357:void dispose() -> dispose
    1354:1354:kotlinx.coroutines.JobSupport getJob() -> getJob
    1354:1354:void setJob(kotlinx.coroutines.JobSupport) -> setJob
    1358:1358:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport -> kotlinx.coroutines.JobSupport:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> <init>
    27:27:void <init>(boolean):27 -> <init>
    129:131:void <init>(boolean) -> <init>
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> access$cancellationExceptionMessage
    27:27:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):27 -> access$cancellationExceptionMessage
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> access$continueCompleting
    27:27:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):27 -> access$continueCompleting
    91:91:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    91:91:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):524 -> addLastAtomic
    156:157:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    156:157:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):524 -> addLastAtomic
    270:271:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    21:21:java.util.Set kotlinx.coroutines.internal.ConcurrentKt.identitySet(int) -> addSuppressedExceptions
    21:21:void addSuppressedExceptions(java.lang.Throwable,java.util.List):271 -> addSuppressedExceptions
    278:281:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> addSuppressedExceptions
    75:75:void addSuppressedExceptions(java.lang.Throwable,java.util.List):282 -> addSuppressedExceptions
    970:970:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> attachChild
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> cancel
    703:703:void cancel(java.util.concurrent.CancellationException):617 -> cancel
    617:617:void cancel(java.util.concurrent.CancellationException) -> cancel
    658:658:boolean cancelCoroutine(java.lang.Throwable) -> cancelCoroutine
    663:678:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object) -> cancelImpl$kotlinx_coroutines_core
    632:632:void cancelInternal(java.lang.Throwable) -> cancelInternal
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> cancelMakeCompleting
    177:177:java.lang.Object cancelMakeCompleting(java.lang.Object):690 -> cancelMakeCompleting
    691:697:java.lang.Object cancelMakeCompleting(java.lang.Object) -> cancelMakeCompleting
    344:358:boolean cancelParent(java.lang.Throwable) -> cancelParent
    650:651:boolean childCancelled(java.lang.Throwable) -> childCancelled
    307:323:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object) -> completeStateFinalization
    931:936:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> continueCompleting
    719:719:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> createCauseException
    703:703:java.lang.Throwable createCauseException(java.lang.Object):719 -> createCauseException
    720:720:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    208:208:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    20:20:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):211 -> finalizeFinishingState
    212:240:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    913:913:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete) -> firstChild
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> fold
    27:27:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):27 -> fold
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> get
    27:27:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):27 -> get
    415:420:java.util.concurrent.CancellationException getCancellationException() -> getCancellationException
    707:714:java.util.concurrent.CancellationException getChildJobCancellationCause() -> getChildJobCancellationCause
    910:910:java.lang.Throwable getExceptionOrNull(java.lang.Object) -> getExceptionOrNull
    246:248:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> getFinalRootCause
    703:703:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):248 -> getFinalRootCause
    259:1485:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    29:29:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    773:782:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete) -> getOrPromoteCancellingList
    133:133:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core() -> getParentHandle$kotlinx_coroutines_core
    167:1481:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    980:980:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    145:155:void initParentJob(kotlinx.coroutines.Job) -> initParentJob
    449:449:kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    458:458:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    177:177:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):459 -> invokeOnCompletion
    461:475:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    20:20:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):476 -> invokeOnCompletion
    478:478:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:boolean kotlinx.coroutines.CompletionHandler_commonKt.isHandlerOf(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):481 -> invokeOnCompletion
    481:489:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):493 -> invokeOnCompletion
    496:503:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):503 -> invokeOnCompletion
    504:504:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    182:183:boolean isActive() -> isActive
    186:186:boolean isCompleted() -> isCompleted
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCancelling
    177:177:java.lang.Object makeCancelling(java.lang.Object):732 -> makeCancelling
    734:734:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    20:20:java.lang.Object makeCancelling(java.lang.Object):735 -> makeCancelling
    736:766:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCompletingOnce$kotlinx_coroutines_core
    177:177:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):827 -> makeCompletingOnce$kotlinx_coroutines_core
    828:835:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    512:519:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean) -> makeNode
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> minusKey
    27:27:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):27 -> minusKey
    1058:1058:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    941:946:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> nextChild
    329:329:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    645:647:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    645:647:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    368:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    368:368:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCancelling
    75:75:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    371:371:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    371:371:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    648:648:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    648:648:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    375:375:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    375:375:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    332:332:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    645:647:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    645:647:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    368:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    368:368:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCompletion
    75:75:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    371:371:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    371:371:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    648:648:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    648:648:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    375:375:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    375:375:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    637:637:void parentCancelled(kotlinx.coroutines.ParentJob) -> parentCancelled
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> plus
    27:27:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):27 -> plus
    528:530:void promoteEmptyToNodeList(kotlinx.coroutines.Empty) -> promoteEmptyToNodeList
    535:539:void promoteSingleToNodeList(kotlinx.coroutines.JobNode) -> promoteSingleToNodeList
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> removeNode$kotlinx_coroutines_core
    177:177:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):590 -> removeNode$kotlinx_coroutines_core
    592:599:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode) -> removeNode$kotlinx_coroutines_core
    134:134:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle) -> setParentHandle$kotlinx_coroutines_core
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> start
    177:177:boolean start():379 -> start
    380:380:boolean start() -> start
    393:401:int startInternal(java.lang.Object) -> startInternal
    1061:1067:java.lang.String stateString(java.lang.Object) -> stateString
    424:424:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String) -> toCancellationException
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> toCancellationException
    703:703:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):424 -> toCancellationException
    423:423:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object) -> toCancellationException$default
    1053:1053:java.lang.String toDebugString() -> toDebugString
    1050:1050:java.lang.String toString() -> toString
    292:295:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryFinalizeSimpleState
    790:795:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable) -> tryMakeCancelling
    847:863:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object) -> tryMakeCompleting
    873:877:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):880 -> tryMakeCompletingSlowPath
    882:906:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    918:923:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> tryWaitForChild
kotlinx.coroutines.JobSupport$ChildCompletion -> kotlinx.coroutines.JobSupport$ChildCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1149:1153:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> <init>
    1148:1148:java.lang.Object invoke(java.lang.Object) -> invoke
    1155:1155:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.JobSupport$Finishing -> kotlinx.coroutines.JobSupport$Finishing:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1078:1078:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1075:1075:kotlinx.coroutines.NodeList getList() -> <init>
    1075:1075:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):1075 -> <init>
    1079:1089:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1117:1134:void addExceptionLocked(java.lang.Throwable) -> addExceptionLocked
    1138:1138:java.util.ArrayList allocateList() -> allocateList
    1091:1091:java.lang.Object getExceptionsHolder() -> getExceptionsHolder
    1075:1075:kotlinx.coroutines.NodeList getList() -> getList
    1086:1086:java.lang.Throwable getRootCause() -> getRootCause
    1097:1097:boolean isActive() -> isActive
    1096:1096:boolean isCancelling() -> isCancelling
    1081:1081:boolean isCompleting() -> isCompleting
    1095:1095:boolean isSealed() -> isSealed
    1102:1111:java.util.List sealLocked(java.lang.Throwable) -> sealLocked
    1082:1082:void setCompleting(boolean) -> setCompleting
    1092:1092:void setExceptionsHolder(java.lang.Object) -> setExceptionsHolder
    1087:1087:void setRootCause(java.lang.Throwable) -> setRootCause
    1141:1141:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    91:91:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):91 -> <init>
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    91:91:java.lang.Object prepare(java.lang.Object):91 -> prepare
    524:524:boolean kotlinx.coroutines.JobSupport.addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode) -> prepare
    524:524:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):672 -> prepare
kotlinx.coroutines.JobSupportKt -> kotlinx.coroutines.JobSupportKt:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1290:1308:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p() -> access$getCOMPLETING_ALREADY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p() -> access$getCOMPLETING_RETRY$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p() -> access$getEMPTY_ACTIVE$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_NEW$p() -> access$getEMPTY_NEW$p
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p() -> access$getSEALED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p() -> access$getTOO_LATE_TO_CANCEL$p
    1284:1284:java.lang.Object boxIncomplete(java.lang.Object) -> boxIncomplete
    1285:1285:java.lang.Object unboxState(java.lang.Object) -> unboxState
kotlinx.coroutines.LazyStandaloneCoroutine -> kotlinx.coroutines.LazyStandaloneCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    201:202:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2) -> <init>
    205:205:void onStart() -> onStart
kotlinx.coroutines.MainCoroutineDispatcher -> kotlinx.coroutines.MainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainCoroutineDispatcher.kt"}
    15:15:void <init>() -> <init>
    54:54:java.lang.String toString() -> toString
    69:72:java.lang.String toStringInternalImpl() -> toStringInternalImpl
kotlinx.coroutines.NodeList -> kotlinx.coroutines.NodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1361:1361:void <init>() -> <init>
    1378:1378:java.lang.String toString() -> toString
kotlinx.coroutines.NonDisposableHandle -> kotlinx.coroutines.NonDisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
    647:647:void <init>() -> <init>
kotlinx.coroutines.NotCompleted -> kotlinx.coroutines.NotCompleted:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
kotlinx.coroutines.ParentJob -> kotlinx.coroutines.ParentJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.RemoveOnCancel -> kotlinx.coroutines.RemoveOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    384:384:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    384:384:java.lang.Object invoke(java.lang.Object) -> invoke
    385:385:void invoke(java.lang.Throwable) -> invoke
    386:386:java.lang.String toString() -> toString
kotlinx.coroutines.ResumeUndispatchedRunnable -> kotlinx.coroutines.ResumeUndispatchedRunnable:
# {"id":"sourceFile","fileName":"Executors.kt"}
    181:183:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CancellableContinuation) -> <init>
    186:186:void run() -> run
kotlinx.coroutines.StandaloneCoroutine -> kotlinx.coroutines.StandaloneCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    191:191:void <init>(kotlin.coroutines.CoroutineContext,boolean) -> <init>
    193:193:boolean handleJobException(java.lang.Throwable) -> handleJobException
kotlinx.coroutines.SupervisorJobImpl -> kotlinx.coroutines.SupervisorJobImpl:
# {"id":"sourceFile","fileName":"Supervisor.kt"}
    65:65:void <init>(kotlinx.coroutines.Job) -> <init>
kotlinx.coroutines.SupervisorKt -> kotlinx.coroutines.SupervisorKt:
# {"id":"sourceFile","fileName":"Supervisor.kt"}
    33:33:kotlinx.coroutines.CompletableJob SupervisorJob(kotlinx.coroutines.Job) -> SupervisorJob
    33:33:kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object) -> SupervisorJob$default
kotlinx.coroutines.ThreadContextElement -> kotlinx.coroutines.ThreadContextElement:
# {"id":"sourceFile","fileName":"ThreadContextElement.kt"}
kotlinx.coroutines.ThreadLocalEventLoop -> kotlinx.coroutines.ThreadLocalEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    128:128:void <clinit>() -> <clinit>
    126:126:void <init>() -> <init>
    134:134:kotlinx.coroutines.EventLoop currentOrNull$kotlinx_coroutines_core() -> currentOrNull$kotlinx_coroutines_core
    131:131:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core() -> getEventLoop$kotlinx_coroutines_core
    137:137:void resetEventLoop$kotlinx_coroutines_core() -> resetEventLoop$kotlinx_coroutines_core
    141:141:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop) -> setEventLoop$kotlinx_coroutines_core
kotlinx.coroutines.Unconfined -> kotlinx.coroutines.Unconfined:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    13:13:void <init>() -> <init>
    24:30:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
kotlinx.coroutines.UndispatchedCoroutine -> kotlinx.coroutines.UndispatchedCoroutine:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    168:182:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    195:201:void afterResume(java.lang.Object) -> afterResume
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    107:111:void afterResume(java.lang.Object):201 -> afterResume
    202:203:void afterResume(java.lang.Object) -> afterResume
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    118:119:void afterResume(java.lang.Object):201 -> afterResume
    189:190:boolean clearThreadContext() -> clearThreadContext
    185:185:void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> saveThreadContext
kotlinx.coroutines.UndispatchedMarker -> kotlinx.coroutines.UndispatchedMarker:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    159:159:void <init>() -> <init>
    159:159:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    159:159:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    159:159:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    159:159:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.YieldContext -> kotlinx.coroutines.YieldContext:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    42:42:void <init>() -> <init>
kotlinx.coroutines.YieldContext$Key -> kotlinx.coroutines.YieldContext$Key:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    43:43:void <init>() -> <init>
kotlinx.coroutines.android.AndroidDispatcherFactory -> kotlinx.coroutines.android.AndroidDispatcherFactory:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    52:52:void <init>() -> <init>
    55:56:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> createDispatcher
kotlinx.coroutines.android.AndroidExceptionPreHandler -> kotlinx.coroutines.android.AndroidExceptionPreHandler:
# {"id":"sourceFile","fileName":"AndroidExceptionPreHandler.kt"}
    15:18:void <init>() -> <init>
    49:51:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    22:31:java.lang.reflect.Method preHandler() -> preHandler
kotlinx.coroutines.android.HandlerContext -> kotlinx.coroutines.android.HandlerContext:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    115:131:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    134:134:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    125:125:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String):128 -> <init>
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> access$getHandler$p
    166:167:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> cancelOnRejection
    141:142:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    175:175:boolean equals(java.lang.Object) -> equals
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> getImmediate
    114:114:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():114 -> getImmediate
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> getImmediate
    176:176:int hashCode() -> hashCode
    137:137:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    17:17:java.lang.Runnable kotlinx.coroutines.RunnableKt.Runnable(kotlin.jvm.functions.Function0) -> scheduleResumeAfterDelay
    17:17:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation):147 -> scheduleResumeAfterDelay
    150:153:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    170:172:java.lang.String toString() -> toString
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1 -> kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1:
# {"id":"sourceFile","fileName":"Runnable.kt"}
    19:19:void run() -> run
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1 -> kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    151:151:java.lang.Object invoke(java.lang.Object) -> invoke
    151:151:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.android.HandlerDispatcher -> kotlinx.coroutines.android.HandlerDispatcher:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    22:22:void <init>() -> <init>
kotlinx.coroutines.android.HandlerDispatcherKt -> kotlinx.coroutines.android.HandlerDispatcherKt:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    109:109:void <clinit>() -> <clinit>
    86:104:android.os.Handler asHandler(android.os.Looper,boolean) -> asHandler
kotlinx.coroutines.channels.AbstractChannel -> kotlinx.coroutines.channels.AbstractChannel:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    517:517:void <init>(kotlin.jvm.functions.Function1) -> <init>
    515:515:void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive) -> access$enqueueReceive
    515:515:boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive):515 -> access$enqueueReceive
    515:515:void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive) -> access$removeReceiveOnCancel
    655:656:void cancel(java.util.concurrent.CancellationException) -> cancel
    661:662:boolean cancelInternal$kotlinx_coroutines_core(java.lang.Throwable) -> cancelInternal$kotlinx_coroutines_core
    623:624:boolean enqueueReceive(kotlinx.coroutines.channels.Receive) -> enqueueReceive
    619:620:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueReceiveInternal
    166:166:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):620 -> enqueueReceiveInternal
    620:620:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueReceiveInternal
    168:168:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):620 -> enqueueReceiveInternal
    621:621:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    91:91:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    91:91:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):621 -> enqueueReceiveInternal
    179:179:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    179:179:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):621 -> enqueueReceiveInternal
    621:621:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    181:181:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    181:181:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):621 -> enqueueReceiveInternal
    578:578:boolean isClosedForReceive() -> isClosedForReceive
    699:699:kotlinx.coroutines.channels.ChannelIterator iterator() -> iterator
    674:689:void onCancelIdempotent(boolean) -> onCancelIdempotent
    39:39:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> onCancelIdempotentList-w-w6eGU
    39:39:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed):696 -> onCancelIdempotentList-w-w6eGU
    696:696:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed) -> onCancelIdempotentList-w-w6eGU
    41:43:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> onCancelIdempotentList-w-w6eGU
    41:43:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed):696 -> onCancelIdempotentList-w-w6eGU
    696:696:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed) -> onCancelIdempotentList-w-w6eGU
    542:550:java.lang.Object pollInternal() -> pollInternal
    628:633:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation) -> receiveCatching-JP2dKIU
    1128:1128:java.lang.Object kotlinx.coroutines.channels.AbstractChannelKt.toResult(java.lang.Object) -> receiveCatching-JP2dKIU
    1128:1128:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation):631 -> receiveCatching-JP2dKIU
    633:633:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation) -> receiveCatching-JP2dKIU
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> receiveSuspend
    333:333:java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation):597 -> receiveSuspend
    598:613:java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation) -> receiveSuspend
    332:335:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> receiveSuspend
    332:335:java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation):597 -> receiveSuspend
    822:822:void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive) -> removeReceiveOnCancel
    803:804:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed() -> takeFirstReceiveOrPeekClosed
kotlinx.coroutines.channels.AbstractChannel$Itr -> kotlinx.coroutines.channels.AbstractChannel$Itr:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    832:832:java.lang.Object access$hasNextSuspend(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlin.coroutines.Continuation) -> <init>
    832:832:void <init>(kotlinx.coroutines.channels.AbstractChannel):832 -> <init>
    833:833:void setResult(java.lang.Object) -> <init>
    833:833:void <init>(kotlinx.coroutines.channels.AbstractChannel):833 -> <init>
    833:833:void setResult(java.lang.Object) -> getResult
    833:833:java.lang.Object getResult():833 -> getResult
    837:842:java.lang.Object hasNext(kotlin.coroutines.Continuation) -> hasNext
    846:847:boolean hasNextResult(java.lang.Object) -> hasNextResult
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> hasNextSuspend
    333:333:java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation):853 -> hasNextSuspend
    854:872:java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation) -> hasNextSuspend
    332:335:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> hasNextSuspend
    332:335:java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation):853 -> hasNextSuspend
    880:887:java.lang.Object next() -> next
    833:833:void setResult(java.lang.Object) -> setResult
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement -> kotlinx.coroutines.channels.AbstractChannel$ReceiveElement:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    892:894:void <init>(kotlinx.coroutines.CancellableContinuation,int) -> <init>
    908:908:void completeResumeReceive(java.lang.Object) -> completeResumeReceive
    912:912:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    1131:1131:java.lang.Object kotlinx.coroutines.channels.AbstractChannelKt.toResult(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    1131:1131:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed):912 -> resumeReceiveClosed
    913:913:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    895:896:java.lang.Object resumeValue(java.lang.Object) -> resumeValue
    916:916:java.lang.String toString() -> toString
    901:905:kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeReceive
kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler -> kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    922:923:void <init>(kotlinx.coroutines.CancellableContinuation,int,kotlin.jvm.functions.Function1) -> <init>
    925:925:kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object) -> resumeOnCancellationFun
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext -> kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    929:931:void <init>(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation) -> <init>
    946:947:void completeResumeReceive(java.lang.Object) -> completeResumeReceive
    963:963:kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object) -> resumeOnCancellationFun
    951:958:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    965:965:java.lang.String toString() -> toString
    933:938:kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeReceive
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel -> kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    824:824:void <init>(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive) -> <init>
    824:824:java.lang.Object invoke(java.lang.Object) -> invoke
    826:827:void invoke(java.lang.Throwable) -> invoke
    829:829:java.lang.String toString() -> toString
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1 -> kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    91:91:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel):91 -> <init>
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    91:91:java.lang.Object prepare(java.lang.Object):91 -> prepare
    621:621:boolean kotlinx.coroutines.channels.AbstractChannel.enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> prepare
    621:621:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):672 -> prepare
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 -> kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
kotlinx.coroutines.channels.AbstractChannelKt -> kotlinx.coroutines.channels.AbstractChannelKt:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1012:1032:void <clinit>() -> <clinit>
kotlinx.coroutines.channels.AbstractSendChannel -> kotlinx.coroutines.channels.AbstractSendChannel:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    19:19:void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> <init>
    19:19:void <init>(kotlin.jvm.functions.Function1):19 -> <init>
    20:20:void <init>(kotlin.jvm.functions.Function1) -> <init>
    23:23:kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue() -> <init>
    23:23:void <init>(kotlin.jvm.functions.Function1):23 -> <init>
    41:41:void <init>(kotlin.jvm.functions.Function1) -> <init>
    19:19:void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> access$helpCloseAndResumeWithSendException
    19:19:void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> access$isFullImpl
    19:19:boolean access$isFullImpl(kotlinx.coroutines.channels.AbstractSendChannel):19 -> access$isFullImpl
    262:269:boolean close(java.lang.Throwable) -> close
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> close
    166:166:boolean close(java.lang.Throwable):269 -> close
    269:269:boolean close(java.lang.Throwable) -> close
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> close
    168:168:boolean close(java.lang.Throwable):269 -> close
    270:272:boolean close(java.lang.Throwable) -> close
    455:455:int countQueueSize() -> countQueueSize
    645:648:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> countQueueSize
    645:648:int countQueueSize():455 -> countQueueSize
    246:247:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueSend
    166:166:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):247 -> enqueueSend
    248:248:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueSend
    168:168:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):247 -> enqueueSend
    252:252:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    91:91:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> enqueueSend
    91:91:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):252 -> enqueueSend
    179:179:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueSend
    179:179:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):252 -> enqueueSend
    253:253:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    181:181:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueSend
    181:181:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):252 -> enqueueSend
    256:256:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    89:89:kotlinx.coroutines.channels.Closed getClosedForReceive() -> getClosedForReceive
    83:83:kotlinx.coroutines.channels.Closed getClosedForSend() -> getClosedForSend
    23:23:kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue() -> getQueue
    437:448:java.lang.String getQueueDebugStateString() -> getQueueDebugStateString
    324:328:void helpClose(kotlinx.coroutines.channels.Closed) -> helpClose
    39:39:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> helpClose
    39:39:void helpClose(kotlinx.coroutines.channels.Closed):342 -> helpClose
    342:342:void helpClose(kotlinx.coroutines.channels.Closed) -> helpClose
    41:43:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> helpClose
    41:43:void helpClose(kotlinx.coroutines.channels.Closed):342 -> helpClose
    329:344:void helpClose(kotlinx.coroutines.channels.Closed) -> helpClose
    173:174:java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed) -> helpCloseAndGetSendException
    230:236:void helpCloseAndResumeWithSendException(kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> helpCloseAndResumeWithSendException
    277:282:void invokeOnCloseHandler(java.lang.Throwable) -> invokeOnCloseHandler
    130:130:boolean isFullImpl() -> isFullImpl
    52:57:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    134:136:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation) -> send
    104:104:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object) -> sendBuffered
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> sendBuffered
    166:166:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object):104 -> sendBuffered
    105:105:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object) -> sendBuffered
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> sendBuffered
    168:168:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object):104 -> sendBuffered
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> sendSuspend
    333:333:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation):190 -> sendSuspend
    192:220:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> sendSuspend
    332:336:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> sendSuspend
    332:336:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation):190 -> sendSuspend
    221:223:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> sendSuspend
    358:358:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed() -> takeFirstReceiveOrPeekClosed
    298:301:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstReceiveOrPeekClosed
    298:301:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed():358 -> takeFirstReceiveOrPeekClosed
    358:358:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed() -> takeFirstReceiveOrPeekClosed
    303:308:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstReceiveOrPeekClosed
    303:308:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed():358 -> takeFirstReceiveOrPeekClosed
    96:96:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed() -> takeFirstSendOrPeekClosed
    298:301:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstSendOrPeekClosed
    298:301:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed():96 -> takeFirstSendOrPeekClosed
    96:96:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed() -> takeFirstSendOrPeekClosed
    303:308:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstSendOrPeekClosed
    303:308:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed():96 -> takeFirstSendOrPeekClosed
    433:433:java.lang.String toString() -> toString
    155:168:java.lang.Object trySend-JP2dKIU(java.lang.Object) -> trySend-JP2dKIU
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered -> kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    495:496:void <init>(java.lang.Object) -> <init>
    497:497:java.lang.Object getPollResult() -> getPollResult
    508:508:java.lang.String toString() -> toString
    498:498:kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeSend
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1 -> kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    91:91:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractSendChannel):91 -> <init>
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    91:91:java.lang.Object prepare(java.lang.Object):91 -> prepare
    672:672:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> prepare
kotlinx.coroutines.channels.ArrayChannel -> kotlinx.coroutines.channels.ArrayChannel:
# {"id":"sourceFile","fileName":"ArrayChannel.kt"}
    26:45:void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1) -> <init>
    150:158:void enqueueElement(int,java.lang.Object) -> enqueueElement
    277:277:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    17:17:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):277 -> enqueueReceiveInternal
    278:278:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    129:129:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> enqueueSend
    17:17:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):129 -> enqueueSend
    130:130:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    164:172:void ensureCapacity(int) -> ensureCapacity
    306:306:java.lang.String getBufferDebugString() -> getBufferDebugString
    48:48:boolean isBufferEmpty() -> isBufferEmpty
    50:50:boolean isBufferFull() -> isBufferFull
    53:53:boolean isClosedForReceive() -> isClosedForReceive
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> isClosedForReceive
    17:17:boolean isClosedForReceive():53 -> isClosedForReceive
    53:53:boolean isClosedForReceive() -> isClosedForReceive
    58:58:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> offerInternal
    17:17:java.lang.Object offerInternal(java.lang.Object):58 -> offerInternal
    59:84:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    284:286:void onCancelIdempotent(boolean) -> onCancelIdempotent
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> onCancelIdempotent
    17:17:void onCancelIdempotent(boolean):286 -> onCancelIdempotent
    287:300:void onCancelIdempotent(boolean) -> onCancelIdempotent
    181:181:java.lang.Object pollInternal() -> pollInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> pollInternal
    17:17:java.lang.Object pollInternal():181 -> pollInternal
    182:212:java.lang.Object pollInternal() -> pollInternal
    136:144:kotlinx.coroutines.internal.Symbol updateBufferSize(int) -> updateBufferSize
kotlinx.coroutines.channels.ArrayChannel$WhenMappings -> kotlinx.coroutines.channels.ArrayChannel$WhenMappings:
# {"id":"sourceFile","fileName":"ArrayChannel.kt"}
kotlinx.coroutines.channels.BufferOverflow -> kotlinx.coroutines.channels.BufferOverflow:
# {"id":"sourceFile","fileName":"BufferOverflow.kt"}
    23:34:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
kotlinx.coroutines.channels.Channel -> kotlinx.coroutines.channels.Channel:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.Channel$Factory -> kotlinx.coroutines.channels.Channel$Factory:
# {"id":"sourceFile","fileName":"Channel.kt"}
    749:749:void <clinit>() -> <clinit>
    715:715:void <init>() -> <init>
    749:749:int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core() -> getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core
kotlinx.coroutines.channels.ChannelIterator -> kotlinx.coroutines.channels.ChannelIterator:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.ChannelKt -> kotlinx.coroutines.channels.ChannelKt:
# {"id":"sourceFile","fileName":"Channel.kt"}
    775:795:kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1) -> Channel
    768:770:kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object) -> Channel$default
kotlinx.coroutines.channels.ChannelResult -> kotlinx.coroutines.channels.ChannelResult:
# {"id":"sourceFile","fileName":"Channel.kt"}
    465:465:void <clinit>() -> <clinit>
    399:399:void <init>(java.lang.Object) -> <init>
    397:397:kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp() -> access$getFailed$cp
    450:450:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    441:443:java.lang.Object getOrThrow-impl(java.lang.Object) -> getOrThrow-impl
    428:428:boolean isClosed-impl(java.lang.Object) -> isClosed-impl
    480:480:java.lang.String toString() -> toString
    482:483:java.lang.String toString-impl(java.lang.Object) -> toString-impl
kotlinx.coroutines.channels.ChannelResult$Closed -> kotlinx.coroutines.channels.ChannelResult$Closed:
# {"id":"sourceFile","fileName":"Channel.kt"}
    456:456:void <init>(java.lang.Throwable) -> <init>
    457:457:boolean equals(java.lang.Object) -> equals
    458:458:int hashCode() -> hashCode
    459:459:java.lang.String toString() -> toString
kotlinx.coroutines.channels.ChannelResult$Companion -> kotlinx.coroutines.channels.ChannelResult$Companion:
# {"id":"sourceFile","fileName":"Channel.kt"}
    462:462:void <init>() -> <init>
    477:477:java.lang.Object closed-JP2dKIU(java.lang.Throwable) -> closed-JP2dKIU
    473:473:java.lang.Object failure-PtdJZtk() -> failure-PtdJZtk
    469:469:java.lang.Object success-JP2dKIU(java.lang.Object) -> success-JP2dKIU
kotlinx.coroutines.channels.ChannelResult$Failed -> kotlinx.coroutines.channels.ChannelResult$Failed:
# {"id":"sourceFile","fileName":"Channel.kt"}
    452:452:void <init>() -> <init>
kotlinx.coroutines.channels.ChannelsKt -> kotlinx.coroutines.channels.ChannelsKt:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable) -> cancelConsumed
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt -> kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt:
# {"id":"sourceFile","fileName":"Channels.common.kt"}
    135:136:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable) -> cancelConsumed
kotlinx.coroutines.channels.Closed -> kotlinx.coroutines.channels.Closed:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1105:1106:void <init>(java.lang.Throwable) -> <init>
    1104:1104:java.lang.Object getPollResult() -> getOfferResult
    1104:1104:java.lang.Object getOfferResult():1104 -> getOfferResult
    1104:1104:java.lang.Object getPollResult() -> getPollResult
    1108:1108:java.lang.Throwable getReceiveException() -> getReceiveException
    1107:1107:java.lang.Throwable getSendException() -> getSendException
    1117:1117:java.lang.String toString() -> toString
    1114:1114:kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeReceive
    1112:1112:kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeSend
kotlinx.coroutines.channels.ClosedReceiveChannelException -> kotlinx.coroutines.channels.ClosedReceiveChannelException:
# {"id":"sourceFile","fileName":"Channel.kt"}
    820:820:void <init>(java.lang.String) -> <init>
kotlinx.coroutines.channels.ClosedSendChannelException -> kotlinx.coroutines.channels.ClosedSendChannelException:
# {"id":"sourceFile","fileName":"Channel.kt"}
    811:811:void <init>(java.lang.String) -> <init>
kotlinx.coroutines.channels.ConflatedChannel -> kotlinx.coroutines.channels.ConflatedChannel:
# {"id":"sourceFile","fileName":"ConflatedChannel.kt"}
    20:30:void <init>(kotlin.jvm.functions.Function1) -> <init>
    135:135:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    17:17:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):135 -> enqueueReceiveInternal
    136:136:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    142:142:java.lang.String getBufferDebugString() -> getBufferDebugString
    22:22:boolean isBufferEmpty() -> isBufferEmpty
    35:35:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> offerInternal
    17:17:java.lang.Object offerInternal(java.lang.Object):35 -> offerInternal
    36:57:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    119:119:void onCancelIdempotent(boolean) -> onCancelIdempotent
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> onCancelIdempotent
    17:17:void onCancelIdempotent(boolean):119 -> onCancelIdempotent
    120:123:void onCancelIdempotent(boolean) -> onCancelIdempotent
    96:96:java.lang.Object pollInternal() -> pollInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> pollInternal
    17:17:java.lang.Object pollInternal():96 -> pollInternal
    97:100:java.lang.Object pollInternal() -> pollInternal
    128:131:kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object) -> updateValueLocked
kotlinx.coroutines.channels.LinkedListChannel -> kotlinx.coroutines.channels.LinkedListChannel:
# {"id":"sourceFile","fileName":"LinkedListChannel.kt"}
    20:20:void <init>(kotlin.jvm.functions.Function1) -> <init>
    29:40:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    39:39:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> onCancelIdempotentList-w-w6eGU
    39:39:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed):64 -> onCancelIdempotentList-w-w6eGU
    66:70:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed) -> onCancelIdempotentList-w-w6eGU
    41:43:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> onCancelIdempotentList-w-w6eGU
    41:43:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed):64 -> onCancelIdempotentList-w-w6eGU
    66:73:void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed) -> onCancelIdempotentList-w-w6eGU
kotlinx.coroutines.channels.Receive -> kotlinx.coroutines.channels.Receive:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1120:1120:void <init>() -> <init>
    1120:1120:java.lang.Object getOfferResult() -> getOfferResult
    1121:1121:kotlinx.coroutines.internal.Symbol getOfferResult() -> getOfferResult
kotlinx.coroutines.channels.ReceiveChannel -> kotlinx.coroutines.channels.ReceiveChannel:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.ReceiveOrClosed -> kotlinx.coroutines.channels.ReceiveOrClosed:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
kotlinx.coroutines.channels.RendezvousChannel -> kotlinx.coroutines.channels.RendezvousChannel:
# {"id":"sourceFile","fileName":"RendezvousChannel.kt"}
    18:18:void <init>(kotlin.jvm.functions.Function1) -> <init>
kotlinx.coroutines.channels.Send -> kotlinx.coroutines.channels.Send:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1039:1039:void <init>() -> <init>
kotlinx.coroutines.channels.SendChannel -> kotlinx.coroutines.channels.SendChannel:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.SendElement -> kotlinx.coroutines.channels.SendElement:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1070:1070:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> <init>
    1068:1068:java.lang.Object getPollResult() -> <init>
    1068:1068:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation):1068 -> <init>
    1069:1069:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> <init>
    1079:1079:void completeResumeSend() -> completeResumeSend
    1068:1068:java.lang.Object getPollResult() -> getPollResult
    1080:1080:void resumeSendClosed(kotlinx.coroutines.channels.Closed) -> resumeSendClosed
    1081:1081:java.lang.String toString() -> toString
    1072:1076:kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeSend
kotlinx.coroutines.channels.SendElementWithUndeliveredHandler -> kotlinx.coroutines.channels.SendElementWithUndeliveredHandler:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1087:1088:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1) -> <init>
    1090:1092:boolean remove() -> remove
    1097:1097:void undeliveredElement() -> undeliveredElement
kotlinx.coroutines.flow.AbstractFlow -> kotlinx.coroutines.flow.AbstractFlow:
# {"id":"sourceFile","fileName":"Flow.kt"}
    224:224:void <init>() -> <init>
    227:234:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
kotlinx.coroutines.flow.AbstractFlow$collect$1 -> kotlinx.coroutines.flow.AbstractFlow$collect$1:
# {"id":"sourceFile","fileName":"Flow.kt"}
kotlinx.coroutines.flow.Flow -> kotlinx.coroutines.flow.Flow:
# {"id":"sourceFile","fileName":"Flow.kt"}
kotlinx.coroutines.flow.FlowCollector -> kotlinx.coroutines.flow.FlowCollector:
# {"id":"sourceFile","fileName":"FlowCollector.kt"}
kotlinx.coroutines.flow.FlowKt -> kotlinx.coroutines.flow.FlowKt:
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation) -> emitAll
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector) -> ensureActive
    1:1:kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2) -> flow
kotlinx.coroutines.flow.FlowKt__BuildersKt -> kotlinx.coroutines.flow.FlowKt__BuildersKt:
# {"id":"sourceFile","fileName":"Builders.kt"}
    56:56:kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2) -> flow
kotlinx.coroutines.flow.FlowKt__ChannelsKt -> kotlinx.coroutines.flow.FlowKt__ChannelsKt:
# {"id":"sourceFile","fileName":"Channels.kt"}
    1:1:java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation) -> access$emitAllImpl$FlowKt__ChannelsKt
    30:30:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation) -> emitAll
    32:70:java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation) -> emitAllImpl$FlowKt__ChannelsKt
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1 -> kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1:
# {"id":"sourceFile","fileName":"Channels.kt"}
kotlinx.coroutines.flow.FlowKt__EmittersKt -> kotlinx.coroutines.flow.FlowKt__EmittersKt:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    202:202:void ensureActive(kotlinx.coroutines.flow.FlowCollector) -> ensureActive
kotlinx.coroutines.flow.MutableStateFlow -> kotlinx.coroutines.flow.MutableStateFlow:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
kotlinx.coroutines.flow.SafeFlow -> kotlinx.coroutines.flow.SafeFlow:
# {"id":"sourceFile","fileName":"Builders.kt"}
    59:59:void <init>(kotlin.jvm.functions.Function2) -> <init>
    61:61:java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collectSafely
kotlinx.coroutines.flow.ThrowingCollector -> kotlinx.coroutines.flow.ThrowingCollector:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    207:207:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
kotlinx.coroutines.flow.internal.DownstreamExceptionContext -> kotlinx.coroutines.flow.internal.DownstreamExceptionContext:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    144:147:void <init>(java.lang.Throwable,kotlin.coroutines.CoroutineContext) -> <init>
kotlinx.coroutines.flow.internal.NoOpContinuation -> kotlinx.coroutines.flow.internal.NoOpContinuation:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    150:150:void <clinit>() -> <clinit>
    149:149:void <init>() -> <init>
    150:150:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlinx.coroutines.flow.internal.SafeCollector -> kotlinx.coroutines.flow.internal.SafeCollector:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    22:31:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext) -> <init>
    103:106:void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object) -> checkContext
    64:72:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    78:93:java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object) -> emit
    135:140:void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionContext,java.lang.Object) -> exceptionTransparencyViolated
    26:26:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    44:44:kotlin.coroutines.CoroutineContext getContext() -> getContext
    47:49:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    54:54:void releaseIntercepted() -> releaseIntercepted
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 -> kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    31:31:java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element) -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.flow.internal.SafeCollectorKt -> kotlinx.coroutines.flow.internal.SafeCollectorKt:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    15:15:void <clinit>() -> <clinit>
    1:1:kotlin.jvm.functions.Function3 access$getEmitFun$p() -> access$getEmitFun$p
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 -> kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    15:15:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
kotlinx.coroutines.flow.internal.SafeCollector_commonKt -> kotlinx.coroutines.flow.internal.SafeCollector_commonKt:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    25:86:void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext) -> checkContext
    96:97:kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job) -> transitiveCoroutineParent
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1 -> kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    26:81:java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ArrayQueue -> kotlinx.coroutines.internal.ArrayQueue:
# {"id":"sourceFile","fileName":"ArrayQueue.kt"}
    7:8:void <init>() -> <init>
    15:17:void addLast(java.lang.Object) -> addLast
    36:50:void ensureCapacity() -> ensureCapacity
    12:12:boolean isEmpty() -> isEmpty
    22:26:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.AtomicKt -> kotlinx.coroutines.internal.AtomicKt:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    43:121:void <clinit>() -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> kotlinx.coroutines.internal.AtomicOp:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    57:58:void <init>() -> <init>
    80:83:java.lang.Object decide(java.lang.Object) -> decide
    94:99:java.lang.Object perform(java.lang.Object) -> perform
kotlinx.coroutines.internal.ConcurrentKt -> kotlinx.coroutines.internal.ConcurrentKt:
# {"id":"sourceFile","fileName":"Concurrent.kt"}
    23:24:void <clinit>() -> <clinit>
    32:33:boolean removeFutureOnCancel(java.util.concurrent.Executor) -> removeFutureOnCancel
kotlinx.coroutines.internal.ContextScope -> kotlinx.coroutines.internal.ContextScope:
# {"id":"sourceFile","fileName":"Scopes.kt"}
    37:38:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    38:38:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    40:40:java.lang.String toString() -> toString
kotlinx.coroutines.internal.DispatchedContinuation -> kotlinx.coroutines.internal.DispatchedContinuation:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    20:59:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation) -> <init>
    80:319:void awaitReusability() -> awaitReusability
    236:237:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    112:321:kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation() -> claimReusableCancellableContinuation
    26:26:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    62:62:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation() -> getReusableCancellableContinuation
    71:71:boolean isReusable() -> isReusable
    171:325:boolean postponeCancellation(java.lang.Throwable) -> postponeCancellation
    90:91:void release() -> release
    196:201:void resumeWith(java.lang.Object) -> resumeWith
    302:309:boolean kotlinx.coroutines.internal.DispatchedContinuationKt.executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeWith
    302:309:void resumeWith(java.lang.Object):203 -> resumeWith
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    199:199:void resumeWith(java.lang.Object):203 -> resumeWith
    204:204:void resumeWith(java.lang.Object) -> resumeWith
    95:95:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    95:95:void resumeWith(java.lang.Object):204 -> resumeWith
    205:206:void resumeWith(java.lang.Object) -> resumeWith
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    99:99:void resumeWith(java.lang.Object):204 -> resumeWith
    204:204:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    204:204:void resumeWith(java.lang.Object):203 -> resumeWith
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    99:99:void resumeWith(java.lang.Object):204 -> resumeWith
    211:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    211:213:void resumeWith(java.lang.Object):203 -> resumeWith
    186:188:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    268:268:java.lang.String toString() -> toString
    152:323:java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation) -> tryReleaseClaimedContinuation
kotlinx.coroutines.internal.DispatchedContinuationKt -> kotlinx.coroutines.internal.DispatchedContinuationKt:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    14:17:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p() -> access$getUNDEFINED$p
    282:282:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    218:222:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    218:222:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    302:309:boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeCancellableWith
    302:309:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    199:199:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    243:247:boolean kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled(java.lang.Object) -> resumeCancellableWith
    243:247:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resumeCancellableWith
    255:255:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    107:111:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resumeCancellableWith
    256:257:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    118:119:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    204:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    204:213:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    283:283:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    278:278:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeCancellableWith$default
kotlinx.coroutines.internal.FastServiceLoader -> kotlinx.coroutines.internal.FastServiceLoader:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    30:30:void <init>() -> <init>
    105:107:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class) -> getProviderInstance
    87:90:java.util.List load(java.lang.Class,java.lang.ClassLoader) -> load
    54:59:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():60 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    60:60:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():61 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    61:65:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    96:175:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:181:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    111:119:java.util.List parse(java.net.URL) -> parse
    136:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    136:143:java.util.List parse(java.net.URL):117 -> parse
    124:125:java.util.List parse(java.net.URL) -> parse
    149:196:java.util.List parseFile(java.io.BufferedReader) -> parseFile
kotlinx.coroutines.internal.FastServiceLoaderKt -> kotlinx.coroutines.internal.FastServiceLoaderKt:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    17:17:void <clinit>() -> <clinit>
    17:17:void <clinit>() -> getANDROID_DETECTED
    17:17:boolean getANDROID_DETECTED():17 -> getANDROID_DETECTED
kotlinx.coroutines.internal.InlineList -> kotlinx.coroutines.internal.InlineList:
# {"id":"sourceFile","fileName":"InlineList.kt"}
    18:18:java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> constructor-impl$default
    22:31:java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object) -> plus-FjFbRPM
kotlinx.coroutines.internal.LimitedDispatcher -> kotlinx.coroutines.internal.LimitedDispatcher:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    17:27:void <init>(kotlinx.coroutines.CoroutineDispatcher,int) -> <init>
    100:101:boolean addAndTryDispatching(java.lang.Runnable) -> addAndTryDispatching
    80:87:void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function0) -> dispatch
    80:87:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):66 -> dispatch
    67:67:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    39:56:void run() -> run
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> run
    20:20:void run():56 -> run
    57:61:void run() -> run
    92:92:boolean tryAllocateWorker() -> tryAllocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryAllocateWorker
    20:20:boolean tryAllocateWorker():92 -> tryAllocateWorker
    93:95:boolean tryAllocateWorker() -> tryAllocateWorker
kotlinx.coroutines.internal.LimitedDispatcherKt -> kotlinx.coroutines.internal.LimitedDispatcherKt:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    106:106:void checkParallelism(int) -> checkParallelism
kotlinx.coroutines.internal.LockFreeLinkedListHead -> kotlinx.coroutines.internal.LockFreeLinkedListHead:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    638:638:void <init>() -> <init>
    639:639:boolean isEmpty() -> isEmpty
    638:638:boolean remove() -> remove
    653:653:java.lang.Void remove() -> remove
kotlinx.coroutines.internal.LockFreeLinkedListKt -> kotlinx.coroutines.internal.LockFreeLinkedListKt:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    26:30:void <clinit>() -> <clinit>
    26:26:java.lang.Object getCONDITION_FALSE() -> getCONDITION_FALSE
    631:631:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object) -> unwrap
kotlinx.coroutines.internal.LockFreeLinkedListNode -> kotlinx.coroutines.internal.LockFreeLinkedListNode:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    63:63:kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    63:63:void <init>():63 -> <init>
    66:68:void <init>() -> <init>
    63:63:kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> access$finishAdd
    63:63:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode):63 -> access$finishAdd
    144:144:void addLast(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addLast
    215:219:boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addNext
    124:131:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addOneIfEmpty
    573:612:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor) -> correctPrev
    117:118:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> findPrevNonRemoved
    547:682:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> finishAdd
    100:674:java.lang.Object getNext() -> getNext
    106:106:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode() -> getNextNode
    114:114:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode() -> getPrevNode
    266:266:void helpRemove() -> helpRemove
    276:281:void helpRemovePrev() -> helpRemovePrev
    95:95:boolean isRemoved() -> isRemoved
    245:245:boolean remove() -> remove
    286:289:kotlinx.coroutines.internal.LockFreeLinkedListNode removeFirstOrNull() -> removeFirstOrNull
    251:257:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext() -> removeOrNext
    71:71:kotlinx.coroutines.internal.Removed removed() -> removed
    623:623:java.lang.String toString() -> toString
    226:231:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp) -> tryCondAddNext
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    75:76:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    73:73:void complete(java.lang.Object,java.lang.Object) -> complete
    81:84:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object) -> complete
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp -> kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1 -> kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    623:623:java.lang.Object get() -> get
kotlinx.coroutines.internal.LockFreeTaskQueue -> kotlinx.coroutines.internal.LockFreeTaskQueue:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    30:33:void <init>(boolean) -> <init>
    48:312:boolean addLast(java.lang.Object) -> addLast
    41:310:void close() -> close
    37:37:int getSize() -> getSize
    59:314:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> kotlinx.coroutines.internal.LockFreeTaskQueueCore:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    288:288:void <clinit>() -> <clinit>
    76:87:void <init>(int,boolean) -> <init>
    106:320:int addLast(java.lang.Object) -> addLast
    230:239:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    225:340:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long) -> allocateOrGetNextCopy
    316:318:boolean close() -> close
    143:155:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object) -> fillPlaceholder
    92:92:int getSize() -> getSize
    91:91:boolean isEmpty() -> isEmpty
    336:338:long markFrozen() -> markFrozen
    214:214:kotlinx.coroutines.internal.LockFreeTaskQueueCore next() -> next
    166:325:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    200:330:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    270:270:void <init>() -> <init>
    295:295:long updateHead(long,int) -> updateHead
    296:296:long updateTail(long,int) -> updateTail
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    268:268:void <init>(int) -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> kotlinx.coroutines.internal.MainDispatcherFactory:
# {"id":"sourceFile","fileName":"MainDispatcherFactory.kt"}
kotlinx.coroutines.internal.MainDispatcherLoader -> kotlinx.coroutines.internal.MainDispatcherLoader:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    19:22:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    26:138:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1896:1899:float kotlin.collections.CollectionsKt___CollectionsKt.maxOrThrow(java.lang.Iterable) -> loadMainDispatcher
    1896:1899:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1901:1901:float kotlin.collections.CollectionsKt___CollectionsKt.maxOrThrow(java.lang.Iterable) -> loadMainDispatcher
    1901:1901:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:150:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
kotlinx.coroutines.internal.MainDispatchersKt -> kotlinx.coroutines.internal.MainDispatchersKt:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    77:78:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String) -> createMissingDispatcher
    76:76:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object) -> createMissingDispatcher$default
    66:66:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher) -> isMissing
    81:81:java.lang.Void throwMissingMainDispatcherException() -> throwMissingMainDispatcherException
    57:59:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List) -> tryCreateDispatcher
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> kotlinx.coroutines.internal.MissingMainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    89:91:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String):90 -> <init>
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> dispatch
    88:88:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):88 -> dispatch
    108:108:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    96:96:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    114:118:java.lang.Void missing() -> missing
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    111:111:java.lang.Void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    122:122:java.lang.String toString() -> toString
kotlinx.coroutines.internal.OnUndeliveredElementKt -> kotlinx.coroutines.internal.OnUndeliveredElementKt:
# {"id":"sourceFile","fileName":"OnUndeliveredElement.kt"}
    37:37:kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext) -> bindCancellationFun
    31:32:void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext) -> callUndeliveredElement
    17:21:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException) -> callUndeliveredElementCatchingException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> callUndeliveredElementCatchingException
    75:75:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException):22 -> callUndeliveredElementCatchingException
    24:24:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException) -> callUndeliveredElementCatchingException
    12:12:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object) -> callUndeliveredElementCatchingException$default
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1 -> kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1:
# {"id":"sourceFile","fileName":"OnUndeliveredElement.kt"}
    37:37:java.lang.Object invoke(java.lang.Object) -> invoke
    37:37:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.internal.OpDescriptor -> kotlinx.coroutines.internal.OpDescriptor:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    19:19:void <init>() -> <init>
    35:37:boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor) -> isEarlierThan
    32:32:java.lang.String toString() -> toString
kotlinx.coroutines.internal.Removed -> kotlinx.coroutines.internal.Removed:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    626:626:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    627:627:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> kotlinx.coroutines.internal.ResizableAtomicArray:
# {"id":"sourceFile","fileName":"ResizableAtomicArray.kt"}
    13:15:void <init>(int) -> <init>
    18:18:int currentLength() -> currentLength
    21:22:java.lang.Object get(int) -> get
    27:35:void setSynchronized(int,java.lang.Object) -> setSynchronized
kotlinx.coroutines.internal.ScopeCoroutine -> kotlinx.coroutines.internal.ScopeCoroutine:
# {"id":"sourceFile","fileName":"Scopes.kt"}
    17:18:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    28:28:void afterCompletion(java.lang.Object) -> afterCompletion
    33:33:void afterResume(java.lang.Object) -> afterResume
    20:20:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    24:24:kotlinx.coroutines.Job getParent$kotlinx_coroutines_core() -> getParent$kotlinx_coroutines_core
kotlinx.coroutines.internal.StackTraceRecoveryKt -> kotlinx.coroutines.internal.StackTraceRecoveryKt:
# {"id":"sourceFile","fileName":"StackTraceRecovery.kt"}
    21:27:void <clinit>() -> <clinit>
kotlinx.coroutines.internal.Symbol -> kotlinx.coroutines.internal.Symbol:
# {"id":"sourceFile","fileName":"Symbol.kt"}
    14:14:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String toString() -> toString
kotlinx.coroutines.internal.SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt:
    1:1:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    1:1:int systemProp(java.lang.String,int,int,int) -> systemProp
    1:1:long systemProp(java.lang.String,long,long,long) -> systemProp
    1:1:java.lang.String systemProp(java.lang.String) -> systemProp
    1:1:boolean systemProp(java.lang.String,boolean) -> systemProp
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt:
# {"id":"sourceFile","fileName":"SystemProps.kt"}
    11:11:void <clinit>() -> <clinit>
    11:11:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    17:17:java.lang.String systemProp(java.lang.String) -> systemProp
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt:
# {"id":"sourceFile","fileName":"SystemProps.common.kt"}
    21:21:boolean systemProp(java.lang.String,boolean) -> systemProp
    35:35:int systemProp(java.lang.String,int,int,int) -> systemProp
    50:54:long systemProp(java.lang.String,long,long,long) -> systemProp
    30:30:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    44:44:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.ThreadContextKt -> kotlinx.coroutines.internal.ThreadContextKt:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    11:52:void <clinit>() -> <clinit>
    85:94:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> restoreThreadContext
    59:59:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext) -> threadContextElements
    65:78:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateThreadContext
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> kotlinx.coroutines.internal.ThreadContextKt$countAll$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    36:38:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> kotlinx.coroutines.internal.ThreadContextKt$findOne$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    47:47:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> kotlinx.coroutines.internal.ThreadContextKt$updateState$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    53:54:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadSafeHeap -> kotlinx.coroutines.internal.ThreadSafeHeap:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
    24:27:void <init>() -> <init>
    113:118:void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> addImpl
    85:85:kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl() -> firstImpl
    30:30:int getSize() -> getSize
    33:33:boolean isEmpty() -> isEmpty
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():40 -> peek
    40:40:kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> peek
    142:145:kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc() -> realloc
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> remove
    20:20:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode):73 -> remove
    74:79:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> remove
    90:106:kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int) -> removeAtImpl
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():42 -> removeFirstOrNull
    43:44:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> removeFirstOrNull
    31:31:void setSize(int) -> setSize
    132:136:void siftDownFrom(int) -> siftDownFrom
    123:126:void siftUpFrom(int) -> siftUpFrom
    151:157:void swap(int,int) -> swap
kotlinx.coroutines.internal.ThreadSafeHeapNode -> kotlinx.coroutines.internal.ThreadSafeHeapNode:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
kotlinx.coroutines.internal.ThreadState -> kotlinx.coroutines.internal.ThreadState:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    14:17:void <init>(kotlin.coroutines.CoroutineContext,int) -> <init>
    21:22:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object) -> append
    26:27:void restore(kotlin.coroutines.CoroutineContext) -> restore
kotlinx.coroutines.internal.UndeliveredElementException -> kotlinx.coroutines.internal.UndeliveredElementException:
# {"id":"sourceFile","fileName":"OnUndeliveredElement.kt"}
    43:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.intrinsics.CancellableKt -> kotlinx.coroutines.intrinsics.CancellableKt:
# {"id":"sourceFile","fileName":"Cancellable.kt"}
    65:66:void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable) -> dispatcherFailure
    30:30:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineCancellable
    52:52:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    52:52:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):29 -> startCoroutineCancellable
    39:39:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation) -> startCoroutineCancellable
    52:52:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    52:52:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):38 -> startCoroutineCancellable
    25:25:void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object) -> startCoroutineCancellable$default
kotlinx.coroutines.intrinsics.UndispatchedKt -> kotlinx.coroutines.intrinsics.UndispatchedKt:
# {"id":"sourceFile","fileName":"Undispatched.kt"}
    11:11:kotlin.coroutines.Continuation kotlinx.coroutines.internal.ProbesSupportKt.probeCoroutineCreated(kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    11:11:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):53 -> startCoroutineUndispatched
    54:54:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    95:95:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    95:95:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):54 -> startCoroutineUndispatched
    55:55:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):54 -> startCoroutineUndispatched
    73:75:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    73:75:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):53 -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):54 -> startCoroutineUndispatched
    70:70:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    70:70:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):53 -> startCoroutineUndispatched
    89:89:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2) -> startUndispatchedOrReturn
    111:135:java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> startUndispatchedOrReturn
    111:135:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):88 -> startUndispatchedOrReturn
    58:58:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> startUndispatchedOrReturn
    58:58:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):88 -> startUndispatchedOrReturn
kotlinx.coroutines.scheduling.CoroutineScheduler -> kotlinx.coroutines.scheduling.CoroutineScheduler:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    303:303:void <clinit>() -> <clinit>
    90:93:void <init>(int,int,long,java.lang.String) -> <init>
    94:94:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    94:94:void <init>(int,int,long,java.lang.String):94 -> <init>
    95:95:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:void <init>(int,int,long,java.lang.String):95 -> <init>
    98:297:void <init>(int,int,long,java.lang.String) -> <init>
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    85:85:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):118 -> addToGlobalQueue
    119:121:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    328:328:void close() -> close
    463:463:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():463 -> createNewWorker
    465:472:int createNewWorker() -> createNewWorker
    270:270:int getCreatedWorkers() -> createNewWorker
    270:270:int createNewWorker():474 -> createNewWorker
    475:482:int createNewWorker() -> createNewWorker
    278:278:int incrementCreatedWorkers() -> createNewWorker
    278:278:int createNewWorker():483 -> createNewWorker
    484:485:int createNewWorker() -> createNewWorker
    278:278:int incrementCreatedWorkers() -> createNewWorker
    278:278:int createNewWorker():483 -> createNewWorker
    475:485:int createNewWorker() -> createNewWorker
    406:412:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext) -> createTask
    508:508:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    596:596:kotlinx.coroutines.scheduling.CoroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.getScheduler() -> currentWorker
    596:596:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():508 -> currentWorker
    508:508:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    383:391:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> dispatch
    82:82:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):396 -> dispatch
    398:401:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    382:382:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object) -> dispatch$default
    326:326:void execute(java.lang.Runnable) -> execute
    298:298:boolean isTerminated() -> isTerminated
    236:246:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackNextIndex
    206:988:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop() -> parkedWorkersStackPop
    177:985:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackPush
    154:983:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int) -> parkedWorkersStackTopUpdate
    570:575:void runSafely(kotlinx.coroutines.scheduling.Task) -> runSafely
    333:337:void shutdown(long) -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):337 -> shutdown
    270:270:int getCreatedWorkers() -> shutdown
    270:270:void shutdown(long):337 -> shutdown
    337:367:void shutdown(long) -> shutdown
    281:281:long incrementBlockingTasks() -> signalBlockingWork
    281:281:void signalBlockingWork(boolean):417 -> signalBlockingWork
    419:421:void signalBlockingWork(boolean) -> signalBlockingWork
    425:427:void signalCpuWork() -> signalCpuWork
    499:499:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> submitToLocalQueue
    82:82:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):501 -> submitToLocalQueue
    501:505:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    526:564:java.lang.String toString() -> toString
    433:442:boolean tryCreateWorker(long) -> tryCreateWorker
    430:430:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object) -> tryCreateWorker$default
    450:452:boolean tryUnpark() -> tryUnpark
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> kotlinx.coroutines.scheduling.CoroutineScheduler$Companion:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    300:300:void <init>() -> <init>
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> kotlinx.coroutines.scheduling.CoroutineScheduler$Worker:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    579:579:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> <init>
    579:579:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):579 -> <init>
    581:616:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    630:630:void setNextParkedWorker(java.lang.Object) -> <init>
    630:630:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):630 -> <init>
    637:637:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    592:593:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int) -> <init>
    579:579:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> access$getThis$0$p
    763:763:void afterTask(int) -> afterTask
    284:284:void kotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks() -> afterTask
    284:284:void afterTask(int):763 -> afterTask
    764:768:void afterTask(int) -> afterTask
    756:757:void beforeTask(int) -> beforeTask
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> executeTask
    82:82:void executeTask(kotlinx.coroutines.scheduling.Task):746 -> executeTask
    747:750:void executeTask(kotlinx.coroutines.scheduling.Task) -> executeTask
    885:892:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    869:876:kotlinx.coroutines.scheduling.Task findTask(boolean) -> findTask
    586:586:int getIndexInArray() -> getIndexInArray
    630:630:void setNextParkedWorker(java.lang.Object) -> getNextParkedWorker
    630:630:java.lang.Object getNextParkedWorker():630 -> getNextParkedWorker
    861:864:void idleReset(int) -> idleReset
    743:743:boolean inStack() -> inStack
    777:787:int nextInt(int) -> nextInt
    792:799:void park() -> park
    896:901:kotlinx.coroutines.scheduling.Task pollGlobalQueues() -> pollGlobalQueues
    664:664:void run() -> run
    671:712:void runWorker() -> runWorker
    588:589:void setIndexInArray(int) -> setIndexInArray
    630:630:void setNextParkedWorker(java.lang.Object) -> setNextParkedWorker
    644:983:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    291:291:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    291:291:boolean tryAcquireCpuPermit():645 -> tryAcquireCpuPermit
    646:646:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    717:739:void tryPark() -> tryPark
    657:659:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    294:294:long kotlinx.coroutines.scheduling.CoroutineScheduler.releaseCpuPermit() -> tryReleaseCpu
    294:294:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):659 -> tryReleaseCpu
    660:660:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    907:907:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    270:270:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> trySteal
    270:270:kotlinx.coroutines.scheduling.Task trySteal(boolean):907 -> trySteal
    913:933:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    807:807:void tryTerminateWorker() -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():807 -> tryTerminateWorker
    809:809:void tryTerminateWorker() -> tryTerminateWorker
    270:270:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> tryTerminateWorker
    270:270:void tryTerminateWorker():811 -> tryTerminateWorker
    811:832:void tryTerminateWorker() -> tryTerminateWorker
    279:279:int kotlinx.coroutines.scheduling.CoroutineScheduler.decrementCreatedWorkers() -> tryTerminateWorker
    279:279:void tryTerminateWorker():837 -> tryTerminateWorker
    839:856:void tryTerminateWorker() -> tryTerminateWorker
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    942:962:void <clinit>() -> <clinit>
    938:938:void <init>(java.lang.String,int) -> <init>
kotlinx.coroutines.scheduling.DefaultIoScheduler -> kotlinx.coroutines.scheduling.DefaultIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    46:49:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    74:74:void close() -> close
    65:65:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    56:56:void execute(java.lang.Runnable) -> execute
kotlinx.coroutines.scheduling.DefaultScheduler -> kotlinx.coroutines.scheduling.DefaultScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    13:15:void <init>() -> <init>
    24:24:void close() -> close
kotlinx.coroutines.scheduling.GlobalQueue -> kotlinx.coroutines.scheduling.GlobalQueue:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    106:106:void <init>() -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> kotlinx.coroutines.scheduling.NanoTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    113:113:void <init>() -> <init>
    114:114:long nanoTime() -> nanoTime
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    82:92:void <init>(int,int,long,java.lang.String) -> <init>
    95:95:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler() -> createScheduler
    97:97:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    103:103:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatchWithContext$kotlinx_coroutines_core
kotlinx.coroutines.scheduling.SchedulerTimeSource -> kotlinx.coroutines.scheduling.SchedulerTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    109:109:void <init>() -> <init>
kotlinx.coroutines.scheduling.Task -> kotlinx.coroutines.scheduling.Task:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    77:79:void <init>(long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    81:81:void <init>() -> <init>
kotlinx.coroutines.scheduling.TaskContext -> kotlinx.coroutines.scheduling.TaskContext:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.TaskContextImpl -> kotlinx.coroutines.scheduling.TaskContextImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    65:65:void <init>(int) -> <init>
    65:65:int getTaskMode() -> getTaskMode
kotlinx.coroutines.scheduling.TaskImpl -> kotlinx.coroutines.scheduling.TaskImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    89:92:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    95:97:void run() -> run
    102:102:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.TasksKt -> kotlinx.coroutines.scheduling.TasksKt:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    17:75:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> kotlinx.coroutines.scheduling.UnlimitedIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    31:31:void <init>() -> <init>
    39:39:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
kotlinx.coroutines.scheduling.WorkQueue -> kotlinx.coroutines.scheduling.WorkQueue:
# {"id":"sourceFile","fileName":"WorkQueue.kt"}
    37:60:void <init>() -> <init>
    73:75:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean) -> add
    72:72:kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object) -> add$default
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addLast
    85:85:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):83 -> addLast
    83:98:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task) -> addLast
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    85:85:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):195 -> decrementIfBlocking
    196:196:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    52:52:int getBufferSize$kotlinx_coroutines_core() -> getBufferSize$kotlinx_coroutines_core
    53:53:int getSize$kotlinx_coroutines_core() -> getSize$kotlinx_coroutines_core
    141:142:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue) -> offloadAllWorkTo
    66:66:kotlinx.coroutines.scheduling.Task poll() -> poll
    182:188:kotlinx.coroutines.scheduling.Task pollBuffer() -> pollBuffer
    175:176:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue) -> pollTo
    121:128:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealBlockingFrom
    85:85:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue):129 -> tryStealBlockingFrom
    129:137:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    110:116:long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealFrom
    152:152:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    85:85:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean):153 -> tryStealLastScheduled
    156:167:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
kotlinx.coroutines.sync.Empty -> kotlinx.coroutines.sync.Empty:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    134:135:void <init>(java.lang.Object) -> <init>
    137:137:java.lang.String toString() -> toString
kotlinx.coroutines.sync.Mutex -> kotlinx.coroutines.sync.Mutex:
# {"id":"sourceFile","fileName":"Mutex.kt"}
kotlinx.coroutines.sync.Mutex$DefaultImpls -> kotlinx.coroutines.sync.Mutex$DefaultImpls:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    40:40:boolean tryLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object) -> tryLock$default
    85:85:void unlock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object) -> unlock$default
kotlinx.coroutines.sync.MutexImpl -> kotlinx.coroutines.sync.MutexImpl:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    140:140:java.lang.Object access$lockSuspend(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,kotlin.coroutines.Continuation) -> <init>
    140:140:void <init>(boolean):140 -> <init>
    143:143:void <init>(boolean) -> <init>
    184:186:java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation) -> lock
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> lockSuspend
    333:333:java.lang.Object lockSuspend(java.lang.Object,kotlin.coroutines.Continuation):189 -> lockSuspend
    190:434:java.lang.Object lockSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> lockSuspend
    332:336:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> lockSuspend
    332:336:java.lang.Object lockSuspend(java.lang.Object,kotlin.coroutines.Continuation):189 -> lockSuspend
    208:229:java.lang.Object lockSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> lockSuspend
    355:440:java.lang.String toString() -> toString
    165:428:boolean tryLock(java.lang.Object) -> tryLock
    324:438:void unlock(java.lang.Object) -> unlock
kotlinx.coroutines.sync.MutexImpl$LockCont -> kotlinx.coroutines.sync.MutexImpl$LockCont:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    379:382:void <init>(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> <init>
    392:392:void completeResumeLockWaiter() -> completeResumeLockWaiter
    393:393:java.lang.String toString() -> toString
    385:386:boolean tryResumeLockWaiter() -> tryResumeLockWaiter
kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1 -> kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    386:386:java.lang.Object invoke(java.lang.Object) -> invoke
    388:388:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.sync.MutexImpl$LockWaiter -> kotlinx.coroutines.sync.MutexImpl$LockWaiter:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    369:372:void <init>(kotlinx.coroutines.sync.MutexImpl,java.lang.Object) -> <init>
    374:374:void dispose() -> dispose
    373:373:boolean take() -> take
kotlinx.coroutines.sync.MutexImpl$LockedQueue -> kotlinx.coroutines.sync.MutexImpl$LockedQueue:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    364:365:void <init>(java.lang.Object) -> <init>
    366:366:java.lang.String toString() -> toString
kotlinx.coroutines.sync.MutexImpl$UnlockOp -> kotlinx.coroutines.sync.MutexImpl$UnlockOp:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    413:414:void <init>(kotlinx.coroutines.sync.MutexImpl$LockedQueue) -> <init>
    412:412:void complete(java.lang.Object,java.lang.Object) -> complete
    419:420:void complete(kotlinx.coroutines.sync.MutexImpl,java.lang.Object) -> complete
    412:412:java.lang.Object prepare(java.lang.Object) -> prepare
    416:416:java.lang.Object prepare(kotlinx.coroutines.sync.MutexImpl) -> prepare
kotlinx.coroutines.sync.MutexImpl$lockSuspend$2$1$1 -> kotlinx.coroutines.sync.MutexImpl$lockSuspend$2$1$1:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    201:201:java.lang.Object invoke(java.lang.Object) -> invoke
    201:201:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.sync.MutexKt -> kotlinx.coroutines.sync.MutexKt:
# {"id":"sourceFile","fileName":"Mutex.kt"}
    121:132:void <clinit>() -> <clinit>
    96:96:kotlinx.coroutines.sync.Mutex Mutex(boolean) -> Mutex
    95:95:kotlinx.coroutines.sync.Mutex Mutex$default(boolean,int,java.lang.Object) -> Mutex$default
    1:1:kotlinx.coroutines.sync.Empty access$getEMPTY_LOCKED$p() -> access$getEMPTY_LOCKED$p
    1:1:kotlinx.coroutines.sync.Empty access$getEMPTY_UNLOCKED$p() -> access$getEMPTY_UNLOCKED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getLOCKED$p() -> access$getLOCKED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getUNLOCKED$p() -> access$getUNLOCKED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getUNLOCK_FAIL$p() -> access$getUNLOCK_FAIL$p
okhttp3.Address -> okhttp3.Address:
# {"id":"sourceFile","fileName":"Address.kt"}
    34:87:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    50:50:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    86:86:java.util.List connectionSpecs() -> connectionSpecs
    38:38:okhttp3.Dns dns() -> dns
    167:169:boolean equals(java.lang.Object) -> equals
    188:197:boolean equalsNonHost$okhttp(okhttp3.Address) -> equalsNonHost$okhttp
    174:183:int hashCode() -> hashCode
    47:47:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    84:84:java.util.List protocols() -> protocols
    59:59:java.net.Proxy proxy() -> proxy
    53:53:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    68:68:java.net.ProxySelector proxySelector() -> proxySelector
    41:41:javax.net.SocketFactory socketFactory() -> socketFactory
    44:44:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    201:203:java.lang.String toString() -> toString
    74:74:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    130:137:void <clinit>() -> <clinit>
okhttp3.Authenticator$Companion -> okhttp3.Authenticator$Companion:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    127:127:void <init>() -> <init>
okhttp3.Authenticator$Companion$AuthenticatorNone -> okhttp3.Authenticator$Companion$AuthenticatorNone:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    131:131:void <init>() -> <init>
okhttp3.Cache -> okhttp3.Cache:
# {"id":"sourceFile","fileName":"Cache.kt"}
okhttp3.CacheControl -> okhttp3.CacheControl:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    264:277:void <clinit>() -> <clinit>
    28:71:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    69:69:boolean immutable() -> immutable
    50:50:boolean isPrivate() -> isPrivate
    51:51:boolean isPublic() -> isPublic
    42:42:int maxAgeSeconds() -> maxAgeSeconds
    55:55:int maxStaleSeconds() -> maxStaleSeconds
    57:57:int minFreshSeconds() -> minFreshSeconds
    53:53:boolean mustRevalidate() -> mustRevalidate
    36:36:boolean noCache() -> noCache
    39:39:boolean noStore() -> noStore
    67:67:boolean noTransform() -> noTransform
    65:65:boolean onlyIfCached() -> onlyIfCached
    48:48:int sMaxAgeSeconds() -> sMaxAgeSeconds
    144:162:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    168:173:void <init>() -> <init>
    253:254:okhttp3.CacheControl build() -> build
    209:211:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    180:180:okhttp3.CacheControl$Builder noCache() -> noCache
    233:233:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CacheControl$Companion -> okhttp3.CacheControl$Companion:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    258:258:void <init>() -> <init>
    407:412:int indexOfElement(java.lang.String,java.lang.String,int) -> indexOfElement
    301:397:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
okhttp3.Call -> okhttp3.Call:
# {"id":"sourceFile","fileName":"Call.kt"}
okhttp3.Callback -> okhttp3.Callback:
# {"id":"sourceFile","fileName":"Callback.kt"}
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    347:347:void <clinit>() -> <clinit>
    135:135:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    137:137:java.util.Set getPins() -> <init>
    137:137:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner):137 -> <init>
    138:138:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp() -> <init>
    138:138:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner):138 -> <init>
    136:136:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    150:150:void check(java.lang.String,java.util.List) -> check
    157:200:void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0) -> check$okhttp
    230:232:boolean equals(java.lang.Object) -> equals
    216:216:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    629:631:java.util.List okhttp3.internal.Util.filterList(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findMatchingPins
    629:631:java.util.List findMatchingPins(java.lang.String):216 -> findMatchingPins
    216:216:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    632:633:java.util.List okhttp3.internal.Util.filterList(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findMatchingPins
    632:633:java.util.List findMatchingPins(java.lang.String):216 -> findMatchingPins
    138:138:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp() -> getCertificateChainCleaner$okhttp
    237:238:int hashCode() -> hashCode
    222:225:okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner$okhttp
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    326:327:void <init>() -> <init>
    342:342:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Companion -> okhttp3.CertificatePinner$Companion:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    345:345:void <init>() -> <init>
    365:366:java.lang.String pin(java.security.cert.Certificate) -> pin
    351:351:okio.ByteString sha1Hash(java.security.cert.X509Certificate) -> sha1Hash
    355:355:okio.ByteString sha256Hash(java.security.cert.X509Certificate) -> sha256Hash
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    308:312:boolean equals(java.lang.Object) -> equals
    251:251:okio.ByteString getHash() -> getHash
    248:248:java.lang.String getHashAlgorithm() -> getHashAlgorithm
    318:320:int hashCode() -> hashCode
    278:292:boolean matchesHostname(java.lang.String) -> matchesHostname
    304:304:java.lang.String toString() -> toString
okhttp3.CertificatePinner$check$1 -> okhttp3.CertificatePinner$check$1:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    150:150:java.lang.Object invoke() -> invoke
    151:373:java.util.List invoke() -> invoke
okhttp3.Challenge -> okhttp3.Challenge:
# {"id":"sourceFile","fileName":"Challenge.kt"}
    29:66:void <init>(java.lang.String,java.util.Map) -> <init>
    48:55:java.nio.charset.Charset charset() -> charset
    105:107:boolean equals(java.lang.Object) -> equals
    112:113:int hashCode() -> hashCode
    43:43:java.lang.String realm() -> realm
    31:31:java.lang.String scheme() -> scheme
    117:117:java.lang.String toString() -> toString
okhttp3.CipherSuite -> okhttp3.CipherSuite:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    62:419:void <clinit>() -> <clinit>
    38:45:void <init>(java.lang.String) -> <init>
    38:38:java.util.Map access$getINSTANCES$cp() -> access$getINSTANCES$cp
    38:38:java.util.Comparator access$getORDER_BY_NAME$cp() -> access$getORDER_BY_NAME$cp
    45:45:java.lang.String javaName() -> javaName
    54:54:java.lang.String toString() -> toString
okhttp3.CipherSuite$Companion -> okhttp3.CipherSuite$Companion:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    56:56:void <init>() -> <init>
    56:56:okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int) -> access$init
    427:438:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    62:62:java.util.Comparator getORDER_BY_NAME$okhttp() -> getORDER_BY_NAME$okhttp
    455:456:okhttp3.CipherSuite init(java.lang.String,int) -> init
    443:444:java.lang.String secondaryName(java.lang.String) -> secondaryName
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1 -> okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    62:62:void <init>() -> <init>
    62:62:int compare(java.lang.Object,java.lang.Object) -> compare
    65:73:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.Connection -> okhttp3.Connection:
# {"id":"sourceFile","fileName":"Connection.kt"}
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
# {"id":"sourceFile","fileName":"ConnectionPool.kt"}
    33:34:void <init>(okhttp3.internal.connection.RealConnectionPool) -> <init>
    40:41:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    47:47:void <init>() -> <init>
    34:34:okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp() -> getDelegate$okhttp
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    274:347:void <clinit>() -> <clinit>
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> <init>
    46:46:void <init>(boolean,boolean,java.lang.String[],java.lang.String[]):46 -> <init>
    47:47:boolean isTls() -> <init>
    47:47:void <init>(boolean,boolean,java.lang.String[],java.lang.String[]):47 -> <init>
    48:48:boolean supportsTlsExtensions() -> <init>
    48:48:void <init>(boolean,boolean,java.lang.String[],java.lang.String[]):48 -> <init>
    49:50:void <init>(boolean,boolean,java.lang.String[],java.lang.String[]) -> <init>
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> access$getCipherSuitesAsString$p
    46:46:java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec):46 -> access$getCipherSuitesAsString$p
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> access$getTlsVersionsAsString$p
    94:101:void apply$okhttp(javax.net.ssl.SSLSocket,boolean) -> apply$okhttp
    59:352:java.util.List cipherSuites() -> cipherSuites
    168:176:boolean equals(java.lang.Object) -> equals
    184:187:int hashCode() -> hashCode
    149:160:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    47:47:boolean isTls() -> isTls
    109:134:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    48:48:boolean supportsTlsExtensions() -> supportsTlsExtensions
    75:356:java.util.List tlsVersions() -> tlsVersions
    193:198:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    207:208:void <init>(boolean) -> <init>
    211:215:void <init>(okhttp3.ConnectionSpec) -> <init>
    263:267:okhttp3.ConnectionSpec build() -> build
    224:353:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> cipherSuites
    38:38:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]):225 -> cipherSuites
    224:226:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    230:233:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    202:202:void setTls$okhttp(boolean) -> getTls$okhttp
    202:202:boolean getTls$okhttp():202 -> getTls$okhttp
    203:203:void setCipherSuites$okhttp(java.lang.String[]) -> setCipherSuites$okhttp
    205:205:void setSupportsTlsExtensions$okhttp(boolean) -> setSupportsTlsExtensions$okhttp
    204:204:void setTlsVersions$okhttp(java.lang.String[]) -> setTlsVersions$okhttp
    259:260:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    242:361:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> tlsVersions
    38:38:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]):244 -> tlsVersions
    242:245:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    249:252:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.ConnectionSpec$Companion -> okhttp3.ConnectionSpec$Companion:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    271:271:void <init>() -> <init>
okhttp3.Cookie -> okhttp3.Cookie:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    331:335:void <clinit>() -> <clinit>
    43:96:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    43:43:java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp() -> access$getDAY_OF_MONTH_PATTERN$cp
    43:43:java.util.regex.Pattern access$getMONTH_PATTERN$cp() -> access$getMONTH_PATTERN$cp
    43:43:java.util.regex.Pattern access$getTIME_PATTERN$cp() -> access$getTIME_PATTERN$cp
    43:43:java.util.regex.Pattern access$getYEAR_PATTERN$cp() -> access$getYEAR_PATTERN$cp
    66:66:java.lang.String domain() -> domain
    117:126:boolean equals(java.lang.Object) -> equals
    60:60:long expiresAt() -> expiresAt
    132:140:int hashCode() -> hashCode
    96:96:boolean hostOnly() -> hostOnly
    82:82:boolean httpOnly() -> httpOnly
    46:46:java.lang.String name() -> name
    73:73:java.lang.String path() -> path
    85:85:boolean persistent() -> persistent
    76:76:boolean secure() -> secure
    144:144:java.lang.String toString() -> toString
    215:246:java.lang.String toString$okhttp(boolean) -> toString$okhttp
    49:49:java.lang.String value() -> value
okhttp3.Cookie$$ExternalSyntheticBackport0 -> okhttp3.Cookie$$ExternalSyntheticBackport0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int okhttp3.Cookie$$InternalSyntheticBackport$0$b420cae2050b9b42b2bee39d535257074bbb3e690c0bebd452b3ef48f50cfea3$1.m(boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.Cookie$Companion -> okhttp3.Cookie$Companion:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    329:329:void <init>() -> <init>
    555:555:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    338:344:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    368:368:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    371:481:okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String) -> parse$okhttp
    597:609:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    590:591:java.lang.String parseDomain(java.lang.String) -> parseDomain
    488:545:long parseExpires(java.lang.String,int,int) -> parseExpires
    574:581:long parseMaxAge(java.lang.String) -> parseMaxAge
okhttp3.CookieJar -> okhttp3.CookieJar:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    54:54:void <clinit>() -> <clinit>
okhttp3.CookieJar$Companion -> okhttp3.CookieJar$Companion:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    51:51:void <init>() -> <init>
okhttp3.CookieJar$Companion$NoCookies -> okhttp3.CookieJar$Companion$NoCookies:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    55:55:void <init>() -> <init>
    60:60:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
okhttp3.Credentials -> okhttp3.Credentials:
# {"id":"sourceFile","fileName":"Credentials.kt"}
    23:23:void <init>() -> <init>
    30:32:java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset) -> basic
okhttp3.Dispatcher -> okhttp3.Dispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    38:38:void <init>() -> <init>
    46:46:int getMaxRequests() -> <init>
    46:46:void <init>():46 -> <init>
    65:65:int getMaxRequestsPerHost() -> <init>
    65:65:void <init>():65 -> <init>
    102:108:void <init>() -> <init>
    115:125:void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall) -> enqueue$okhttp
    192:193:void executed$okhttp(okhttp3.internal.connection.RealCall) -> executed$okhttp
    94:98:java.util.concurrent.ExecutorService executorService() -> executorService
    129:133:okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String) -> findExistingCallWithHost
    208:216:void finished(java.util.Deque,java.lang.Object) -> finished
    197:198:void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall) -> finished$okhttp
    203:203:void finished$okhttp(okhttp3.internal.connection.RealCall) -> finished$okhttp
    87:87:void setIdleCallback(java.lang.Runnable) -> getIdleCallback
    87:87:java.lang.Runnable getIdleCallback():87 -> getIdleCallback
    46:46:int getMaxRequests() -> getMaxRequests
    65:65:int getMaxRequestsPerHost() -> getMaxRequestsPerHost
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> promoteAndExecute
    615:616:boolean promoteAndExecute():162 -> promoteAndExecute
    164:184:boolean promoteAndExecute() -> promoteAndExecute
    232:232:int runningCallsCount() -> runningCallsCount
okhttp3.Dns -> okhttp3.Dns:
# {"id":"sourceFile","fileName":"Dns.kt"}
    45:45:void <clinit>() -> <clinit>
okhttp3.Dns$Companion -> okhttp3.Dns$Companion:
# {"id":"sourceFile","fileName":"Dns.kt"}
    39:39:void <init>() -> <init>
okhttp3.Dns$Companion$DnsSystem -> okhttp3.Dns$Companion$DnsSystem:
# {"id":"sourceFile","fileName":"Dns.kt"}
    46:46:void <init>() -> <init>
    49:52:java.util.List lookup(java.lang.String) -> lookup
okhttp3.EventListener -> okhttp3.EventListener:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    475:475:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
okhttp3.EventListener$Companion -> okhttp3.EventListener$Companion:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    473:473:void <init>() -> <init>
okhttp3.EventListener$Companion$NONE$1 -> okhttp3.EventListener$Companion$NONE$1:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    475:475:void <init>() -> <init>
okhttp3.EventListener$Factory -> okhttp3.EventListener$Factory:
# {"id":"sourceFile","fileName":"EventListener.kt"}
okhttp3.Handshake -> okhttp3.Handshake:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    34:34:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0) -> <init>
    39:39:okhttp3.TlsVersion tlsVersion() -> <init>
    39:39:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0):39 -> <init>
    42:42:okhttp3.CipherSuite cipherSuite() -> <init>
    42:42:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0):42 -> <init>
    45:45:java.util.List localCertificates() -> <init>
    45:45:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0):45 -> <init>
    51:51:java.util.List peerCertificates() -> <init>
    51:51:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0):51 -> <init>
    42:42:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    112:116:boolean equals(java.lang.Object) -> equals
    139:140:java.lang.String getName(java.security.cert.Certificate) -> getName
    121:124:int hashCode() -> hashCode
    45:45:java.util.List localCertificates() -> localCertificates
    51:51:java.util.List peerCertificates() -> peerCertificates
    39:39:okhttp3.TlsVersion tlsVersion() -> tlsVersion
    129:207:java.lang.String toString() -> toString
okhttp3.Handshake$Companion -> okhttp3.Handshake$Companion:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    143:143:void <init>() -> <init>
    148:167:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    172:174:java.util.List toImmutableList(java.security.cert.Certificate[]) -> toImmutableList
okhttp3.Handshake$Companion$handshake$1 -> okhttp3.Handshake$Companion$handshake$1:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    167:167:java.lang.Object invoke() -> invoke
    167:167:java.util.List invoke() -> invoke
okhttp3.Handshake$peerCertificates$2 -> okhttp3.Handshake$peerCertificates$2:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    51:51:java.lang.Object invoke() -> invoke
    53:55:java.util.List invoke() -> invoke
okhttp3.Headers -> okhttp3.Headers:
# {"id":"sourceFile","fileName":"Headers.kt"}
    50:52:void <init>(java.lang.String[]) -> <init>
    179:179:boolean equals(java.lang.Object) -> equals
    55:55:java.lang.String get(java.lang.String) -> get
    182:182:int hashCode() -> hashCode
    133:133:java.util.Iterator iterator() -> iterator
    85:85:java.lang.String name(int) -> name
    137:138:okhttp3.Headers$Builder newBuilder() -> newBuilder
    75:75:int size() -> size
    198:205:java.lang.String toString() -> toString
    88:88:java.lang.String value(int) -> value
    102:111:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
# {"id":"sourceFile","fileName":"Headers.kt"}
    224:224:void <init>() -> <init>
    225:225:java.util.List getNamesAndValues$okhttp() -> <init>
    225:225:void <init>():225 -> <init>
    260:262:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    232:244:okhttp3.Headers$Builder addLenient$okhttp(java.lang.String) -> addLenient$okhttp
    322:323:okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String) -> addLenient$okhttp
    359:359:okhttp3.Headers build() -> build
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    38:38:okhttp3.Headers build():359 -> build
    359:359:okhttp3.Headers build() -> build
    225:225:java.util.List getNamesAndValues$okhttp() -> getNamesAndValues$okhttp
    328:331:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    343:346:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.Headers$Companion -> okhttp3.Headers$Companion:
# {"id":"sourceFile","fileName":"Headers.kt"}
    362:362:void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String) -> <init>
    362:362:void <init>():362 -> <init>
    362:362:void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String) -> access$checkName
    362:362:void access$checkName(okhttp3.Headers$Companion,java.lang.String):362 -> access$checkName
    362:362:void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String) -> access$checkValue
    362:362:void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String) -> access$get
    362:362:java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String):362 -> access$get
    438:442:void checkName(java.lang.String) -> checkName
    448:452:void checkValue(java.lang.String,java.lang.String) -> checkValue
    364:366:java.lang.String get(java.lang.String[],java.lang.String) -> get
    379:396:okhttp3.Headers of(java.lang.String[]) -> of
okhttp3.HttpUrl -> okhttp3.HttpUrl:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1558:1558:void <clinit>() -> <clinit>
    288:384:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String) -> <init>
    288:288:char[] access$getHEX_DIGITS$cp() -> access$getHEX_DIGITS$cp
    689:691:java.lang.String encodedFragment() -> encodedFragment
    453:456:java.lang.String encodedPassword() -> encodedPassword
    483:485:java.lang.String encodedPath() -> encodedPath
    500:507:java.util.List encodedPathSegments() -> encodedPathSegments
    527:530:java.lang.String encodedQuery() -> encodedQuery
    435:438:java.lang.String encodedUsername() -> encodedUsername
    744:744:boolean equals(java.lang.Object) -> equals
    747:747:int hashCode() -> hashCode
    334:334:java.lang.String host() -> host
    384:384:boolean isHttps() -> isHttps
    717:727:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    737:737:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    347:347:int port() -> port
    548:551:java.lang.String query() -> query
    700:704:java.lang.String redact() -> redact
    711:711:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    290:290:java.lang.String scheme() -> scheme
    749:749:java.lang.String toString() -> toString
    409:418:java.net.URI uri() -> uri
    389:391:java.net.URL url() -> url
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    909:909:void <init>() -> <init>
    911:911:void setEncodedUsername$okhttp(java.lang.String) -> <init>
    911:911:void <init>():911 -> <init>
    912:912:void setEncodedPassword$okhttp(java.lang.String) -> <init>
    912:912:void <init>():912 -> <init>
    914:914:void setPort$okhttp(int) -> <init>
    914:914:void <init>():914 -> <init>
    915:915:java.util.List getEncodedPathSegments$okhttp() -> <init>
    915:915:void <init>():915 -> <init>
    920:920:void <init>() -> <init>
    1174:1877:okhttp3.HttpUrl build() -> build
    972:972:int effectivePort() -> effectivePort
    1046:1050:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    917:917:void setEncodedFragment$okhttp(java.lang.String) -> getEncodedFragment$okhttp
    917:917:java.lang.String getEncodedFragment$okhttp():917 -> getEncodedFragment$okhttp
    912:912:void setEncodedPassword$okhttp(java.lang.String) -> getEncodedPassword$okhttp
    912:912:java.lang.String getEncodedPassword$okhttp():912 -> getEncodedPassword$okhttp
    915:915:java.util.List getEncodedPathSegments$okhttp() -> getEncodedPathSegments$okhttp
    916:916:void setEncodedQueryNamesAndValues$okhttp(java.util.List) -> getEncodedQueryNamesAndValues$okhttp
    916:916:java.util.List getEncodedQueryNamesAndValues$okhttp():916 -> getEncodedQueryNamesAndValues$okhttp
    911:911:void setEncodedUsername$okhttp(java.lang.String) -> getEncodedUsername$okhttp
    911:911:java.lang.String getEncodedUsername$okhttp():911 -> getEncodedUsername$okhttp
    913:913:void setHost$okhttp(java.lang.String) -> getHost$okhttp
    913:913:java.lang.String getHost$okhttp():913 -> getHost$okhttp
    914:914:void setPort$okhttp(int) -> getPort$okhttp
    914:914:int getPort$okhttp():914 -> getPort$okhttp
    910:910:void setScheme$okhttp(java.lang.String) -> getScheme$okhttp
    910:910:java.lang.String getScheme$okhttp():910 -> getScheme$okhttp
    961:963:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1452:1452:boolean isDot(java.lang.String) -> isDot
    1456:1459:boolean isDotDot(java.lang.String) -> isDotDot
    1239:1379:okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String) -> parse$okhttp
    946:946:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1473:1479:void pop() -> pop
    967:968:okhttp3.HttpUrl$Builder port(int) -> port
    1428:1447:void push(java.lang.String,int,int,boolean,boolean) -> push
    1142:1164:okhttp3.HttpUrl$Builder reencodeForUri$okhttp() -> reencodeForUri$okhttp
    1398:1414:void resolvePath(java.lang.String,int,int) -> resolvePath
    928:930:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    917:917:void setEncodedFragment$okhttp(java.lang.String) -> setEncodedFragment$okhttp
    912:912:void setEncodedPassword$okhttp(java.lang.String) -> setEncodedPassword$okhttp
    916:916:void setEncodedQueryNamesAndValues$okhttp(java.util.List) -> setEncodedQueryNamesAndValues$okhttp
    911:911:void setEncodedUsername$okhttp(java.lang.String) -> setEncodedUsername$okhttp
    913:913:void setHost$okhttp(java.lang.String) -> setHost$okhttp
    914:914:void setPort$okhttp(int) -> setPort$okhttp
    910:910:void setScheme$okhttp(java.lang.String) -> setScheme$okhttp
    1188:1233:java.lang.String toString() -> toString
    935:935:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.HttpUrl$Builder$Companion -> okhttp3.HttpUrl$Builder$Companion:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1483:1483:void <init>() -> <init>
    1483:1483:int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$parsePort
    1483:1483:int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$portColonOffset
    1483:1483:int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$schemeDelimiterOffset
    1483:1483:int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$slashCount
    1546:1547:int parsePort(java.lang.String,int,int) -> parsePort
    1530:1533:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1493:1497:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1516:1516:int slashCount(java.lang.String,int,int) -> slashCount
okhttp3.HttpUrl$Companion -> okhttp3.HttpUrl$Companion:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1556:1556:void <init>() -> <init>
    1784:1812:java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize$okhttp
    1771:1773:java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object) -> canonicalize$okhttp$default
    1575:1576:int defaultPort(java.lang.String) -> defaultPort
    1634:1634:okhttp3.HttpUrl get(java.lang.String) -> get
    1746:1748:boolean isPercentEncoded(java.lang.String,int,int) -> isPercentEncoded
    1701:1712:java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean) -> percentDecode$okhttp
    1695:1697:java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object) -> percentDecode$okhttp$default
    1583:1585:void toPathString$okhttp(java.util.List,java.lang.StringBuilder) -> toPathString$okhttp
    1609:1621:java.util.List toQueryNamesAndValues$okhttp(java.lang.String) -> toQueryNamesAndValues$okhttp
    1591:1598:void toQueryString$okhttp(java.util.List,java.lang.StringBuilder) -> toQueryString$okhttp
    1830:1864:void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> writeCanonicalized
    1724:1740:void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean) -> writePercentDecoded
okhttp3.Interceptor -> okhttp3.Interceptor:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
okhttp3.Interceptor$Chain -> okhttp3.Interceptor$Chain:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
okhttp3.MediaType -> okhttp3.MediaType:
# {"id":"sourceFile","fileName":"MediaType.kt"}
    99:100:void <clinit>() -> <clinit>
    28:42:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    28:28:java.util.regex.Pattern access$getPARAMETER$cp() -> access$getPARAMETER$cp
    28:28:java.util.regex.Pattern access$getTYPE_SUBTYPE$cp() -> access$getTYPE_SUBTYPE$cp
    51:53:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    50:50:java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object) -> charset$default
    92:92:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
    64:66:java.lang.String parameter(java.lang.String) -> parameter
    90:90:java.lang.String toString() -> toString
okhttp3.MediaType$Companion -> okhttp3.MediaType$Companion:
# {"id":"sourceFile","fileName":"MediaType.kt"}
    96:96:void <init>() -> <init>
    110:148:okhttp3.MediaType get(java.lang.String) -> get
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> get
    38:38:okhttp3.MediaType get(java.lang.String):148 -> get
    111:148:okhttp3.MediaType get(java.lang.String) -> get
    156:156:okhttp3.MediaType parse(java.lang.String) -> parse
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    1073:1076:void <clinit>() -> <clinit>
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> <init>
    121:121:void <init>(okhttp3.OkHttpClient$Builder):121 -> <init>
    125:125:okhttp3.Dispatcher dispatcher() -> <init>
    125:125:void <init>(okhttp3.OkHttpClient$Builder):125 -> <init>
    127:127:okhttp3.ConnectionPool connectionPool() -> <init>
    127:127:void <init>(okhttp3.OkHttpClient$Builder):127 -> <init>
    135:149:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    151:151:okhttp3.Authenticator authenticator() -> <init>
    151:151:void <init>(okhttp3.OkHttpClient$Builder):151 -> <init>
    153:153:boolean followRedirects() -> <init>
    153:153:void <init>(okhttp3.OkHttpClient$Builder):153 -> <init>
    155:155:boolean followSslRedirects() -> <init>
    155:155:void <init>(okhttp3.OkHttpClient$Builder):155 -> <init>
    157:157:okhttp3.CookieJar cookieJar() -> <init>
    157:157:void <init>(okhttp3.OkHttpClient$Builder):157 -> <init>
    159:159:okhttp3.Cache cache() -> <init>
    159:159:void <init>(okhttp3.OkHttpClient$Builder):159 -> <init>
    161:161:okhttp3.Dns dns() -> <init>
    161:161:void <init>(okhttp3.OkHttpClient$Builder):161 -> <init>
    163:163:java.net.Proxy proxy() -> <init>
    163:163:void <init>(okhttp3.OkHttpClient$Builder):163 -> <init>
    166:173:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    175:175:javax.net.SocketFactory socketFactory() -> <init>
    175:175:void <init>(okhttp3.OkHttpClient$Builder):175 -> <init>
    185:185:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    187:187:java.util.List protocols() -> <init>
    187:187:void <init>(okhttp3.OkHttpClient$Builder):187 -> <init>
    189:189:javax.net.ssl.HostnameVerifier hostnameVerifier() -> <init>
    189:189:void <init>(okhttp3.OkHttpClient$Builder):189 -> <init>
    199:199:int callTimeoutMillis() -> <init>
    199:199:void <init>(okhttp3.OkHttpClient$Builder):199 -> <init>
    202:202:int connectTimeoutMillis() -> <init>
    202:202:void <init>(okhttp3.OkHttpClient$Builder):202 -> <init>
    205:205:int readTimeoutMillis() -> <init>
    205:205:void <init>(okhttp3.OkHttpClient$Builder):205 -> <init>
    208:208:int writeTimeoutMillis() -> <init>
    208:208:void <init>(okhttp3.OkHttpClient$Builder):208 -> <init>
    211:211:int pingIntervalMillis() -> <init>
    211:211:void <init>(okhttp3.OkHttpClient$Builder):211 -> <init>
    218:218:long minWebSocketMessageToCompress() -> <init>
    218:218:void <init>(okhttp3.OkHttpClient$Builder):218 -> <init>
    220:220:okhttp3.internal.connection.RouteDatabase getRouteDatabase() -> <init>
    220:220:void <init>(okhttp3.OkHttpClient$Builder):220 -> <init>
    2468:2469:java.lang.Comparable kotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> <init>
    2468:2469:void <init>(okhttp3.OkHttpClient$Builder):225 -> <init>
    225:244:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    222:222:void <init>() -> <init>
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> access$getDEFAULT_CONNECTION_SPECS$cp
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> access$getDEFAULT_PROTOCOLS$cp
    121:121:java.util.List access$getDEFAULT_PROTOCOLS$cp():121 -> access$getDEFAULT_PROTOCOLS$cp
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> access$getSslSocketFactoryOrNull$p
    121:121:javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient):121 -> access$getSslSocketFactoryOrNull$p
    151:151:okhttp3.Authenticator authenticator() -> authenticator
    199:199:int callTimeoutMillis() -> callTimeoutMillis
    193:193:okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner() -> certificateChainCleaner
    191:191:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> clone
    121:121:java.lang.Object clone():121 -> clone
    202:202:int connectTimeoutMillis() -> connectTimeoutMillis
    127:127:okhttp3.ConnectionPool connectionPool() -> connectionPool
    184:184:java.util.List connectionSpecs() -> connectionSpecs
    157:157:okhttp3.CookieJar cookieJar() -> cookieJar
    125:125:okhttp3.Dispatcher dispatcher() -> dispatcher
    161:161:okhttp3.Dns dns() -> dns
    145:145:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    153:153:boolean followRedirects() -> followRedirects
    155:155:boolean followSslRedirects() -> followSslRedirects
    220:220:okhttp3.internal.connection.RouteDatabase getRouteDatabase() -> getRouteDatabase
    189:189:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    134:134:java.util.List interceptors() -> interceptors
    218:218:long minWebSocketMessageToCompress() -> minWebSocketMessageToCompress
    142:142:java.util.List networkInterceptors() -> networkInterceptors
    285:285:okhttp3.OkHttpClient$Builder newBuilder() -> newBuilder
    268:268:okhttp3.Call newCall(okhttp3.Request) -> newCall
    272:281:okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener) -> newWebSocket
    211:211:int pingIntervalMillis() -> pingIntervalMillis
    187:187:java.util.List protocols() -> protocols
    163:163:java.net.Proxy proxy() -> proxy
    172:172:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    165:165:java.net.ProxySelector proxySelector() -> proxySelector
    205:205:int readTimeoutMillis() -> readTimeoutMillis
    148:148:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    175:175:javax.net.SocketFactory socketFactory() -> socketFactory
    180:180:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    248:255:void verifyClientState() -> verifyClientState
    2468:2469:java.lang.Comparable kotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> verifyClientState
    2468:2469:void verifyClientState():255 -> verifyClientState
    248:263:void verifyClientState() -> verifyClientState
    208:208:int writeTimeoutMillis() -> writeTimeoutMillis
    182:182:javax.net.ssl.X509TrustManager x509TrustManager() -> x509TrustManager
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    469:469:void <init>() -> <init>
    470:470:void setDispatcher$okhttp(okhttp3.Dispatcher) -> <init>
    470:470:void <init>():470 -> <init>
    471:471:void setConnectionPool$okhttp(okhttp3.ConnectionPool) -> <init>
    471:471:void <init>():471 -> <init>
    472:472:java.util.List getInterceptors$okhttp() -> <init>
    472:472:void <init>():472 -> <init>
    473:473:java.util.List getNetworkInterceptors$okhttp() -> <init>
    473:473:void <init>():473 -> <init>
    474:474:void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory) -> <init>
    474:474:void <init>():474 -> <init>
    475:475:void setRetryOnConnectionFailure$okhttp(boolean) -> <init>
    475:475:void <init>():475 -> <init>
    476:476:void setAuthenticator$okhttp(okhttp3.Authenticator) -> <init>
    476:476:void <init>():476 -> <init>
    477:477:void setFollowRedirects$okhttp(boolean) -> <init>
    477:477:void <init>():477 -> <init>
    478:478:void setFollowSslRedirects$okhttp(boolean) -> <init>
    478:478:void <init>():478 -> <init>
    479:479:void setCookieJar$okhttp(okhttp3.CookieJar) -> <init>
    479:479:void <init>():479 -> <init>
    481:481:void setDns$okhttp(okhttp3.Dns) -> <init>
    481:481:void <init>():481 -> <init>
    484:484:void setProxyAuthenticator$okhttp(okhttp3.Authenticator) -> <init>
    484:484:void <init>():484 -> <init>
    485:485:void setSocketFactory$okhttp(javax.net.SocketFactory) -> <init>
    485:485:void <init>():485 -> <init>
    488:488:void setConnectionSpecs$okhttp(java.util.List) -> <init>
    488:488:void <init>():488 -> <init>
    489:489:void setProtocols$okhttp(java.util.List) -> <init>
    489:489:void <init>():489 -> <init>
    490:490:void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier) -> <init>
    490:490:void <init>():490 -> <init>
    491:491:void setCertificatePinner$okhttp(okhttp3.CertificatePinner) -> <init>
    491:491:void <init>():491 -> <init>
    494:494:void setConnectTimeout$okhttp(int) -> <init>
    494:494:void <init>():494 -> <init>
    495:495:void setReadTimeout$okhttp(int) -> <init>
    495:495:void <init>():495 -> <init>
    496:496:void setWriteTimeout$okhttp(int) -> <init>
    496:496:void <init>():496 -> <init>
    498:498:void setMinWebSocketMessageToCompress$okhttp(long) -> <init>
    498:498:void <init>():498 -> <init>
    501:531:void <init>(okhttp3.OkHttpClient) -> <init>
    1069:1069:okhttp3.OkHttpClient build() -> build
    922:922:okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit) -> callTimeout
    948:948:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    587:587:okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener) -> eventListener
    476:476:void setAuthenticator$okhttp(okhttp3.Authenticator) -> getAuthenticator$okhttp
    476:476:okhttp3.Authenticator getAuthenticator$okhttp():476 -> getAuthenticator$okhttp
    493:493:void setCallTimeout$okhttp(int) -> getCallTimeout$okhttp
    493:493:int getCallTimeout$okhttp():493 -> getCallTimeout$okhttp
    492:492:void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner) -> getCertificateChainCleaner$okhttp
    492:492:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp():492 -> getCertificateChainCleaner$okhttp
    491:491:void setCertificatePinner$okhttp(okhttp3.CertificatePinner) -> getCertificatePinner$okhttp
    491:491:okhttp3.CertificatePinner getCertificatePinner$okhttp():491 -> getCertificatePinner$okhttp
    494:494:void setConnectTimeout$okhttp(int) -> getConnectTimeout$okhttp
    494:494:int getConnectTimeout$okhttp():494 -> getConnectTimeout$okhttp
    471:471:void setConnectionPool$okhttp(okhttp3.ConnectionPool) -> getConnectionPool$okhttp
    471:471:okhttp3.ConnectionPool getConnectionPool$okhttp():471 -> getConnectionPool$okhttp
    488:488:void setConnectionSpecs$okhttp(java.util.List) -> getConnectionSpecs$okhttp
    488:488:java.util.List getConnectionSpecs$okhttp():488 -> getConnectionSpecs$okhttp
    479:479:void setCookieJar$okhttp(okhttp3.CookieJar) -> getCookieJar$okhttp
    479:479:okhttp3.CookieJar getCookieJar$okhttp():479 -> getCookieJar$okhttp
    470:470:void setDispatcher$okhttp(okhttp3.Dispatcher) -> getDispatcher$okhttp
    470:470:okhttp3.Dispatcher getDispatcher$okhttp():470 -> getDispatcher$okhttp
    481:481:void setDns$okhttp(okhttp3.Dns) -> getDns$okhttp
    481:481:okhttp3.Dns getDns$okhttp():481 -> getDns$okhttp
    474:474:void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory) -> getEventListenerFactory$okhttp
    474:474:okhttp3.EventListener$Factory getEventListenerFactory$okhttp():474 -> getEventListenerFactory$okhttp
    477:477:void setFollowRedirects$okhttp(boolean) -> getFollowRedirects$okhttp
    477:477:boolean getFollowRedirects$okhttp():477 -> getFollowRedirects$okhttp
    478:478:void setFollowSslRedirects$okhttp(boolean) -> getFollowSslRedirects$okhttp
    478:478:boolean getFollowSslRedirects$okhttp():478 -> getFollowSslRedirects$okhttp
    490:490:void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier) -> getHostnameVerifier$okhttp
    490:490:javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp():490 -> getHostnameVerifier$okhttp
    472:472:java.util.List getInterceptors$okhttp() -> getInterceptors$okhttp
    498:498:void setMinWebSocketMessageToCompress$okhttp(long) -> getMinWebSocketMessageToCompress$okhttp
    498:498:long getMinWebSocketMessageToCompress$okhttp():498 -> getMinWebSocketMessageToCompress$okhttp
    473:473:java.util.List getNetworkInterceptors$okhttp() -> getNetworkInterceptors$okhttp
    497:497:void setPingInterval$okhttp(int) -> getPingInterval$okhttp
    497:497:int getPingInterval$okhttp():497 -> getPingInterval$okhttp
    489:489:void setProtocols$okhttp(java.util.List) -> getProtocols$okhttp
    489:489:java.util.List getProtocols$okhttp():489 -> getProtocols$okhttp
    482:482:void setProxy$okhttp(java.net.Proxy) -> getProxy$okhttp
    482:482:java.net.Proxy getProxy$okhttp():482 -> getProxy$okhttp
    484:484:void setProxyAuthenticator$okhttp(okhttp3.Authenticator) -> getProxyAuthenticator$okhttp
    484:484:okhttp3.Authenticator getProxyAuthenticator$okhttp():484 -> getProxyAuthenticator$okhttp
    483:483:void setProxySelector$okhttp(java.net.ProxySelector) -> getProxySelector$okhttp
    483:483:java.net.ProxySelector getProxySelector$okhttp():483 -> getProxySelector$okhttp
    495:495:void setReadTimeout$okhttp(int) -> getReadTimeout$okhttp
    495:495:int getReadTimeout$okhttp():495 -> getReadTimeout$okhttp
    475:475:void setRetryOnConnectionFailure$okhttp(boolean) -> getRetryOnConnectionFailure$okhttp
    475:475:boolean getRetryOnConnectionFailure$okhttp():475 -> getRetryOnConnectionFailure$okhttp
    499:499:void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase) -> getRouteDatabase$okhttp
    499:499:okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp():499 -> getRouteDatabase$okhttp
    485:485:void setSocketFactory$okhttp(javax.net.SocketFactory) -> getSocketFactory$okhttp
    485:485:javax.net.SocketFactory getSocketFactory$okhttp():485 -> getSocketFactory$okhttp
    486:486:void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory) -> getSslSocketFactoryOrNull$okhttp
    486:486:javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp():486 -> getSslSocketFactoryOrNull$okhttp
    496:496:void setWriteTimeout$okhttp(int) -> getWriteTimeout$okhttp
    496:496:int getWriteTimeout$okhttp():496 -> getWriteTimeout$okhttp
    487:487:void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager) -> getX509TrustManagerOrNull$okhttp
    487:487:javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp():487 -> getX509TrustManagerOrNull$okhttp
    1033:1033:okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit) -> pingInterval
    856:881:okhttp3.OkHttpClient$Builder protocols(java.util.List) -> protocols
    974:974:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    493:493:void setCallTimeout$okhttp(int) -> setCallTimeout$okhttp
    494:494:void setConnectTimeout$okhttp(int) -> setConnectTimeout$okhttp
    474:474:void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory) -> setEventListenerFactory$okhttp
    497:497:void setPingInterval$okhttp(int) -> setPingInterval$okhttp
    489:489:void setProtocols$okhttp(java.util.List) -> setProtocols$okhttp
    495:495:void setReadTimeout$okhttp(int) -> setReadTimeout$okhttp
    499:499:void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase) -> setRouteDatabase$okhttp
    496:496:void setWriteTimeout$okhttp(int) -> setWriteTimeout$okhttp
    1002:1002:okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> writeTimeout
okhttp3.OkHttpClient$Companion -> okhttp3.OkHttpClient$Companion:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    1072:1072:void <init>() -> <init>
    1075:1075:java.util.List getDEFAULT_CONNECTION_SPECS$okhttp() -> getDEFAULT_CONNECTION_SPECS$okhttp
    1073:1073:java.util.List getDEFAULT_PROTOCOLS$okhttp() -> getDEFAULT_PROTOCOLS$okhttp
okhttp3.Protocol -> okhttp3.Protocol:
# {"id":"sourceFile","fileName":"Protocol.kt"}
    35:84:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int,java.lang.String) -> <init>
    31:31:java.lang.String access$getProtocol$p(okhttp3.Protocol) -> access$getProtocol$p
    94:94:java.lang.String toString() -> toString
okhttp3.Protocol$Companion -> okhttp3.Protocol$Companion:
# {"id":"sourceFile","fileName":"Protocol.kt"}
    96:96:void <init>() -> <init>
    108:114:okhttp3.Protocol get(java.lang.String) -> get
okhttp3.Request -> okhttp3.Request:
# {"id":"sourceFile","fileName":"Request.kt"}
    28:28:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map) -> <init>
    29:29:okhttp3.HttpUrl url() -> <init>
    29:29:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map):29 -> <init>
    30:30:java.lang.String method() -> <init>
    30:30:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map):30 -> <init>
    31:31:okhttp3.Headers headers() -> <init>
    31:31:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map):31 -> <init>
    32:32:okhttp3.RequestBody body() -> <init>
    32:32:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map):32 -> <init>
    33:33:java.util.Map getTags$okhttp() -> <init>
    33:33:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map):33 -> <init>
    32:32:okhttp3.RequestBody body() -> body
    69:72:okhttp3.CacheControl cacheControl() -> cacheControl
    33:33:java.util.Map getTags$okhttp() -> getTags$okhttp
    41:41:java.lang.String header(java.lang.String) -> header
    31:31:okhttp3.Headers headers() -> headers
    39:39:boolean isHttps() -> isHttps
    30:30:java.lang.String method() -> method
    61:61:okhttp3.Request$Builder newBuilder() -> newBuilder
    112:300:java.lang.String toString() -> toString
    29:29:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
# {"id":"sourceFile","fileName":"Request.kt"}
    145:145:void <init>() -> <init>
    143:143:void <init>(okhttp3.Request) -> <init>
    143:143:void <init>():143 -> <init>
    146:147:void <init>() -> <init>
    143:159:void <init>(okhttp3.Request) -> <init>
    210:210:okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    288:293:okhttp3.Request build() -> build
    139:139:void setHeaders$okhttp(okhttp3.Headers$Builder) -> getHeaders$okhttp
    139:139:okhttp3.Headers$Builder getHeaders$okhttp():139 -> getHeaders$okhttp
    199:199:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    220:220:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    250:263:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    245:245:okhttp3.Request$Builder put(okhttp3.RequestBody) -> put
    215:215:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    140:140:void setBody$okhttp(okhttp3.RequestBody) -> setBody$okhttp
    139:139:void setHeaders$okhttp(okhttp3.Headers$Builder) -> setHeaders$okhttp
    138:138:void setMethod$okhttp(java.lang.String) -> setMethod$okhttp
    137:137:void setUrl$okhttp(okhttp3.HttpUrl) -> setUrl$okhttp
    163:163:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    175:184:okhttp3.Request$Builder url(java.lang.String) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    28:28:void <init>() -> <init>
okhttp3.RequestBody$Companion -> okhttp3.RequestBody$Companion:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    97:97:void <init>() -> <init>
    106:118:okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType) -> create
    145:146:okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int) -> create
    105:105:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object) -> create$default
    140:143:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object) -> create$default
okhttp3.RequestBody$Companion$toRequestBody$2 -> okhttp3.RequestBody$Companion$toRequestBody$2:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    146:146:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    149:149:long contentLength() -> contentLength
    147:147:okhttp3.MediaType contentType() -> contentType
    152:152:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
# {"id":"sourceFile","fileName":"Response.kt"}
    40:40:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange) -> <init>
    50:50:okhttp3.Request request() -> <init>
    50:50:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):50 -> <init>
    53:53:okhttp3.Protocol protocol() -> <init>
    53:53:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):53 -> <init>
    56:56:java.lang.String message() -> <init>
    56:56:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):56 -> <init>
    59:59:int code() -> <init>
    59:59:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):59 -> <init>
    65:65:okhttp3.Handshake handshake() -> <init>
    65:65:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):65 -> <init>
    68:68:okhttp3.Headers headers() -> <init>
    68:68:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):68 -> <init>
    78:78:okhttp3.ResponseBody body() -> <init>
    78:78:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):78 -> <init>
    85:85:okhttp3.Response networkResponse() -> <init>
    85:85:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):85 -> <init>
    92:92:okhttp3.Response cacheResponse() -> <init>
    92:92:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):92 -> <init>
    100:100:okhttp3.Response priorResponse() -> <init>
    100:100:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):100 -> <init>
    107:107:long sentRequestAtMillis() -> <init>
    107:107:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):107 -> <init>
    114:114:long receivedResponseAtMillis() -> <init>
    114:114:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):114 -> <init>
    116:116:okhttp3.internal.connection.Exchange exchange() -> <init>
    116:116:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange):116 -> <init>
    78:78:okhttp3.ResponseBody body() -> body
    266:269:okhttp3.CacheControl cacheControl() -> cacheControl
    92:92:okhttp3.Response cacheResponse() -> cacheResponse
    251:255:java.util.List challenges() -> challenges
    302:302:void close() -> close
    59:59:int code() -> code
    116:116:okhttp3.internal.connection.Exchange exchange() -> exchange
    65:65:okhttp3.Handshake handshake() -> handshake
    166:166:java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object) -> header
    166:166:java.lang.String header(java.lang.String,java.lang.String):166 -> header
    166:166:java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object) -> header$default
    68:68:okhttp3.Headers headers() -> headers
    147:147:boolean isSuccessful() -> isSuccessful
    56:56:java.lang.String message() -> message
    85:85:okhttp3.Response networkResponse() -> networkResponse
    209:209:okhttp3.Response$Builder newBuilder() -> newBuilder
    100:100:okhttp3.Response priorResponse() -> priorResponse
    53:53:okhttp3.Protocol protocol() -> protocol
    114:114:long receivedResponseAtMillis() -> receivedResponseAtMillis
    50:50:okhttp3.Request request() -> request
    107:107:long sentRequestAtMillis() -> sentRequestAtMillis
    306:306:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
# {"id":"sourceFile","fileName":"Response.kt"}
    323:323:void <init>() -> <init>
    311:311:void <init>(okhttp3.Response) -> <init>
    311:311:void <init>():311 -> <init>
    324:324:void <init>() -> <init>
    311:340:void <init>(okhttp3.Response) -> <init>
    376:376:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    390:390:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    436:450:okhttp3.Response build() -> build
    399:400:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    419:419:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    405:408:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    352:352:okhttp3.Response$Builder code(int) -> code
    311:311:void <init>(okhttp3.Response) -> getCode$okhttp
    311:311:int getCode$okhttp():311 -> getCode$okhttp
    314:314:void setHeaders$okhttp(okhttp3.Headers$Builder) -> getHeaders$okhttp
    314:314:okhttp3.Headers$Builder getHeaders$okhttp():314 -> getHeaders$okhttp
    360:360:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    368:368:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    386:386:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    432:432:void initExchange$okhttp(okhttp3.internal.connection.Exchange) -> initExchange$okhttp
    356:356:okhttp3.Response$Builder message(java.lang.String) -> message
    394:395:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    413:414:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    348:348:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    428:428:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    344:344:okhttp3.Response$Builder request(okhttp3.Request) -> request
    424:424:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
    315:315:void setBody$okhttp(okhttp3.ResponseBody) -> setBody$okhttp
    317:317:void setCacheResponse$okhttp(okhttp3.Response) -> setCacheResponse$okhttp
    311:311:void <init>(okhttp3.Response) -> setCode$okhttp
    311:311:void setCode$okhttp(int):311 -> setCode$okhttp
    313:313:void setHandshake$okhttp(okhttp3.Handshake) -> setHandshake$okhttp
    314:314:void setHeaders$okhttp(okhttp3.Headers$Builder) -> setHeaders$okhttp
    312:312:void setMessage$okhttp(java.lang.String) -> setMessage$okhttp
    316:316:void setNetworkResponse$okhttp(okhttp3.Response) -> setNetworkResponse$okhttp
    318:318:void setPriorResponse$okhttp(okhttp3.Response) -> setPriorResponse$okhttp
    310:310:void setProtocol$okhttp(okhttp3.Protocol) -> setProtocol$okhttp
    320:320:void setReceivedResponseAtMillis$okhttp(long) -> setReceivedResponseAtMillis$okhttp
    309:309:void setRequest$okhttp(okhttp3.Request) -> setRequest$okhttp
    319:319:void setSentRequestAtMillis$okhttp(long) -> setSentRequestAtMillis$okhttp
okhttp3.ResponseBody -> okhttp3.ResponseBody:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    100:100:void <init>() -> <init>
    112:112:java.io.InputStream byteStream() -> byteStream
    190:190:java.nio.charset.Charset charset() -> charset
    192:192:void close() -> close
    186:187:java.lang.String string() -> string
okhttp3.ResponseBody$Companion -> okhttp3.ResponseBody$Companion:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    221:221:void <init>() -> <init>
    248:250:okhttp3.ResponseBody create(byte[],okhttp3.MediaType) -> create
    268:268:okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long) -> create
    247:247:okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object) -> create$default
okhttp3.ResponseBody$Companion$asResponseBody$1 -> okhttp3.ResponseBody$Companion$asResponseBody$1:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    268:268:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    271:271:long contentLength() -> contentLength
    269:269:okhttp3.MediaType contentType() -> contentType
    273:273:okio.BufferedSource source() -> source
okhttp3.Route -> okhttp3.Route:
# {"id":"sourceFile","fileName":"Route.kt"}
    34:43:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    35:35:okhttp3.Address address() -> address
    76:79:boolean equals(java.lang.Object) -> equals
    84:86:int hashCode() -> hashCode
    42:42:java.net.Proxy proxy() -> proxy
    73:73:boolean requiresTunnel() -> requiresTunnel
    43:43:java.net.InetSocketAddress socketAddress() -> socketAddress
    90:90:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
# {"id":"sourceFile","fileName":"TlsVersion.kt"}
    25:29:void <clinit>() -> <clinit>
    22:23:void <init>(java.lang.String,int,java.lang.String) -> <init>
    23:23:java.lang.String javaName() -> javaName
okhttp3.TlsVersion$Companion -> okhttp3.TlsVersion$Companion:
# {"id":"sourceFile","fileName":"TlsVersion.kt"}
    38:38:void <init>() -> <init>
    41:47:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
okhttp3.WebSocket -> okhttp3.WebSocket:
# {"id":"sourceFile","fileName":"WebSocket.kt"}
okhttp3.WebSocketListener -> okhttp3.WebSocketListener:
# {"id":"sourceFile","fileName":"WebSocketListener.kt"}
    20:20:void <init>() -> <init>
okhttp3.internal.HostnamesKt -> okhttp3.internal.HostnamesKt:
# {"id":"sourceFile","fileName":"hostnames.kt"}
    65:76:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    163:186:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    95:148:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    202:231:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    36:54:java.lang.String toCanonicalHost(java.lang.String) -> toCanonicalHost
okhttp3.internal.Util -> okhttp3.internal.Util:
# {"id":"sourceFile","fileName":"Util.kt"}
    java.lang.Thread $r8$lambda$TFmLugqSOE7yNjbs-8gncc5DTI4(java.lang.String,boolean,java.lang.Runnable) -> $r8$lambda$TFmLugqSOE7yNjbs-8gncc5DTI4
      # {"id":"com.android.tools.r8.synthesized"}
    okhttp3.EventListener $r8$lambda$op7DGXdKtbPW5S_UsqHTJ0nOJEU(okhttp3.EventListener,okhttp3.Call) -> $r8$lambda$op7DGXdKtbPW5S_UsqHTJ0nOJEU
      # {"id":"com.android.tools.r8.synthesized"}
    60:604:void <clinit>() -> <clinit>
    590:590:void addIfAbsent(java.util.List,java.lang.Object) -> addIfAbsent
    309:309:okhttp3.EventListener asFactory$lambda-8(okhttp3.EventListener,okhttp3.Call) -> asFactory
    309:309:okhttp3.EventListener$Factory asFactory(okhttp3.EventListener):309 -> asFactory
    247:247:boolean canParseAsIpAddress(java.lang.String) -> canParseAsIpAddress
    305:307:boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl) -> canReuseConnectionFor
    277:281:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    97:97:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    495:497:void closeQuietly(java.io.Closeable) -> closeQuietly
    505:514:void closeQuietly(java.net.Socket) -> closeQuietly
    171:172:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    215:215:int delimiterOffset(java.lang.String,java.lang.String,int,int) -> delimiterOffset
    226:226:int delimiterOffset(java.lang.String,char,int,int) -> delimiterOffset
    224:224:int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object) -> delimiterOffset$default
    365:365:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    260:260:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    140:145:boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator) -> hasIntersection
    444:444:long headersContentLength(okhttp3.Response) -> headersContentLength
    480:480:java.util.List immutableListOf(java.lang.Object[]) -> immutableListOf
    1620:1620:int kotlin.collections.ArraysKt___ArraysKt.indexOf(char[],char) -> indexOf
    1620:1620:int indexOf(java.lang.String[],java.lang.String,java.util.Comparator):167 -> indexOf
    167:646:int indexOf(java.lang.String[],java.lang.String,java.util.Comparator) -> indexOf
    236:238:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    181:181:int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int) -> indexOfFirstNonAsciiWhitespace
    179:179:int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object) -> indexOfFirstNonAsciiWhitespace$default
    194:194:int indexOfLastNonAsciiWhitespace(java.lang.String,int,int) -> indexOfLastNonAsciiWhitespace
    192:192:int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object) -> indexOfLastNonAsciiWhitespace$default
    433:439:int indexOfNonWhitespace(java.lang.String,int) -> indexOfNonWhitespace
    118:122:java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator) -> intersect
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> intersect
    38:38:java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator):127 -> intersect
    386:391:boolean isHealthy(java.net.Socket,okio.BufferedSource) -> isHealthy
    252:255:boolean isSensitiveHeader(java.lang.String) -> isSensitiveHeader
    265:272:java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset) -> readBomAsCharset
    324:326:int readMedium(okio.BufferedSource) -> readMedium
    335:354:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    421:423:int skipAll(okio.Buffer,byte) -> skipAll
    104:104:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    105:106:java.lang.Thread threadFactory$lambda-1(java.lang.String,boolean,java.lang.Runnable) -> threadFactory$lambda-1
    300:653:java.util.List toHeaderList(okhttp3.Headers) -> toHeaderList
    293:297:okhttp3.Headers toHeaders(java.util.List) -> toHeaders
    552:552:java.lang.String toHexString(long) -> toHexString
    554:554:java.lang.String toHexString(int) -> toHexString
    154:160:java.lang.String toHostHeader(okhttp3.HttpUrl,boolean) -> toHostHeader
    153:153:java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object) -> toHostHeader$default
    474:474:java.util.List toImmutableList(java.util.List) -> toImmutableList
    485:488:java.util.Map toImmutableMap(java.util.Map) -> toImmutableMap
    449:449:long toLongOrDefault(java.lang.String,long) -> toLongOrDefault
    461:461:int toNonNegativeInt(java.lang.String,int) -> toNonNegativeInt
    204:206:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    203:203:java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object) -> trimSubstring$default
    621:625:java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List) -> withSuppressed
    317:319:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.Util$$ExternalSyntheticLambda0 -> okhttp3.internal.Util$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String okhttp3.internal.Util$$InternalSyntheticLambda$0$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.f$0 -> f$0
    boolean okhttp3.internal.Util$$InternalSyntheticLambda$0$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.f$1 -> f$1
    void okhttp3.internal.Util$$InternalSyntheticLambda$0$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.<init>(java.lang.String,boolean) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread okhttp3.internal.Util$$InternalSyntheticLambda$0$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.Util$$ExternalSyntheticLambda1 -> okhttp3.internal.Util$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    okhttp3.EventListener okhttp3.internal.Util$$InternalSyntheticLambda$0$2772f077014f473d42590b605bf5e0b5f44c0d6c5a0b5ed86fd77510defe4253$0.f$0 -> f$0
    void okhttp3.internal.Util$$InternalSyntheticLambda$0$2772f077014f473d42590b605bf5e0b5f44c0d6c5a0b5ed86fd77510defe4253$0.<init>(okhttp3.EventListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    okhttp3.EventListener okhttp3.internal.Util$$InternalSyntheticLambda$0$2772f077014f473d42590b605bf5e0b5f44c0d6c5a0b5ed86fd77510defe4253$0.create(okhttp3.Call) -> create
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.authenticator.JavaNetAuthenticator -> okhttp3.internal.authenticator.JavaNetAuthenticator:
# {"id":"sourceFile","fileName":"JavaNetAuthenticator.kt"}
    34:34:void <init>(okhttp3.Dns) -> <init>
    34:34:void <init>(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:80:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
    89:91:java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns) -> connectToInetAddress
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings -> okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings:
# {"id":"sourceFile","fileName":"JavaNetAuthenticator.kt"}
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    42:42:void <init>(okhttp3.Cache) -> <init>
    46:131:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.cache.CacheInterceptor$Companion -> okhttp3.internal.cache.CacheInterceptor$Companion:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    220:220:void <init>() -> <init>
    220:220:okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers) -> access$combine
    220:220:okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response) -> access$stripBody
    232:255:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    278:280:boolean isContentSpecificHeader(java.lang.String) -> isContentSpecificHeader
    263:270:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    223:224:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    45:49:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    49:49:okhttp3.Response getCacheResponse() -> getCacheResponse
    47:47:okhttp3.Request getNetworkRequest() -> getNetworkRequest
okhttp3.internal.cache.CacheStrategy$Companion -> okhttp3.internal.cache.CacheStrategy$Companion:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    288:288:void <init>() -> <init>
    293:328:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    52:121:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    261:275:long cacheResponseAge() -> cacheResponseAge
    130:134:okhttp3.internal.cache.CacheStrategy compute() -> compute
    143:224:okhttp3.internal.cache.CacheStrategy computeCandidate() -> computeCandidate
    232:250:long computeFreshnessLifetime() -> computeFreshnessLifetime
    285:285:boolean hasConditions(okhttp3.Request) -> hasConditions
    94:94:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.concurrent.Task -> okhttp3.internal.concurrent.Task:
# {"id":"sourceFile","fileName":"Task.kt"}
    49:49:void <init>(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    49:49:void <init>(java.lang.String,boolean):49 -> <init>
    50:50:java.lang.String getName() -> <init>
    50:50:void <init>(java.lang.String,boolean):50 -> <init>
    51:51:boolean getCancelable() -> <init>
    51:51:void <init>(java.lang.String,boolean):51 -> <init>
    57:57:void setNextExecuteNanoTime$okhttp(long) -> <init>
    57:57:void <init>(java.lang.String,boolean):57 -> <init>
    49:49:void <init>(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:boolean getCancelable() -> getCancelable
    50:50:java.lang.String getName() -> getName
    57:57:void setNextExecuteNanoTime$okhttp(long) -> getNextExecuteNanoTime$okhttp
    57:57:long getNextExecuteNanoTime$okhttp():57 -> getNextExecuteNanoTime$okhttp
    54:54:void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue) -> getQueue$okhttp
    54:54:okhttp3.internal.concurrent.TaskQueue getQueue$okhttp():54 -> getQueue$okhttp
    63:66:void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue) -> initQueue$okhttp
    57:57:void setNextExecuteNanoTime$okhttp(long) -> setNextExecuteNanoTime$okhttp
    69:69:java.lang.String toString() -> toString
okhttp3.internal.concurrent.TaskLoggerKt -> okhttp3.internal.concurrent.TaskLoggerKt:
# {"id":"sourceFile","fileName":"TaskLogger.kt"}
    1:1:void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String) -> access$log
    73:80:java.lang.String formatDuration(long) -> formatDuration
    60:60:void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String) -> log
okhttp3.internal.concurrent.TaskQueue -> okhttp3.internal.concurrent.TaskQueue:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    29:29:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String) -> <init>
    30:30:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> <init>
    30:30:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String):30 -> <init>
    31:31:java.lang.String getName$okhttp() -> <init>
    31:31:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String):31 -> <init>
    39:39:java.util.List getFutureTasks$okhttp() -> <init>
    39:39:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String):39 -> <init>
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> cancelAll
    615:616:void cancelAll():179 -> cancelAll
    181:185:void cancelAll() -> cancelAll
    201:208:boolean cancelAllAndDecide$okhttp() -> cancelAllAndDecide$okhttp
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> cancelAllAndDecide$okhttp
    25:25:boolean cancelAllAndDecide$okhttp():208 -> cancelAllAndDecide$okhttp
    208:210:boolean cancelAllAndDecide$okhttp() -> cancelAllAndDecide$okhttp
    36:36:void setActiveTask$okhttp(okhttp3.internal.concurrent.Task) -> getActiveTask$okhttp
    36:36:okhttp3.internal.concurrent.Task getActiveTask$okhttp():36 -> getActiveTask$okhttp
    42:42:void setCancelActiveTask$okhttp(boolean) -> getCancelActiveTask$okhttp
    42:42:boolean getCancelActiveTask$okhttp():42 -> getCancelActiveTask$okhttp
    39:39:java.util.List getFutureTasks$okhttp() -> getFutureTasks$okhttp
    31:31:java.lang.String getName$okhttp() -> getName$okhttp
    33:33:void setShutdown$okhttp(boolean) -> getShutdown$okhttp
    33:33:boolean getShutdown$okhttp():33 -> getShutdown$okhttp
    30:30:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> getTaskRunner$okhttp
    62:64:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> schedule
    25:25:void schedule(okhttp3.internal.concurrent.Task,long):65 -> schedule
    65:66:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> schedule
    25:25:void schedule(okhttp3.internal.concurrent.Task,long):68 -> schedule
    62:75:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    61:61:void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object) -> schedule$default
    144:152:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> scheduleAndDecide$okhttp
    25:25:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean):153 -> scheduleAndDecide$okhttp
    153:158:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> scheduleAndDecide$okhttp
    25:25:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean):159 -> scheduleAndDecide$okhttp
    160:237:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    350:350:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> scheduleAndDecide$okhttp
    350:350:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean):165 -> scheduleAndDecide$okhttp
    165:167:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    36:36:void setActiveTask$okhttp(okhttp3.internal.concurrent.Task) -> setActiveTask$okhttp
    42:42:void setCancelActiveTask$okhttp(boolean) -> setCancelActiveTask$okhttp
    33:33:void setShutdown$okhttp(boolean) -> setShutdown$okhttp
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> shutdown
    615:616:void shutdown():189 -> shutdown
    191:196:void shutdown() -> shutdown
    216:216:java.lang.String toString() -> toString
okhttp3.internal.concurrent.TaskQueue$execute$1 -> okhttp3.internal.concurrent.TaskQueue$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    98:98:long runOnce() -> runOnce
okhttp3.internal.concurrent.TaskRunner -> okhttp3.internal.concurrent.TaskRunner:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    309:311:void <clinit>() -> <clinit>
    42:42:void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task) -> <init>
    42:42:void <init>(okhttp3.internal.concurrent.TaskRunner$Backend):42 -> <init>
    43:43:okhttp3.internal.concurrent.TaskRunner$Backend getBackend() -> <init>
    43:43:void <init>(okhttp3.internal.concurrent.TaskRunner$Backend):43 -> <init>
    45:55:void <init>(okhttp3.internal.concurrent.TaskRunner$Backend) -> <init>
    42:42:void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task) -> access$getLogger$cp
    42:42:java.util.logging.Logger access$getLogger$cp():42 -> access$getLogger$cp
    42:42:void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task) -> access$runTask
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> afterRun
    608:609:void afterRun(okhttp3.internal.concurrent.Task,long):126 -> afterRun
    128:141:void afterRun(okhttp3.internal.concurrent.Task,long) -> afterRun
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> awaitTaskToRun
    608:609:okhttp3.internal.concurrent.Task awaitTaskToRun():152 -> awaitTaskToRun
    155:223:okhttp3.internal.concurrent.Task awaitTaskToRun() -> awaitTaskToRun
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> beforeRun
    608:609:void beforeRun(okhttp3.internal.concurrent.Task):97 -> beforeRun
    99:104:void beforeRun(okhttp3.internal.concurrent.Task) -> beforeRun
    246:253:void cancelAll() -> cancelAll
    43:43:okhttp3.internal.concurrent.TaskRunner$Backend getBackend() -> getBackend
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> kickCoordinator$okhttp
    608:609:void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue):79 -> kickCoordinator$okhttp
    81:92:void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue) -> kickCoordinator$okhttp
    231:232:okhttp3.internal.concurrent.TaskQueue newQueue() -> newQueue
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> runTask
    615:616:void runTask(okhttp3.internal.concurrent.Task):108 -> runTask
    110:121:void runTask(okhttp3.internal.concurrent.Task) -> runTask
okhttp3.internal.concurrent.TaskRunner$Backend -> okhttp3.internal.concurrent.TaskRunner$Backend:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
okhttp3.internal.concurrent.TaskRunner$Companion -> okhttp3.internal.concurrent.TaskRunner$Companion:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    307:307:void <init>() -> <init>
    311:311:java.util.logging.Logger getLogger() -> getLogger
okhttp3.internal.concurrent.TaskRunner$RealBackend -> okhttp3.internal.concurrent.TaskRunner$RealBackend:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    266:271:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    560:560:void okhttp3.internal.Util.notify(java.lang.Object) -> coordinatorNotify
    560:560:void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner):281 -> coordinatorNotify
    291:294:void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long) -> coordinatorWait
    299:299:void execute(java.lang.Runnable) -> execute
    278:278:long nanoTime() -> nanoTime
okhttp3.internal.concurrent.TaskRunner$runnable$1 -> okhttp3.internal.concurrent.TaskRunner$runnable$1:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    55:55:void <init>(okhttp3.internal.concurrent.TaskRunner) -> <init>
    58:62:void run() -> run
    36:39:java.lang.Object okhttp3.internal.concurrent.TaskLoggerKt.logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> run
    36:39:void run():62 -> run
    65:73:void run() -> run
    49:51:java.lang.Object okhttp3.internal.concurrent.TaskLoggerKt.logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> run
    49:51:void run():62 -> run
    70:70:void run() -> run
    49:53:java.lang.Object okhttp3.internal.concurrent.TaskLoggerKt.logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> run
    49:53:void run():62 -> run
    58:58:void run() -> run
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
# {"id":"sourceFile","fileName":"ConnectInterceptor.kt"}
    28:28:void <init>() -> <init>
    31:34:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
# {"id":"sourceFile","fileName":"ConnectionSpecSelector.kt"}
    34:35:void <init>(java.util.List) -> <init>
    50:70:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    83:103:boolean connectionFailed(java.io.IOException) -> connectionFailed
    115:116:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.Exchange -> okhttp3.internal.connection.Exchange:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    40:50:void <init>(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec) -> <init>
    177:193:java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException) -> bodyComplete
    153:153:void cancel() -> cancel
    70:74:okio.Sink createRequestBody(okhttp3.Request,boolean) -> createRequestBody
    161:162:void detachWithViolence() -> detachWithViolence
    91:95:void finishRequest() -> finishRequest
    80:84:void flushRequest() -> flushRequest
    41:41:okhttp3.internal.connection.RealCall getCall$okhttp() -> getCall$okhttp
    50:50:okhttp3.internal.connection.RealConnection getConnection$okhttp() -> getConnection$okhttp
    42:42:okhttp3.EventListener getEventListener$okhttp() -> getEventListener$okhttp
    43:43:okhttp3.internal.connection.ExchangeFinder getFinder$okhttp() -> getFinder$okhttp
    53:53:boolean isCoalescedConnection$okhttp() -> isCoalescedConnection$okhttp
    47:47:boolean isDuplex$okhttp() -> isDuplex$okhttp
    140:141:okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams() -> newWebSocketStreams
    149:149:void noNewExchangesOnConnection() -> noNewExchangesOnConnection
    197:197:void noRequestBody() -> noRequestBody
    123:131:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    106:112:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    117:117:void responseHeadersEnd(okhttp3.Response) -> responseHeadersEnd
    100:100:void responseHeadersStart() -> responseHeadersStart
    166:167:void trackFailure(java.io.IOException) -> trackFailure
    145:145:void webSocketUpgradeFailed() -> webSocketUpgradeFailed
    58:64:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.connection.Exchange$RequestBodySink -> okhttp3.internal.connection.Exchange$RequestBodySink:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    201:205:void <init>(okhttp3.internal.connection.Exchange,okio.Sink,long) -> <init>
    236:245:void close() -> close
    250:252:java.io.IOException complete(java.io.IOException) -> complete
    228:230:void flush() -> flush
    212:221:void write(okio.Buffer,long) -> write
okhttp3.internal.connection.Exchange$ResponseBodySource -> okhttp3.internal.connection.Exchange$ResponseBodySource:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    257:268:void <init>(okhttp3.internal.connection.Exchange,okio.Source,long) -> <init>
    306:312:void close() -> close
    317:324:java.io.IOException complete(java.io.IOException) -> complete
    274:300:long read(okio.Buffer,long) -> read
okhttp3.internal.connection.ExchangeFinder -> okhttp3.internal.connection.ExchangeFinder:
# {"id":"sourceFile","fileName":"ExchangeFinder.kt"}
    56:60:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener) -> <init>
    74:88:okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain) -> find
    150:255:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> findConnection
    106:132:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> findHealthyConnection
    58:58:okhttp3.Address getAddress$okhttp() -> getAddress$okhttp
    275:297:boolean retryAfterFailure() -> retryAfterFailure
    306:315:okhttp3.Route retryRoute() -> retryRoute
    325:326:boolean sameHostAndPort(okhttp3.HttpUrl) -> sameHostAndPort
    260:266:void trackFailure(java.io.IOException) -> trackFailure
okhttp3.internal.connection.RealCall -> okhttp3.internal.connection.RealCall:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> <init>
    60:60:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean):60 -> <init>
    61:61:okhttp3.OkHttpClient getClient() -> <init>
    61:61:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean):61 -> <init>
    63:63:okhttp3.Request getOriginalRequest() -> <init>
    63:63:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean):63 -> <init>
    64:64:boolean getForWebSocket() -> <init>
    64:64:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean):64 -> <init>
    66:66:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    68:68:okhttp3.EventListener getEventListener$okhttp() -> <init>
    68:68:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean):68 -> <init>
    70:110:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> access$getTimeout$p
    60:60:okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall):60 -> access$getTimeout$p
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> access$toLoggableString
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> acquireConnectionNoEvents
    608:609:void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection):269 -> acquireConnectionNoEvents
    271:273:void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection) -> acquireConnectionNoEvents
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> callDone
    615:616:java.io.IOException callDone(java.io.IOException):344 -> callDone
    346:346:java.io.IOException callDone(java.io.IOException) -> callDone
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> callDone
    615:616:java.io.IOException callDone(java.io.IOException):348 -> callDone
    349:364:java.io.IOException callDone(java.io.IOException) -> callDone
    170:171:void callStart() -> callStart
    136:142:void cancel() -> cancel
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> clone
    60:60:java.lang.Object clone():60 -> clone
    122:122:okhttp3.internal.connection.RealCall clone() -> clone
    434:452:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    161:164:void enqueue(okhttp3.Callback) -> enqueue
    226:241:void enterNetworkInterceptorExchange(okhttp3.Request,boolean) -> enterNetworkInterceptorExchange
    148:156:okhttp3.Response execute() -> execute
    419:427:void exitNetworkInterceptorExchange$okhttp(boolean) -> exitNetworkInterceptorExchange$okhttp
    61:61:okhttp3.OkHttpClient getClient() -> getClient
    88:88:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    68:68:okhttp3.EventListener getEventListener$okhttp() -> getEventListener$okhttp
    64:64:boolean getForWebSocket() -> getForWebSocket
    97:97:okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp() -> getInterceptorScopedExchange$okhttp
    63:63:okhttp3.Request getOriginalRequest() -> getOriginalRequest
    177:212:okhttp3.Response getResponseWithInterceptorChain$okhttp() -> getResponseWithInterceptorChain$okhttp
    248:264:okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain) -> initExchange$okhttp
    145:145:boolean isCanceled() -> isCanceled
    290:309:java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException) -> messageDone$okhttp
    317:325:java.io.IOException noMoreExchanges$okhttp(java.io.IOException) -> noMoreExchanges$okhttp
    468:468:java.lang.String redactedUrl$okhttp() -> redactedUrl$okhttp
    374:374:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> releaseConnectionNoEvents$okhttp
    608:609:java.net.Socket releaseConnectionNoEvents$okhttp():375 -> releaseConnectionNoEvents$okhttp
    377:570:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    350:350:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> releaseConnectionNoEvents$okhttp
    350:350:java.net.Socket releaseConnectionNoEvents$okhttp():378 -> releaseConnectionNoEvents$okhttp
    378:387:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    456:456:boolean retryAfterFailure() -> retryAfterFailure
    117:117:void setConnectionToCancel(okhttp3.internal.connection.RealConnection) -> setConnectionToCancel
    409:411:void timeoutEarlyExit() -> timeoutEarlyExit
    395:399:java.io.IOException timeoutExit(java.io.IOException) -> timeoutExit
    463:465:java.lang.String toLoggableString() -> toLoggableString
okhttp3.internal.connection.RealCall$AsyncCall -> okhttp3.internal.connection.RealCall$AsyncCall:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    470:471:void <init>(okhttp3.internal.connection.RealCall,okhttp3.Callback) -> <init>
    473:473:java.util.concurrent.atomic.AtomicInteger getCallsPerHost() -> <init>
    473:473:void <init>(okhttp3.internal.connection.RealCall,okhttp3.Callback):473 -> <init>
    494:494:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> executeOn
    615:616:void executeOn(java.util.concurrent.ExecutorService):494 -> executeOn
    498:507:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
    487:487:okhttp3.internal.connection.RealCall getCall() -> getCall
    473:473:java.util.concurrent.atomic.AtomicInteger getCallsPerHost() -> getCallsPerHost
    481:481:java.lang.String getHost() -> getHost
    477:477:void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall) -> reuseCallsPerHostFrom
    513:513:void run() -> run
    409:411:void okhttp3.internal.Util.threadName(java.lang.String,kotlin.jvm.functions.Function0) -> run
    409:411:void run():513 -> run
    515:536:void run() -> run
    415:415:void okhttp3.internal.Util.threadName(java.lang.String,kotlin.jvm.functions.Function0) -> run
    415:415:void run():513 -> run
    536:536:void run() -> run
    415:415:void okhttp3.internal.Util.threadName(java.lang.String,kotlin.jvm.functions.Function0) -> run
    415:415:void run():513 -> run
okhttp3.internal.connection.RealCall$CallReference -> okhttp3.internal.connection.RealCall$CallReference:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    548:549:void <init>(okhttp3.internal.connection.RealCall,java.lang.Object) -> <init>
    548:548:java.lang.Object getCallStackTrace() -> getCallStackTrace
okhttp3.internal.connection.RealCall$timeout$1 -> okhttp3.internal.connection.RealCall$timeout$1:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    70:70:void <init>(okhttp3.internal.connection.RealCall) -> <init>
    72:72:void timedOut() -> timedOut
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    88:88:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> <init>
    86:86:okhttp3.internal.connection.RealConnectionPool getConnectionPool() -> <init>
    86:86:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route):86 -> <init>
    87:137:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> <init>
    140:140:java.util.List getCalls() -> <init>
    140:140:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route):140 -> <init>
    143:143:void setIdleAtNs$okhttp(long) -> <init>
    143:143:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route):143 -> <init>
    85:85:void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket) -> access$getHandshake$p
    85:85:okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection):85 -> access$getHandshake$p
    641:641:void cancel() -> cancel
    599:602:boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake) -> certificateSupportHost
    175:243:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    689:695:void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException) -> connectFailed$okhttp
    283:311:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> connectSocket
    363:430:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    258:271:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> connectTunnel
    448:483:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    499:519:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    323:341:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> establishProtocol
    140:140:java.util.List getCalls() -> getCalls
    143:143:void setIdleAtNs$okhttp(long) -> getIdleAtNs$okhttp
    143:143:long getIdleAtNs$okhttp():143 -> getIdleAtNs$okhttp
    116:116:void setNoNewExchanges(boolean) -> getNoNewExchanges
    116:116:boolean getNoNewExchanges():116 -> getNoNewExchanges
    128:128:void setRouteFailureCount$okhttp(int) -> getRouteFailureCount$okhttp
    128:128:int getRouteFailureCount$okhttp():128 -> getRouteFailureCount$okhttp
    684:684:okhttp3.Handshake handshake() -> handshake
    163:164:void incrementSuccessCount$okhttp() -> incrementSuccessCount$okhttp
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> isEligible$okhttp
    608:609:boolean isEligible$okhttp(okhttp3.Address,java.util.List):529 -> isEligible$okhttp
    532:559:boolean isEligible$okhttp(okhttp3.Address,java.util.List) -> isEligible$okhttp
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> isHealthy
    615:616:boolean isHealthy(boolean):648 -> isHealthy
    650:667:boolean isHealthy(boolean) -> isHealthy
    150:150:boolean isMultiplexed$okhttp() -> isMultiplexed$okhttp
    607:618:okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain) -> newCodec$okhttp
    624:630:okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange) -> newWebSocketStreams$okhttp
    159:160:void noCoalescedConnections$okhttp() -> noCoalescedConnections$okhttp
    154:155:void noNewExchanges$okhttp() -> noNewExchanges$okhttp
    681:682:void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings) -> onSettings
    676:676:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    637:637:okhttp3.Route route() -> route
    575:772:boolean routeMatchesAny(java.util.List) -> routeMatchesAny
    143:143:void setIdleAtNs$okhttp(long) -> setIdleAtNs$okhttp
    116:116:void setNoNewExchanges(boolean) -> setNoNewExchanges
    644:644:java.net.Socket socket() -> socket
    347:358:void startHttp2(int) -> startHttp2
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> supportsUrl
    608:609:boolean supportsUrl(okhttp3.HttpUrl):582 -> supportsUrl
    584:595:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    740:744:java.lang.String toString() -> toString
    703:735:void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException) -> trackFailure$okhttp
okhttp3.internal.connection.RealConnection$Companion -> okhttp3.internal.connection.RealConnection$Companion:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    747:747:void <init>() -> <init>
okhttp3.internal.connection.RealConnection$WhenMappings -> okhttp3.internal.connection.RealConnection$WhenMappings:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
okhttp3.internal.connection.RealConnection$connectTls$1 -> okhttp3.internal.connection.RealConnection$connectTls$1:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    403:403:java.lang.Object invoke() -> invoke
    405:406:java.util.List invoke() -> invoke
okhttp3.internal.connection.RealConnection$connectTls$2 -> okhttp3.internal.connection.RealConnection$connectTls$2:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    410:410:java.lang.Object invoke() -> invoke
    411:768:java.util.List invoke() -> invoke
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1 -> okhttp3.internal.connection.RealConnection$newWebSocketStreams$1:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    630:630:void <init>(okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.Exchange) -> <init>
    632:632:void close() -> close
okhttp3.internal.connection.RealConnectionPool -> okhttp3.internal.connection.RealConnectionPool:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    33:56:void <init>(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit) -> <init>
    83:88:boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean) -> callAcquirePooledConnection
    152:185:long cleanup(long) -> cleanup
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> connectionBecameIdle
    608:609:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection):106 -> connectionBecameIdle
    108:114:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> pruneAndGetAllocationCount
    608:609:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long):215 -> pruneAndGetAllocationCount
    217:243:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> put
    608:609:void put(okhttp3.internal.connection.RealConnection):95 -> put
    97:98:void put(okhttp3.internal.connection.RealConnection) -> put
okhttp3.internal.connection.RealConnectionPool$Companion -> okhttp3.internal.connection.RealConnectionPool$Companion:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    246:246:void <init>() -> <init>
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 -> okhttp3.internal.connection.RealConnectionPool$cleanupTask$1:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    43:43:void <init>(okhttp3.internal.connection.RealConnectionPool,java.lang.String) -> <init>
    44:44:long runOnce() -> runOnce
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
# {"id":"sourceFile","fileName":"RouteDatabase.kt"}
    26:27:void <init>() -> <init>
    36:37:void connected(okhttp3.Route) -> connected
    31:32:void failed(okhttp3.Route) -> failed
    40:40:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
# {"id":"sourceFile","fileName":"RouteException.kt"}
    24:26:void <init>(java.io.IOException) -> <init>
    30:31:void addConnectException(java.io.IOException) -> addConnectException
    24:24:java.io.IOException getFirstConnectException() -> getFirstConnectException
    26:26:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    36:53:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    59:59:boolean hasNext() -> hasNext
    119:119:boolean hasNextProxy() -> hasNextProxy
    63:92:okhttp3.internal.connection.RouteSelector$Selection next() -> next
    124:129:java.net.Proxy nextProxy() -> nextProxy
    137:172:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    112:115:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
    99:109:java.util.List resetNextProxy$selectProxies(java.net.Proxy,okhttp3.HttpUrl,okhttp3.internal.connection.RouteSelector) -> resetNextProxy$selectProxies
okhttp3.internal.connection.RouteSelector$Companion -> okhttp3.internal.connection.RouteSelector$Companion:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    189:189:void <init>() -> <init>
    195:199:java.lang.String getSocketHost(java.net.InetSocketAddress) -> getSocketHost
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    178:178:void <init>(java.util.List) -> <init>
    178:178:java.util.List getRoutes() -> getRoutes
    181:181:boolean hasNext() -> hasNext
    184:185:okhttp3.Route next() -> next
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
# {"id":"sourceFile","fileName":"BridgeInterceptor.kt"}
    34:34:void <init>(okhttp3.CookieJar) -> <init>
    110:119:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    38:106:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
# {"id":"sourceFile","fileName":"CallServerInterceptor.kt"}
    26:26:void <init>(boolean) -> <init>
    30:126:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.DatesKt -> okhttp3.internal.http.DatesKt:
# {"id":"sourceFile","fileName":"dates.kt"}
    32:66:void <clinit>() -> <clinit>
    70:101:java.util.Date toHttpDateOrNull(java.lang.String) -> toHttpDateOrNull
    106:106:java.lang.String toHttpDateString(java.util.Date) -> toHttpDateString
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 -> okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1:
# {"id":"sourceFile","fileName":"dates.kt"}
    32:32:void <init>() -> <init>
    32:32:java.lang.Object initialValue() -> initialValue
    35:37:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.ExchangeCodec -> okhttp3.internal.http.ExchangeCodec:
# {"id":"sourceFile","fileName":"ExchangeCodec.kt"}
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
# {"id":"sourceFile","fileName":"HttpHeaders.kt"}
    37:38:void <clinit>() -> <clinit>
    60:67:java.util.List parseChallenges(okhttp3.Headers,java.lang.String) -> parseChallenges
    216:230:boolean promisesBody(okhttp3.Response) -> promisesBody
    81:131:void readChallengeHeader(okio.Buffer,java.util.List) -> readChallengeHeader
    166:183:java.lang.String readQuotedString(okio.Buffer) -> readQuotedString
    192:196:java.lang.String readToken(okio.Buffer) -> readToken
    202:207:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    138:147:boolean skipCommasAndWhitespace(okio.Buffer) -> skipCommasAndWhitespace
    157:157:boolean startsWith(okio.Buffer,byte) -> startsWith
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
# {"id":"sourceFile","fileName":"HttpMethod.kt"}
    18:18:void <init>() -> <init>
    33:33:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    41:41:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    37:37:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    26:30:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
# {"id":"sourceFile","fileName":"RealInterceptorChain.kt"}
    36:36:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> <init>
    37:37:okhttp3.internal.connection.RealCall getCall$okhttp() -> <init>
    37:37:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int):37 -> <init>
    38:39:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> <init>
    40:40:okhttp3.internal.connection.Exchange getExchange$okhttp() -> <init>
    40:40:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int):40 -> <init>
    41:41:okhttp3.Request getRequest$okhttp() -> <init>
    41:41:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int):41 -> <init>
    42:42:int getConnectTimeoutMillis$okhttp() -> <init>
    42:42:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int):42 -> <init>
    43:43:int getReadTimeoutMillis$okhttp() -> <init>
    43:43:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int):43 -> <init>
    44:44:int getWriteTimeoutMillis$okhttp() -> <init>
    44:44:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int):44 -> <init>
    85:85:okhttp3.Call call() -> call
    56:56:okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> copy$okhttp
    49:49:okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object) -> copy$okhttp$default
    37:37:okhttp3.internal.connection.RealCall getCall$okhttp() -> getCall$okhttp
    42:42:int getConnectTimeoutMillis$okhttp() -> getConnectTimeoutMillis$okhttp
    40:40:okhttp3.internal.connection.Exchange getExchange$okhttp() -> getExchange$okhttp
    43:43:int getReadTimeoutMillis$okhttp() -> getReadTimeoutMillis$okhttp
    41:41:okhttp3.Request getRequest$okhttp() -> getRequest$okhttp
    44:44:int getWriteTimeoutMillis$okhttp() -> getWriteTimeoutMillis$okhttp
    91:118:okhttp3.Response proceed(okhttp3.Request) -> proceed
    69:69:int readTimeoutMillis() -> readTimeoutMillis
    87:87:okhttp3.Request request() -> request
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
# {"id":"sourceFile","fileName":"RealResponseBody.kt"}
    28:31:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    33:33:long contentLength() -> contentLength
    35:35:okhttp3.MediaType contentType() -> contentType
    37:37:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
# {"id":"sourceFile","fileName":"RequestLine.kt"}
    23:23:void <init>() -> <init>
    30:38:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    46:46:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    54:56:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
# {"id":"sourceFile","fileName":"RetryAndFollowUpInterceptor.kt"}
    54:54:void <init>(okhttp3.OkHttpClient) -> <init>
    293:330:okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String) -> buildRedirectRequest
    210:284:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange) -> followUpRequest
    58:133:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    174:193:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    151:160:boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean) -> recover
    167:169:boolean requestIsOneShot(java.io.IOException,okhttp3.Request) -> requestIsOneShot
    334:339:int retryAfter(okhttp3.Response,int) -> retryAfter
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion -> okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion:
# {"id":"sourceFile","fileName":"RetryAndFollowUpInterceptor.kt"}
    344:344:void <init>() -> <init>
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
# {"id":"sourceFile","fileName":"StatusLine.kt"}
    24:27:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    31:38:java.lang.String toString() -> toString
okhttp3.internal.http.StatusLine$Companion -> okhttp3.internal.http.StatusLine$Companion:
# {"id":"sourceFile","fileName":"StatusLine.kt"}
    42:42:void <init>() -> <init>
    62:103:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
okhttp3.internal.http1.HeadersReader -> okhttp3.internal.http1.HeadersReader:
# {"id":"sourceFile","fileName":"HeadersReader.kt"}
    24:25:void <init>(okio.BufferedSource) -> <init>
    36:42:okhttp3.Headers readHeaders() -> readHeaders
    29:30:java.lang.String readLine() -> readLine
okhttp3.internal.http1.HeadersReader$Companion -> okhttp3.internal.http1.HeadersReader$Companion:
# {"id":"sourceFile","fileName":"HeadersReader.kt"}
    45:45:void <init>() -> <init>
okhttp3.internal.http1.Http1ExchangeCodec -> okhttp3.internal.http1.Http1ExchangeCodec:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    64:64:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink):64 -> <init>
    66:66:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink) -> <init>
    68:68:okhttp3.internal.connection.RealConnection getConnection() -> <init>
    68:68:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink):68 -> <init>
    69:73:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink) -> <init>
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$detachTimeout
    64:64:void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout):64 -> access$detachTimeout
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getClient$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getClient$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getHeadersReader$p
    64:64:okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getHeadersReader$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getSink$p
    64:64:okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getSink$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getSource$p
    64:64:okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getSource$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getState$p
    64:64:int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getState$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getTrailers$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$setState$p
    64:64:void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int):64 -> access$setState$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$setTrailers$p
    64:64:void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers):64 -> access$setTrailers$p
    104:104:void cancel() -> cancel
    93:98:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    243:246:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    155:155:void finishRequest() -> finishRequest
    151:151:void flushRequest() -> flushRequest
    68:68:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    76:76:boolean isChunked(okhttp3.Response) -> isChunked
    79:79:boolean isChunked(okhttp3.Request) -> isChunked
    207:209:okio.Sink newChunkedSink() -> newChunkedSink
    225:227:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    219:221:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    213:215:okio.Sink newKnownLengthSink() -> newKnownLengthSink
    231:234:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    132:139:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    173:202:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    124:126:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    254:258:void skipConnectBody(okhttp3.Response) -> skipConnectBody
    160:169:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    118:119:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource -> okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    323:324:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    325:325:boolean getClosed() -> getClosed
    331:335:long read(okio.Buffer,long) -> read
    344:349:void responseBodyComplete() -> responseBodyComplete
    325:325:void setClosed(boolean) -> setClosed
    327:327:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    291:292:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    315:320:void close() -> close
    309:311:void flush() -> flush
    295:295:okio.Timeout timeout() -> timeout
    298:304:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    397:400:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl) -> <init>
    448:454:void close() -> close
    403:419:long read(okio.Buffer,long) -> read
    425:443:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1ExchangeCodec$Companion -> okhttp3.internal.http1.Http1ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    485:485:void <init>() -> <init>
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    354:359:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,long) -> <init>
    384:392:void close() -> close
    364:378:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink -> okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    262:263:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    280:283:void close() -> close
    275:276:void flush() -> flush
    266:266:okio.Timeout timeout() -> timeout
    269:271:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    459:459:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    477:481:void close() -> close
    463:470:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
# {"id":"sourceFile","fileName":"ConnectionShutdownException.kt"}
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
# {"id":"sourceFile","fileName":"ErrorCode.kt"}
    21:47:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int,int) -> <init>
    19:19:int getHttpCode() -> getHttpCode
okhttp3.internal.http2.ErrorCode$Companion -> okhttp3.internal.http2.ErrorCode$Companion:
# {"id":"sourceFile","fileName":"ErrorCode.kt"}
    49:49:void <init>() -> <init>
    50:50:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
# {"id":"sourceFile","fileName":"Header.kt"}
    39:51:void <clinit>() -> <clinit>
    22:28:void <init>(okio.ByteString,okio.ByteString) -> <init>
    31:31:void <init>(java.lang.String,java.lang.String) -> <init>
    33:33:void <init>(okio.ByteString,java.lang.String) -> <init>
    35:35:java.lang.String toString() -> toString
okhttp3.internal.http2.Header$Companion -> okhttp3.internal.http2.Header$Companion:
# {"id":"sourceFile","fileName":"Header.kt"}
    37:37:void <init>() -> <init>
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    58:122:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    612:614:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    122:122:java.util.Map getNAME_TO_FIRST_INDEX() -> getNAME_TO_FIRST_INDEX
    58:58:okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE() -> getSTATIC_HEADER_TABLE
    383:389:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    125:136:void <init>(okio.Source,int,int) -> <init>
    125:125:void <init>(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    149:153:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    159:162:void clearDynamicTable() -> clearDynamicTable
    251:251:int dynamicTableIndex(int) -> dynamicTableIndex
    171:182:int evictToRecoverBytes(int) -> evictToRecoverBytes
    141:142:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    284:292:okio.ByteString getName(int) -> getName
    303:334:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    297:297:boolean isStaticHeader(int) -> isStaticHeader
    339:339:int readByte() -> readByte
    368:377:okio.ByteString readByteString() -> readByteString
    193:229:void readHeaders() -> readHeaders
    237:245:void readIndexedHeader(int) -> readIndexedHeader
    353:353:int readInt(int,int) -> readInt
    270:272:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    277:279:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    256:258:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    263:265:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    392:408:void <init>(int,boolean,okio.Buffer) -> <init>
    392:392:void <init>(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    596:600:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    413:416:void clearDynamicTable() -> clearDynamicTable
    425:436:int evictToRecoverBytes(int) -> evictToRecoverBytes
    442:463:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    581:592:void resizeHeaderTable(int) -> resizeHeaderTable
    568:576:void writeByteString(okio.ByteString) -> writeByteString
    470:538:void writeHeaders(java.util.List) -> writeHeaders
    549:563:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
# {"id":"sourceFile","fileName":"Http2.kt"}
    23:88:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    134:144:java.lang.String formatFlags(int,int) -> formatFlags
    123:123:java.lang.String formattedType$okhttp(int) -> formattedType$okhttp
    115:119:java.lang.String frameLog(boolean,int,int,int,int) -> frameLog
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    995:997:void <clinit>() -> <clinit>
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> <init>
    54:54:void <init>(okhttp3.internal.http2.Http2Connection$Builder):54 -> <init>
    69:69:boolean getClient$okhttp() -> <init>
    69:69:void <init>(okhttp3.internal.http2.Http2Connection$Builder):69 -> <init>
    72:72:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp() -> <init>
    72:72:void <init>(okhttp3.internal.http2.Http2Connection$Builder):72 -> <init>
    73:73:java.util.Map getStreams$okhttp() -> <init>
    73:73:void <init>(okhttp3.internal.http2.Http2Connection$Builder):73 -> <init>
    74:74:java.lang.String getConnectionName$okhttp() -> <init>
    74:74:void <init>(okhttp3.internal.http2.Http2Connection$Builder):74 -> <init>
    78:78:void setNextStreamId$okhttp(int) -> <init>
    78:78:void <init>(okhttp3.internal.http2.Http2Connection$Builder):78 -> <init>
    83:95:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    109:109:okhttp3.internal.http2.Settings getOkHttpSettings() -> <init>
    109:109:void <init>(okhttp3.internal.http2.Http2Connection$Builder):109 -> <init>
    113:114:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    109:109:okhttp3.internal.http2.Settings getOkHttpSettings() -> <init>
    109:109:void <init>(okhttp3.internal.http2.Http2Connection$Builder):109 -> <init>
    122:122:void setPeerSettings(okhttp3.internal.http2.Settings) -> <init>
    122:122:void <init>(okhttp3.internal.http2.Http2Connection$Builder):122 -> <init>
    137:137:long getWriteBytesMaximum() -> <init>
    137:137:void <init>(okhttp3.internal.http2.Http2Connection$Builder):137 -> <init>
    140:140:java.net.Socket getSocket$okhttp() -> <init>
    140:140:void <init>(okhttp3.internal.http2.Http2Connection$Builder):140 -> <init>
    141:141:okhttp3.internal.http2.Http2Writer getWriter() -> <init>
    141:141:void <init>(okhttp3.internal.http2.Http2Connection$Builder):141 -> <init>
    144:144:okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable() -> <init>
    144:144:void <init>(okhttp3.internal.http2.Http2Connection$Builder):144 -> <init>
    147:152:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    84:84:void okhttp3.internal.concurrent.TaskQueue.schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object) -> <init>
    84:84:void <init>(okhttp3.internal.http2.Http2Connection$Builder):152 -> <init>
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$failConnection
    54:54:void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException):54 -> access$failConnection
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getAwaitPongsReceived$p
    54:54:long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection):54 -> access$getAwaitPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getCurrentPushRequests$p
    54:54:java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection):54 -> access$getCurrentPushRequests$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getDEFAULT_SETTINGS$cp
    54:54:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp():54 -> access$getDEFAULT_SETTINGS$cp
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getDegradedPongsReceived$p
    54:54:long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection):54 -> access$getDegradedPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getIntervalPingsSent$p
    54:54:long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection):54 -> access$getIntervalPingsSent$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getIntervalPongsReceived$p
    54:54:long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection):54 -> access$getIntervalPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getPushObserver$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getSettingsListenerQueue$p
    54:54:okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection):54 -> access$getSettingsListenerQueue$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getTaskRunner$p
    54:54:okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection):54 -> access$getTaskRunner$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getWriterQueue$p
    54:54:okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection):54 -> access$getWriterQueue$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$isShutdown$p
    54:54:boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection):54 -> access$isShutdown$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$setAwaitPongsReceived$p
    54:54:void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long):54 -> access$setAwaitPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$setDegradedPongsReceived$p
    54:54:void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long):54 -> access$setDegradedPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$setIntervalPingsSent$p
    54:54:void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long):54 -> access$setIntervalPingsSent$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$setIntervalPongsReceived$p
    54:54:void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long):54 -> access$setIntervalPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$setShutdown$p
    54:54:void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean):54 -> access$setShutdown$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$setWriteBytesMaximum$p
    54:54:void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long):54 -> access$setWriteBytesMaximum$p
    438:438:void close() -> close
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> close$okhttp
    615:616:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):446 -> close$okhttp
    449:455:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> close$okhttp
    38:38:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):455 -> close$okhttp
    456:456:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> close$okhttp
    38:38:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):455 -> close$okhttp
    453:460:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> close$okhttp
    13536:13536:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):460 -> close$okhttp
    453:479:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    483:483:void failConnection(java.io.IOException) -> failConnection
    408:408:void flush() -> flush
    69:69:boolean getClient$okhttp() -> getClient$okhttp
    74:74:java.lang.String getConnectionName$okhttp() -> getConnectionName$okhttp
    75:75:void setLastGoodStreamId$okhttp(int) -> getLastGoodStreamId$okhttp
    75:75:int getLastGoodStreamId$okhttp():75 -> getLastGoodStreamId$okhttp
    72:72:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp() -> getListener$okhttp
    78:78:void setNextStreamId$okhttp(int) -> getNextStreamId$okhttp
    78:78:int getNextStreamId$okhttp():78 -> getNextStreamId$okhttp
    109:109:okhttp3.internal.http2.Settings getOkHttpSettings() -> getOkHttpSettings
    122:122:void setPeerSettings(okhttp3.internal.http2.Settings) -> getPeerSettings
    122:122:okhttp3.internal.http2.Settings getPeerSettings():122 -> getPeerSettings
    140:140:java.net.Socket getSocket$okhttp() -> getSocket$okhttp
    177:177:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    73:73:java.util.Map getStreams$okhttp() -> getStreams$okhttp
    137:137:long getWriteBytesMaximum() -> getWriteBytesMaximum
    133:133:long getWriteBytesTotal() -> getWriteBytesTotal
    141:141:okhttp3.internal.http2.Http2Writer getWriter() -> getWriter
    525:530:boolean isHealthy(long) -> isHealthy
    225:225:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    240:268:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    935:938:void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean) -> pushDataLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushDataLater$okhttp
    96:96:void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean):938 -> pushDataLater$okhttp
    911:911:void pushHeadersLater$okhttp(int,java.util.List,boolean) -> pushHeadersLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushHeadersLater$okhttp
    96:96:void pushHeadersLater$okhttp(int,java.util.List,boolean):911 -> pushHeadersLater$okhttp
    886:893:void pushRequestLater$okhttp(int,java.util.List) -> pushRequestLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushRequestLater$okhttp
    96:96:void pushRequestLater$okhttp(int,java.util.List):893 -> pushRequestLater$okhttp
    886:886:void pushRequestLater$okhttp(int,java.util.List) -> pushRequestLater$okhttp
    952:952:void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushResetLater$okhttp
    96:96:void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode):952 -> pushResetLater$okhttp
    180:180:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int) -> removeStream$okhttp
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> removeStream$okhttp
    563:563:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int):183 -> removeStream$okhttp
    185:185:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int) -> removeStream$okhttp
    549:554:void sendDegradedPingLater$okhttp() -> sendDegradedPingLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> sendDegradedPingLater$okhttp
    96:96:void sendDegradedPingLater$okhttp():554 -> sendDegradedPingLater$okhttp
    549:549:void sendDegradedPingLater$okhttp() -> sendDegradedPingLater$okhttp
    75:75:void setLastGoodStreamId$okhttp(int) -> setLastGoodStreamId$okhttp
    78:78:void setNextStreamId$okhttp(int) -> setNextStreamId$okhttp
    122:122:void setPeerSettings(okhttp3.internal.http2.Settings) -> setPeerSettings
    418:429:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    497:506:void start(boolean,okhttp3.internal.concurrent.TaskRunner) -> start
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> start
    96:96:void start(boolean,okhttp3.internal.concurrent.TaskRunner):506 -> start
    495:495:void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object) -> start$default
    189:195:void updateConnectionFlowControl$okhttp(long) -> updateConnectionFlowControl$okhttp
    304:316:void writeData(int,boolean,okio.Buffer,long) -> writeData
    557:557:void okhttp3.internal.Util.wait(java.lang.Object) -> writeData
    557:557:void writeData(int,boolean,okio.Buffer,long):319 -> writeData
    311:332:void writeData(int,boolean,okio.Buffer,long) -> writeData
    280:280:void writeHeaders$okhttp(int,boolean,java.util.List) -> writeHeaders$okhttp
    376:378:void writePing(boolean,int,int) -> writePing
    354:354:void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset$okhttp
    340:340:void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> writeSynResetLater$okhttp
    96:96:void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode):340 -> writeSynResetLater$okhttp
    361:361:void writeWindowUpdateLater$okhttp(int,long) -> writeWindowUpdateLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> writeWindowUpdateLater$okhttp
    96:96:void writeWindowUpdateLater$okhttp(int,long):361 -> writeWindowUpdateLater$okhttp
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    559:569:void <init>(boolean,okhttp3.internal.concurrent.TaskRunner) -> <init>
    601:601:okhttp3.internal.http2.Http2Connection build() -> build
    561:561:boolean getClient$okhttp() -> getClient$okhttp
    565:565:java.lang.String getConnectionName$okhttp() -> getConnectionName$okhttp
    568:568:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp() -> getListener$okhttp
    570:570:int getPingIntervalMillis$okhttp() -> getPingIntervalMillis$okhttp
    569:569:okhttp3.internal.http2.PushObserver getPushObserver$okhttp() -> getPushObserver$okhttp
    567:567:okio.BufferedSink getSink$okhttp() -> getSink$okhttp
    564:564:java.net.Socket getSocket$okhttp() -> getSocket$okhttp
    566:566:okio.BufferedSource getSource$okhttp() -> getSource$okhttp
    562:562:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> getTaskRunner$okhttp
    589:589:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    597:597:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    565:565:void setConnectionName$okhttp(java.lang.String) -> setConnectionName$okhttp
    568:568:void setListener$okhttp(okhttp3.internal.http2.Http2Connection$Listener) -> setListener$okhttp
    570:570:void setPingIntervalMillis$okhttp(int) -> setPingIntervalMillis$okhttp
    567:567:void setSink$okhttp(okio.BufferedSink) -> setSink$okhttp
    564:564:void setSocket$okhttp(java.net.Socket) -> setSocket$okhttp
    566:566:void setSource$okhttp(okio.BufferedSource) -> setSource$okhttp
    579:585:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$Companion -> okhttp3.internal.http2.Http2Connection$Companion:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    992:992:void <init>() -> <init>
    995:995:okhttp3.internal.http2.Settings getDEFAULT_SETTINGS() -> getDEFAULT_SETTINGS
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    983:983:void <clinit>() -> <clinit>
    961:961:void <init>() -> <init>
okhttp3.internal.http2.Http2Connection$Listener$Companion -> okhttp3.internal.http2.Http2Connection$Listener$Companion:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    981:981:void <init>() -> <init>
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1 -> okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    983:983:void <init>() -> <init>
    986:986:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    609:609:java.lang.Object invoke() -> <init>
    609:609:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader):609 -> <init>
    610:610:okhttp3.internal.http2.Http2Reader getReader$okhttp() -> <init>
    610:610:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader):610 -> <init>
    736:753:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> applyAndAckSettings
    38:38:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings):753 -> applyAndAckSettings
    756:758:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> applyAndAckSettings
    96:96:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings):758 -> applyAndAckSettings
    737:772:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    639:652:void data(boolean,int,okio.BufferedSource,int) -> data
    817:824:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> goAway
    38:38:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString):824 -> goAway
    823:832:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> goAway
    38:38:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString):824 -> goAway
    823:823:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    662:687:void headers(boolean,int,int,java.util.List) -> headers
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> headers
    96:96:void headers(boolean,int,int,java.util.List):687 -> headers
    667:702:void headers(boolean,int,int,java.util.List) -> headers
    609:609:java.lang.Object invoke() -> invoke
    613:628:void invoke() -> invoke
    787:787:void ping(boolean,int,int) -> ping
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> ping
    563:563:void ping(boolean,int,int):797 -> ping
    796:796:void ping(boolean,int,int) -> ping
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> ping
    563:563:void ping(boolean,int,int):797 -> ping
    787:806:void ping(boolean,int,int) -> ping
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> ping
    96:96:void ping(boolean,int,int):806 -> ping
    867:867:void pushPromise(int,int,java.util.List) -> pushPromise
    706:711:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    715:715:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> settings
    96:96:void settings(boolean,okhttp3.internal.http2.Settings):715 -> settings
    839:840:void windowUpdate(int,long) -> windowUpdate
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> windowUpdate
    563:563:void windowUpdate(int,long):841 -> windowUpdate
    839:848:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$lambda-7$lambda-6$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$lambda-7$lambda-6$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,kotlin.jvm.internal.Ref$ObjectRef):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$lambda-2$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$lambda-2$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Stream):96 -> <init>
    220:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,int):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean):96 -> <init>
    222:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean):96 -> <init>
    219:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List):96 -> <init>
    219:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode):96 -> <init>
    219:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$special$$inlined$schedule$1 -> okhttp3.internal.http2.Http2Connection$special$$inlined$schedule$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    84:84:void okhttp3.internal.concurrent.TaskQueue$schedule$2.<init>(java.lang.String,kotlin.jvm.functions.Function0) -> <init>
    84:84:void <init>(java.lang.String,okhttp3.internal.http2.Http2Connection,long):84 -> <init>
    219:232:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode):96 -> <init>
    220:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long):96 -> <init>
    220:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2ExchangeCodec -> okhttp3.internal.http2.Http2ExchangeCodec:
# {"id":"sourceFile","fileName":"Http2ExchangeCodec.kt"}
    136:157:void <clinit>() -> <clinit>
    50:61:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection) -> <init>
    50:50:java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp() -> access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp
    50:50:java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp() -> access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp
    121:122:void cancel() -> cancel
    68:68:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    92:92:void finishRequest() -> finishRequest
    88:88:void flushRequest() -> flushRequest
    52:52:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    113:113:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    96:98:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    107:108:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    72:84:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2ExchangeCodec$Companion -> okhttp3.internal.http2.Http2ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"Http2ExchangeCodec.kt"}
    125:125:void <init>() -> <init>
    160:175:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    184:200:okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol) -> readHttp2HeadersList
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    496:496:void <clinit>() -> <clinit>
    58:64:void <init>(okio.BufferedSource,boolean) -> <init>
    58:58:java.util.logging.Logger access$getLogger$cp() -> access$getLogger$cp
    316:316:void close() -> close
    89:128:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    71:81:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> readConnectionPreface
    168:181:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readData
    292:303:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readGoAway
    154:163:java.util.List readHeaderBlock(int,int,int,int) -> readHeaderBlock
    136:149:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readHeaders
    282:287:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPing
    186:188:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPriority
    193:197:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    271:277:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPushPromise
    202:207:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readRstStream
    212:265:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readSettings
    308:311:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$Companion -> okhttp3.internal.http2.Http2Reader$Companion:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    495:495:void <init>() -> <init>
    496:496:java.util.logging.Logger getLogger() -> getLogger
    503:503:int lengthWithoutPadding(int,int,int) -> lengthWithoutPadding
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    323:324:void <init>(okio.BufferedSource) -> <init>
    331:331:int getLeft() -> getLeft
    336:346:long read(okio.Buffer,long) -> read
    358:367:void readContinuationHeader() -> readContinuationHeader
    328:328:void setFlags(int) -> setFlags
    331:331:void setLeft(int) -> setLeft
    327:327:void setLength(int) -> setLength
    332:332:void setPadding(int) -> setPadding
    329:329:void setStreamId(int) -> setStreamId
    350:350:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Reader$Handler -> okhttp3.internal.http2.Http2Reader$Handler:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    37:37:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    39:39:int getId() -> <init>
    39:39:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):39 -> <init>
    40:40:okhttp3.internal.http2.Http2Connection getConnection() -> <init>
    40:40:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):40 -> <init>
    61:61:long getWriteBytesMaximum() -> <init>
    61:61:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):61 -> <init>
    65:65:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    70:70:okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp() -> <init>
    70:70:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):70 -> <init>
    71:71:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    70:70:okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp() -> <init>
    70:70:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):70 -> <init>
    74:74:okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp() -> <init>
    74:74:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):74 -> <init>
    77:77:okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp() -> <init>
    77:77:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):77 -> <init>
    78:78:okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp() -> <init>
    78:78:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers):78 -> <init>
    94:97:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    635:635:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> addBytesToWriteWindow
    563:563:void addBytesToWriteWindow(long):637 -> addBytesToWriteWindow
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> cancelStreamIfNecessary$okhttp
    615:616:void cancelStreamIfNecessary$okhttp():491 -> cancelStreamIfNecessary$okhttp
    495:505:void cancelStreamIfNecessary$okhttp() -> cancelStreamIfNecessary$okhttp
    644:646:void checkOutNotClosed$okhttp() -> checkOutNotClosed$okhttp
    237:240:void close(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> closeInternal
    615:616:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException):255 -> closeInternal
    257:265:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> closeInternal
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> closeInternal
    563:563:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException):266 -> closeInternal
    257:268:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> closeInternal
    247:250:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    40:40:okhttp3.internal.http2.Http2Connection getConnection() -> getConnection
    87:87:void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode) -> getErrorCode$okhttp
    87:87:okhttp3.internal.http2.ErrorCode getErrorCode$okhttp():87 -> getErrorCode$okhttp
    90:90:void setErrorException$okhttp(java.io.IOException) -> getErrorException$okhttp
    90:90:java.io.IOException getErrorException$okhttp():90 -> getErrorException$okhttp
    39:39:int getId() -> getId
    53:53:long getReadBytesAcknowledged() -> getReadBytesAcknowledged
    49:49:long getReadBytesTotal() -> getReadBytesTotal
    77:77:okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp() -> getReadTimeout$okhttp
    223:228:okio.Sink getSink() -> getSink
    74:74:okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp() -> getSink$okhttp
    70:70:okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp() -> getSource$okhttp
    61:61:long getWriteBytesMaximum() -> getWriteBytesMaximum
    57:57:long getWriteBytesTotal() -> getWriteBytesTotal
    78:78:okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp() -> getWriteTimeout$okhttp
    126:127:boolean isLocallyInitiated() -> isLocallyInitiated
    112:120:boolean isOpen() -> isOpen
    209:209:okio.Timeout readTimeout() -> readTimeout
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> receiveData
    615:616:void receiveData(okio.BufferedSource,int):274 -> receiveData
    276:276:void receiveData(okio.BufferedSource,int) -> receiveData
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> receiveHeaders
    615:616:void receiveHeaders(okhttp3.Headers,boolean):281 -> receiveHeaders
    284:294:void receiveHeaders(okhttp3.Headers,boolean) -> receiveHeaders
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> receiveHeaders
    563:563:void receiveHeaders(okhttp3.Headers,boolean):295 -> receiveHeaders
    284:298:void receiveHeaders(okhttp3.Headers,boolean) -> receiveHeaders
    303:304:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> receiveRstStream
    563:563:void receiveRstStream(okhttp3.internal.http2.ErrorCode):305 -> receiveRstStream
    307:307:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    87:87:void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode) -> setErrorCode$okhttp
    90:90:void setErrorException$okhttp(java.io.IOException) -> setErrorException$okhttp
    54:54:void setReadBytesAcknowledged$okhttp(long) -> setReadBytesAcknowledged$okhttp
    50:50:void setReadBytesTotal$okhttp(long) -> setReadBytesTotal$okhttp
    58:58:void setWriteBytesTotal$okhttp(long) -> setWriteBytesTotal$okhttp
    137:148:okhttp3.Headers takeHeaders() -> takeHeaders
    557:557:void okhttp3.internal.Util.wait(java.lang.Object) -> waitForIo$okhttp
    557:557:void waitForIo$okhttp():657 -> waitForIo$okhttp
    659:660:void waitForIo$okhttp() -> waitForIo$okhttp
    211:211:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$Companion -> okhttp3.internal.http2.Http2Stream$Companion:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    629:629:void <init>() -> <init>
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$FramingSink:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    510:510:void <init>(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    510:510:void <init>(okhttp3.internal.http2.Http2Stream,boolean):510 -> <init>
    512:512:void setFinished(boolean) -> <init>
    512:512:void <init>(okhttp3.internal.http2.Http2Stream,boolean):512 -> <init>
    519:519:void <init>(okhttp3.internal.http2.Http2Stream,boolean) -> <init>
    589:589:void close() -> close
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> close
    615:616:void close():589 -> close
    592:625:void close() -> close
    544:567:void emitFrame(boolean) -> emitFrame
    573:573:void flush() -> flush
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> flush
    615:616:void flush():573 -> flush
    575:581:void flush() -> flush
    524:524:void setClosed(boolean) -> getClosed
    524:524:boolean getClosed():524 -> getClosed
    512:512:void setFinished(boolean) -> getFinished
    512:512:boolean getFinished():512 -> getFinished
    524:524:void setClosed(boolean) -> setClosed
    585:585:okio.Timeout timeout() -> timeout
    528:528:void write(okio.Buffer,long) -> write
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> write
    615:616:void write(okio.Buffer,long):528 -> write
    530:532:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$FramingSource:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    314:316:void <init>(okhttp3.internal.http2.Http2Stream,long,boolean) -> <init>
    322:322:void setFinished$okhttp(boolean) -> <init>
    322:322:void <init>(okhttp3.internal.http2.Http2Stream,long,boolean):322 -> <init>
    325:325:okio.Buffer getReceiveBuffer() -> <init>
    325:325:void <init>(okhttp3.internal.http2.Http2Stream,long,boolean):325 -> <init>
    328:328:okio.Buffer getReadBuffer() -> <init>
    328:328:void <init>(okhttp3.internal.http2.Http2Stream,long,boolean):328 -> <init>
    476:479:void close() -> close
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> close
    563:563:void close():480 -> close
    476:485:void close() -> close
    337:337:void setClosed$okhttp(boolean) -> getClosed$okhttp
    337:337:boolean getClosed$okhttp():337 -> getClosed$okhttp
    322:322:void setFinished$okhttp(boolean) -> getFinished$okhttp
    322:322:boolean getFinished$okhttp():322 -> getFinished$okhttp
    328:328:okio.Buffer getReadBuffer() -> getReadBuffer
    325:325:okio.Buffer getReceiveBuffer() -> getReceiveBuffer
    341:400:long read(okio.Buffer,long) -> read
    419:419:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> receive$okhttp
    615:616:void receive$okhttp(okio.BufferedSource,long):419 -> receive$okhttp
    426:459:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    563:563:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> receive$okhttp
    563:563:void receive$okhttp(okio.BufferedSource,long):461 -> receive$okhttp
    426:466:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    337:337:void setClosed$okhttp(boolean) -> setClosed$okhttp
    322:322:void setFinished$okhttp(boolean) -> setFinished$okhttp
    334:334:void setTrailers(okhttp3.Headers) -> setTrailers
    471:471:okio.Timeout timeout() -> timeout
    408:408:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
    615:616:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> updateConnectionFlowControl
    615:616:void updateConnectionFlowControl(long):408 -> updateConnectionFlowControl
    410:410:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    668:668:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    684:684:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    675:677:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    670:671:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
# {"id":"sourceFile","fileName":"Http2Writer.kt"}
    314:314:void <clinit>() -> <clinit>
    44:50:void <init>(okio.BufferedSink,boolean) -> <init>
    52:52:okhttp3.internal.http2.Hpack$Writer getHpackWriter() -> <init>
    52:52:void <init>(okio.BufferedSink,boolean):52 -> <init>
    68:80:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    269:271:void close() -> close
    56:63:void connectionPreface() -> connectionPreface
    150:154:void data(boolean,int,okio.Buffer,int) -> data
    158:165:void dataFrame(int,int,okio.Buffer,int) -> dataFrame
    119:121:void flush() -> flush
    258:264:void frameHeader(int,int,int,int) -> frameHeader
    220:234:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    295:311:void headers(boolean,int,java.util.List) -> headers
    139:139:int maxDataLength() -> maxDataLength
    198:208:void ping(boolean,int,int) -> ping
    100:115:void pushPromise(int,int,java.util.List) -> pushPromise
    125:136:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    172:190:void settings(okhttp3.internal.http2.Settings) -> settings
    242:254:void windowUpdate(int,long) -> windowUpdate
    277:285:void writeContinuationFrames(int,long) -> writeContinuationFrames
okhttp3.internal.http2.Http2Writer$Companion -> okhttp3.internal.http2.Http2Writer$Companion:
# {"id":"sourceFile","fileName":"Http2Writer.kt"}
    313:313:void <init>() -> <init>
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
# {"id":"sourceFile","fileName":"Huffman.kt"}
    38:82:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    159:178:void addCode(int,int,int) -> addCode
    124:154:void decode(okio.BufferedSource,long,okio.BufferedSink) -> decode
    91:108:void encode(okio.ByteString,okio.BufferedSink) -> encode
    115:117:int encodedLength(okio.ByteString) -> encodedLength
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
# {"id":"sourceFile","fileName":"Huffman.kt"}
    192:195:void <init>() -> <init>
    199:203:void <init>(int,int) -> <init>
    183:183:okhttp3.internal.http2.Huffman$Node[] getChildren() -> getChildren
    186:186:int getSymbol() -> getSymbol
    189:189:int getTerminalBitCount() -> getTerminalBitCount
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    75:75:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$Companion -> okhttp3.internal.http2.PushObserver$Companion:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    74:74:void <init>() -> <init>
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel -> okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    76:76:void <init>() -> <init>
    88:88:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
# {"id":"sourceFile","fileName":"Settings.kt"}
    22:28:void <init>() -> <init>
    66:66:int get(int) -> get
    34:34:int getHeaderTableSize() -> getHeaderTableSize
    40:40:int getInitialWindowSize() -> getInitialWindowSize
    79:79:int getMaxConcurrentStreams() -> getMaxConcurrentStreams
    84:84:int getMaxFrameSize(int) -> getMaxFrameSize
    62:62:boolean isSet(int) -> isSet
    98:99:void merge(okhttp3.internal.http2.Settings) -> merge
    49:55:okhttp3.internal.http2.Settings set(int,int) -> set
    69:69:int size() -> size
okhttp3.internal.http2.Settings$Companion -> okhttp3.internal.http2.Settings$Companion:
# {"id":"sourceFile","fileName":"Settings.kt"}
    103:103:void <init>() -> <init>
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
# {"id":"sourceFile","fileName":"StreamResetException.kt"}
    21:21:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.platform.Android10Platform -> okhttp3.internal.platform.Android10Platform:
# {"id":"sourceFile","fileName":"Android10Platform.kt"}
    67:67:void <clinit>() -> <clinit>
    36:74:void <init>() -> <init>
    35:35:boolean access$isSupported$cp() -> access$isSupported$cp
    64:64:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    51:52:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    57:57:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    61:61:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
okhttp3.internal.platform.Android10Platform$Companion -> okhttp3.internal.platform.Android10Platform$Companion:
# {"id":"sourceFile","fileName":"Android10Platform.kt"}
    66:66:void <init>() -> <init>
    69:69:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    67:67:boolean isSupported() -> isSupported
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    148:150:void <clinit>() -> <clinit>
    45:165:void <init>() -> <init>
    44:44:boolean access$isSupported$cp() -> access$isSupported$cp
    110:110:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    115:120:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    85:86:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:70:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    91:91:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    93:93:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    104:105:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    96:99:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
okhttp3.internal.platform.AndroidPlatform$Companion -> okhttp3.internal.platform.AndroidPlatform$Companion:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    147:147:void <init>() -> <init>
    160:160:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    148:148:boolean isSupported() -> isSupported
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex -> okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    130:132:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    136:140:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
okhttp3.internal.platform.BouncyCastlePlatform -> okhttp3.internal.platform.BouncyCastlePlatform:
# {"id":"sourceFile","fileName":"BouncyCastlePlatform.kt"}
    85:87:void <clinit>() -> <clinit>
    34:34:boolean access$isSupported$cp() -> <init>
    34:34:void <init>():34 -> <init>
    35:35:void <init>() -> <init>
    34:34:boolean access$isSupported$cp() -> access$isSupported$cp
    60:64:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):65 -> configureTlsExtensions
    65:69:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    74:81:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    38:38:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    41:48:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
okhttp3.internal.platform.BouncyCastlePlatform$Companion -> okhttp3.internal.platform.BouncyCastlePlatform$Companion:
# {"id":"sourceFile","fileName":"BouncyCastlePlatform.kt"}
    84:84:void <init>() -> <init>
    94:94:okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported() -> buildIfSupported
    85:85:boolean isSupported() -> isSupported
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    109:115:void <clinit>() -> <clinit>
    37:37:boolean access$isSupported$cp() -> <init>
    37:37:void <init>():37 -> <init>
    38:38:void <init>() -> <init>
    37:37:boolean access$isSupported$cp() -> access$isSupported$cp
    83:88:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):89 -> configureTlsExtensions
    89:91:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    96:99:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    44:44:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    103:105:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    47:55:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
okhttp3.internal.platform.ConscryptPlatform$Companion -> okhttp3.internal.platform.ConscryptPlatform$Companion:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    108:108:void <init>() -> <init>
    127:137:boolean atLeastVersion(int,int,int) -> atLeastVersion
    124:124:okhttp3.internal.platform.ConscryptPlatform buildIfSupported() -> buildIfSupported
    109:109:boolean isSupported() -> isSupported
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier -> okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    59:59:void <init>() -> <init>
okhttp3.internal.platform.Jdk8WithJettyBootPlatform -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    27:32:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    53:57:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    38:47:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:72:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    80:82:void <init>(java.util.List) -> <init>
    87:87:java.lang.String getSelected() -> getSelected
    85:85:boolean getUnsupported() -> getUnsupported
    92:118:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    123:123:void <init>() -> <init>
    125:145:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
# {"id":"sourceFile","fileName":"Jdk9Platform.kt"}
    69:78:void <clinit>() -> <clinit>
    25:25:boolean access$isAvailable$cp() -> <init>
    25:25:void <init>():25 -> <init>
    25:25:boolean access$isAvailable$cp() -> access$isAvailable$cp
    32:34:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):36 -> configureTlsExtensions
    36:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    46:47:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk9Platform$Companion -> okhttp3.internal.platform.Jdk9Platform$Companion:
# {"id":"sourceFile","fileName":"Jdk9Platform.kt"}
    65:65:void <init>() -> <init>
    86:86:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    66:66:boolean isAvailable() -> isAvailable
okhttp3.internal.platform.OpenJSSEPlatform -> okhttp3.internal.platform.OpenJSSEPlatform:
# {"id":"sourceFile","fileName":"OpenJSSEPlatform.kt"}
    89:91:void <clinit>() -> <clinit>
    33:33:boolean access$isSupported$cp() -> <init>
    33:33:void <init>():33 -> <init>
    34:34:void <init>() -> <init>
    33:33:boolean access$isSupported$cp() -> access$isSupported$cp
    62:68:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):68 -> configureTlsExtensions
    68:73:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    78:85:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    40:40:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    43:50:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
okhttp3.internal.platform.OpenJSSEPlatform$Companion -> okhttp3.internal.platform.OpenJSSEPlatform$Companion:
# {"id":"sourceFile","fileName":"OpenJSSEPlatform.kt"}
    88:88:void <init>() -> <init>
    98:98:okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported() -> buildIfSupported
    89:89:boolean isSupported() -> isSupported
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
# {"id":"sourceFile","fileName":"Platform.kt"}
    178:183:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    70:70:okhttp3.internal.platform.Platform access$getPlatform$cp() -> access$getPlatform$cp
    160:160:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    163:163:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    128:128:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    145:145:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    132:133:void log(java.lang.String,int,java.lang.Throwable) -> log
    131:131:void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object) -> log$default
    153:156:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    75:75:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    167:171:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    78:85:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    175:175:java.lang.String toString() -> toString
okhttp3.internal.platform.Platform$Companion -> okhttp3.internal.platform.Platform$Companion:
# {"id":"sourceFile","fileName":"Platform.kt"}
    177:177:okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion) -> <init>
    177:177:void <init>():177 -> <init>
    177:177:okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion) -> access$findPlatform
    193:292:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    277:282:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    226:227:okhttp3.internal.platform.Platform findAndroidPlatform() -> findAndroidPlatform
    231:269:okhttp3.internal.platform.Platform findJvmPlatform() -> findJvmPlatform
    219:222:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    186:186:okhttp3.internal.platform.Platform get() -> get
    198:198:boolean isAndroid() -> isAndroid
    214:215:boolean isBouncyCastlePreferred() -> isBouncyCastlePreferred
    202:203:boolean isConscryptPreferred() -> isConscryptPreferred
    208:209:boolean isOpenJSSEPreferred() -> isOpenJSSEPreferred
okhttp3.internal.platform.android.Android10SocketAdapter -> okhttp3.internal.platform.android.Android10SocketAdapter:
# {"id":"sourceFile","fileName":"Android10SocketAdapter.kt"}
    34:34:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> <init>
    34:34:void <init>():34 -> <init>
    55:60:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):60 -> configureTlsExtensions
    60:62:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):60 -> configureTlsExtensions
    65:65:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    43:44:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    39:39:boolean isSupported() -> isSupported
    37:37:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.Android10SocketAdapter$Companion -> okhttp3.internal.platform.android.Android10SocketAdapter$Companion:
# {"id":"sourceFile","fileName":"Android10SocketAdapter.kt"}
    69:69:void <init>() -> <init>
    72:72:okhttp3.internal.platform.android.SocketAdapter buildIfSupported() -> buildIfSupported
    74:74:boolean isSupported() -> isSupported
okhttp3.internal.platform.android.AndroidCertificateChainCleaner -> okhttp3.internal.platform.android.AndroidCertificateChainCleaner:
# {"id":"sourceFile","fileName":"AndroidCertificateChainCleaner.kt"}
    34:36:void <init>(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions) -> <init>
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> clean
    38:38:java.util.List clean(java.util.List,java.lang.String):42 -> clean
    42:46:java.util.List clean(java.util.List,java.lang.String) -> clean
    51:52:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion -> okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"AndroidCertificateChainCleaner.kt"}
    56:56:void <init>() -> <init>
    60:67:okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager) -> buildIfSupported
okhttp3.internal.platform.android.AndroidLog -> okhttp3.internal.platform.android.AndroidLog:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    54:67:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    70:84:void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable) -> androidLog$okhttp
    99:100:void enable() -> enable
    105:114:void enableLogging(java.lang.String,java.lang.String) -> enableLogging
    95:95:java.lang.String loggerTag(java.lang.String) -> loggerTag
okhttp3.internal.platform.android.AndroidLogHandler -> okhttp3.internal.platform.android.AndroidLogHandler:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    37:37:void <init>() -> <init>
    39:39:void publish(java.util.logging.LogRecord) -> publish
okhttp3.internal.platform.android.AndroidLogKt -> okhttp3.internal.platform.android.AndroidLogKt:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    1:1:int access$getAndroidLevel(java.util.logging.LogRecord) -> access$getAndroidLevel
    32:33:int getAndroidLevel(java.util.logging.LogRecord) -> getAndroidLevel
okhttp3.internal.platform.android.AndroidSocketAdapter -> okhttp3.internal.platform.android.AndroidSocketAdapter:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    96:96:void <clinit>() -> <clinit>
    32:38:void <init>(java.lang.Class) -> <init>
    32:32:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp() -> access$getPlayProviderFactory$cp
    50:68:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    75:89:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    40:40:boolean isSupported() -> isSupported
    42:42:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion -> okhttp3.internal.platform.android.AndroidSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    94:94:void <init>() -> <init>
    94:94:okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class) -> access$build
    106:116:okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class) -> build
    120:120:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String) -> factory
    95:95:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory() -> getPlayProviderFactory
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    120:120:void <init>(java.lang.String) -> <init>
    125:125:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    122:122:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.BouncyCastleSocketAdapter -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    60:60:void <clinit>() -> <clinit>
    27:27:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> <init>
    27:27:void <init>():27 -> <init>
    27:27:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> access$getFactory$cp
    47:53:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):53 -> configureTlsExtensions
    53:55:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    33:36:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    30:30:boolean isSupported() -> isSupported
    28:28:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    59:59:void <init>() -> <init>
    60:60:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory() -> getFactory
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    60:60:void <init>() -> <init>
    64:64:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    62:62:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.CloseGuard -> okhttp3.internal.platform.android.CloseGuard:
# {"id":"sourceFile","fileName":"CloseGuard.kt"}
    25:28:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    32:35:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    47:47:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.android.CloseGuard$Companion -> okhttp3.internal.platform.android.CloseGuard$Companion:
# {"id":"sourceFile","fileName":"CloseGuard.kt"}
    55:55:void <init>() -> <init>
    62:72:okhttp3.internal.platform.android.CloseGuard get() -> get
okhttp3.internal.platform.android.ConscryptSocketAdapter -> okhttp3.internal.platform.android.ConscryptSocketAdapter:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    56:56:void <clinit>() -> <clinit>
    28:28:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> <init>
    28:28:void <init>():28 -> <init>
    28:28:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> access$getFactory$cp
    45:50:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):51 -> configureTlsExtensions
    51:51:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    35:35:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    31:31:boolean isSupported() -> isSupported
    29:29:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion -> okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    55:55:void <init>() -> <init>
    56:56:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory() -> getFactory
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    56:56:void <init>() -> <init>
    60:60:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    58:58:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.DeferredSocketAdapter -> okhttp3.internal.platform.android.DeferredSocketAdapter:
# {"id":"sourceFile","fileName":"DeferredSocketAdapter.kt"}
    29:29:void <init>(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory) -> <init>
    44:44:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    52:56:okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket) -> getDelegate
    48:48:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    37:37:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory -> okhttp3.internal.platform.android.DeferredSocketAdapter$Factory:
# {"id":"sourceFile","fileName":"DeferredSocketAdapter.kt"}
okhttp3.internal.platform.android.SocketAdapter -> okhttp3.internal.platform.android.SocketAdapter:
# {"id":"sourceFile","fileName":"SocketAdapter.kt"}
okhttp3.internal.platform.android.StandardAndroidSocketAdapter -> okhttp3.internal.platform.android.StandardAndroidSocketAdapter:
# {"id":"sourceFile","fileName":"StandardAndroidSocketAdapter.kt"}
    32:34:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion -> okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"StandardAndroidSocketAdapter.kt"}
    50:50:void <init>() -> <init>
    54:61:okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String) -> buildIfSupported
    52:52:okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object) -> buildIfSupported$default
okhttp3.internal.proxy.NullProxySelector -> okhttp3.internal.proxy.NullProxySelector:
# {"id":"sourceFile","fileName":"NullProxySelector.kt"}
    27:27:void <init>() -> <init>
    29:30:java.util.List select(java.net.URI) -> select
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
# {"id":"sourceFile","fileName":"PublicSuffixDatabase.kt"}
    242:247:void <clinit>() -> <clinit>
    35:41:void <init>() -> <init>
    35:35:okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp() -> access$getInstance$cp
    100:170:java.util.List findMatchingRule(java.util.List) -> findMatchingRule
    69:85:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
    207:225:void readTheList() -> readTheList
    187:199:void readTheListUninterruptibly() -> readTheListUninterruptibly
    89:93:java.util.List splitDomain(java.lang.String) -> splitDomain
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion -> okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion:
# {"id":"sourceFile","fileName":"PublicSuffixDatabase.kt"}
    239:239:void <init>() -> <init>
    239:239:java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int) -> access$binarySearch
    258:333:java.lang.String binarySearch(byte[],byte[][],int) -> binarySearch
    250:250:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
# {"id":"sourceFile","fileName":"BasicCertificateChainCleaner.kt"}
    37:38:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    49:95:java.util.List clean(java.util.List,java.lang.String) -> clean
    119:119:boolean equals(java.lang.Object) -> equals
    112:112:int hashCode() -> hashCode
    100:104:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion -> okhttp3.internal.tls.BasicCertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"BasicCertificateChainCleaner.kt"}
    123:123:void <init>() -> <init>
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
# {"id":"sourceFile","fileName":"BasicTrustRootIndex.kt"}
    22:28:void <init>(java.security.cert.X509Certificate[]) -> <init>
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> <init>
    357:357:void <init>(java.security.cert.X509Certificate[]):28 -> <init>
    28:28:void <init>(java.security.cert.X509Certificate[]) -> <init>
    358:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> <init>
    358:360:void <init>(java.security.cert.X509Certificate[]):28 -> <init>
    28:30:void <init>(java.security.cert.X509Certificate[]) -> <init>
    49:49:boolean equals(java.lang.Object) -> equals
    34:65:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    53:53:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
# {"id":"sourceFile","fileName":"CertificateChainCleaner.kt"}
    35:35:void <init>() -> <init>
okhttp3.internal.tls.CertificateChainCleaner$Companion -> okhttp3.internal.tls.CertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"CertificateChainCleaner.kt"}
    40:40:void <init>() -> <init>
    42:42:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
# {"id":"sourceFile","fileName":"OkHostnameVerifier.kt"}
    34:34:void <init>() -> <init>
    187:189:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    83:83:java.lang.String asciiToLowercase(java.lang.String) -> asciiToLowercase
    194:204:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    89:89:boolean isAscii(java.lang.String) -> isAscii
    40:44:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    54:55:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    70:213:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    102:178:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    61:210:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okhttp3.internal.tls.TrustRootIndex -> okhttp3.internal.tls.TrustRootIndex:
# {"id":"sourceFile","fileName":"TrustRootIndex.kt"}
okhttp3.internal.ws.MessageDeflater -> okhttp3.internal.ws.MessageDeflater:
# {"id":"sourceFile","fileName":"MessageDeflater.kt"}
    29:34:void <init>(boolean) -> <init>
    62:62:void close() -> close
    39:58:void deflate(okio.Buffer) -> deflate
    64:64:boolean endsWith(okio.Buffer,okio.ByteString) -> endsWith
okhttp3.internal.ws.MessageDeflaterKt -> okhttp3.internal.ws.MessageDeflaterKt:
# {"id":"sourceFile","fileName":"MessageDeflater.kt"}
    26:26:void <clinit>() -> <clinit>
    1:1:okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p() -> access$getEMPTY_DEFLATE_BLOCK$p
okhttp3.internal.ws.MessageInflater -> okhttp3.internal.ws.MessageInflater:
# {"id":"sourceFile","fileName":"MessageInflater.kt"}
    26:31:void <init>(boolean) -> <init>
    55:55:void close() -> close
    36:51:void inflate(okio.Buffer) -> inflate
okhttp3.internal.ws.RealWebSocket -> okhttp3.internal.ws.RealWebSocket:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    629:629:void <clinit>() -> <clinit>
    53:53:java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket) -> <init>
    53:53:void <init>(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long):53 -> <init>
    56:56:void <init>(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long) -> <init>
    57:57:okhttp3.WebSocketListener getListener$okhttp() -> <init>
    57:57:void <init>(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long):57 -> <init>
    58:135:void <init>(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long) -> <init>
    53:53:java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket) -> access$getMessageAndCloseQueue$p
    53:53:java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket):53 -> access$getMessageAndCloseQueue$p
    53:53:java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket) -> access$getName$p
    53:53:java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket) -> access$isValid
    53:53:boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions):53 -> access$isValid
    53:53:java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket) -> access$setExtensions$p
    53:53:void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions):53 -> access$setExtensions$p
    143:143:void cancel() -> cancel
    223:248:void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange) -> checkUpgradeSuccess$okhttp
    427:427:boolean close(int,java.lang.String) -> close
    435:453:boolean close(int,java.lang.String,long) -> close
    147:165:void connect(okhttp3.OkHttpClient) -> connect
    579:596:void failWebSocket(java.lang.Exception,okhttp3.Response) -> failWebSocket
    57:57:okhttp3.WebSocketListener getListener$okhttp() -> getListener$okhttp
    254:269:void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams) -> initReaderAndWriter
    84:84:void okhttp3.internal.concurrent.TaskQueue.schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object) -> initReaderAndWriter
    84:84:void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams):269 -> initReaderAndWriter
    255:284:void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams) -> initReaderAndWriter
    209:215:boolean isValid(okhttp3.internal.ws.WebSocketExtensions) -> isValid
    291:293:void loopReader() -> loopReader
    357:386:void onReadClose(int,java.lang.String) -> onReadClose
    333:333:void onReadMessage(java.lang.String) -> onReadMessage
    338:338:void onReadMessage(okio.ByteString) -> onReadMessage
    343:348:void onReadPing(okio.ByteString) -> onReadPing
    352:354:void onReadPong(okio.ByteString) -> onReadPong
    608:609:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> runWriter
    608:609:void runWriter():457 -> runWriter
    459:461:void runWriter() -> runWriter
    489:512:boolean writeOneFrame$okhttp() -> writeOneFrame$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> writeOneFrame$okhttp
    96:96:boolean writeOneFrame$okhttp():512 -> writeOneFrame$okhttp
    489:547:boolean writeOneFrame$okhttp() -> writeOneFrame$okhttp
    554:571:void writePingFrame$okhttp() -> writePingFrame$okhttp
okhttp3.internal.ws.RealWebSocket$Close -> okhttp3.internal.ws.RealWebSocket$Close:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    605:608:void <init>(int,okio.ByteString,long) -> <init>
    608:608:long getCancelAfterCloseMillis() -> getCancelAfterCloseMillis
    606:606:int getCode() -> getCode
    607:607:okio.ByteString getReason() -> getReason
okhttp3.internal.ws.RealWebSocket$Companion -> okhttp3.internal.ws.RealWebSocket$Companion:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    628:628:void <init>() -> <init>
okhttp3.internal.ws.RealWebSocket$Message -> okhttp3.internal.ws.RealWebSocket$Message:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    602:602:okio.ByteString getData() -> getData
    601:601:int getFormatOpcode() -> getFormatOpcode
okhttp3.internal.ws.RealWebSocket$Streams -> okhttp3.internal.ws.RealWebSocket$Streams:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    611:614:void <init>(boolean,okio.BufferedSource,okio.BufferedSink) -> <init>
    612:612:boolean getClient() -> getClient
    614:614:okio.BufferedSink getSink() -> getSink
    613:613:okio.BufferedSource getSource() -> getSource
okhttp3.internal.ws.RealWebSocket$WriterTask -> okhttp3.internal.ws.RealWebSocket$WriterTask:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    617:617:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    620:622:long runOnce() -> runOnce
okhttp3.internal.ws.RealWebSocket$connect$1 -> okhttp3.internal.ws.RealWebSocket$connect$1:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    165:165:void <init>(okhttp3.internal.ws.RealWebSocket,okhttp3.Request) -> <init>
    202:202:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    167:197:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$lambda-3$$inlined$schedule$1 -> okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$lambda-3$$inlined$schedule$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    84:84:void okhttp3.internal.concurrent.TaskQueue$schedule$2.<init>(java.lang.String,kotlin.jvm.functions.Function0) -> <init>
    84:84:void <init>(java.lang.String,okhttp3.internal.ws.RealWebSocket,long):84 -> <init>
    219:220:long runOnce() -> runOnce
okhttp3.internal.ws.RealWebSocket$writeOneFrame$lambda-8$$inlined$execute$default$1 -> okhttp3.internal.ws.RealWebSocket$writeOneFrame$lambda-8$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.ws.WebSocketExtensions -> okhttp3.internal.ws.WebSocketExtensions:
# {"id":"sourceFile","fileName":"WebSocketExtensions.kt"}
    59:79:void <init>(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean) -> <init>
    59:59:void <init>(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    84:86:boolean noContextTakeover(boolean) -> noContextTakeover
okhttp3.internal.ws.WebSocketExtensions$Companion -> okhttp3.internal.ws.WebSocketExtensions$Companion:
# {"id":"sourceFile","fileName":"WebSocketExtensions.kt"}
    90:90:void <init>() -> <init>
    106:171:okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers) -> parse
okhttp3.internal.ws.WebSocketProtocol -> okhttp3.internal.ws.WebSocketProtocol:
# {"id":"sourceFile","fileName":"WebSocketProtocol.kt"}
    21:21:void <init>() -> <init>
    124:126:java.lang.String closeCodeExceptionMessage(int) -> closeCodeExceptionMessage
    100:119:void toggleMask(okio.Buffer$UnsafeCursor,byte[]) -> toggleMask
    133:134:void validateCloseCode(int) -> validateCloseCode
okhttp3.internal.ws.WebSocketReader -> okhttp3.internal.ws.WebSocketReader:
# {"id":"sourceFile","fileName":"WebSocketReader.kt"}
    54:55:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean) -> <init>
    56:56:okio.BufferedSource getSource() -> <init>
    56:56:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean):56 -> <init>
    57:78:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean) -> <init>
    295:295:void close() -> close
    102:106:void processNextFrame() -> processNextFrame
    190:224:void readControlFrame() -> readControlFrame
    112:184:void readHeader() -> readHeader
    271:288:void readMessage() -> readMessage
    231:247:void readMessageFrame() -> readMessageFrame
    254:259:void readUntilNonControlFrame() -> readUntilNonControlFrame
okhttp3.internal.ws.WebSocketReader$FrameCallback -> okhttp3.internal.ws.WebSocketReader$FrameCallback:
# {"id":"sourceFile","fileName":"WebSocketReader.kt"}
okhttp3.internal.ws.WebSocketWriter -> okhttp3.internal.ws.WebSocketWriter:
# {"id":"sourceFile","fileName":"WebSocketWriter.kt"}
    44:45:void <init>(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long) -> <init>
    46:46:okio.BufferedSink getSink() -> <init>
    46:46:void <init>(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long):46 -> <init>
    47:47:java.util.Random getRandom() -> <init>
    47:47:void <init>(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long):47 -> <init>
    48:64:void <init>(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long) -> <init>
    199:199:void close() -> close
    87:104:void writeClose(int,okio.ByteString) -> writeClose
    110:142:void writeControlFrame(int,okio.ByteString) -> writeControlFrame
    147:195:void writeMessageFrame(int,okio.ByteString) -> writeMessageFrame
    69:69:void writePing(okio.ByteString) -> writePing
    75:75:void writePong(okio.ByteString) -> writePong
okio.AsyncTimeout -> okio.AsyncTimeout:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    210:211:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    38:38:okio.AsyncTimeout access$getHead$cp() -> access$getHead$cp
    38:38:long access$getIDLE_TIMEOUT_MILLIS$cp() -> access$getIDLE_TIMEOUT_MILLIS$cp
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$getIDLE_TIMEOUT_NANOS$cp
    38:38:boolean access$getInQueue$p(okio.AsyncTimeout) -> access$getInQueue$p
    38:38:okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout) -> access$getNext$p
    158:158:java.io.IOException access$newTimeoutException(java.io.IOException) -> access$newTimeoutException
    38:38:long access$remainingNanos(okio.AsyncTimeout,long) -> access$remainingNanos
    38:38:void access$setHead$cp(okio.AsyncTimeout) -> access$setHead$cp
    38:38:void access$setInQueue$p(okio.AsyncTimeout,boolean) -> access$setInQueue$p
    38:38:void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout) -> access$setNext$p
    38:38:void access$setTimeoutAt$p(okio.AsyncTimeout,long) -> access$setTimeoutAt$p
    49:54:void enter() -> enter
    59:59:boolean exit() -> exit
    166:168:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    66:66:long remainingNanos(long) -> remainingNanos
    79:79:okio.Sink sink(okio.Sink) -> sink
    123:123:okio.Source source(okio.Source) -> source
okio.AsyncTimeout$Companion -> okio.AsyncTimeout$Companion:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    201:201:boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout) -> <init>
    201:201:void <init>():201 -> <init>
    201:201:boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout) -> access$cancelScheduledTimeout
    201:201:boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout) -> access$scheduleTimeout
    201:201:void access$scheduleTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout,long,boolean):201 -> access$scheduleTimeout
    297:324:okio.AsyncTimeout awaitTimeout$okio() -> awaitTimeout$okio
    27:27:java.lang.Object okio._JvmPlatformKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> cancelScheduledTimeout
    27:27:boolean cancelScheduledTimeout(okio.AsyncTimeout):267 -> cancelScheduledTimeout
    268:283:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    27:27:java.lang.Object okio._JvmPlatformKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTimeout
    27:27:void scheduleTimeout(okio.AsyncTimeout,long,boolean):224 -> scheduleTimeout
    225:262:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    173:175:void <init>() -> <init>
    181:181:void run() -> run
    27:27:java.lang.Object okio._JvmPlatformKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> run
    27:27:void run():182 -> run
    183:194:void run() -> run
okio.AsyncTimeout$sink$1 -> okio.AsyncTimeout$sink$1:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    79:79:okio.Timeout timeout() -> <init>
    79:79:void <init>(okio.AsyncTimeout,okio.Sink):79 -> <init>
    109:109:void close() -> close
    144:144:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    144:144:void close():109 -> close
    109:109:void close() -> close
    150:153:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    150:153:void close():109 -> close
    105:105:void flush() -> flush
    144:144:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> flush
    144:144:void flush():105 -> flush
    105:105:void flush() -> flush
    150:153:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> flush
    150:153:void flush():105 -> flush
    79:79:okio.Timeout timeout() -> timeout
    112:112:okio.AsyncTimeout timeout() -> timeout
    114:114:java.lang.String toString() -> toString
    81:99:void write(okio.Buffer,long) -> write
    144:144:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> write
    144:144:void write(okio.Buffer,long):99 -> write
    99:99:void write(okio.Buffer,long) -> write
    150:153:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> write
    150:153:void write(okio.Buffer,long):99 -> write
okio.AsyncTimeout$source$1 -> okio.AsyncTimeout$source$1:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    123:123:okio.Timeout timeout() -> <init>
    123:123:void <init>(okio.AsyncTimeout,okio.Source):123 -> <init>
    129:129:void close() -> close
    144:144:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    144:144:void close():129 -> close
    129:129:void close() -> close
    150:153:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    150:153:void close():129 -> close
    125:125:long read(okio.Buffer,long) -> read
    144:144:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> read
    144:144:long read(okio.Buffer,long):125 -> read
    125:125:long read(okio.Buffer,long) -> read
    150:153:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> read
    150:153:long read(okio.Buffer,long):125 -> read
    123:123:okio.Timeout timeout() -> timeout
    132:132:okio.AsyncTimeout timeout() -> timeout
    134:134:java.lang.String toString() -> toString
okio.Buffer -> okio.Buffer:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    76:76:java.lang.Object clone() -> <init>
    76:76:void <init>():76 -> <init>
    418:418:void okio.internal._BufferKt.commonClear(okio.Buffer) -> clear
    418:418:void clear():371 -> clear
    76:76:java.lang.Object clone() -> clone
    579:579:okio.Buffer clone() -> clone
    277:283:long okio.internal._BufferKt.commonCompleteSegmentByteCount(okio.Buffer) -> completeSegmentByteCount
    277:283:long completeSegmentByteCount():252 -> completeSegmentByteCount
    1451:1467:okio.Buffer okio.internal._BufferKt.commonCopy(okio.Buffer) -> copy
    1451:1467:okio.Buffer copy():576 -> copy
    244:270:okio.Buffer okio.internal._BufferKt.commonCopyTo(okio.Buffer,okio.Buffer,long,long) -> copyTo
    244:270:okio.Buffer copyTo(okio.Buffer,long,long):181 -> copyTo
    76:76:java.lang.Object clone() -> emit
    76:76:okio.BufferedSink emit():76 -> emit
    76:76:java.lang.Object clone() -> emitCompleteSegments
    76:76:okio.BufferedSink emitCompleteSegments():76 -> emitCompleteSegments
    1402:1427:boolean okio.internal._BufferKt.commonEquals(okio.Buffer,java.lang.Object) -> equals
    1402:1427:boolean equals(java.lang.Object):566 -> equals
    109:109:boolean exhausted() -> exhausted
    412:412:byte okio.internal._BufferKt.commonGet(okio.Buffer,long) -> getByte
    412:412:byte getByte(long):258 -> getByte
    110:117:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> getByte
    110:117:byte getByte(long):258 -> getByte
    414:414:byte okio.internal._BufferKt.commonGet(okio.Buffer,long) -> getByte
    414:414:byte getByte(long):258 -> getByte
    124:124:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> getByte
    124:124:byte getByte(long):258 -> getByte
    414:414:byte okio.internal._BufferKt.commonGet(okio.Buffer,long) -> getByte
    414:414:byte getByte(long):258 -> getByte
    126:126:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> getByte
    126:126:byte getByte(long):258 -> getByte
    414:414:byte okio.internal._BufferKt.commonGet(okio.Buffer,long) -> getByte
    414:414:byte getByte(long):258 -> getByte
    1436:1446:int okio.internal._BufferKt.commonHashCode(okio.Buffer) -> hashCode
    1436:1446:int hashCode():568 -> hashCode
    467:467:long indexOf(byte) -> indexOf
    1256:1256:long okio.internal._BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1256:1256:long indexOf(byte,long,long):475 -> indexOf
    110:117:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOf
    110:117:long indexOf(byte,long,long):475 -> indexOf
    1265:1278:long okio.internal._BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1265:1278:long indexOf(byte,long,long):475 -> indexOf
    124:124:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOf
    124:124:long indexOf(byte,long,long):475 -> indexOf
    1265:1278:long okio.internal._BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1265:1278:long indexOf(byte,long,long):475 -> indexOf
    126:126:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOf
    126:126:long indexOf(byte,long,long):475 -> indexOf
    1254:1254:long okio.internal._BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1254:1254:long indexOf(byte,long,long):475 -> indexOf
    483:483:long indexOfElement(okio.ByteString) -> indexOfElement
    110:117:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOfElement
    110:117:long indexOfElement(okio.ByteString,long):486 -> indexOfElement
    1331:1370:long okio.internal._BufferKt.commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> indexOfElement
    1331:1370:long indexOfElement(okio.ByteString,long):486 -> indexOfElement
    124:124:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOfElement
    124:124:long indexOfElement(okio.ByteString,long):486 -> indexOfElement
    1331:1370:long okio.internal._BufferKt.commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> indexOfElement
    1331:1370:long indexOfElement(okio.ByteString,long):486 -> indexOfElement
    126:126:java.lang.Object okio.internal._BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOfElement
    126:126:long indexOfElement(okio.ByteString,long):486 -> indexOfElement
    1322:1322:long okio.internal._BufferKt.commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> indexOfElement
    1322:1322:long indexOfElement(okio.ByteString,long):486 -> indexOfElement
    123:123:java.io.InputStream inputStream() -> inputStream
    489:489:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    1387:1393:boolean okio.internal._BufferKt.commonRangeEquals(okio.Buffer,long,okio.ByteString,int,int) -> rangeEquals
    1387:1393:boolean rangeEquals(long,okio.ByteString,int,int):496 -> rangeEquals
    355:365:int read(java.nio.ByteBuffer) -> read
    626:639:int okio.internal._BufferKt.commonRead(okio.Buffer,byte[],int,int) -> read
    626:639:int read(byte[],int,int):351 -> read
    1244:1247:long okio.internal._BufferKt.commonRead(okio.Buffer,okio.Buffer,long) -> read
    1244:1247:long read(okio.Buffer,long):465 -> read
    590:590:okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor) -> readAndWriteUnsafe
    144:589:okio.Buffer$UnsafeCursor readAndWriteUnsafe$default(okio.Buffer,okio.Buffer$UnsafeCursor,int,java.lang.Object) -> readAndWriteUnsafe$default
    290:304:byte okio.internal._BufferKt.commonReadByte(okio.Buffer) -> readByte
    290:304:byte readByte():255 -> readByte
    603:603:byte[] okio.internal._BufferKt.commonReadByteArray(okio.Buffer) -> readByteArray
    603:603:byte[] readByteArray():340 -> readByteArray
    606:610:byte[] okio.internal._BufferKt.commonReadByteArray(okio.Buffer,long) -> readByteArray
    606:610:byte[] readByteArray(long):343 -> readByteArray
    770:770:okio.ByteString okio.internal._BufferKt.commonReadByteString(okio.Buffer) -> readByteString
    770:770:okio.ByteString readByteString():284 -> readByteString
    773:779:okio.ByteString okio.internal._BufferKt.commonReadByteString(okio.Buffer,long) -> readByteString
    773:779:okio.ByteString readByteString(long):287 -> readByteString
    794:798:void okio.internal._BufferKt.commonReadFully(okio.Buffer,okio.Buffer,long) -> readFully
    794:798:void readFully(okio.Buffer,long):292 -> readFully
    618:620:void okio.internal._BufferKt.commonReadFully(okio.Buffer,byte[]) -> readFully
    618:620:void readFully(byte[]):348 -> readFully
    712:766:long okio.internal._BufferKt.commonReadHexadecimalUnsignedLong(okio.Buffer) -> readHexadecimalUnsignedLong
    712:766:long readHexadecimalUnsignedLong():282 -> readHexadecimalUnsignedLong
    338:367:int okio.internal._BufferKt.commonReadInt(okio.Buffer) -> readInt
    338:367:int readInt():264 -> readInt
    273:273:int readIntLe() -> readIntLe
    374:405:long okio.internal._BufferKt.commonReadLong(okio.Buffer) -> readLong
    374:405:long readLong():267 -> readLong
    311:331:short okio.internal._BufferKt.commonReadShort(okio.Buffer) -> readShort
    311:331:short readShort():261 -> readShort
    270:270:short readShortLe() -> readShortLe
    302:302:java.lang.String readString(java.nio.charset.Charset) -> readString
    306:322:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    297:297:java.lang.String readUtf8() -> readUtf8
    300:300:java.lang.String readUtf8(long) -> readUtf8
    834:838:java.lang.String okio.internal._BufferKt.commonReadUtf8Line(okio.Buffer) -> readUtf8Line
    834:838:java.lang.String readUtf8Line():329 -> readUtf8Line
    332:332:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    846:855:java.lang.String okio.internal._BufferKt.commonReadUtf8LineStrict(okio.Buffer,long) -> readUtf8LineStrict
    846:855:java.lang.String readUtf8LineStrict(long):335 -> readUtf8LineStrict
    87:87:long okio._UtilKt.minOf(int,long) -> readUtf8LineStrict
    87:87:java.lang.String readUtf8LineStrict(long):335 -> readUtf8LineStrict
    844:860:java.lang.String okio.internal._BufferKt.commonReadUtf8LineStrict(okio.Buffer,long) -> readUtf8LineStrict
    844:860:java.lang.String readUtf8LineStrict(long):335 -> readUtf8LineStrict
    113:113:void require(long) -> require
    784:789:int okio.internal._BufferKt.commonSelect(okio.Buffer,okio.Options) -> select
    784:789:int select(okio.Options):289 -> select
    81:81:void setSize$okio(long) -> setSize$okio
    80:80:long size() -> size
    423:425:void okio.internal._BufferKt.commonSkip(okio.Buffer,long) -> skip
    423:425:void skip(long):374 -> skip
    84:84:long okio._UtilKt.minOf(long,int) -> skip
    84:84:void skip(long):374 -> skip
    423:432:void okio.internal._BufferKt.commonSkip(okio.Buffer,long) -> skip
    423:432:void skip(long):374 -> skip
    1473:1474:okio.ByteString okio.internal._BufferKt.commonSnapshot(okio.Buffer) -> snapshot
    1473:1474:okio.ByteString snapshot():581 -> snapshot
    1479:1512:okio.ByteString okio.internal._BufferKt.commonSnapshot(okio.Buffer,int) -> snapshot
    1479:1512:okio.ByteString snapshot(int):583 -> snapshot
    504:504:okio.Timeout timeout() -> timeout
    574:574:java.lang.String toString() -> toString
    556:568:okio.Segment okio.internal._BufferKt.commonWritableSegment(okio.Buffer,int) -> writableSegment$okio
    556:568:okio.Segment writableSegment$okio(int):461 -> writableSegment$okio
    76:76:java.lang.Object clone() -> write
    76:76:okio.BufferedSink write(okio.ByteString):76 -> write
    76:76:java.lang.Object clone() -> write
    76:76:okio.BufferedSink write(byte[]):76 -> write
    76:76:java.lang.Object clone() -> write
    76:76:okio.BufferedSink write(byte[],int,int):76 -> write
    418:430:int write(java.nio.ByteBuffer) -> write
    440:442:okio.Buffer okio.internal._BufferKt.commonWrite$default(okio.Buffer,okio.ByteString,int,int,int,java.lang.Object) -> write
    440:442:okio.Buffer write(okio.ByteString):376 -> write
    573:573:okio.Buffer okio.internal._BufferKt.commonWrite(okio.Buffer,byte[]) -> write
    573:573:okio.Buffer write(byte[]):408 -> write
    581:599:okio.Buffer okio.internal._BufferKt.commonWrite(okio.Buffer,byte[],int,int) -> write
    581:599:okio.Buffer write(byte[],int,int):414 -> write
    1201:1237:void okio.internal._BufferKt.commonWrite(okio.Buffer,okio.Buffer,long) -> write
    1201:1237:void write(okio.Buffer,long):463 -> write
    1084:1084:long okio.internal._BufferKt.commonWriteAll(okio.Buffer,okio.Source) -> writeAll
    1084:1084:long writeAll(okio.Source):435 -> writeAll
    76:76:java.lang.Object clone() -> writeByte
    76:76:okio.BufferedSink writeByte(int):76 -> writeByte
    1102:1104:okio.Buffer okio.internal._BufferKt.commonWriteByte(okio.Buffer,int) -> writeByte
    1102:1104:okio.Buffer writeByte(int):441 -> writeByte
    76:76:java.lang.Object clone() -> writeHexadecimalUnsignedLong
    76:76:okio.BufferedSink writeHexadecimalUnsignedLong(long):76 -> writeHexadecimalUnsignedLong
    516:551:okio.Buffer okio.internal._BufferKt.commonWriteHexadecimalUnsignedLong(okio.Buffer,long) -> writeHexadecimalUnsignedLong
    516:551:okio.Buffer writeHexadecimalUnsignedLong(long):458 -> writeHexadecimalUnsignedLong
    76:76:java.lang.Object clone() -> writeInt
    76:76:okio.BufferedSink writeInt(int):76 -> writeInt
    1120:1128:okio.Buffer okio.internal._BufferKt.commonWriteInt(okio.Buffer,int) -> writeInt
    1120:1128:okio.Buffer writeInt(int):447 -> writeInt
    1133:1145:okio.Buffer okio.internal._BufferKt.commonWriteLong(okio.Buffer,long) -> writeLong
    1133:1145:okio.Buffer writeLong(long):451 -> writeLong
    76:76:java.lang.Object clone() -> writeShort
    76:76:okio.BufferedSink writeShort(int):76 -> writeShort
    1109:1115:okio.Buffer okio.internal._BufferKt.commonWriteShort(okio.Buffer,int) -> writeShort
    1109:1115:okio.Buffer writeShort(int):443 -> writeShort
    400:405:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    76:76:java.lang.Object clone() -> writeUtf8
    76:76:okio.BufferedSink writeUtf8(java.lang.String):76 -> writeUtf8
    381:381:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    940:1020:okio.Buffer okio.internal._BufferKt.commonWriteUtf8(okio.Buffer,java.lang.String,int,int) -> writeUtf8
    940:1020:okio.Buffer writeUtf8(java.lang.String,int,int):384 -> writeUtf8
    1034:1074:okio.Buffer okio.internal._BufferKt.commonWriteUtf8CodePoint(okio.Buffer,int) -> writeUtf8CodePoint
    1034:1074:okio.Buffer writeUtf8CodePoint(int):387 -> writeUtf8CodePoint
okio.Buffer$UnsafeCursor -> okio.Buffer$UnsafeCursor:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    608:616:void <init>() -> <init>
    1688:1695:void okio.internal._BufferKt.commonClose(okio.Buffer$UnsafeCursor) -> close
    1688:1695:void close():627 -> close
    612:612:void setSegment$okio(okio.Segment) -> getSegment$okio
    612:612:okio.Segment getSegment$okio():612 -> getSegment$okio
    1534:1535:int okio.internal._BufferKt.commonNext(okio.Buffer$UnsafeCursor) -> next
    1534:1535:int next():618 -> next
    1611:1643:long okio.internal._BufferKt.commonResizeBuffer(okio.Buffer$UnsafeCursor,long) -> resizeBuffer
    1611:1643:long resizeBuffer(long):622 -> resizeBuffer
    84:84:long okio._UtilKt.minOf(long,int) -> resizeBuffer
    84:84:long resizeBuffer(long):622 -> resizeBuffer
    1611:1659:long okio.internal._BufferKt.commonResizeBuffer(okio.Buffer$UnsafeCursor,long) -> resizeBuffer
    1611:1659:long resizeBuffer(long):622 -> resizeBuffer
    1539:1606:int okio.internal._BufferKt.commonSeek(okio.Buffer$UnsafeCursor,long) -> seek
    1539:1606:int seek(long):620 -> seek
    612:612:void setSegment$okio(okio.Segment) -> setSegment$okio
okio.Buffer$inputStream$1 -> okio.Buffer$inputStream$1:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    123:123:void <init>(okio.Buffer) -> <init>
    136:136:int available() -> available
    84:84:long okio._UtilKt.minOf(long,int) -> available
    84:84:int available():136 -> available
    125:126:int read() -> read
    133:133:int read(byte[],int,int) -> read
    140:140:java.lang.String toString() -> toString
okio.BufferedSink -> okio.BufferedSink:
# {"id":"sourceFile","fileName":"BufferedSink.kt"}
okio.BufferedSource -> okio.BufferedSource:
# {"id":"sourceFile","fileName":"BufferedSource.kt"}
okio.ByteString -> okio.ByteString:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    230:230:void <clinit>() -> <clinit>
    59:59:int compareTo(java.lang.Object) -> <init>
    59:59:void <init>(byte[]):59 -> <init>
    61:61:byte[] getData$okio() -> <init>
    61:61:void <init>(byte[]):61 -> <init>
    51:51:java.lang.String okio.internal._ByteStringKt.commonBase64(okio.ByteString) -> base64
    51:51:java.lang.String base64():71 -> base64
    59:59:int compareTo(java.lang.Object) -> compareTo
    251:257:int okio.internal._ByteStringKt.commonCompareTo(okio.ByteString,okio.ByteString) -> compareTo
    251:257:int compareTo(okio.ByteString):191 -> compareTo
    82:86:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    235:235:boolean okio.internal._ByteStringKt.commonEquals(okio.ByteString,java.lang.Object) -> equals
    235:235:boolean equals(java.lang.Object):187 -> equals
    123:123:byte getByte(int) -> getByte
    61:61:byte[] getData$okio() -> getData$okio
    63:63:void setHashCode$okio(int) -> getHashCode$okio
    63:63:int getHashCode$okio():63 -> getHashCode$okio
    146:146:int okio.internal._ByteStringKt.commonGetSize(okio.ByteString) -> getSize$okio
    146:146:int getSize$okio():128 -> getSize$okio
    64:64:void setUtf8$okio(java.lang.String) -> getUtf8$okio
    64:64:java.lang.String getUtf8$okio():64 -> getUtf8$okio
    242:245:int okio.internal._ByteStringKt.commonHashCode(okio.ByteString) -> hashCode
    242:245:int hashCode():189 -> hashCode
    62:66:java.lang.String okio.internal._ByteStringKt.commonHex(okio.ByteString) -> hex
    62:66:java.lang.String hex():110 -> hex
    72:72:int okio._UtilKt.and(byte,int) -> hex
    72:72:java.lang.String hex():110 -> hex
    68:68:java.lang.String okio.internal._ByteStringKt.commonHex(okio.ByteString) -> hex
    68:68:java.lang.String hex():110 -> hex
    152:152:byte[] okio.internal._ByteStringKt.commonInternalArray(okio.ByteString) -> internalArray$okio
    152:152:byte[] internalArray$okio():132 -> internalArray$okio
    143:143:byte okio.internal._ByteStringKt.commonGetByte(okio.ByteString,int) -> internalGet$okio
    143:143:byte internalGet$okio(int):120 -> internalGet$okio
    160:160:boolean okio.internal._ByteStringKt.commonRangeEquals(okio.ByteString,int,okio.ByteString,int,int) -> rangeEquals
    160:160:boolean rangeEquals(int,okio.ByteString,int,int):151 -> rangeEquals
    170:172:boolean okio.internal._ByteStringKt.commonRangeEquals(okio.ByteString,int,byte[],int,int) -> rangeEquals
    170:172:boolean rangeEquals(int,byte[],int,int):158 -> rangeEquals
    63:63:void setHashCode$okio(int) -> setHashCode$okio
    64:64:void setUtf8$okio(java.lang.String) -> setUtf8$okio
    75:75:okio.ByteString sha1() -> sha1
    77:77:okio.ByteString sha256() -> sha256
    126:126:int size() -> size
    188:188:boolean okio.internal._ByteStringKt.commonStartsWith(okio.ByteString,okio.ByteString) -> startsWith
    188:188:boolean startsWith(okio.ByteString):167 -> startsWith
    75:94:okio.ByteString okio.internal._ByteStringKt.commonToAsciiLowercase(okio.ByteString) -> toAsciiLowercase
    75:94:okio.ByteString toAsciiLowercase():112 -> toAsciiLowercase
    319:326:java.lang.String okio.internal._ByteStringKt.commonToString(okio.ByteString) -> toString
    319:326:java.lang.String toString():193 -> toString
    129:139:okio.ByteString okio.internal._ByteStringKt.commonSubstring(okio.ByteString,int,int) -> toString
    129:139:java.lang.String toString():193 -> toString
    326:326:java.lang.String okio.internal._ByteStringKt.commonToString(okio.ByteString) -> toString
    326:326:java.lang.String toString():193 -> toString
    131:134:okio.ByteString okio.internal._ByteStringKt.commonSubstring(okio.ByteString,int,int) -> toString
    131:134:java.lang.String toString():193 -> toString
    330:338:java.lang.String okio.internal._ByteStringKt.commonToString(okio.ByteString) -> toString
    330:338:java.lang.String toString():193 -> toString
    41:45:java.lang.String okio.internal._ByteStringKt.commonUtf8(okio.ByteString) -> utf8
    41:45:java.lang.String utf8():66 -> utf8
    144:144:void write$okio(okio.Buffer,int,int) -> write$okio
okio.ByteString$Companion -> okio.ByteString$Companion:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    226:226:void <init>() -> <init>
    292:300:okio.ByteString okio.internal._ByteStringKt.commonDecodeHex(java.lang.String) -> decodeHex
    292:300:okio.ByteString decodeHex(java.lang.String):261 -> decodeHex
    255:255:okio.ByteString encodeString$default(okio.ByteString$Companion,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> encodeString
    255:255:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset):255 -> encodeString
    279:280:okio.ByteString okio.internal._ByteStringKt.commonEncodeUtf8(java.lang.String) -> encodeUtf8
    279:280:okio.ByteString encodeUtf8(java.lang.String):250 -> encodeUtf8
    273:274:okio.ByteString okio.internal._ByteStringKt.commonToByteString(byte[],int,int) -> of
    273:274:okio.ByteString of(byte[],int,int):238 -> of
    213:237:okio.ByteString of$default(okio.ByteString$Companion,byte[],int,int,int,java.lang.Object) -> of$default
okio.DeflaterSink -> okio.DeflaterSink:
# {"id":"sourceFile","fileName":"DeflaterSink.kt"}
    41:47:void <init>(okio.BufferedSink,java.util.zip.Deflater) -> <init>
    48:48:void <init>(okio.Sink,java.util.zip.Deflater) -> <init>
    122:147:void close() -> close
    80:102:void deflate(boolean) -> deflate
    116:117:void finishDeflate$okio() -> finishDeflate$okio
    111:112:void flush() -> flush
    150:150:okio.Timeout timeout() -> timeout
    152:152:java.lang.String toString() -> toString
    54:60:void write(okio.Buffer,long) -> write
    84:84:long okio._UtilKt.minOf(long,int) -> write
    84:84:void write(okio.Buffer,long):60 -> write
    61:71:void write(okio.Buffer,long) -> write
okio.ForwardingSink -> okio.ForwardingSink:
# {"id":"sourceFile","fileName":"ForwardingSink.kt"}
    21:23:void <init>(okio.Sink) -> <init>
    37:37:void close() -> close
    32:32:void flush() -> flush
    34:34:okio.Timeout timeout() -> timeout
    39:39:java.lang.String toString() -> toString
    29:29:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
# {"id":"sourceFile","fileName":"ForwardingSource.kt"}
    21:23:void <init>(okio.Source) -> <init>
    34:34:void close() -> close
    24:24:okio.Source delegate() -> delegate
    31:31:okio.Timeout timeout() -> timeout
    36:36:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
# {"id":"sourceFile","fileName":"ForwardingTimeout.kt"}
    23:26:void <init>(okio.Timeout) -> <init>
    48:48:okio.Timeout clearDeadline() -> clearDeadline
    46:46:okio.Timeout clearTimeout() -> clearTimeout
    40:40:long deadlineNanoTime() -> deadlineNanoTime
    42:42:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    25:25:okio.Timeout delegate() -> delegate
    38:38:boolean hasDeadline() -> hasDeadline
    30:30:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    51:51:void throwIfReached() -> throwIfReached
    34:34:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    36:36:long timeoutNanos() -> timeoutNanos
okio.GzipSource -> okio.GzipSource:
# {"id":"sourceFile","fileName":"GzipSource.kt"}
    31:53:void <init>(okio.Source) -> <init>
    197:197:void checkEqual(java.lang.String,int,int) -> checkEqual
    171:171:void close() -> close
    104:105:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():105 -> consumeHeader
    105:107:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():107 -> consumeHeader
    107:119:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():119 -> consumeHeader
    119:120:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():120 -> consumeHeader
    120:122:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():122 -> consumeHeader
    122:133:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():133 -> consumeHeader
    132:144:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():144 -> consumeHeader
    143:154:void consumeHeader() -> consumeHeader
    164:165:void consumeTrailer() -> consumeTrailer
    57:89:long read(okio.Buffer,long) -> read
    168:168:okio.Timeout timeout() -> timeout
    178:187:void updateCrc(okio.Buffer,long,long) -> updateCrc
    87:87:long okio._UtilKt.minOf(int,long) -> updateCrc
    87:87:void updateCrc(okio.Buffer,long,long):187 -> updateCrc
    188:191:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.InflaterSource -> okio.InflaterSource:
# {"id":"sourceFile","fileName":"InflaterSource.kt"}
    30:35:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    44:44:void <init>(okio.Source,java.util.zip.Inflater) -> <init>
    133:136:void close() -> close
    49:52:long read(okio.Buffer,long) -> read
    67:73:long readOrInflate(okio.Buffer,long) -> readOrInflate
    84:84:long okio._UtilKt.minOf(long,int) -> readOrInflate
    84:84:long readOrInflate(okio.Buffer,long):73 -> readOrInflate
    66:99:long readOrInflate(okio.Buffer,long) -> readOrInflate
    109:117:boolean refill() -> refill
    123:126:void releaseBytesAfterInflate() -> releaseBytesAfterInflate
    129:129:okio.Timeout timeout() -> timeout
okio.InputStreamSource -> okio.InputStreamSource:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    82:84:void <init>(java.io.InputStream,okio.Timeout) -> <init>
    112:112:void close() -> close
    91:93:long read(okio.Buffer,long) -> read
    84:84:long okio._UtilKt.minOf(long,int) -> read
    84:84:long read(okio.Buffer,long):93 -> read
    89:108:long read(okio.Buffer,long) -> read
    114:114:okio.Timeout timeout() -> timeout
    116:116:java.lang.String toString() -> toString
okio.Okio -> okio.Okio:
    1:1:okio.BufferedSink buffer(okio.Sink) -> buffer
    1:1:okio.BufferedSource buffer(okio.Source) -> buffer
    1:1:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    1:1:okio.Sink sink(java.net.Socket) -> sink
    1:1:okio.Source source(java.io.InputStream) -> source
    1:1:okio.Source source(java.net.Socket) -> source
okio.Okio__JvmOkioKt -> okio.Okio__JvmOkioKt:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    143:143:void <clinit>() -> <clinit>
    1:1:java.util.logging.Logger access$getLogger$p() -> access$getLogger$p
    240:240:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    126:128:okio.Sink sink(java.net.Socket) -> sink
    80:80:okio.Source source(java.io.InputStream) -> source
    138:140:okio.Source source(java.net.Socket) -> source
okio.Okio__OkioKt -> okio.Okio__OkioKt:
# {"id":"sourceFile","fileName":"Okio.kt"}
    31:31:okio.BufferedSource buffer(okio.Source) -> buffer
    37:37:okio.BufferedSink buffer(okio.Sink) -> buffer
okio.Options -> okio.Options:
# {"id":"sourceFile","fileName":"Options.kt"}
    22:24:void <init>(okio.ByteString[],int[]) -> <init>
    21:21:boolean contains(java.lang.Object) -> contains
    21:21:boolean contains(okio.ByteString) -> contains
    21:21:java.lang.Object get(int) -> get
    29:29:okio.ByteString get(int) -> get
    22:22:okio.ByteString[] getByteStrings$okio() -> getByteStrings$okio
    27:27:int getSize() -> getSize
    23:23:int[] getTrie$okio() -> getTrie$okio
    21:21:int indexOf(java.lang.Object) -> indexOf
    21:21:int indexOf(okio.ByteString) -> indexOf
    21:21:int lastIndexOf(java.lang.Object) -> lastIndexOf
    21:21:int lastIndexOf(okio.ByteString) -> lastIndexOf
okio.Options$Companion -> okio.Options$Companion:
# {"id":"sourceFile","fileName":"Options.kt"}
    31:31:void <init>() -> <init>
    116:228:void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List) -> buildTrieRecursive
    107:113:void buildTrieRecursive$default(okio.Options$Companion,long,okio.Buffer,int,java.util.List,int,int,java.util.List,int,java.lang.Object) -> buildTrieRecursive$default
    233:233:long getIntCount(okio.Buffer) -> getIntCount
    34:238:okio.Options of(okio.ByteString[]) -> of
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> of
    38:38:okio.Options of(okio.ByteString[]):43 -> of
    43:244:okio.Options of(okio.ByteString[]) -> of
okio.OutputStreamSink -> okio.OutputStreamSink:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    45:47:void <init>(java.io.OutputStream,okio.Timeout) -> <init>
    72:72:void close() -> close
    70:70:void flush() -> flush
    74:74:okio.Timeout timeout() -> timeout
    76:76:java.lang.String toString() -> toString
    51:56:void write(okio.Buffer,long) -> write
    84:84:long okio._UtilKt.minOf(long,int) -> write
    84:84:void write(okio.Buffer,long):56 -> write
    57:65:void write(okio.Buffer,long) -> write
okio.RealBufferedSink -> okio.RealBufferedSink:
# {"id":"sourceFile","fileName":"RealBufferedSink.kt"}
    42:45:void <init>(okio.Sink) -> <init>
    189:189:void okio.internal._RealBufferedSinkKt.commonClose(okio.RealBufferedSink) -> close
    189:189:void close():137 -> close
    50:50:okio.Buffer getBuffer() -> close
    50:50:void close():137 -> close
    195:196:void okio.internal._RealBufferedSinkKt.commonClose(okio.RealBufferedSink) -> close
    195:196:void close():137 -> close
    50:50:okio.Buffer getBuffer() -> close
    50:50:void close():137 -> close
    196:210:void okio.internal._RealBufferedSinkKt.commonClose(okio.RealBufferedSink) -> close
    196:210:void close():137 -> close
    174:174:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonEmit(okio.RealBufferedSink) -> emit
    174:174:okio.BufferedSink emit():104 -> emit
    50:50:okio.Buffer getBuffer() -> emit
    50:50:okio.BufferedSink emit():104 -> emit
    175:176:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonEmit(okio.RealBufferedSink) -> emit
    175:176:okio.BufferedSink emit():104 -> emit
    50:50:okio.Buffer getBuffer() -> emit
    50:50:okio.BufferedSink emit():104 -> emit
    174:176:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonEmit(okio.RealBufferedSink) -> emit
    174:176:okio.BufferedSink emit():104 -> emit
    167:167:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonEmitCompleteSegments(okio.RealBufferedSink) -> emitCompleteSegments
    167:167:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    50:50:okio.Buffer getBuffer() -> emitCompleteSegments
    50:50:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    168:169:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonEmitCompleteSegments(okio.RealBufferedSink) -> emitCompleteSegments
    168:169:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    50:50:okio.Buffer getBuffer() -> emitCompleteSegments
    50:50:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    167:169:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonEmitCompleteSegments(okio.RealBufferedSink) -> emitCompleteSegments
    167:169:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    181:181:void okio.internal._RealBufferedSinkKt.commonFlush(okio.RealBufferedSink) -> flush
    181:181:void flush():133 -> flush
    50:50:okio.Buffer getBuffer() -> flush
    50:50:void flush():133 -> flush
    182:183:void okio.internal._RealBufferedSinkKt.commonFlush(okio.RealBufferedSink) -> flush
    182:183:void flush():133 -> flush
    50:50:okio.Buffer getBuffer() -> flush
    50:50:void flush():133 -> flush
    181:185:void okio.internal._RealBufferedSinkKt.commonFlush(okio.RealBufferedSink) -> flush
    181:185:void flush():133 -> flush
    50:50:okio.Buffer getBuffer() -> getBuffer
    135:135:boolean isOpen() -> isOpen
    213:213:okio.Timeout okio.internal._RealBufferedSinkKt.commonTimeout(okio.RealBufferedSink) -> timeout
    213:213:okio.Timeout timeout():138 -> timeout
    215:215:java.lang.String okio.internal._RealBufferedSinkKt.commonToString(okio.RealBufferedSink) -> toString
    215:215:java.lang.String toString():139 -> toString
    86:86:int write(java.nio.ByteBuffer) -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:int write(java.nio.ByteBuffer):87 -> write
    86:88:int write(java.nio.ByteBuffer) -> write
    31:31:void okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.Buffer,long) -> write
    31:31:void write(okio.Buffer,long):54 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:void write(okio.Buffer,long):54 -> write
    31:33:void okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.Buffer,long) -> write
    31:33:void write(okio.Buffer,long):54 -> write
    37:37:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.ByteString) -> write
    37:37:okio.BufferedSink write(okio.ByteString):55 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:okio.BufferedSink write(okio.ByteString):55 -> write
    37:39:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.ByteString) -> write
    37:39:okio.BufferedSink write(okio.ByteString):55 -> write
    75:75:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[]) -> write
    75:75:okio.BufferedSink write(byte[]):81 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:okio.BufferedSink write(byte[]):81 -> write
    75:77:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[]) -> write
    75:77:okio.BufferedSink write(byte[]):81 -> write
    85:85:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[],int,int) -> write
    85:85:okio.BufferedSink write(byte[],int,int):83 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:okio.BufferedSink write(byte[],int,int):83 -> write
    85:87:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[],int,int) -> write
    85:87:okio.BufferedSink write(byte[],int,int):83 -> write
    50:50:okio.Buffer getBuffer() -> writeAll
    50:50:long writeAll(okio.Source):92 -> writeAll
    93:96:long okio.internal._RealBufferedSinkKt.commonWriteAll(okio.RealBufferedSink,okio.Source) -> writeAll
    93:96:long writeAll(okio.Source):92 -> writeAll
    113:113:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteByte(okio.RealBufferedSink,int) -> writeByte
    113:113:okio.BufferedSink writeByte(int):94 -> writeByte
    50:50:okio.Buffer getBuffer() -> writeByte
    50:50:okio.BufferedSink writeByte(int):94 -> writeByte
    113:115:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteByte(okio.RealBufferedSink,int) -> writeByte
    113:115:okio.BufferedSink writeByte(int):94 -> writeByte
    161:161:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteHexadecimalUnsignedLong(okio.RealBufferedSink,long) -> writeHexadecimalUnsignedLong
    161:161:okio.BufferedSink writeHexadecimalUnsignedLong(long):102 -> writeHexadecimalUnsignedLong
    50:50:okio.Buffer getBuffer() -> writeHexadecimalUnsignedLong
    50:50:okio.BufferedSink writeHexadecimalUnsignedLong(long):102 -> writeHexadecimalUnsignedLong
    161:163:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteHexadecimalUnsignedLong(okio.RealBufferedSink,long) -> writeHexadecimalUnsignedLong
    161:163:okio.BufferedSink writeHexadecimalUnsignedLong(long):102 -> writeHexadecimalUnsignedLong
    131:131:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteInt(okio.RealBufferedSink,int) -> writeInt
    131:131:okio.BufferedSink writeInt(int):97 -> writeInt
    50:50:okio.Buffer getBuffer() -> writeInt
    50:50:okio.BufferedSink writeInt(int):97 -> writeInt
    131:133:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteInt(okio.RealBufferedSink,int) -> writeInt
    131:133:okio.BufferedSink writeInt(int):97 -> writeInt
    119:119:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteShort(okio.RealBufferedSink,int) -> writeShort
    119:119:okio.BufferedSink writeShort(int):95 -> writeShort
    50:50:okio.Buffer getBuffer() -> writeShort
    50:50:okio.BufferedSink writeShort(int):95 -> writeShort
    119:121:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteShort(okio.RealBufferedSink,int) -> writeShort
    119:121:okio.BufferedSink writeShort(int):95 -> writeShort
    53:53:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteUtf8(okio.RealBufferedSink,java.lang.String) -> writeUtf8
    53:53:okio.BufferedSink writeUtf8(java.lang.String):58 -> writeUtf8
    50:50:okio.Buffer getBuffer() -> writeUtf8
    50:50:okio.BufferedSink writeUtf8(java.lang.String):58 -> writeUtf8
    53:55:okio.BufferedSink okio.internal._RealBufferedSinkKt.commonWriteUtf8(okio.RealBufferedSink,java.lang.String) -> writeUtf8
    53:55:okio.BufferedSink writeUtf8(java.lang.String):58 -> writeUtf8
okio.RealBufferedSource -> okio.RealBufferedSource:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
    53:56:void <init>(okio.Source) -> <init>
    390:392:void okio.internal._RealBufferedSourceKt.commonClose(okio.RealBufferedSource) -> close
    390:392:void close():178 -> close
    61:61:okio.Buffer getBuffer() -> close
    61:61:void close():178 -> close
    393:393:void okio.internal._RealBufferedSourceKt.commonClose(okio.RealBufferedSource) -> close
    393:393:void close():178 -> close
    48:48:boolean okio.internal._RealBufferedSourceKt.commonExhausted(okio.RealBufferedSource) -> exhausted
    48:48:boolean exhausted():66 -> exhausted
    61:61:okio.Buffer getBuffer() -> exhausted
    61:61:boolean exhausted():66 -> exhausted
    49:49:boolean okio.internal._RealBufferedSourceKt.commonExhausted(okio.RealBufferedSource) -> exhausted
    49:49:boolean exhausted():66 -> exhausted
    61:61:okio.Buffer getBuffer() -> exhausted
    61:61:boolean exhausted():66 -> exhausted
    48:49:boolean okio.internal._RealBufferedSourceKt.commonExhausted(okio.RealBufferedSource) -> exhausted
    48:49:boolean exhausted():66 -> exhausted
    61:61:okio.Buffer getBuffer() -> getBuffer
    117:117:long indexOf(byte) -> indexOf
    312:312:long okio.internal._RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    312:312:long indexOf(byte,long,long):120 -> indexOf
    61:61:okio.Buffer getBuffer() -> indexOf
    61:61:long indexOf(byte,long,long):120 -> indexOf
    316:316:long okio.internal._RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    316:316:long indexOf(byte,long,long):120 -> indexOf
    61:61:okio.Buffer getBuffer() -> indexOf
    61:61:long indexOf(byte,long,long):120 -> indexOf
    321:322:long okio.internal._RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    321:322:long indexOf(byte,long,long):120 -> indexOf
    61:61:okio.Buffer getBuffer() -> indexOf
    61:61:long indexOf(byte,long,long):120 -> indexOf
    312:325:long okio.internal._RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    312:325:long indexOf(byte,long,long):120 -> indexOf
    143:143:java.io.InputStream inputStream() -> inputStream
    176:176:boolean isOpen() -> isOpen
    36:36:long okio.internal._RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    36:36:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    38:39:long okio.internal._RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    38:39:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    39:39:long okio.internal._RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    39:39:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    43:43:long okio.internal._RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    43:43:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    35:44:long okio.internal._RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    35:44:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:int read(java.nio.ByteBuffer):81 -> read
    81:82:int read(java.nio.ByteBuffer) -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:int read(java.nio.ByteBuffer):82 -> read
    82:82:int read(java.nio.ByteBuffer) -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:int read(java.nio.ByteBuffer):86 -> read
    86:86:int read(java.nio.ByteBuffer) -> read
    66:66:byte okio.internal._RealBufferedSourceKt.commonReadByte(okio.RealBufferedSource) -> readByte
    66:66:byte readByte():69 -> readByte
    61:61:okio.Buffer getBuffer() -> readByte
    61:61:byte readByte():69 -> readByte
    67:67:byte okio.internal._RealBufferedSourceKt.commonReadByte(okio.RealBufferedSource) -> readByte
    67:67:byte readByte():69 -> readByte
    109:109:byte[] okio.internal._RealBufferedSourceKt.commonReadByteArray(okio.RealBufferedSource,long) -> readByteArray
    109:109:byte[] readByteArray(long):74 -> readByteArray
    61:61:okio.Buffer getBuffer() -> readByteArray
    61:61:byte[] readByteArray(long):74 -> readByteArray
    110:110:byte[] okio.internal._RealBufferedSourceKt.commonReadByteArray(okio.RealBufferedSource,long) -> readByteArray
    110:110:byte[] readByteArray(long):74 -> readByteArray
    76:76:okio.ByteString okio.internal._RealBufferedSourceKt.commonReadByteString(okio.RealBufferedSource,long) -> readByteString
    76:76:okio.ByteString readByteString(long):71 -> readByteString
    61:61:okio.Buffer getBuffer() -> readByteString
    61:61:okio.ByteString readByteString(long):71 -> readByteString
    77:77:okio.ByteString okio.internal._RealBufferedSourceKt.commonReadByteString(okio.RealBufferedSource,long) -> readByteString
    77:77:okio.ByteString readByteString(long):71 -> readByteString
    115:115:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,byte[]) -> readFully
    115:115:void readFully(byte[]):76 -> readFully
    61:61:okio.Buffer getBuffer() -> readFully
    61:61:void readFully(byte[]):76 -> readFully
    127:127:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,byte[]) -> readFully
    127:127:void readFully(byte[]):76 -> readFully
    61:61:okio.Buffer getBuffer() -> readFully
    61:61:void readFully(byte[]):76 -> readFully
    119:119:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,byte[]) -> readFully
    119:119:void readFully(byte[]):76 -> readFully
    61:61:okio.Buffer getBuffer() -> readFully
    61:61:void readFully(byte[]):76 -> readFully
    120:124:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,byte[]) -> readFully
    120:124:void readFully(byte[]):76 -> readFully
    144:144:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,okio.Buffer,long) -> readFully
    144:144:void readFully(okio.Buffer,long):89 -> readFully
    61:61:okio.Buffer getBuffer() -> readFully
    61:61:void readFully(okio.Buffer,long):89 -> readFully
    151:151:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,okio.Buffer,long) -> readFully
    151:151:void readFully(okio.Buffer,long):89 -> readFully
    61:61:okio.Buffer getBuffer() -> readFully
    61:61:void readFully(okio.Buffer,long):89 -> readFully
    147:148:void okio.internal._RealBufferedSourceKt.commonReadFully(okio.RealBufferedSource,okio.Buffer,long) -> readFully
    147:148:void readFully(okio.Buffer,long):89 -> readFully
    276:279:long okio.internal._RealBufferedSourceKt.commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> readHexadecimalUnsignedLong
    276:279:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    61:61:okio.Buffer getBuffer() -> readHexadecimalUnsignedLong
    61:61:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    280:287:long okio.internal._RealBufferedSourceKt.commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> readHexadecimalUnsignedLong
    280:287:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    61:61:okio.Buffer getBuffer() -> readHexadecimalUnsignedLong
    61:61:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    294:294:long okio.internal._RealBufferedSourceKt.commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> readHexadecimalUnsignedLong
    294:294:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    237:237:int okio.internal._RealBufferedSourceKt.commonReadInt(okio.RealBufferedSource) -> readInt
    237:237:int readInt():110 -> readInt
    61:61:okio.Buffer getBuffer() -> readInt
    61:61:int readInt():110 -> readInt
    238:238:int okio.internal._RealBufferedSourceKt.commonReadInt(okio.RealBufferedSource) -> readInt
    238:238:int readInt():110 -> readInt
    242:242:int okio.internal._RealBufferedSourceKt.commonReadIntLe(okio.RealBufferedSource) -> readIntLe
    242:242:int readIntLe():111 -> readIntLe
    61:61:okio.Buffer getBuffer() -> readIntLe
    61:61:int readIntLe():111 -> readIntLe
    243:243:int okio.internal._RealBufferedSourceKt.commonReadIntLe(okio.RealBufferedSource) -> readIntLe
    243:243:int readIntLe():111 -> readIntLe
    247:247:long okio.internal._RealBufferedSourceKt.commonReadLong(okio.RealBufferedSource) -> readLong
    247:247:long readLong():112 -> readLong
    61:61:okio.Buffer getBuffer() -> readLong
    61:61:long readLong():112 -> readLong
    248:248:long okio.internal._RealBufferedSourceKt.commonReadLong(okio.RealBufferedSource) -> readLong
    248:248:long readLong():112 -> readLong
    227:227:short okio.internal._RealBufferedSourceKt.commonReadShort(okio.RealBufferedSource) -> readShort
    227:227:short readShort():108 -> readShort
    61:61:okio.Buffer getBuffer() -> readShort
    61:61:short readShort():108 -> readShort
    228:228:short okio.internal._RealBufferedSourceKt.commonReadShort(okio.RealBufferedSource) -> readShort
    228:228:short readShort():108 -> readShort
    232:232:short okio.internal._RealBufferedSourceKt.commonReadShortLe(okio.RealBufferedSource) -> readShortLe
    232:232:short readShortLe():109 -> readShortLe
    61:61:okio.Buffer getBuffer() -> readShortLe
    61:61:short readShortLe():109 -> readShortLe
    233:233:short okio.internal._RealBufferedSourceKt.commonReadShortLe(okio.RealBufferedSource) -> readShortLe
    233:233:short readShortLe():109 -> readShortLe
    61:61:okio.Buffer getBuffer() -> readString
    61:61:java.lang.String readString(java.nio.charset.Charset):95 -> readString
    95:95:java.lang.String readString(java.nio.charset.Charset) -> readString
    61:61:okio.Buffer getBuffer() -> readString
    61:61:java.lang.String readString(java.nio.charset.Charset):96 -> readString
    96:96:java.lang.String readString(java.nio.charset.Charset) -> readString
    176:176:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8(okio.RealBufferedSource,long) -> readUtf8
    176:176:java.lang.String readUtf8(long):92 -> readUtf8
    61:61:okio.Buffer getBuffer() -> readUtf8
    61:61:java.lang.String readUtf8(long):92 -> readUtf8
    177:177:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8(okio.RealBufferedSource,long) -> readUtf8
    177:177:java.lang.String readUtf8(long):92 -> readUtf8
    181:181:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8Line(okio.RealBufferedSource) -> readUtf8Line
    181:181:java.lang.String readUtf8Line():104 -> readUtf8Line
    61:61:okio.Buffer getBuffer() -> readUtf8Line
    61:61:java.lang.String readUtf8Line():104 -> readUtf8Line
    184:184:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8Line(okio.RealBufferedSource) -> readUtf8Line
    184:184:java.lang.String readUtf8Line():104 -> readUtf8Line
    61:61:okio.Buffer getBuffer() -> readUtf8Line
    61:61:java.lang.String readUtf8Line():104 -> readUtf8Line
    185:185:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8Line(okio.RealBufferedSource) -> readUtf8Line
    185:185:java.lang.String readUtf8Line():104 -> readUtf8Line
    61:61:okio.Buffer getBuffer() -> readUtf8Line
    61:61:java.lang.String readUtf8Line():104 -> readUtf8Line
    190:190:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8Line(okio.RealBufferedSource) -> readUtf8Line
    190:190:java.lang.String readUtf8Line():104 -> readUtf8Line
    105:105:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    197:197:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    197:197:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    198:200:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    198:200:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    200:201:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    200:201:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    201:201:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    201:201:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    203:205:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    203:205:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    206:206:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    206:206:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    87:87:long okio._UtilKt.minOf(int,long) -> readUtf8LineStrict
    87:87:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    206:208:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    206:208:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    195:209:java.lang.String okio.internal._RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    195:209:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    58:58:boolean okio.internal._RealBufferedSourceKt.commonRequest(okio.RealBufferedSource,long) -> request
    58:58:boolean request(long):68 -> request
    61:61:okio.Buffer getBuffer() -> request
    61:61:boolean request(long):68 -> request
    59:60:boolean okio.internal._RealBufferedSourceKt.commonRequest(okio.RealBufferedSource,long) -> request
    59:60:boolean request(long):68 -> request
    61:61:okio.Buffer getBuffer() -> request
    61:61:boolean request(long):68 -> request
    57:60:boolean okio.internal._RealBufferedSourceKt.commonRequest(okio.RealBufferedSource,long) -> request
    57:60:boolean request(long):68 -> request
    53:53:void okio.internal._RealBufferedSourceKt.commonRequire(okio.RealBufferedSource,long) -> require
    53:53:void require(long):67 -> require
    81:81:int okio.internal._RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    81:81:int select(okio.Options):72 -> select
    61:61:okio.Buffer getBuffer() -> select
    61:61:int select(okio.Options):72 -> select
    84:95:int okio.internal._RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    84:95:int select(okio.Options):72 -> select
    61:61:okio.Buffer getBuffer() -> select
    61:61:int select(okio.Options):72 -> select
    91:96:int okio.internal._RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    91:96:int select(okio.Options):72 -> select
    61:61:okio.Buffer getBuffer() -> select
    61:61:int select(okio.Options):72 -> select
    81:91:int okio.internal._RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    81:91:int select(okio.Options):72 -> select
    299:299:void okio.internal._RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    299:299:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    301:301:void okio.internal._RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    301:301:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    301:302:void okio.internal._RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    301:302:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    304:304:void okio.internal._RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    304:304:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    299:305:void okio.internal._RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    299:305:void skip(long):116 -> skip
    396:396:okio.Timeout okio.internal._RealBufferedSourceKt.commonTimeout(okio.RealBufferedSource) -> timeout
    396:396:okio.Timeout timeout():179 -> timeout
    398:398:java.lang.String okio.internal._RealBufferedSourceKt.commonToString(okio.RealBufferedSource) -> toString
    398:398:java.lang.String toString():180 -> toString
okio.RealBufferedSource$inputStream$1 -> okio.RealBufferedSource$inputStream$1:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
    143:143:void <init>(okio.RealBufferedSource) -> <init>
    166:166:int available() -> available
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> available
    61:61:int available():167 -> available
    167:167:int available() -> available
    84:84:long okio._UtilKt.minOf(long,int) -> available
    84:84:int available():167 -> available
    166:166:int available() -> available
    170:170:void close() -> close
    145:145:int read() -> read
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> read
    61:61:int read():146 -> read
    146:147:int read() -> read
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> read
    61:61:int read():147 -> read
    147:150:int read() -> read
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> read
    61:61:int read():150 -> read
    145:150:int read() -> read
    154:157:int read(byte[],int,int) -> read
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> read
    61:61:int read(byte[],int,int):157 -> read
    157:158:int read(byte[],int,int) -> read
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> read
    61:61:int read(byte[],int,int):158 -> read
    158:162:int read(byte[],int,int) -> read
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> read
    61:61:int read(byte[],int,int):162 -> read
    154:162:int read(byte[],int,int) -> read
    172:172:java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
# {"id":"sourceFile","fileName":"Segment.kt"}
    61:64:void <init>() -> <init>
    67:72:void <init>(byte[],int,int,boolean,boolean) -> <init>
    147:154:void compact() -> compact
    93:97:okio.Segment pop() -> pop
    105:108:okio.Segment push(okio.Segment) -> push
    81:82:okio.Segment sharedCopy() -> sharedCopy
    121:138:okio.Segment split(int) -> split
    86:86:okio.Segment unsharedCopy() -> unsharedCopy
    159:174:void writeTo(okio.Segment,int) -> writeTo
okio.Segment$Companion -> okio.Segment$Companion:
# {"id":"sourceFile","fileName":"Segment.kt"}
    177:177:void <init>() -> <init>
okio.SegmentPool -> okio.SegmentPool:
# {"id":"sourceFile","fileName":"SegmentPool.kt"}
    45:66:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    124:125:java.util.concurrent.atomic.AtomicReference firstRef() -> firstRef
    102:118:void recycle(okio.Segment) -> recycle
    77:94:okio.Segment take() -> take
okio.SegmentedByteString -> okio.SegmentedByteString:
# {"id":"sourceFile","fileName":"SegmentedByteString.kt"}
    40:40:void <init>(byte[][],int[]) -> <init>
    38:38:byte[][] getSegments$okio() -> <init>
    38:38:void <init>(byte[][],int[]):38 -> <init>
    39:39:int[] getDirectory$okio() -> <init>
    39:39:void <init>(byte[][],int[]):39 -> <init>
    44:44:java.lang.String base64() -> base64
    53:53:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    60:67:void okio.internal._SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> digest$okio
    60:67:okio.ByteString digest$okio(java.lang.String):54 -> digest$okio
    55:59:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    223:223:boolean okio.internal._SegmentedByteStringKt.commonEquals(okio.SegmentedByteString,java.lang.Object) -> equals
    223:223:boolean equals(java.lang.Object):131 -> equals
    39:39:int[] getDirectory$okio() -> getDirectory$okio
    38:38:byte[][] getSegments$okio() -> getSegments$okio
    139:139:int okio.internal._SegmentedByteStringKt.commonGetSize(okio.SegmentedByteString) -> getSize$okio
    139:139:int getSize$okio():82 -> getSize$okio
    229:229:int okio.internal._SegmentedByteStringKt.commonHashCode(okio.SegmentedByteString) -> hashCode
    229:229:int hashCode():133 -> hashCode
    60:67:void okio.internal._SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> hashCode
    60:67:int hashCode():133 -> hashCode
    238:242:int okio.internal._SegmentedByteStringKt.commonHashCode(okio.SegmentedByteString) -> hashCode
    238:242:int hashCode():133 -> hashCode
    46:46:java.lang.String hex() -> hex
    129:129:byte[] internalArray$okio() -> internalArray$okio
    132:136:byte okio.internal._SegmentedByteStringKt.commonInternalGet(okio.SegmentedByteString,int) -> internalGet$okio
    132:136:byte internalGet$okio(int):80 -> internalGet$okio
    174:174:boolean okio.internal._SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,okio.ByteString,int,int) -> rangeEquals
    174:174:boolean rangeEquals(int,okio.ByteString,int,int):103 -> rangeEquals
    82:91:void okio.internal._SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> rangeEquals
    82:91:boolean rangeEquals(int,okio.ByteString,int,int):103 -> rangeEquals
    178:178:boolean okio.internal._SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,okio.ByteString,int,int) -> rangeEquals
    178:178:boolean rangeEquals(int,okio.ByteString,int,int):103 -> rangeEquals
    190:191:boolean okio.internal._SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,byte[],int,int) -> rangeEquals
    190:191:boolean rangeEquals(int,byte[],int,int):110 -> rangeEquals
    82:91:void okio.internal._SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> rangeEquals
    82:91:boolean rangeEquals(int,byte[],int,int):110 -> rangeEquals
    198:198:boolean okio.internal._SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,byte[],int,int) -> rangeEquals
    198:198:boolean rangeEquals(int,byte[],int,int):110 -> rangeEquals
    48:48:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    142:142:byte[] okio.internal._SegmentedByteStringKt.commonToByteArray(okio.SegmentedByteString) -> toByteArray
    142:142:byte[] toByteArray():84 -> toByteArray
    60:67:void okio.internal._SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> toByteArray
    60:67:byte[] toByteArray():84 -> toByteArray
    145:145:byte[] okio.internal._SegmentedByteStringKt.commonToByteArray(okio.SegmentedByteString) -> toByteArray
    145:145:byte[] toByteArray():84 -> toByteArray
    127:127:okio.ByteString toByteString() -> toByteString
    135:135:java.lang.String toString() -> toString
    82:91:void okio.internal._SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> write$okio
    82:91:void write$okio(okio.Buffer,int,int):96 -> write$okio
    156:165:void okio.internal._SegmentedByteStringKt.commonWrite(okio.SegmentedByteString,okio.Buffer,int,int) -> write$okio
    156:165:void write$okio(okio.Buffer,int,int):96 -> write$okio
okio.Sink -> okio.Sink:
# {"id":"sourceFile","fileName":"Sink.kt"}
okio.SocketAsyncTimeout -> okio.SocketAsyncTimeout:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    145:145:void <init>(java.net.Socket) -> <init>
    147:149:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    156:165:void timedOut() -> timedOut
okio.Source -> okio.Source:
# {"id":"sourceFile","fileName":"Source.kt"}
okio.Timeout -> okio.Timeout:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    218:218:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    85:85:okio.Timeout clearDeadline() -> clearDeadline
    79:79:okio.Timeout clearTimeout() -> clearTimeout
    56:57:long deadlineNanoTime() -> deadlineNanoTime
    66:67:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    48:48:boolean hasDeadline() -> hasDeadline
    96:102:void throwIfReached() -> throwIfReached
    39:40:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    45:45:long timeoutNanos() -> timeoutNanos
okio.Timeout$Companion -> okio.Timeout$Companion:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    217:217:void <init>() -> <init>
okio.Timeout$Companion$NONE$1 -> okio.Timeout$Companion$NONE$1:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    218:218:void <init>() -> <init>
okio.Utf8 -> okio.Utf8:
# {"id":"sourceFile","fileName":"Utf8.kt"}
    78:100:long size(java.lang.String,int,int) -> size
    77:77:long size$default(java.lang.String,int,int,int,java.lang.Object) -> size$default
okio._Base64Kt -> okio._Base64Kt:
# {"id":"sourceFile","fileName":"-Base64.kt"}
    27:30:void <clinit>() -> <clinit>
    117:148:java.lang.String encodeBase64(byte[],byte[]) -> encodeBase64
    116:116:java.lang.String encodeBase64$default(byte[],byte[],int,java.lang.Object) -> encodeBase64$default
okio._JvmPlatformKt -> okio._JvmPlatformKt:
# {"id":"sourceFile","fileName":"-JvmPlatform.kt"}
    21:21:byte[] asUtf8ToByteArray(java.lang.String) -> asUtf8ToByteArray
    19:19:java.lang.String toUtf8String(byte[]) -> toUtf8String
okio._UtilKt -> okio._UtilKt:
# {"id":"sourceFile","fileName":"-Util.kt"}
    169:175:void <clinit>() -> <clinit>
    97:97:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    24:24:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    169:169:void <clinit>() -> getDEFAULT__new_UnsafeCursor
    169:169:okio.Buffer$UnsafeCursor getDEFAULT__new_UnsafeCursor():169 -> getDEFAULT__new_UnsafeCursor
    171:171:okio.Buffer$UnsafeCursor resolveDefaultParameter(okio.Buffer$UnsafeCursor) -> resolveDefaultParameter
    177:177:int resolveDefaultParameter(okio.ByteString,int) -> resolveDefaultParameter
    104:105:java.lang.String toHexString(byte) -> toHexString
    72:72:int and(byte,int) -> toHexString
    72:72:java.lang.String toHexString(byte):105 -> toHexString
    106:106:java.lang.String toHexString(byte) -> toHexString
    113:129:java.lang.String toHexString(int) -> toHexString
okio.internal._BufferKt -> okio.internal._BufferKt:
# {"id":"sourceFile","fileName":"-Buffer.kt"}
    43:43:void <clinit>() -> <clinit>
    1525:1529:okio.Buffer$UnsafeCursor commonReadAndWriteUnsafe(okio.Buffer,okio.Buffer$UnsafeCursor) -> commonReadAndWriteUnsafe
    43:43:void <clinit>() -> getHEX_DIGIT_BYTES
    43:43:byte[] getHEX_DIGIT_BYTES():43 -> getHEX_DIGIT_BYTES
    87:96:java.lang.String readUtf8Line(okio.Buffer,long) -> readUtf8Line
    146:218:int selectPrefix(okio.Buffer,okio.Options,boolean) -> selectPrefix
    145:145:int selectPrefix$default(okio.Buffer,okio.Options,boolean,int,java.lang.Object) -> selectPrefix$default
okio.internal._ByteStringKt -> okio.internal._ByteStringKt:
# {"id":"sourceFile","fileName":"-ByteString.kt"}
    58:58:void <clinit>() -> <clinit>
    1:1:int access$codePointIndexToCharIndex(byte[],int) -> access$codePointIndexToCharIndex
    1:1:int access$codePointIndexToCharIndex(byte[],int) -> access$decodeHexDigit
    1:1:int access$decodeHexDigit(char):1 -> access$decodeHexDigit
    345:345:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    214:223:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    214:223:int codePointIndexToCharIndex(byte[],int):345 -> codePointIndexToCharIndex
    402:403:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    402:403:int codePointIndexToCharIndex(byte[],int):345 -> codePointIndexToCharIndex
    357:357:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    452:458:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    452:458:int codePointIndexToCharIndex(byte[],int):345 -> codePointIndexToCharIndex
    357:357:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    516:527:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    516:527:int codePointIndexToCharIndex(byte[],int):345 -> codePointIndexToCharIndex
    357:357:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    305:305:void commonWrite(okio.ByteString,okio.Buffer,int,int) -> commonWrite
    313:313:int decodeHexDigit(char) -> decodeHexDigit
    57:57:char[] getHEX_DIGIT_CHARS() -> getHEX_DIGIT_CHARS
okio.internal._SegmentedByteStringKt -> okio.internal._SegmentedByteStringKt:
# {"id":"sourceFile","fileName":"-SegmentedByteString.kt"}
    36:36:int binarySearch(int[],int,int,int) -> binarySearch
    52:52:int segment(okio.SegmentedByteString,int) -> segment
the.joeglass.JoeMessageUtil -> the.joeglass.JoeMessageUtil:
    96:186:void send(com.google.glass.companion.Proto$Envelope) -> send
the.joeglass.JoeMessageUtil$1 -> the.joeglass.JoeMessageUtil$1:
    124:124:void <init>() -> <init>
    141:162:void onReceivedEnvelope(com.google.glass.companion.Proto$Envelope) -> onReceivedEnvelope
